/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : D:\µçÈü_project\2025-EDC\2025_EDC\SeekFree\project\keil\SeekFree_MSPM0G3507_Device_Library_Sequences_0005.log
 *  Created     : 02:25:37 (31/07/2025)
 *  Device      : MSPM0G3507
 *  PDSC File   : D:\Keil5\TexasInstruments\MSPM0G1X0X_G3X0X_DFP\1.3.0\TexasInstruments.MSPM0G1X0X_G3X0X_DFP.pdsc
 *
 */

[02:25:37.071]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:25:37.071]  
[02:25:37.075]  <debugvars>
[02:25:37.075]    // Pre-defined
[02:25:37.075]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:25:37.075]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:25:37.075]    __dp=0x00000000
[02:25:37.075]    __ap=0x00000000
[02:25:37.075]    __traceout=0x00000000      (Trace Disabled)
[02:25:37.075]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:25:37.075]    __FlashAddr=0x00000000
[02:25:37.075]    __FlashLen=0x00000000
[02:25:37.075]    __FlashArg=0x00000000
[02:25:37.075]    __FlashOp=0x00000000
[02:25:37.075]    __Result=0x00000000
[02:25:37.075]  </debugvars>
[02:25:37.075]  
[02:25:37.075]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:25:37.075]    <block atomic="false" info="">
[02:25:37.075]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:25:37.075]        // -> [isSWJ <= 0x00000001]
[02:25:37.075]      __var hasDormant = __protocol & 0x00020000;
[02:25:37.075]        // -> [hasDormant <= 0x00000000]
[02:25:37.075]      __var protType   = __protocol & 0x0000FFFF;
[02:25:37.075]        // -> [protType <= 0x00000002]
[02:25:37.075]    </block>
[02:25:37.075]    <control if="protType == 1" while="" timeout="0" info="">
[02:25:37.075]      // if-block "protType == 1"
[02:25:37.075]        // =>  FALSE
[02:25:37.075]      // skip if-block "protType == 1"
[02:25:37.075]    </control>
[02:25:37.075]    <control if="protType == 2" while="" timeout="0" info="">
[02:25:37.075]      // if-block "protType == 2"
[02:25:37.075]        // =>  TRUE
[02:25:37.075]      <control if="isSWJ" while="" timeout="0" info="">
[02:25:37.075]        // if-block "isSWJ"
[02:25:37.075]          // =>  TRUE
[02:25:37.075]        <control if="hasDormant" while="" timeout="0" info="">
[02:25:37.075]          // if-block "hasDormant"
[02:25:37.075]            // =>  FALSE
[02:25:37.079]          // skip if-block "hasDormant"
[02:25:37.079]        </control>
[02:25:37.079]        <control if="!hasDormant" while="" timeout="0" info="">
[02:25:37.079]          // if-block "!hasDormant"
[02:25:37.079]            // =>  TRUE
[02:25:37.079]          <block atomic="false" info="">
[02:25:37.079]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:25:37.083]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:25:37.083]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:25:37.083]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:25:37.083]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:25:37.087]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:25:37.087]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:25:37.087]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:25:37.087]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:25:37.091]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:25:37.091]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:25:37.092]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:25:37.092]          </block>
[02:25:37.092]          // end if-block "!hasDormant"
[02:25:37.093]        </control>
[02:25:37.093]        // end if-block "isSWJ"
[02:25:37.093]      </control>
[02:25:37.093]      <control if="!isSWJ" while="" timeout="0" info="">
[02:25:37.093]        // if-block "!isSWJ"
[02:25:37.093]          // =>  FALSE
[02:25:37.093]        // skip if-block "!isSWJ"
[02:25:37.093]      </control>
[02:25:37.093]      <block atomic="false" info="">
[02:25:37.093]        ReadDP(0x0);
[02:25:37.095]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:25:37.095]      </block>
[02:25:37.095]      // end if-block "protType == 2"
[02:25:37.095]    </control>
[02:25:37.095]  </sequence>
[02:25:37.095]  
[02:25:37.099]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:25:37.099]  
[02:25:37.099]  <debugvars>
[02:25:37.099]    // Pre-defined
[02:25:37.099]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:25:37.099]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:25:37.099]    __dp=0x00000000
[02:25:37.099]    __ap=0x00000000
[02:25:37.099]    __traceout=0x00000000      (Trace Disabled)
[02:25:37.099]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:25:37.099]    __FlashAddr=0x00000000
[02:25:37.099]    __FlashLen=0x00000000
[02:25:37.099]    __FlashArg=0x00000000
[02:25:37.099]    __FlashOp=0x00000000
[02:25:37.099]    __Result=0x00000000
[02:25:37.099]  </debugvars>
[02:25:37.099]  
[02:25:37.099]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:25:37.099]    <block atomic="false" info="">
[02:25:37.099]      __var SW_DP_ABORT       = 0x0;
[02:25:37.099]        // -> [SW_DP_ABORT <= 0x00000000]
[02:25:37.099]      __var DP_CTRL_STAT      = 0x4;
[02:25:37.099]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:25:37.099]      __var DP_SELECT         = 0x8;
[02:25:37.099]        // -> [DP_SELECT <= 0x00000008]
[02:25:37.099]      __var powered_down      = 0;
[02:25:37.099]        // -> [powered_down <= 0x00000000]
[02:25:37.099]      WriteDP(DP_SELECT, 0x00000000);
[02:25:37.103]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:25:37.103]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:25:37.107]        // -> [ReadDP(0x00000004) => 0xF0000F40]   (__dp=0x00000000)
[02:25:37.107]        // -> [powered_down <= 0x00000000]
[02:25:37.107]    </block>
[02:25:37.107]    <control if="powered_down" while="" timeout="0" info="">
[02:25:37.107]      // if-block "powered_down"
[02:25:37.107]        // =>  FALSE
[02:25:37.107]      // skip if-block "powered_down"
[02:25:37.107]    </control>
[02:25:37.107]    <block atomic="false" info="">
[02:25:37.107]      __var DEBUG_PORT_VAL    = 0;
[02:25:37.107]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:25:37.111]      __var ACCESS_POINT_VAL  = 0;
[02:25:37.111]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:25:37.111]      __ap = 1; 
[02:25:37.111]        // -> [__ap <= 0x00000001]
[02:25:37.111]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:25:37.115]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:25:37.115]      __ap = 4;
[02:25:37.115]        // -> [__ap <= 0x00000004]
[02:25:37.115]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:25:37.119]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:25:37.119]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:25:37.119]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:25:37.119]    </block>
[02:25:37.119]    <block atomic="false" info="">
[02:25:37.119]      __var nReset = 0x80;
[02:25:37.119]        // -> [nReset <= 0x00000080]
[02:25:37.119]      __var canReadPins = 0;
[02:25:37.119]        // -> [canReadPins <= 0x00000000]
[02:25:37.119]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:25:37.123]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:25:37.123]        // -> [canReadPins <= 0x00000001]
[02:25:37.123]    </block>
[02:25:37.123]    <control if="" while="1" timeout="200" info="">
[02:25:37.123]      // while "1"  (timeout="200")
[02:25:37.123]      // while-condition  =>  TRUE
[02:25:37.123]      // while "1"  (timeout="200")
[02:25:37.123]      // while-condition  =>  TRUE
[02:25:37.123]      // while "1"  (timeout="200")
[02:25:37.123]      // while-condition  =>  TRUE
[02:25:37.123]      // while "1"  (timeout="200")
[02:25:37.123]      // while-condition  =>  TRUE
[02:25:37.123]      // while "1"  (timeout="200")
[02:25:37.123]      // while-condition  =>  TRUE
[02:25:37.123]      // while "1"  (timeout="200")
[02:25:37.123]      // while-condition  =>  TRUE
[02:25:37.123]      // while "1"  (timeout="200")
[02:25:37.123]      // while-condition  =>  TRUE
[02:25:37.123]      // while "1"  (timeout="200")
[02:25:37.123]      // while-condition  =>  TRUE
[02:25:37.127]      // while "1"  (timeout="200")
[02:25:37.127]      // while  =>  TIMEOUT
[02:25:37.127]      // end while "1"
[02:25:37.127]    </control>
[02:25:37.127]    <control if="canReadPins" while="" timeout="0" info="">
[02:25:37.127]      // if-block "canReadPins"
[02:25:37.127]        // =>  TRUE
[02:25:37.127]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:25:37.127]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:25:37.128]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:25:37.128]        // while-condition  =>  FALSE
[02:25:37.128]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:25:37.128]      </control>
[02:25:37.128]      // end if-block "canReadPins"
[02:25:37.128]    </control>
[02:25:37.128]    <control if="!canReadPins" while="" timeout="0" info="">
[02:25:37.128]      // if-block "!canReadPins"
[02:25:37.128]        // =>  FALSE
[02:25:37.128]      // skip if-block "!canReadPins"
[02:25:37.128]    </control>
[02:25:37.128]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:25:37.128]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:25:37.128]        // =>  FALSE
[02:25:37.128]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:25:37.128]    </control>
[02:25:37.128]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:25:37.131]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:25:37.131]        // =>  TRUE
[02:25:37.131]      <block atomic="false" info="">
[02:25:37.131]        WriteAP(0xF0, 0x01);
[02:25:37.135]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:25:37.135]        WriteAP(0x00, 0xF90008);
[02:25:37.139]          // -> [WriteAP(0x00000000, 0x00F90008)]   (__dp=0x00000000, __ap=0x00000004)
[02:25:37.139]        WriteAP(0xF0, 0x01);
[02:25:37.143]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:25:37.143]      </block>
[02:25:37.143]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:25:37.143]    </control>
[02:25:37.143]    <block atomic="false" info="">
[02:25:37.143]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:25:37.151]        // -> [ReadAP(0x00000000) => 0x0079042F]   (__dp=0x00000000, __ap=0x00000004)
[02:25:37.151]        // -> [ACCESS_POINT_VAL <= 0x0079042F]
[02:25:37.151]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:25:37.151]      __ap = 0; //lets make sure we reset the access point selection
[02:25:37.151]        // -> [__ap <= 0x00000000]
[02:25:37.151]    </block>
[02:25:37.151]  </sequence>
[02:25:37.151]  
[02:25:37.183]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:25:37.183]  
[02:25:37.183]  <debugvars>
[02:25:37.183]    // Pre-defined
[02:25:37.183]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:25:37.183]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:25:37.183]    __dp=0x00000000
[02:25:37.183]    __ap=0x00000000
[02:25:37.183]    __traceout=0x00000000      (Trace Disabled)
[02:25:37.183]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:25:37.183]    __FlashAddr=0x00000000
[02:25:37.183]    __FlashLen=0x00000000
[02:25:37.183]    __FlashArg=0x00000000
[02:25:37.183]    __FlashOp=0x00000000
[02:25:37.183]    __Result=0x00000000
[02:25:37.183]  </debugvars>
[02:25:37.187]  
[02:25:37.187]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:25:37.187]    <block atomic="false" info="">
[02:25:37.187]      __var deviceID = 0;
[02:25:37.187]        // -> [deviceID <= 0x00000000]
[02:25:37.187]      __var version = 0;
[02:25:37.187]        // -> [version <= 0x00000000]
[02:25:37.187]      __var partNum = 0;
[02:25:37.187]        // -> [partNum <= 0x00000000]
[02:25:37.187]      __var manuf = 0;
[02:25:37.187]        // -> [manuf <= 0x00000000]
[02:25:37.187]      __var isMSPM0G1X0X_G3X0X = 0;
[02:25:37.187]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:25:37.187]      __var isProduction = 0;
[02:25:37.187]        // -> [isProduction <= 0x00000000]
[02:25:37.187]      __var continueId = 0;
[02:25:37.187]        // -> [continueId <= 0x00000000]
[02:25:37.187]      deviceID =   Read32(0x41C40004);
[02:25:37.191]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:25:37.195]        // -> [deviceID <= 0x2BB8802F]
[02:25:37.195]      version = deviceID >> 28;
[02:25:37.195]        // -> [version <= 0x00000002]
[02:25:37.195]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:25:37.195]        // -> [partNum <= 0x0000BB88]
[02:25:37.195]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:25:37.195]        // -> [manuf <= 0x00000017]
[02:25:37.195]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:25:37.195]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:25:37.195]      isProduction = (version > 0);
[02:25:37.195]        // -> [isProduction <= 0x00000001]
[02:25:37.195]    </block>
[02:25:37.195]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:25:37.195]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:25:37.195]        // =>  FALSE
[02:25:37.195]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:25:37.195]    </control>
[02:25:37.195]    <control if="continueId == 4" while="" timeout="0" info="">
[02:25:37.195]      // if-block "continueId == 4"
[02:25:37.195]        // =>  FALSE
[02:25:37.195]      // skip if-block "continueId == 4"
[02:25:37.195]    </control>
[02:25:37.195]    <control if="!isProduction" while="" timeout="0" info="">
[02:25:37.195]      // if-block "!isProduction"
[02:25:37.195]        // =>  FALSE
[02:25:37.195]      // skip if-block "!isProduction"
[02:25:37.195]    </control>
[02:25:37.195]  </sequence>
[02:25:37.195]  
[02:26:54.829]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:26:54.829]  
[02:26:54.839]  <debugvars>
[02:26:54.839]    // Pre-defined
[02:26:54.839]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:26:54.839]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:26:54.839]    __dp=0x00000000
[02:26:54.839]    __ap=0x00000000
[02:26:54.840]    __traceout=0x00000000      (Trace Disabled)
[02:26:54.840]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:26:54.840]    __FlashAddr=0x00000000
[02:26:54.840]    __FlashLen=0x00000000
[02:26:54.840]    __FlashArg=0x00000000
[02:26:54.840]    __FlashOp=0x00000000
[02:26:54.840]    __Result=0x00000000
[02:26:54.840]  </debugvars>
[02:26:54.840]  
[02:26:54.840]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:26:54.840]    <block atomic="false" info="">
[02:26:54.840]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:26:54.842]        // -> [isSWJ <= 0x00000001]
[02:26:54.842]      __var hasDormant = __protocol & 0x00020000;
[02:26:54.842]        // -> [hasDormant <= 0x00000000]
[02:26:54.842]      __var protType   = __protocol & 0x0000FFFF;
[02:26:54.842]        // -> [protType <= 0x00000002]
[02:26:54.842]    </block>
[02:26:54.842]    <control if="protType == 1" while="" timeout="0" info="">
[02:26:54.842]      // if-block "protType == 1"
[02:26:54.842]        // =>  FALSE
[02:26:54.842]      // skip if-block "protType == 1"
[02:26:54.843]    </control>
[02:26:54.843]    <control if="protType == 2" while="" timeout="0" info="">
[02:26:54.843]      // if-block "protType == 2"
[02:26:54.843]        // =>  TRUE
[02:26:54.843]      <control if="isSWJ" while="" timeout="0" info="">
[02:26:54.843]        // if-block "isSWJ"
[02:26:54.843]          // =>  TRUE
[02:26:54.843]        <control if="hasDormant" while="" timeout="0" info="">
[02:26:54.843]          // if-block "hasDormant"
[02:26:54.844]            // =>  FALSE
[02:26:54.844]          // skip if-block "hasDormant"
[02:26:54.844]        </control>
[02:26:54.844]        <control if="!hasDormant" while="" timeout="0" info="">
[02:26:54.844]          // if-block "!hasDormant"
[02:26:54.844]            // =>  TRUE
[02:26:54.844]          <block atomic="false" info="">
[02:26:54.844]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:26:54.845]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:26:54.845]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:26:54.848]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:26:54.848]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:26:54.849]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:26:54.849]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:26:54.851]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:26:54.851]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:26:54.851]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:26:54.853]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:26:54.853]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:26:54.853]          </block>
[02:26:54.853]          // end if-block "!hasDormant"
[02:26:54.853]        </control>
[02:26:54.853]        // end if-block "isSWJ"
[02:26:54.853]      </control>
[02:26:54.853]      <control if="!isSWJ" while="" timeout="0" info="">
[02:26:54.853]        // if-block "!isSWJ"
[02:26:54.853]          // =>  FALSE
[02:26:54.853]        // skip if-block "!isSWJ"
[02:26:54.853]      </control>
[02:26:54.856]      <block atomic="false" info="">
[02:26:54.856]        ReadDP(0x0);
[02:26:54.856]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:26:54.856]      </block>
[02:26:54.856]      // end if-block "protType == 2"
[02:26:54.856]    </control>
[02:26:54.856]  </sequence>
[02:26:54.856]  
[02:26:54.860]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:26:54.860]  
[02:26:54.860]  <debugvars>
[02:26:54.860]    // Pre-defined
[02:26:54.860]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:26:54.860]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:26:54.860]    __dp=0x00000000
[02:26:54.860]    __ap=0x00000000
[02:26:54.860]    __traceout=0x00000000      (Trace Disabled)
[02:26:54.860]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:26:54.860]    __FlashAddr=0x00000000
[02:26:54.860]    __FlashLen=0x00000000
[02:26:54.860]    __FlashArg=0x00000000
[02:26:54.860]    __FlashOp=0x00000000
[02:26:54.860]    __Result=0x00000000
[02:26:54.860]  </debugvars>
[02:26:54.860]  
[02:26:54.860]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:26:54.860]    <block atomic="false" info="">
[02:26:54.860]      __var SW_DP_ABORT       = 0x0;
[02:26:54.860]        // -> [SW_DP_ABORT <= 0x00000000]
[02:26:54.860]      __var DP_CTRL_STAT      = 0x4;
[02:26:54.860]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:26:54.860]      __var DP_SELECT         = 0x8;
[02:26:54.860]        // -> [DP_SELECT <= 0x00000008]
[02:26:54.860]      __var powered_down      = 0;
[02:26:54.860]        // -> [powered_down <= 0x00000000]
[02:26:54.860]      WriteDP(DP_SELECT, 0x00000000);
[02:26:54.864]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:26:54.864]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:26:54.869]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:26:54.869]        // -> [powered_down <= 0x00000001]
[02:26:54.870]    </block>
[02:26:54.870]    <control if="powered_down" while="" timeout="0" info="">
[02:26:54.870]      // if-block "powered_down"
[02:26:54.870]        // =>  TRUE
[02:26:54.870]      <block atomic="false" info="">
[02:26:54.870]        Message(0, "Debug/System power-up request sent");
[02:26:54.870]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:26:54.873]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:26:54.873]      </block>
[02:26:54.873]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:26:54.873]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:26:54.873]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:26:54.875]        // while-condition  =>  FALSE
[02:26:54.875]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:26:54.875]      </control>
[02:26:54.875]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:26:54.875]        // if-block "(__protocol & 0xFFFF) == 1"
[02:26:54.875]          // =>  FALSE
[02:26:54.875]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:26:54.876]      </control>
[02:26:54.876]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:26:54.876]        // if-block "(__protocol & 0xFFFF) == 2"
[02:26:54.876]          // =>  TRUE
[02:26:54.876]        <block atomic="false" info="">
[02:26:54.876]          Message(0, "executing SWD power up");
[02:26:54.876]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:26:54.880]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:26:54.880]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:26:54.881]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:26:54.881]        </block>
[02:26:54.881]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:26:54.881]      </control>
[02:26:54.883]      // end if-block "powered_down"
[02:26:54.883]    </control>
[02:26:54.883]    <block atomic="false" info="">
[02:26:54.883]      __var DEBUG_PORT_VAL    = 0;
[02:26:54.883]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:26:54.883]      __var ACCESS_POINT_VAL  = 0;
[02:26:54.883]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:26:54.883]      __ap = 1; 
[02:26:54.883]        // -> [__ap <= 0x00000001]
[02:26:54.883]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:26:54.885]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:26:54.885]      __ap = 4;
[02:26:54.885]        // -> [__ap <= 0x00000004]
[02:26:54.885]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:26:54.892]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:26:54.892]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:26:54.892]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:26:54.895]    </block>
[02:26:54.895]    <block atomic="false" info="">
[02:26:54.895]      __var nReset = 0x80;
[02:26:54.895]        // -> [nReset <= 0x00000080]
[02:26:54.895]      __var canReadPins = 0;
[02:26:54.895]        // -> [canReadPins <= 0x00000000]
[02:26:54.895]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:26:54.897]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:26:54.897]        // -> [canReadPins <= 0x00000001]
[02:26:54.897]    </block>
[02:26:54.897]    <control if="" while="1" timeout="200" info="">
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.897]      // while-condition  =>  TRUE
[02:26:54.897]      // while "1"  (timeout="200")
[02:26:54.901]      // while-condition  =>  TRUE
[02:26:54.901]      // while "1"  (timeout="200")
[02:26:54.901]      // while-condition  =>  TRUE
[02:26:54.901]      // while "1"  (timeout="200")
[02:26:54.901]      // while-condition  =>  TRUE
[02:26:54.901]      // while "1"  (timeout="200")
[02:26:54.901]      // while-condition  =>  TRUE
[02:26:54.901]      // while "1"  (timeout="200")
[02:26:54.901]      // while-condition  =>  TRUE
[02:26:54.901]      // while "1"  (timeout="200")
[02:26:54.901]      // while-condition  =>  TRUE
[02:26:54.903]      // while "1"  (timeout="200")
[02:26:54.903]      // while-condition  =>  TRUE
[02:26:54.903]      // while "1"  (timeout="200")
[02:26:54.903]      // while-condition  =>  TRUE
[02:26:54.903]      // while "1"  (timeout="200")
[02:26:54.903]      // while-condition  =>  TRUE
[02:26:54.903]      // while "1"  (timeout="200")
[02:26:54.903]      // while-condition  =>  TRUE
[02:26:54.903]      // while "1"  (timeout="200")
[02:26:54.903]      // while-condition  =>  TRUE
[02:26:54.904]      // while "1"  (timeout="200")
[02:26:54.904]      // while-condition  =>  TRUE
[02:26:54.904]      // while "1"  (timeout="200")
[02:26:54.904]      // while-condition  =>  TRUE
[02:26:54.904]      // while "1"  (timeout="200")
[02:26:54.904]      // while-condition  =>  TRUE
[02:26:54.904]      // while "1"  (timeout="200")
[02:26:54.904]      // while-condition  =>  TRUE
[02:26:54.904]      // while "1"  (timeout="200")
[02:26:54.904]      // while-condition  =>  TRUE
[02:26:54.904]      // while "1"  (timeout="200")
[02:26:54.904]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.905]      // while-condition  =>  TRUE
[02:26:54.905]      // while "1"  (timeout="200")
[02:26:54.909]      // while-condition  =>  TRUE
[02:26:54.909]      // while "1"  (timeout="200")
[02:26:54.909]      // while  =>  TIMEOUT
[02:26:54.909]      // end while "1"
[02:26:54.909]    </control>
[02:26:54.909]    <control if="canReadPins" while="" timeout="0" info="">
[02:26:54.909]      // if-block "canReadPins"
[02:26:54.909]        // =>  TRUE
[02:26:54.909]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:26:54.909]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:26:54.909]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:26:54.909]        // while-condition  =>  FALSE
[02:26:54.909]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:26:54.909]      </control>
[02:26:54.909]      // end if-block "canReadPins"
[02:26:54.909]    </control>
[02:26:54.909]    <control if="!canReadPins" while="" timeout="0" info="">
[02:26:54.909]      // if-block "!canReadPins"
[02:26:54.909]        // =>  FALSE
[02:26:54.913]      // skip if-block "!canReadPins"
[02:26:54.913]    </control>
[02:26:54.913]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:26:54.913]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:26:54.913]        // =>  TRUE
[02:26:54.913]      <block atomic="false" info="">
[02:26:54.913]        WriteAP(0x00, 0x190008);
[02:26:54.915]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:26:54.915]        WriteAP(0xF0, 0x01);
[02:26:54.917]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:26:54.917]      </block>
[02:26:54.917]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:26:54.917]    </control>
[02:26:54.917]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:26:54.917]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:26:54.917]        // =>  FALSE
[02:26:54.917]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:26:54.917]    </control>
[02:26:54.917]    <block atomic="false" info="">
[02:26:54.917]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:26:54.924]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:26:54.924]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:26:54.924]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:26:54.925]      __ap = 0; //lets make sure we reset the access point selection
[02:26:54.925]        // -> [__ap <= 0x00000000]
[02:26:54.926]    </block>
[02:26:54.926]  </sequence>
[02:26:54.926]  
[02:26:54.943]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:26:54.943]  
[02:26:54.947]  <debugvars>
[02:26:54.947]    // Pre-defined
[02:26:54.947]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:26:54.947]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:26:54.947]    __dp=0x00000000
[02:26:54.947]    __ap=0x00000000
[02:26:54.947]    __traceout=0x00000000      (Trace Disabled)
[02:26:54.947]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:26:54.947]    __FlashAddr=0x00000000
[02:26:54.947]    __FlashLen=0x00000000
[02:26:54.947]    __FlashArg=0x00000000
[02:26:54.947]    __FlashOp=0x00000000
[02:26:54.947]    __Result=0x00000000
[02:26:54.947]  </debugvars>
[02:26:54.947]  
[02:26:54.947]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:26:54.947]    <block atomic="false" info="">
[02:26:54.947]      __var deviceID = 0;
[02:26:54.947]        // -> [deviceID <= 0x00000000]
[02:26:54.947]      __var version = 0;
[02:26:54.947]        // -> [version <= 0x00000000]
[02:26:54.947]      __var partNum = 0;
[02:26:54.947]        // -> [partNum <= 0x00000000]
[02:26:54.947]      __var manuf = 0;
[02:26:54.947]        // -> [manuf <= 0x00000000]
[02:26:54.947]      __var isMSPM0G1X0X_G3X0X = 0;
[02:26:54.947]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:26:54.947]      __var isProduction = 0;
[02:26:54.947]        // -> [isProduction <= 0x00000000]
[02:26:54.947]      __var continueId = 0;
[02:26:54.947]        // -> [continueId <= 0x00000000]
[02:26:54.947]      deviceID =   Read32(0x41C40004);
[02:26:54.955]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:26:54.955]        // -> [deviceID <= 0x2BB8802F]
[02:26:54.955]      version = deviceID >> 28;
[02:26:54.955]        // -> [version <= 0x00000002]
[02:26:54.955]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:26:54.955]        // -> [partNum <= 0x0000BB88]
[02:26:54.955]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:26:54.955]        // -> [manuf <= 0x00000017]
[02:26:54.955]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:26:54.955]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:26:54.955]      isProduction = (version > 0);
[02:26:54.955]        // -> [isProduction <= 0x00000001]
[02:26:54.955]    </block>
[02:26:54.955]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:26:54.955]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:26:54.955]        // =>  FALSE
[02:26:54.955]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:26:54.955]    </control>
[02:26:54.955]    <control if="continueId == 4" while="" timeout="0" info="">
[02:26:54.955]      // if-block "continueId == 4"
[02:26:54.955]        // =>  FALSE
[02:26:54.955]      // skip if-block "continueId == 4"
[02:26:54.955]    </control>
[02:26:54.955]    <control if="!isProduction" while="" timeout="0" info="">
[02:26:54.955]      // if-block "!isProduction"
[02:26:54.955]        // =>  FALSE
[02:26:54.955]      // skip if-block "!isProduction"
[02:26:54.955]    </control>
[02:26:54.955]  </sequence>
[02:26:54.955]  
[02:27:43.812]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:27:43.812]  
[02:27:43.822]  <debugvars>
[02:27:43.822]    // Pre-defined
[02:27:43.822]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:27:43.822]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:27:43.822]    __dp=0x00000000
[02:27:43.822]    __ap=0x00000000
[02:27:43.822]    __traceout=0x00000000      (Trace Disabled)
[02:27:43.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:27:43.822]    __FlashAddr=0x00000000
[02:27:43.822]    __FlashLen=0x00000000
[02:27:43.822]    __FlashArg=0x00000000
[02:27:43.822]    __FlashOp=0x00000000
[02:27:43.822]    __Result=0x00000000
[02:27:43.822]  </debugvars>
[02:27:43.822]  
[02:27:43.822]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:27:43.822]    <block atomic="false" info="">
[02:27:43.822]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:27:43.822]        // -> [isSWJ <= 0x00000001]
[02:27:43.824]      __var hasDormant = __protocol & 0x00020000;
[02:27:43.824]        // -> [hasDormant <= 0x00000000]
[02:27:43.824]      __var protType   = __protocol & 0x0000FFFF;
[02:27:43.824]        // -> [protType <= 0x00000002]
[02:27:43.824]    </block>
[02:27:43.824]    <control if="protType == 1" while="" timeout="0" info="">
[02:27:43.824]      // if-block "protType == 1"
[02:27:43.824]        // =>  FALSE
[02:27:43.824]      // skip if-block "protType == 1"
[02:27:43.824]    </control>
[02:27:43.824]    <control if="protType == 2" while="" timeout="0" info="">
[02:27:43.824]      // if-block "protType == 2"
[02:27:43.824]        // =>  TRUE
[02:27:43.824]      <control if="isSWJ" while="" timeout="0" info="">
[02:27:43.824]        // if-block "isSWJ"
[02:27:43.824]          // =>  TRUE
[02:27:43.824]        <control if="hasDormant" while="" timeout="0" info="">
[02:27:43.824]          // if-block "hasDormant"
[02:27:43.824]            // =>  FALSE
[02:27:43.824]          // skip if-block "hasDormant"
[02:27:43.824]        </control>
[02:27:43.824]        <control if="!hasDormant" while="" timeout="0" info="">
[02:27:43.824]          // if-block "!hasDormant"
[02:27:43.824]            // =>  TRUE
[02:27:43.824]          <block atomic="false" info="">
[02:27:43.824]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:27:43.828]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:27:43.828]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:27:43.832]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:27:43.832]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:27:43.832]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:27:43.832]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:27:43.832]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:27:43.832]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:27:43.836]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:27:43.836]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:27:43.840]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:27:43.840]          </block>
[02:27:43.840]          // end if-block "!hasDormant"
[02:27:43.840]        </control>
[02:27:43.840]        // end if-block "isSWJ"
[02:27:43.840]      </control>
[02:27:43.840]      <control if="!isSWJ" while="" timeout="0" info="">
[02:27:43.840]        // if-block "!isSWJ"
[02:27:43.840]          // =>  FALSE
[02:27:43.840]        // skip if-block "!isSWJ"
[02:27:43.840]      </control>
[02:27:43.840]      <block atomic="false" info="">
[02:27:43.840]        ReadDP(0x0);
[02:27:43.844]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:27:43.844]      </block>
[02:27:43.844]      // end if-block "protType == 2"
[02:27:43.844]    </control>
[02:27:43.844]  </sequence>
[02:27:43.844]  
[02:27:43.844]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:27:43.844]  
[02:27:43.844]  <debugvars>
[02:27:43.844]    // Pre-defined
[02:27:43.844]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:27:43.844]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:27:43.844]    __dp=0x00000000
[02:27:43.844]    __ap=0x00000000
[02:27:43.844]    __traceout=0x00000000      (Trace Disabled)
[02:27:43.844]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:27:43.844]    __FlashAddr=0x00000000
[02:27:43.844]    __FlashLen=0x00000000
[02:27:43.844]    __FlashArg=0x00000000
[02:27:43.848]    __FlashOp=0x00000000
[02:27:43.849]    __Result=0x00000000
[02:27:43.849]  </debugvars>
[02:27:43.849]  
[02:27:43.849]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:27:43.850]    <block atomic="false" info="">
[02:27:43.850]      __var SW_DP_ABORT       = 0x0;
[02:27:43.850]        // -> [SW_DP_ABORT <= 0x00000000]
[02:27:43.850]      __var DP_CTRL_STAT      = 0x4;
[02:27:43.850]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:27:43.850]      __var DP_SELECT         = 0x8;
[02:27:43.850]        // -> [DP_SELECT <= 0x00000008]
[02:27:43.850]      __var powered_down      = 0;
[02:27:43.850]        // -> [powered_down <= 0x00000000]
[02:27:43.850]      WriteDP(DP_SELECT, 0x00000000);
[02:27:43.853]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:27:43.853]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:27:43.853]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:27:43.853]        // -> [powered_down <= 0x00000001]
[02:27:43.853]    </block>
[02:27:43.853]    <control if="powered_down" while="" timeout="0" info="">
[02:27:43.853]      // if-block "powered_down"
[02:27:43.853]        // =>  TRUE
[02:27:43.853]      <block atomic="false" info="">
[02:27:43.853]        Message(0, "Debug/System power-up request sent");
[02:27:43.857]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:27:43.859]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:27:43.859]      </block>
[02:27:43.859]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:27:43.859]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:27:43.861]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:27:43.861]        // while-condition  =>  FALSE
[02:27:43.861]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:27:43.861]      </control>
[02:27:43.861]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:27:43.861]        // if-block "(__protocol & 0xFFFF) == 1"
[02:27:43.861]          // =>  FALSE
[02:27:43.861]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:27:43.861]      </control>
[02:27:43.861]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:27:43.863]        // if-block "(__protocol & 0xFFFF) == 2"
[02:27:43.863]          // =>  TRUE
[02:27:43.863]        <block atomic="false" info="">
[02:27:43.863]          Message(0, "executing SWD power up");
[02:27:43.863]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:27:43.865]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:27:43.865]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:27:43.865]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:27:43.865]        </block>
[02:27:43.865]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:27:43.865]      </control>
[02:27:43.865]      // end if-block "powered_down"
[02:27:43.865]    </control>
[02:27:43.865]    <block atomic="false" info="">
[02:27:43.865]      __var DEBUG_PORT_VAL    = 0;
[02:27:43.865]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:27:43.865]      __var ACCESS_POINT_VAL  = 0;
[02:27:43.865]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:27:43.869]      __ap = 1; 
[02:27:43.869]        // -> [__ap <= 0x00000001]
[02:27:43.869]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:27:43.870]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:27:43.870]      __ap = 4;
[02:27:43.870]        // -> [__ap <= 0x00000004]
[02:27:43.873]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:27:43.877]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:27:43.877]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:27:43.877]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:27:43.878]    </block>
[02:27:43.878]    <block atomic="false" info="">
[02:27:43.878]      __var nReset = 0x80;
[02:27:43.878]        // -> [nReset <= 0x00000080]
[02:27:43.878]      __var canReadPins = 0;
[02:27:43.878]        // -> [canReadPins <= 0x00000000]
[02:27:43.878]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:27:43.881]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:27:43.881]        // -> [canReadPins <= 0x00000001]
[02:27:43.881]    </block>
[02:27:43.881]    <control if="" while="1" timeout="200" info="">
[02:27:43.881]      // while "1"  (timeout="200")
[02:27:43.881]      // while-condition  =>  TRUE
[02:27:43.881]      // while "1"  (timeout="200")
[02:27:43.881]      // while-condition  =>  TRUE
[02:27:43.881]      // while "1"  (timeout="200")
[02:27:43.881]      // while-condition  =>  TRUE
[02:27:43.881]      // while "1"  (timeout="200")
[02:27:43.881]      // while-condition  =>  TRUE
[02:27:43.883]      // while "1"  (timeout="200")
[02:27:43.883]      // while-condition  =>  TRUE
[02:27:43.883]      // while "1"  (timeout="200")
[02:27:43.883]      // while-condition  =>  TRUE
[02:27:43.883]      // while "1"  (timeout="200")
[02:27:43.883]      // while-condition  =>  TRUE
[02:27:43.883]      // while "1"  (timeout="200")
[02:27:43.883]      // while-condition  =>  TRUE
[02:27:43.883]      // while "1"  (timeout="200")
[02:27:43.883]      // while-condition  =>  TRUE
[02:27:43.883]      // while "1"  (timeout="200")
[02:27:43.883]      // while-condition  =>  TRUE
[02:27:43.883]      // while "1"  (timeout="200")
[02:27:43.883]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.885]      // while-condition  =>  TRUE
[02:27:43.885]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.888]      // while "1"  (timeout="200")
[02:27:43.888]      // while-condition  =>  TRUE
[02:27:43.891]      // while "1"  (timeout="200")
[02:27:43.891]      // while  =>  TIMEOUT
[02:27:43.891]      // end while "1"
[02:27:43.891]    </control>
[02:27:43.891]    <control if="canReadPins" while="" timeout="0" info="">
[02:27:43.891]      // if-block "canReadPins"
[02:27:43.891]        // =>  TRUE
[02:27:43.891]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:27:43.891]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:27:43.893]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:27:43.893]        // while-condition  =>  FALSE
[02:27:43.893]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:27:43.893]      </control>
[02:27:43.893]      // end if-block "canReadPins"
[02:27:43.893]    </control>
[02:27:43.893]    <control if="!canReadPins" while="" timeout="0" info="">
[02:27:43.893]      // if-block "!canReadPins"
[02:27:43.893]        // =>  FALSE
[02:27:43.893]      // skip if-block "!canReadPins"
[02:27:43.893]    </control>
[02:27:43.893]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:27:43.893]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:27:43.893]        // =>  TRUE
[02:27:43.893]      <block atomic="false" info="">
[02:27:43.893]        WriteAP(0x00, 0x190008);
[02:27:43.897]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:27:43.897]        WriteAP(0xF0, 0x01);
[02:27:43.901]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:27:43.901]      </block>
[02:27:43.901]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:27:43.901]    </control>
[02:27:43.901]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:27:43.901]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:27:43.901]        // =>  FALSE
[02:27:43.901]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:27:43.901]    </control>
[02:27:43.901]    <block atomic="false" info="">
[02:27:43.901]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:27:43.905]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:27:43.905]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:27:43.905]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:27:43.905]      __ap = 0; //lets make sure we reset the access point selection
[02:27:43.905]        // -> [__ap <= 0x00000000]
[02:27:43.905]    </block>
[02:27:43.905]  </sequence>
[02:27:43.905]  
[02:27:43.932]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:27:43.932]  
[02:27:43.936]  <debugvars>
[02:27:43.936]    // Pre-defined
[02:27:43.936]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:27:43.936]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:27:43.936]    __dp=0x00000000
[02:27:43.936]    __ap=0x00000000
[02:27:43.936]    __traceout=0x00000000      (Trace Disabled)
[02:27:43.936]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:27:43.936]    __FlashAddr=0x00000000
[02:27:43.936]    __FlashLen=0x00000000
[02:27:43.936]    __FlashArg=0x00000000
[02:27:43.936]    __FlashOp=0x00000000
[02:27:43.936]    __Result=0x00000000
[02:27:43.936]  </debugvars>
[02:27:43.936]  
[02:27:43.936]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:27:43.936]    <block atomic="false" info="">
[02:27:43.936]      __var deviceID = 0;
[02:27:43.936]        // -> [deviceID <= 0x00000000]
[02:27:43.938]      __var version = 0;
[02:27:43.938]        // -> [version <= 0x00000000]
[02:27:43.938]      __var partNum = 0;
[02:27:43.938]        // -> [partNum <= 0x00000000]
[02:27:43.938]      __var manuf = 0;
[02:27:43.938]        // -> [manuf <= 0x00000000]
[02:27:43.938]      __var isMSPM0G1X0X_G3X0X = 0;
[02:27:43.938]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:27:43.939]      __var isProduction = 0;
[02:27:43.939]        // -> [isProduction <= 0x00000000]
[02:27:43.939]      __var continueId = 0;
[02:27:43.939]        // -> [continueId <= 0x00000000]
[02:27:43.939]      deviceID =   Read32(0x41C40004);
[02:27:43.945]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:27:43.945]        // -> [deviceID <= 0x2BB8802F]
[02:27:43.945]      version = deviceID >> 28;
[02:27:43.945]        // -> [version <= 0x00000002]
[02:27:43.945]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:27:43.947]        // -> [partNum <= 0x0000BB88]
[02:27:43.947]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:27:43.947]        // -> [manuf <= 0x00000017]
[02:27:43.947]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:27:43.947]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:27:43.947]      isProduction = (version > 0);
[02:27:43.947]        // -> [isProduction <= 0x00000001]
[02:27:43.947]    </block>
[02:27:43.947]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:27:43.947]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:27:43.947]        // =>  FALSE
[02:27:43.947]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:27:43.948]    </control>
[02:27:43.948]    <control if="continueId == 4" while="" timeout="0" info="">
[02:27:43.948]      // if-block "continueId == 4"
[02:27:43.948]        // =>  FALSE
[02:27:43.948]      // skip if-block "continueId == 4"
[02:27:43.948]    </control>
[02:27:43.948]    <control if="!isProduction" while="" timeout="0" info="">
[02:27:43.948]      // if-block "!isProduction"
[02:27:43.948]        // =>  FALSE
[02:27:43.949]      // skip if-block "!isProduction"
[02:27:43.949]    </control>
[02:27:43.949]  </sequence>
[02:27:43.949]  
[02:27:50.164]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:27:50.164]  
[02:27:50.173]  <debugvars>
[02:27:50.173]    // Pre-defined
[02:27:50.173]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:27:50.173]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:27:50.173]    __dp=0x00000000
[02:27:50.173]    __ap=0x00000000
[02:27:50.173]    __traceout=0x00000000      (Trace Disabled)
[02:27:50.173]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:27:50.173]    __FlashAddr=0x00000000
[02:27:50.173]    __FlashLen=0x00000000
[02:27:50.173]    __FlashArg=0x00000000
[02:27:50.173]    __FlashOp=0x00000000
[02:27:50.173]    __Result=0x00000000
[02:27:50.173]  </debugvars>
[02:27:50.173]  
[02:27:50.173]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:27:50.173]    <block atomic="false" info="">
[02:27:50.174]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:27:50.174]        // -> [isSWJ <= 0x00000001]
[02:27:50.174]      __var hasDormant = __protocol & 0x00020000;
[02:27:50.174]        // -> [hasDormant <= 0x00000000]
[02:27:50.174]      __var protType   = __protocol & 0x0000FFFF;
[02:27:50.174]        // -> [protType <= 0x00000002]
[02:27:50.174]    </block>
[02:27:50.174]    <control if="protType == 1" while="" timeout="0" info="">
[02:27:50.174]      // if-block "protType == 1"
[02:27:50.174]        // =>  FALSE
[02:27:50.174]      // skip if-block "protType == 1"
[02:27:50.175]    </control>
[02:27:50.175]    <control if="protType == 2" while="" timeout="0" info="">
[02:27:50.175]      // if-block "protType == 2"
[02:27:50.175]        // =>  TRUE
[02:27:50.175]      <control if="isSWJ" while="" timeout="0" info="">
[02:27:50.175]        // if-block "isSWJ"
[02:27:50.175]          // =>  TRUE
[02:27:50.175]        <control if="hasDormant" while="" timeout="0" info="">
[02:27:50.175]          // if-block "hasDormant"
[02:27:50.175]            // =>  FALSE
[02:27:50.175]          // skip if-block "hasDormant"
[02:27:50.175]        </control>
[02:27:50.177]        <control if="!hasDormant" while="" timeout="0" info="">
[02:27:50.177]          // if-block "!hasDormant"
[02:27:50.177]            // =>  TRUE
[02:27:50.177]          <block atomic="false" info="">
[02:27:50.177]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:27:50.178]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:27:50.178]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:27:50.180]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:27:50.180]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:27:50.182]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:27:50.182]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:27:50.182]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:27:50.182]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:27:50.185]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:27:50.185]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:27:50.189]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:27:50.190]          </block>
[02:27:50.190]          // end if-block "!hasDormant"
[02:27:50.190]        </control>
[02:27:50.190]        // end if-block "isSWJ"
[02:27:50.190]      </control>
[02:27:50.190]      <control if="!isSWJ" while="" timeout="0" info="">
[02:27:50.190]        // if-block "!isSWJ"
[02:27:50.190]          // =>  FALSE
[02:27:50.190]        // skip if-block "!isSWJ"
[02:27:50.190]      </control>
[02:27:50.190]      <block atomic="false" info="">
[02:27:50.190]        ReadDP(0x0);
[02:27:50.192]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:27:50.192]      </block>
[02:27:50.192]      // end if-block "protType == 2"
[02:27:50.192]    </control>
[02:27:50.192]  </sequence>
[02:27:50.192]  
[02:27:50.195]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:27:50.195]  
[02:27:50.195]  <debugvars>
[02:27:50.195]    // Pre-defined
[02:27:50.195]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:27:50.195]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:27:50.195]    __dp=0x00000000
[02:27:50.195]    __ap=0x00000000
[02:27:50.195]    __traceout=0x00000000      (Trace Disabled)
[02:27:50.195]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:27:50.195]    __FlashAddr=0x00000000
[02:27:50.195]    __FlashLen=0x00000000
[02:27:50.197]    __FlashArg=0x00000000
[02:27:50.197]    __FlashOp=0x00000000
[02:27:50.197]    __Result=0x00000000
[02:27:50.197]  </debugvars>
[02:27:50.197]  
[02:27:50.197]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:27:50.197]    <block atomic="false" info="">
[02:27:50.197]      __var SW_DP_ABORT       = 0x0;
[02:27:50.197]        // -> [SW_DP_ABORT <= 0x00000000]
[02:27:50.197]      __var DP_CTRL_STAT      = 0x4;
[02:27:50.197]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:27:50.198]      __var DP_SELECT         = 0x8;
[02:27:50.198]        // -> [DP_SELECT <= 0x00000008]
[02:27:50.198]      __var powered_down      = 0;
[02:27:50.198]        // -> [powered_down <= 0x00000000]
[02:27:50.198]      WriteDP(DP_SELECT, 0x00000000);
[02:27:50.199]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:27:50.199]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:27:50.202]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:27:50.202]        // -> [powered_down <= 0x00000001]
[02:27:50.202]    </block>
[02:27:50.202]    <control if="powered_down" while="" timeout="0" info="">
[02:27:50.202]      // if-block "powered_down"
[02:27:50.202]        // =>  TRUE
[02:27:50.202]      <block atomic="false" info="">
[02:27:50.202]        Message(0, "Debug/System power-up request sent");
[02:27:50.203]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:27:50.203]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:27:50.206]      </block>
[02:27:50.206]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:27:50.206]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:27:50.207]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:27:50.207]        // while-condition  =>  FALSE
[02:27:50.207]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:27:50.207]      </control>
[02:27:50.209]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:27:50.209]        // if-block "(__protocol & 0xFFFF) == 1"
[02:27:50.209]          // =>  FALSE
[02:27:50.209]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:27:50.209]      </control>
[02:27:50.209]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:27:50.209]        // if-block "(__protocol & 0xFFFF) == 2"
[02:27:50.209]          // =>  TRUE
[02:27:50.209]        <block atomic="false" info="">
[02:27:50.209]          Message(0, "executing SWD power up");
[02:27:50.210]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:27:50.210]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:27:50.210]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:27:50.214]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:27:50.214]        </block>
[02:27:50.214]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:27:50.214]      </control>
[02:27:50.214]      // end if-block "powered_down"
[02:27:50.214]    </control>
[02:27:50.214]    <block atomic="false" info="">
[02:27:50.214]      __var DEBUG_PORT_VAL    = 0;
[02:27:50.214]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:27:50.214]      __var ACCESS_POINT_VAL  = 0;
[02:27:50.214]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:27:50.214]      __ap = 1; 
[02:27:50.214]        // -> [__ap <= 0x00000001]
[02:27:50.217]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:27:50.219]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:27:50.221]      __ap = 4;
[02:27:50.221]        // -> [__ap <= 0x00000004]
[02:27:50.221]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:27:50.224]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:27:50.224]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:27:50.224]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:27:50.225]    </block>
[02:27:50.225]    <block atomic="false" info="">
[02:27:50.225]      __var nReset = 0x80;
[02:27:50.225]        // -> [nReset <= 0x00000080]
[02:27:50.226]      __var canReadPins = 0;
[02:27:50.226]        // -> [canReadPins <= 0x00000000]
[02:27:50.226]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:27:50.228]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:27:50.228]        // -> [canReadPins <= 0x00000001]
[02:27:50.228]    </block>
[02:27:50.228]    <control if="" while="1" timeout="200" info="">
[02:27:50.228]      // while "1"  (timeout="200")
[02:27:50.228]      // while-condition  =>  TRUE
[02:27:50.228]      // while "1"  (timeout="200")
[02:27:50.228]      // while-condition  =>  TRUE
[02:27:50.229]      // while "1"  (timeout="200")
[02:27:50.229]      // while-condition  =>  TRUE
[02:27:50.229]      // while "1"  (timeout="200")
[02:27:50.229]      // while-condition  =>  TRUE
[02:27:50.229]      // while "1"  (timeout="200")
[02:27:50.229]      // while-condition  =>  TRUE
[02:27:50.229]      // while "1"  (timeout="200")
[02:27:50.229]      // while-condition  =>  TRUE
[02:27:50.229]      // while "1"  (timeout="200")
[02:27:50.229]      // while-condition  =>  TRUE
[02:27:50.229]      // while "1"  (timeout="200")
[02:27:50.229]      // while-condition  =>  TRUE
[02:27:50.229]      // while "1"  (timeout="200")
[02:27:50.229]      // while-condition  =>  TRUE
[02:27:50.229]      // while "1"  (timeout="200")
[02:27:50.230]      // while-condition  =>  TRUE
[02:27:50.230]      // while "1"  (timeout="200")
[02:27:50.230]      // while-condition  =>  TRUE
[02:27:50.230]      // while "1"  (timeout="200")
[02:27:50.230]      // while-condition  =>  TRUE
[02:27:50.230]      // while "1"  (timeout="200")
[02:27:50.230]      // while-condition  =>  TRUE
[02:27:50.230]      // while "1"  (timeout="200")
[02:27:50.230]      // while-condition  =>  TRUE
[02:27:50.230]      // while "1"  (timeout="200")
[02:27:50.230]      // while-condition  =>  TRUE
[02:27:50.230]      // while "1"  (timeout="200")
[02:27:50.230]      // while-condition  =>  TRUE
[02:27:50.230]      // while "1"  (timeout="200")
[02:27:50.232]      // while-condition  =>  TRUE
[02:27:50.232]      // while "1"  (timeout="200")
[02:27:50.232]      // while-condition  =>  TRUE
[02:27:50.232]      // while "1"  (timeout="200")
[02:27:50.232]      // while-condition  =>  TRUE
[02:27:50.232]      // while "1"  (timeout="200")
[02:27:50.232]      // while-condition  =>  TRUE
[02:27:50.232]      // while "1"  (timeout="200")
[02:27:50.232]      // while-condition  =>  TRUE
[02:27:50.233]      // while "1"  (timeout="200")
[02:27:50.233]      // while-condition  =>  TRUE
[02:27:50.233]      // while "1"  (timeout="200")
[02:27:50.233]      // while-condition  =>  TRUE
[02:27:50.233]      // while "1"  (timeout="200")
[02:27:50.233]      // while-condition  =>  TRUE
[02:27:50.233]      // while "1"  (timeout="200")
[02:27:50.233]      // while-condition  =>  TRUE
[02:27:50.233]      // while "1"  (timeout="200")
[02:27:50.233]      // while-condition  =>  TRUE
[02:27:50.233]      // while "1"  (timeout="200")
[02:27:50.233]      // while-condition  =>  TRUE
[02:27:50.233]      // while "1"  (timeout="200")
[02:27:50.233]      // while-condition  =>  TRUE
[02:27:50.233]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.235]      // while-condition  =>  TRUE
[02:27:50.235]      // while "1"  (timeout="200")
[02:27:50.237]      // while-condition  =>  TRUE
[02:27:50.237]      // while "1"  (timeout="200")
[02:27:50.237]      // while  =>  TIMEOUT
[02:27:50.237]      // end while "1"
[02:27:50.237]    </control>
[02:27:50.237]    <control if="canReadPins" while="" timeout="0" info="">
[02:27:50.237]      // if-block "canReadPins"
[02:27:50.237]        // =>  TRUE
[02:27:50.237]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:27:50.237]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:27:50.239]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:27:50.239]        // while-condition  =>  FALSE
[02:27:50.239]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:27:50.239]      </control>
[02:27:50.239]      // end if-block "canReadPins"
[02:27:50.239]    </control>
[02:27:50.240]    <control if="!canReadPins" while="" timeout="0" info="">
[02:27:50.240]      // if-block "!canReadPins"
[02:27:50.240]        // =>  FALSE
[02:27:50.240]      // skip if-block "!canReadPins"
[02:27:50.240]    </control>
[02:27:50.240]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:27:50.240]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:27:50.240]        // =>  TRUE
[02:27:50.240]      <block atomic="false" info="">
[02:27:50.240]        WriteAP(0x00, 0x190008);
[02:27:50.241]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:27:50.241]        WriteAP(0xF0, 0x01);
[02:27:50.243]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:27:50.248]      </block>
[02:27:50.248]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:27:50.248]    </control>
[02:27:50.248]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:27:50.248]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:27:50.248]        // =>  FALSE
[02:27:50.248]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:27:50.248]    </control>
[02:27:50.248]    <block atomic="false" info="">
[02:27:50.248]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:27:50.252]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:27:50.253]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:27:50.253]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:27:50.254]      __ap = 0; //lets make sure we reset the access point selection
[02:27:50.254]        // -> [__ap <= 0x00000000]
[02:27:50.254]    </block>
[02:27:50.254]  </sequence>
[02:27:50.254]  
[02:27:50.275]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:27:50.275]  
[02:27:50.275]  <debugvars>
[02:27:50.275]    // Pre-defined
[02:27:50.275]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:27:50.275]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:27:50.275]    __dp=0x00000000
[02:27:50.275]    __ap=0x00000000
[02:27:50.275]    __traceout=0x00000000      (Trace Disabled)
[02:27:50.275]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:27:50.275]    __FlashAddr=0x00000000
[02:27:50.275]    __FlashLen=0x00000000
[02:27:50.276]    __FlashArg=0x00000000
[02:27:50.276]    __FlashOp=0x00000000
[02:27:50.276]    __Result=0x00000000
[02:27:50.276]  </debugvars>
[02:27:50.276]  
[02:27:50.276]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:27:50.276]    <block atomic="false" info="">
[02:27:50.277]      __var deviceID = 0;
[02:27:50.277]        // -> [deviceID <= 0x00000000]
[02:27:50.277]      __var version = 0;
[02:27:50.277]        // -> [version <= 0x00000000]
[02:27:50.277]      __var partNum = 0;
[02:27:50.277]        // -> [partNum <= 0x00000000]
[02:27:50.277]      __var manuf = 0;
[02:27:50.277]        // -> [manuf <= 0x00000000]
[02:27:50.277]      __var isMSPM0G1X0X_G3X0X = 0;
[02:27:50.277]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:27:50.277]      __var isProduction = 0;
[02:27:50.277]        // -> [isProduction <= 0x00000000]
[02:27:50.277]      __var continueId = 0;
[02:27:50.277]        // -> [continueId <= 0x00000000]
[02:27:50.278]      deviceID =   Read32(0x41C40004);
[02:27:50.281]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:27:50.281]        // -> [deviceID <= 0x2BB8802F]
[02:27:50.281]      version = deviceID >> 28;
[02:27:50.281]        // -> [version <= 0x00000002]
[02:27:50.281]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:27:50.281]        // -> [partNum <= 0x0000BB88]
[02:27:50.281]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:27:50.281]        // -> [manuf <= 0x00000017]
[02:27:50.281]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:27:50.281]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:27:50.281]      isProduction = (version > 0);
[02:27:50.281]        // -> [isProduction <= 0x00000001]
[02:27:50.281]    </block>
[02:27:50.281]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:27:50.281]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:27:50.281]        // =>  FALSE
[02:27:50.281]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:27:50.285]    </control>
[02:27:50.285]    <control if="continueId == 4" while="" timeout="0" info="">
[02:27:50.285]      // if-block "continueId == 4"
[02:27:50.285]        // =>  FALSE
[02:27:50.285]      // skip if-block "continueId == 4"
[02:27:50.285]    </control>
[02:27:50.285]    <control if="!isProduction" while="" timeout="0" info="">
[02:27:50.285]      // if-block "!isProduction"
[02:27:50.285]        // =>  FALSE
[02:27:50.285]      // skip if-block "!isProduction"
[02:27:50.286]    </control>
[02:27:50.286]  </sequence>
[02:27:50.286]  
[02:28:56.584]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:28:56.584]  
[02:28:56.594]  <debugvars>
[02:28:56.594]    // Pre-defined
[02:28:56.594]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:28:56.594]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:28:56.594]    __dp=0x00000000
[02:28:56.595]    __ap=0x00000000
[02:28:56.595]    __traceout=0x00000000      (Trace Disabled)
[02:28:56.595]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:28:56.595]    __FlashAddr=0x00000000
[02:28:56.595]    __FlashLen=0x00000000
[02:28:56.595]    __FlashArg=0x00000000
[02:28:56.595]    __FlashOp=0x00000000
[02:28:56.595]    __Result=0x00000000
[02:28:56.595]  </debugvars>
[02:28:56.595]  
[02:28:56.595]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:28:56.595]    <block atomic="false" info="">
[02:28:56.595]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:28:56.595]        // -> [isSWJ <= 0x00000001]
[02:28:56.595]      __var hasDormant = __protocol & 0x00020000;
[02:28:56.595]        // -> [hasDormant <= 0x00000000]
[02:28:56.595]      __var protType   = __protocol & 0x0000FFFF;
[02:28:56.595]        // -> [protType <= 0x00000002]
[02:28:56.595]    </block>
[02:28:56.595]    <control if="protType == 1" while="" timeout="0" info="">
[02:28:56.595]      // if-block "protType == 1"
[02:28:56.595]        // =>  FALSE
[02:28:56.595]      // skip if-block "protType == 1"
[02:28:56.595]    </control>
[02:28:56.595]    <control if="protType == 2" while="" timeout="0" info="">
[02:28:56.595]      // if-block "protType == 2"
[02:28:56.595]        // =>  TRUE
[02:28:56.595]      <control if="isSWJ" while="" timeout="0" info="">
[02:28:56.595]        // if-block "isSWJ"
[02:28:56.595]          // =>  TRUE
[02:28:56.595]        <control if="hasDormant" while="" timeout="0" info="">
[02:28:56.595]          // if-block "hasDormant"
[02:28:56.595]            // =>  FALSE
[02:28:56.595]          // skip if-block "hasDormant"
[02:28:56.595]        </control>
[02:28:56.595]        <control if="!hasDormant" while="" timeout="0" info="">
[02:28:56.595]          // if-block "!hasDormant"
[02:28:56.595]            // =>  TRUE
[02:28:56.595]          <block atomic="false" info="">
[02:28:56.595]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:28:56.599]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:28:56.599]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:28:56.602]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:28:56.602]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:28:56.602]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:28:56.602]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:28:56.602]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:28:56.602]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:28:56.606]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:28:56.606]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:28:56.606]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:28:56.606]          </block>
[02:28:56.606]          // end if-block "!hasDormant"
[02:28:56.606]        </control>
[02:28:56.606]        // end if-block "isSWJ"
[02:28:56.606]      </control>
[02:28:56.606]      <control if="!isSWJ" while="" timeout="0" info="">
[02:28:56.606]        // if-block "!isSWJ"
[02:28:56.606]          // =>  FALSE
[02:28:56.606]        // skip if-block "!isSWJ"
[02:28:56.606]      </control>
[02:28:56.606]      <block atomic="false" info="">
[02:28:56.606]        ReadDP(0x0);
[02:28:56.610]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:28:56.610]      </block>
[02:28:56.610]      // end if-block "protType == 2"
[02:28:56.612]    </control>
[02:28:56.612]  </sequence>
[02:28:56.612]  
[02:28:56.614]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:28:56.614]  
[02:28:56.614]  <debugvars>
[02:28:56.614]    // Pre-defined
[02:28:56.615]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:28:56.615]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:28:56.615]    __dp=0x00000000
[02:28:56.615]    __ap=0x00000000
[02:28:56.615]    __traceout=0x00000000      (Trace Disabled)
[02:28:56.615]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:28:56.615]    __FlashAddr=0x00000000
[02:28:56.615]    __FlashLen=0x00000000
[02:28:56.615]    __FlashArg=0x00000000
[02:28:56.615]    __FlashOp=0x00000000
[02:28:56.615]    __Result=0x00000000
[02:28:56.615]  </debugvars>
[02:28:56.615]  
[02:28:56.615]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:28:56.615]    <block atomic="false" info="">
[02:28:56.615]      __var SW_DP_ABORT       = 0x0;
[02:28:56.615]        // -> [SW_DP_ABORT <= 0x00000000]
[02:28:56.615]      __var DP_CTRL_STAT      = 0x4;
[02:28:56.615]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:28:56.615]      __var DP_SELECT         = 0x8;
[02:28:56.615]        // -> [DP_SELECT <= 0x00000008]
[02:28:56.615]      __var powered_down      = 0;
[02:28:56.615]        // -> [powered_down <= 0x00000000]
[02:28:56.615]      WriteDP(DP_SELECT, 0x00000000);
[02:28:56.618]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:28:56.618]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:28:56.622]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:28:56.623]        // -> [powered_down <= 0x00000001]
[02:28:56.623]    </block>
[02:28:56.623]    <control if="powered_down" while="" timeout="0" info="">
[02:28:56.623]      // if-block "powered_down"
[02:28:56.623]        // =>  TRUE
[02:28:56.623]      <block atomic="false" info="">
[02:28:56.623]        Message(0, "Debug/System power-up request sent");
[02:28:56.625]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:28:56.627]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:28:56.627]      </block>
[02:28:56.627]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:28:56.627]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:28:56.627]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:28:56.627]        // while-condition  =>  FALSE
[02:28:56.627]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:28:56.627]      </control>
[02:28:56.631]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:28:56.631]        // if-block "(__protocol & 0xFFFF) == 1"
[02:28:56.631]          // =>  FALSE
[02:28:56.631]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:28:56.631]      </control>
[02:28:56.631]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:28:56.631]        // if-block "(__protocol & 0xFFFF) == 2"
[02:28:56.631]          // =>  TRUE
[02:28:56.631]        <block atomic="false" info="">
[02:28:56.631]          Message(0, "executing SWD power up");
[02:28:56.633]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:28:56.635]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:28:56.635]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:28:56.635]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:28:56.635]        </block>
[02:28:56.635]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:28:56.635]      </control>
[02:28:56.635]      // end if-block "powered_down"
[02:28:56.639]    </control>
[02:28:56.639]    <block atomic="false" info="">
[02:28:56.639]      __var DEBUG_PORT_VAL    = 0;
[02:28:56.639]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:28:56.639]      __var ACCESS_POINT_VAL  = 0;
[02:28:56.639]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:28:56.639]      __ap = 1; 
[02:28:56.639]        // -> [__ap <= 0x00000001]
[02:28:56.639]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:28:56.642]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:28:56.642]      __ap = 4;
[02:28:56.642]        // -> [__ap <= 0x00000004]
[02:28:56.642]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:28:56.650]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:28:56.650]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:28:56.650]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:28:56.650]    </block>
[02:28:56.652]    <block atomic="false" info="">
[02:28:56.652]      __var nReset = 0x80;
[02:28:56.652]        // -> [nReset <= 0x00000080]
[02:28:56.652]      __var canReadPins = 0;
[02:28:56.652]        // -> [canReadPins <= 0x00000000]
[02:28:56.652]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:28:56.654]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:28:56.654]        // -> [canReadPins <= 0x00000001]
[02:28:56.654]    </block>
[02:28:56.654]    <control if="" while="1" timeout="200" info="">
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.654]      // while-condition  =>  TRUE
[02:28:56.654]      // while "1"  (timeout="200")
[02:28:56.659]      // while-condition  =>  TRUE
[02:28:56.659]      // while "1"  (timeout="200")
[02:28:56.659]      // while  =>  TIMEOUT
[02:28:56.659]      // end while "1"
[02:28:56.659]    </control>
[02:28:56.659]    <control if="canReadPins" while="" timeout="0" info="">
[02:28:56.659]      // if-block "canReadPins"
[02:28:56.659]        // =>  TRUE
[02:28:56.659]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:28:56.659]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:28:56.660]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:28:56.660]        // while-condition  =>  FALSE
[02:28:56.660]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:28:56.660]      </control>
[02:28:56.660]      // end if-block "canReadPins"
[02:28:56.662]    </control>
[02:28:56.662]    <control if="!canReadPins" while="" timeout="0" info="">
[02:28:56.662]      // if-block "!canReadPins"
[02:28:56.662]        // =>  FALSE
[02:28:56.662]      // skip if-block "!canReadPins"
[02:28:56.662]    </control>
[02:28:56.662]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:28:56.662]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:28:56.662]        // =>  TRUE
[02:28:56.662]      <block atomic="false" info="">
[02:28:56.662]        WriteAP(0x00, 0x190008);
[02:28:56.662]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:28:56.662]        WriteAP(0xF0, 0x01);
[02:28:56.666]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:28:56.666]      </block>
[02:28:56.666]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:28:56.666]    </control>
[02:28:56.666]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:28:56.666]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:28:56.666]        // =>  FALSE
[02:28:56.666]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:28:56.666]    </control>
[02:28:56.666]    <block atomic="false" info="">
[02:28:56.670]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:28:56.672]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:28:56.672]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:28:56.672]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:28:56.674]      __ap = 0; //lets make sure we reset the access point selection
[02:28:56.675]        // -> [__ap <= 0x00000000]
[02:28:56.675]    </block>
[02:28:56.675]  </sequence>
[02:28:56.675]  
[02:28:56.695]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:28:56.695]  
[02:28:56.695]  <debugvars>
[02:28:56.695]    // Pre-defined
[02:28:56.695]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:28:56.695]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:28:56.695]    __dp=0x00000000
[02:28:56.695]    __ap=0x00000000
[02:28:56.695]    __traceout=0x00000000      (Trace Disabled)
[02:28:56.695]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:28:56.695]    __FlashAddr=0x00000000
[02:28:56.695]    __FlashLen=0x00000000
[02:28:56.695]    __FlashArg=0x00000000
[02:28:56.695]    __FlashOp=0x00000000
[02:28:56.695]    __Result=0x00000000
[02:28:56.695]  </debugvars>
[02:28:56.695]  
[02:28:56.699]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:28:56.699]    <block atomic="false" info="">
[02:28:56.699]      __var deviceID = 0;
[02:28:56.699]        // -> [deviceID <= 0x00000000]
[02:28:56.699]      __var version = 0;
[02:28:56.699]        // -> [version <= 0x00000000]
[02:28:56.699]      __var partNum = 0;
[02:28:56.699]        // -> [partNum <= 0x00000000]
[02:28:56.699]      __var manuf = 0;
[02:28:56.699]        // -> [manuf <= 0x00000000]
[02:28:56.699]      __var isMSPM0G1X0X_G3X0X = 0;
[02:28:56.700]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:28:56.700]      __var isProduction = 0;
[02:28:56.700]        // -> [isProduction <= 0x00000000]
[02:28:56.700]      __var continueId = 0;
[02:28:56.700]        // -> [continueId <= 0x00000000]
[02:28:56.700]      deviceID =   Read32(0x41C40004);
[02:28:56.704]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:28:56.704]        // -> [deviceID <= 0x2BB8802F]
[02:28:56.704]      version = deviceID >> 28;
[02:28:56.704]        // -> [version <= 0x00000002]
[02:28:56.704]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:28:56.704]        // -> [partNum <= 0x0000BB88]
[02:28:56.704]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:28:56.704]        // -> [manuf <= 0x00000017]
[02:28:56.704]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:28:56.704]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:28:56.704]      isProduction = (version > 0);
[02:28:56.704]        // -> [isProduction <= 0x00000001]
[02:28:56.704]    </block>
[02:28:56.704]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:28:56.704]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:28:56.706]        // =>  FALSE
[02:28:56.706]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:28:56.706]    </control>
[02:28:56.706]    <control if="continueId == 4" while="" timeout="0" info="">
[02:28:56.706]      // if-block "continueId == 4"
[02:28:56.706]        // =>  FALSE
[02:28:56.706]      // skip if-block "continueId == 4"
[02:28:56.706]    </control>
[02:28:56.706]    <control if="!isProduction" while="" timeout="0" info="">
[02:28:56.706]      // if-block "!isProduction"
[02:28:56.706]        // =>  FALSE
[02:28:56.706]      // skip if-block "!isProduction"
[02:28:56.706]    </control>
[02:28:56.708]  </sequence>
[02:28:56.708]  
[02:29:02.970]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:29:02.970]  
[02:29:02.980]  <debugvars>
[02:29:02.980]    // Pre-defined
[02:29:02.980]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:02.980]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:29:02.980]    __dp=0x00000000
[02:29:02.980]    __ap=0x00000000
[02:29:02.980]    __traceout=0x00000000      (Trace Disabled)
[02:29:02.980]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:02.980]    __FlashAddr=0x00000000
[02:29:02.980]    __FlashLen=0x00000000
[02:29:02.980]    __FlashArg=0x00000000
[02:29:02.980]    __FlashOp=0x00000000
[02:29:02.980]    __Result=0x00000000
[02:29:02.980]  </debugvars>
[02:29:02.980]  
[02:29:02.980]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:29:02.980]    <block atomic="false" info="">
[02:29:02.980]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:29:02.980]        // -> [isSWJ <= 0x00000001]
[02:29:02.980]      __var hasDormant = __protocol & 0x00020000;
[02:29:02.983]        // -> [hasDormant <= 0x00000000]
[02:29:02.983]      __var protType   = __protocol & 0x0000FFFF;
[02:29:02.983]        // -> [protType <= 0x00000002]
[02:29:02.983]    </block>
[02:29:02.983]    <control if="protType == 1" while="" timeout="0" info="">
[02:29:02.983]      // if-block "protType == 1"
[02:29:02.983]        // =>  FALSE
[02:29:02.983]      // skip if-block "protType == 1"
[02:29:02.983]    </control>
[02:29:02.983]    <control if="protType == 2" while="" timeout="0" info="">
[02:29:02.983]      // if-block "protType == 2"
[02:29:02.983]        // =>  TRUE
[02:29:02.985]      <control if="isSWJ" while="" timeout="0" info="">
[02:29:02.985]        // if-block "isSWJ"
[02:29:02.985]          // =>  TRUE
[02:29:02.985]        <control if="hasDormant" while="" timeout="0" info="">
[02:29:02.985]          // if-block "hasDormant"
[02:29:02.985]            // =>  FALSE
[02:29:02.985]          // skip if-block "hasDormant"
[02:29:02.985]        </control>
[02:29:02.985]        <control if="!hasDormant" while="" timeout="0" info="">
[02:29:02.985]          // if-block "!hasDormant"
[02:29:02.985]            // =>  TRUE
[02:29:02.985]          <block atomic="false" info="">
[02:29:02.985]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:29:02.987]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:02.987]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:29:02.990]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:29:02.990]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:29:02.992]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:02.992]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:29:02.996]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:29:02.996]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:29:02.996]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:02.996]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:29:02.996]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:29:03.000]          </block>
[02:29:03.000]          // end if-block "!hasDormant"
[02:29:03.000]        </control>
[02:29:03.000]        // end if-block "isSWJ"
[02:29:03.000]      </control>
[02:29:03.000]      <control if="!isSWJ" while="" timeout="0" info="">
[02:29:03.000]        // if-block "!isSWJ"
[02:29:03.000]          // =>  FALSE
[02:29:03.000]        // skip if-block "!isSWJ"
[02:29:03.001]      </control>
[02:29:03.001]      <block atomic="false" info="">
[02:29:03.001]        ReadDP(0x0);
[02:29:03.001]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:29:03.001]      </block>
[02:29:03.001]      // end if-block "protType == 2"
[02:29:03.003]    </control>
[02:29:03.003]  </sequence>
[02:29:03.003]  
[02:29:03.005]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:29:03.005]  
[02:29:03.005]  <debugvars>
[02:29:03.005]    // Pre-defined
[02:29:03.005]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:03.005]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:29:03.005]    __dp=0x00000000
[02:29:03.005]    __ap=0x00000000
[02:29:03.005]    __traceout=0x00000000      (Trace Disabled)
[02:29:03.005]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:03.005]    __FlashAddr=0x00000000
[02:29:03.005]    __FlashLen=0x00000000
[02:29:03.005]    __FlashArg=0x00000000
[02:29:03.005]    __FlashOp=0x00000000
[02:29:03.005]    __Result=0x00000000
[02:29:03.005]  </debugvars>
[02:29:03.005]  
[02:29:03.005]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:29:03.005]    <block atomic="false" info="">
[02:29:03.005]      __var SW_DP_ABORT       = 0x0;
[02:29:03.005]        // -> [SW_DP_ABORT <= 0x00000000]
[02:29:03.008]      __var DP_CTRL_STAT      = 0x4;
[02:29:03.008]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:29:03.008]      __var DP_SELECT         = 0x8;
[02:29:03.008]        // -> [DP_SELECT <= 0x00000008]
[02:29:03.008]      __var powered_down      = 0;
[02:29:03.008]        // -> [powered_down <= 0x00000000]
[02:29:03.008]      WriteDP(DP_SELECT, 0x00000000);
[02:29:03.008]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:29:03.008]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:29:03.011]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:29:03.011]        // -> [powered_down <= 0x00000001]
[02:29:03.012]    </block>
[02:29:03.012]    <control if="powered_down" while="" timeout="0" info="">
[02:29:03.012]      // if-block "powered_down"
[02:29:03.012]        // =>  TRUE
[02:29:03.012]      <block atomic="false" info="">
[02:29:03.012]        Message(0, "Debug/System power-up request sent");
[02:29:03.014]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:29:03.016]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:29:03.016]      </block>
[02:29:03.016]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:29:03.016]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:29:03.017]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:29:03.017]        // while-condition  =>  FALSE
[02:29:03.017]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:29:03.017]      </control>
[02:29:03.017]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:29:03.017]        // if-block "(__protocol & 0xFFFF) == 1"
[02:29:03.017]          // =>  FALSE
[02:29:03.017]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:29:03.017]      </control>
[02:29:03.017]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:29:03.017]        // if-block "(__protocol & 0xFFFF) == 2"
[02:29:03.017]          // =>  TRUE
[02:29:03.017]        <block atomic="false" info="">
[02:29:03.017]          Message(0, "executing SWD power up");
[02:29:03.020]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:29:03.020]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:29:03.020]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:29:03.024]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:29:03.025]        </block>
[02:29:03.025]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:29:03.025]      </control>
[02:29:03.025]      // end if-block "powered_down"
[02:29:03.025]    </control>
[02:29:03.025]    <block atomic="false" info="">
[02:29:03.025]      __var DEBUG_PORT_VAL    = 0;
[02:29:03.025]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:29:03.025]      __var ACCESS_POINT_VAL  = 0;
[02:29:03.025]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:29:03.026]      __ap = 1; 
[02:29:03.026]        // -> [__ap <= 0x00000001]
[02:29:03.026]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:29:03.032]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:29:03.032]      __ap = 4;
[02:29:03.032]        // -> [__ap <= 0x00000004]
[02:29:03.032]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:29:03.037]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:29:03.037]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:29:03.037]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:29:03.037]    </block>
[02:29:03.037]    <block atomic="false" info="">
[02:29:03.037]      __var nReset = 0x80;
[02:29:03.037]        // -> [nReset <= 0x00000080]
[02:29:03.037]      __var canReadPins = 0;
[02:29:03.037]        // -> [canReadPins <= 0x00000000]
[02:29:03.037]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:29:03.040]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:29:03.040]        // -> [canReadPins <= 0x00000001]
[02:29:03.040]    </block>
[02:29:03.040]    <control if="" while="1" timeout="200" info="">
[02:29:03.040]      // while "1"  (timeout="200")
[02:29:03.040]      // while-condition  =>  TRUE
[02:29:03.040]      // while "1"  (timeout="200")
[02:29:03.040]      // while-condition  =>  TRUE
[02:29:03.040]      // while "1"  (timeout="200")
[02:29:03.040]      // while-condition  =>  TRUE
[02:29:03.040]      // while "1"  (timeout="200")
[02:29:03.040]      // while-condition  =>  TRUE
[02:29:03.040]      // while "1"  (timeout="200")
[02:29:03.040]      // while-condition  =>  TRUE
[02:29:03.040]      // while "1"  (timeout="200")
[02:29:03.040]      // while-condition  =>  TRUE
[02:29:03.040]      // while "1"  (timeout="200")
[02:29:03.040]      // while-condition  =>  TRUE
[02:29:03.040]      // while "1"  (timeout="200")
[02:29:03.040]      // while-condition  =>  TRUE
[02:29:03.043]      // while "1"  (timeout="200")
[02:29:03.043]      // while-condition  =>  TRUE
[02:29:03.043]      // while "1"  (timeout="200")
[02:29:03.043]      // while-condition  =>  TRUE
[02:29:03.043]      // while "1"  (timeout="200")
[02:29:03.043]      // while-condition  =>  TRUE
[02:29:03.043]      // while "1"  (timeout="200")
[02:29:03.043]      // while-condition  =>  TRUE
[02:29:03.043]      // while "1"  (timeout="200")
[02:29:03.043]      // while-condition  =>  TRUE
[02:29:03.043]      // while "1"  (timeout="200")
[02:29:03.043]      // while-condition  =>  TRUE
[02:29:03.043]      // while "1"  (timeout="200")
[02:29:03.043]      // while-condition  =>  TRUE
[02:29:03.043]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.045]      // while-condition  =>  TRUE
[02:29:03.045]      // while "1"  (timeout="200")
[02:29:03.049]      // while-condition  =>  TRUE
[02:29:03.049]      // while "1"  (timeout="200")
[02:29:03.049]      // while  =>  TIMEOUT
[02:29:03.049]      // end while "1"
[02:29:03.049]    </control>
[02:29:03.049]    <control if="canReadPins" while="" timeout="0" info="">
[02:29:03.049]      // if-block "canReadPins"
[02:29:03.049]        // =>  TRUE
[02:29:03.049]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:29:03.049]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:29:03.049]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:29:03.049]        // while-condition  =>  FALSE
[02:29:03.049]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:29:03.049]      </control>
[02:29:03.049]      // end if-block "canReadPins"
[02:29:03.049]    </control>
[02:29:03.049]    <control if="!canReadPins" while="" timeout="0" info="">
[02:29:03.049]      // if-block "!canReadPins"
[02:29:03.049]        // =>  FALSE
[02:29:03.049]      // skip if-block "!canReadPins"
[02:29:03.049]    </control>
[02:29:03.049]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:29:03.049]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:29:03.049]        // =>  TRUE
[02:29:03.049]      <block atomic="false" info="">
[02:29:03.053]        WriteAP(0x00, 0x190008);
[02:29:03.054]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:29:03.054]        WriteAP(0xF0, 0x01);
[02:29:03.057]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:29:03.057]      </block>
[02:29:03.057]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:29:03.057]    </control>
[02:29:03.057]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:29:03.057]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:29:03.057]        // =>  FALSE
[02:29:03.057]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:29:03.057]    </control>
[02:29:03.057]    <block atomic="false" info="">
[02:29:03.057]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:29:03.061]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:29:03.061]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:29:03.061]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:29:03.064]      __ap = 0; //lets make sure we reset the access point selection
[02:29:03.064]        // -> [__ap <= 0x00000000]
[02:29:03.064]    </block>
[02:29:03.064]  </sequence>
[02:29:03.064]  
[02:29:03.086]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:29:03.086]  
[02:29:03.086]  <debugvars>
[02:29:03.086]    // Pre-defined
[02:29:03.086]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:03.086]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:29:03.086]    __dp=0x00000000
[02:29:03.086]    __ap=0x00000000
[02:29:03.086]    __traceout=0x00000000      (Trace Disabled)
[02:29:03.086]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:03.086]    __FlashAddr=0x00000000
[02:29:03.086]    __FlashLen=0x00000000
[02:29:03.086]    __FlashArg=0x00000000
[02:29:03.086]    __FlashOp=0x00000000
[02:29:03.086]    __Result=0x00000000
[02:29:03.086]  </debugvars>
[02:29:03.086]  
[02:29:03.086]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:29:03.086]    <block atomic="false" info="">
[02:29:03.086]      __var deviceID = 0;
[02:29:03.086]        // -> [deviceID <= 0x00000000]
[02:29:03.086]      __var version = 0;
[02:29:03.086]        // -> [version <= 0x00000000]
[02:29:03.086]      __var partNum = 0;
[02:29:03.086]        // -> [partNum <= 0x00000000]
[02:29:03.086]      __var manuf = 0;
[02:29:03.086]        // -> [manuf <= 0x00000000]
[02:29:03.089]      __var isMSPM0G1X0X_G3X0X = 0;
[02:29:03.089]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:29:03.089]      __var isProduction = 0;
[02:29:03.089]        // -> [isProduction <= 0x00000000]
[02:29:03.089]      __var continueId = 0;
[02:29:03.089]        // -> [continueId <= 0x00000000]
[02:29:03.089]      deviceID =   Read32(0x41C40004);
[02:29:03.094]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:29:03.094]        // -> [deviceID <= 0x2BB8802F]
[02:29:03.094]      version = deviceID >> 28;
[02:29:03.094]        // -> [version <= 0x00000002]
[02:29:03.094]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:29:03.094]        // -> [partNum <= 0x0000BB88]
[02:29:03.094]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:29:03.094]        // -> [manuf <= 0x00000017]
[02:29:03.094]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:29:03.094]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:29:03.094]      isProduction = (version > 0);
[02:29:03.094]        // -> [isProduction <= 0x00000001]
[02:29:03.094]    </block>
[02:29:03.094]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:29:03.094]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:29:03.094]        // =>  FALSE
[02:29:03.094]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:29:03.094]    </control>
[02:29:03.094]    <control if="continueId == 4" while="" timeout="0" info="">
[02:29:03.094]      // if-block "continueId == 4"
[02:29:03.097]        // =>  FALSE
[02:29:03.097]      // skip if-block "continueId == 4"
[02:29:03.097]    </control>
[02:29:03.097]    <control if="!isProduction" while="" timeout="0" info="">
[02:29:03.097]      // if-block "!isProduction"
[02:29:03.097]        // =>  FALSE
[02:29:03.097]      // skip if-block "!isProduction"
[02:29:03.097]    </control>
[02:29:03.097]  </sequence>
[02:29:03.097]  
[02:29:41.661]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:29:41.661]  
[02:29:41.662]  <debugvars>
[02:29:41.662]    // Pre-defined
[02:29:41.662]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:41.662]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:29:41.662]    __dp=0x00000000
[02:29:41.662]    __ap=0x00000000
[02:29:41.662]    __traceout=0x00000000      (Trace Disabled)
[02:29:41.662]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:41.662]    __FlashAddr=0x00000000
[02:29:41.662]    __FlashLen=0x00000000
[02:29:41.662]    __FlashArg=0x00000000
[02:29:41.662]    __FlashOp=0x00000000
[02:29:41.662]    __Result=0x00000000
[02:29:41.662]  </debugvars>
[02:29:41.662]  
[02:29:41.662]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:29:41.662]    <block atomic="false" info="">
[02:29:41.662]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:29:41.662]        // -> [isSWJ <= 0x00000001]
[02:29:41.662]      __var hasDormant = __protocol & 0x00020000;
[02:29:41.662]        // -> [hasDormant <= 0x00000000]
[02:29:41.662]      __var protType   = __protocol & 0x0000FFFF;
[02:29:41.662]        // -> [protType <= 0x00000002]
[02:29:41.662]    </block>
[02:29:41.662]    <control if="protType == 1" while="" timeout="0" info="">
[02:29:41.662]      // if-block "protType == 1"
[02:29:41.665]        // =>  FALSE
[02:29:41.665]      // skip if-block "protType == 1"
[02:29:41.665]    </control>
[02:29:41.665]    <control if="protType == 2" while="" timeout="0" info="">
[02:29:41.665]      // if-block "protType == 2"
[02:29:41.665]        // =>  TRUE
[02:29:41.665]      <control if="isSWJ" while="" timeout="0" info="">
[02:29:41.665]        // if-block "isSWJ"
[02:29:41.665]          // =>  TRUE
[02:29:41.665]        <control if="hasDormant" while="" timeout="0" info="">
[02:29:41.665]          // if-block "hasDormant"
[02:29:41.665]            // =>  FALSE
[02:29:41.665]          // skip if-block "hasDormant"
[02:29:41.665]        </control>
[02:29:41.665]        <control if="!hasDormant" while="" timeout="0" info="">
[02:29:41.665]          // if-block "!hasDormant"
[02:29:41.665]            // =>  TRUE
[02:29:41.665]          <block atomic="false" info="">
[02:29:41.665]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:29:41.665]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:41.665]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:29:41.669]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:29:41.669]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:29:41.669]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:41.669]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:29:41.672]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:29:41.672]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:29:41.672]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:41.672]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:29:41.676]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:29:41.676]          </block>
[02:29:41.676]          // end if-block "!hasDormant"
[02:29:41.676]        </control>
[02:29:41.676]        // end if-block "isSWJ"
[02:29:41.676]      </control>
[02:29:41.676]      <control if="!isSWJ" while="" timeout="0" info="">
[02:29:41.676]        // if-block "!isSWJ"
[02:29:41.676]          // =>  FALSE
[02:29:41.676]        // skip if-block "!isSWJ"
[02:29:41.676]      </control>
[02:29:41.676]      <block atomic="false" info="">
[02:29:41.676]        ReadDP(0x0);
[02:29:41.676]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:29:41.676]      </block>
[02:29:41.676]      // end if-block "protType == 2"
[02:29:41.676]    </control>
[02:29:41.680]  </sequence>
[02:29:41.680]  
[02:29:41.684]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:29:41.684]  
[02:29:41.684]  <debugvars>
[02:29:41.684]    // Pre-defined
[02:29:41.684]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:41.684]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:29:41.684]    __dp=0x00000000
[02:29:41.684]    __ap=0x00000000
[02:29:41.684]    __traceout=0x00000000      (Trace Disabled)
[02:29:41.684]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:41.684]    __FlashAddr=0x00000000
[02:29:41.684]    __FlashLen=0x00000000
[02:29:41.684]    __FlashArg=0x00000000
[02:29:41.684]    __FlashOp=0x00000000
[02:29:41.684]    __Result=0x00000000
[02:29:41.684]  </debugvars>
[02:29:41.684]  
[02:29:41.684]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:29:41.684]    <block atomic="false" info="">
[02:29:41.684]      __var SW_DP_ABORT       = 0x0;
[02:29:41.684]        // -> [SW_DP_ABORT <= 0x00000000]
[02:29:41.684]      __var DP_CTRL_STAT      = 0x4;
[02:29:41.684]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:29:41.684]      __var DP_SELECT         = 0x8;
[02:29:41.684]        // -> [DP_SELECT <= 0x00000008]
[02:29:41.684]      __var powered_down      = 0;
[02:29:41.684]        // -> [powered_down <= 0x00000000]
[02:29:41.684]      WriteDP(DP_SELECT, 0x00000000);
[02:29:41.688]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:29:41.688]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:29:41.690]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:29:41.690]        // -> [powered_down <= 0x00000001]
[02:29:41.690]    </block>
[02:29:41.690]    <control if="powered_down" while="" timeout="0" info="">
[02:29:41.690]      // if-block "powered_down"
[02:29:41.690]        // =>  TRUE
[02:29:41.690]      <block atomic="false" info="">
[02:29:41.690]        Message(0, "Debug/System power-up request sent");
[02:29:41.692]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:29:41.692]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:29:41.692]      </block>
[02:29:41.692]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:29:41.692]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:29:41.696]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:29:41.696]        // while-condition  =>  FALSE
[02:29:41.696]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:29:41.696]      </control>
[02:29:41.696]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:29:41.696]        // if-block "(__protocol & 0xFFFF) == 1"
[02:29:41.696]          // =>  FALSE
[02:29:41.696]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:29:41.696]      </control>
[02:29:41.696]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:29:41.696]        // if-block "(__protocol & 0xFFFF) == 2"
[02:29:41.696]          // =>  TRUE
[02:29:41.696]        <block atomic="false" info="">
[02:29:41.696]          Message(0, "executing SWD power up");
[02:29:41.696]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:29:41.700]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:29:41.700]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:29:41.704]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:29:41.704]        </block>
[02:29:41.704]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:29:41.704]      </control>
[02:29:41.704]      // end if-block "powered_down"
[02:29:41.704]    </control>
[02:29:41.704]    <block atomic="false" info="">
[02:29:41.704]      __var DEBUG_PORT_VAL    = 0;
[02:29:41.704]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:29:41.704]      __var ACCESS_POINT_VAL  = 0;
[02:29:41.704]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:29:41.704]      __ap = 1; 
[02:29:41.708]        // -> [__ap <= 0x00000001]
[02:29:41.708]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:29:41.708]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:29:41.708]      __ap = 4;
[02:29:41.708]        // -> [__ap <= 0x00000004]
[02:29:41.708]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:29:41.714]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:29:41.714]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:29:41.714]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:29:41.716]    </block>
[02:29:41.716]    <block atomic="false" info="">
[02:29:41.716]      __var nReset = 0x80;
[02:29:41.716]        // -> [nReset <= 0x00000080]
[02:29:41.716]      __var canReadPins = 0;
[02:29:41.716]        // -> [canReadPins <= 0x00000000]
[02:29:41.716]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:29:41.716]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:29:41.716]        // -> [canReadPins <= 0x00000001]
[02:29:41.716]    </block>
[02:29:41.716]    <control if="" while="1" timeout="200" info="">
[02:29:41.716]      // while "1"  (timeout="200")
[02:29:41.716]      // while-condition  =>  TRUE
[02:29:41.716]      // while "1"  (timeout="200")
[02:29:41.716]      // while-condition  =>  TRUE
[02:29:41.721]      // while "1"  (timeout="200")
[02:29:41.721]      // while  =>  TIMEOUT
[02:29:41.721]      // end while "1"
[02:29:41.721]    </control>
[02:29:41.721]    <control if="canReadPins" while="" timeout="0" info="">
[02:29:41.721]      // if-block "canReadPins"
[02:29:41.721]        // =>  TRUE
[02:29:41.721]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:29:41.721]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:29:41.723]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:29:41.723]        // while-condition  =>  FALSE
[02:29:41.723]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:29:41.723]      </control>
[02:29:41.723]      // end if-block "canReadPins"
[02:29:41.723]    </control>
[02:29:41.723]    <control if="!canReadPins" while="" timeout="0" info="">
[02:29:41.723]      // if-block "!canReadPins"
[02:29:41.723]        // =>  FALSE
[02:29:41.723]      // skip if-block "!canReadPins"
[02:29:41.723]    </control>
[02:29:41.723]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:29:41.723]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:29:41.725]        // =>  TRUE
[02:29:41.725]      <block atomic="false" info="">
[02:29:41.725]        WriteAP(0x00, 0x190008);
[02:29:41.726]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:29:41.726]        WriteAP(0xF0, 0x01);
[02:29:41.729]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:29:41.729]      </block>
[02:29:41.729]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:29:41.729]    </control>
[02:29:41.729]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:29:41.729]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:29:41.729]        // =>  FALSE
[02:29:41.729]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:29:41.729]    </control>
[02:29:41.729]    <block atomic="false" info="">
[02:29:41.732]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:29:41.732]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:29:41.732]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:29:41.732]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:29:41.737]      __ap = 0; //lets make sure we reset the access point selection
[02:29:41.737]        // -> [__ap <= 0x00000000]
[02:29:41.737]    </block>
[02:29:41.737]  </sequence>
[02:29:41.737]  
[02:29:41.756]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:29:41.756]  
[02:29:41.756]  <debugvars>
[02:29:41.756]    // Pre-defined
[02:29:41.756]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:41.756]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:29:41.756]    __dp=0x00000000
[02:29:41.756]    __ap=0x00000000
[02:29:41.756]    __traceout=0x00000000      (Trace Disabled)
[02:29:41.756]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:41.756]    __FlashAddr=0x00000000
[02:29:41.760]    __FlashLen=0x00000000
[02:29:41.760]    __FlashArg=0x00000000
[02:29:41.760]    __FlashOp=0x00000000
[02:29:41.760]    __Result=0x00000000
[02:29:41.760]  </debugvars>
[02:29:41.760]  
[02:29:41.760]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:29:41.760]    <block atomic="false" info="">
[02:29:41.760]      __var deviceID = 0;
[02:29:41.760]        // -> [deviceID <= 0x00000000]
[02:29:41.760]      __var version = 0;
[02:29:41.760]        // -> [version <= 0x00000000]
[02:29:41.760]      __var partNum = 0;
[02:29:41.760]        // -> [partNum <= 0x00000000]
[02:29:41.760]      __var manuf = 0;
[02:29:41.760]        // -> [manuf <= 0x00000000]
[02:29:41.760]      __var isMSPM0G1X0X_G3X0X = 0;
[02:29:41.760]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:29:41.760]      __var isProduction = 0;
[02:29:41.760]        // -> [isProduction <= 0x00000000]
[02:29:41.760]      __var continueId = 0;
[02:29:41.760]        // -> [continueId <= 0x00000000]
[02:29:41.762]      deviceID =   Read32(0x41C40004);
[02:29:41.766]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:29:41.766]        // -> [deviceID <= 0x2BB8802F]
[02:29:41.766]      version = deviceID >> 28;
[02:29:41.766]        // -> [version <= 0x00000002]
[02:29:41.769]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:29:41.769]        // -> [partNum <= 0x0000BB88]
[02:29:41.769]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:29:41.769]        // -> [manuf <= 0x00000017]
[02:29:41.769]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:29:41.769]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:29:41.769]      isProduction = (version > 0);
[02:29:41.769]        // -> [isProduction <= 0x00000001]
[02:29:41.769]    </block>
[02:29:41.769]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:29:41.769]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:29:41.769]        // =>  FALSE
[02:29:41.769]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:29:41.769]    </control>
[02:29:41.769]    <control if="continueId == 4" while="" timeout="0" info="">
[02:29:41.769]      // if-block "continueId == 4"
[02:29:41.769]        // =>  FALSE
[02:29:41.769]      // skip if-block "continueId == 4"
[02:29:41.769]    </control>
[02:29:41.769]    <control if="!isProduction" while="" timeout="0" info="">
[02:29:41.769]      // if-block "!isProduction"
[02:29:41.769]        // =>  FALSE
[02:29:41.769]      // skip if-block "!isProduction"
[02:29:41.769]    </control>
[02:29:41.769]  </sequence>
[02:29:41.769]  
[02:29:47.886]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:29:47.886]  
[02:29:47.897]  <debugvars>
[02:29:47.897]    // Pre-defined
[02:29:47.897]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:47.897]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:29:47.897]    __dp=0x00000000
[02:29:47.897]    __ap=0x00000000
[02:29:47.897]    __traceout=0x00000000      (Trace Disabled)
[02:29:47.897]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:47.897]    __FlashAddr=0x00000000
[02:29:47.898]    __FlashLen=0x00000000
[02:29:47.898]    __FlashArg=0x00000000
[02:29:47.898]    __FlashOp=0x00000000
[02:29:47.898]    __Result=0x00000000
[02:29:47.898]  </debugvars>
[02:29:47.898]  
[02:29:47.898]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:29:47.898]    <block atomic="false" info="">
[02:29:47.898]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:29:47.898]        // -> [isSWJ <= 0x00000001]
[02:29:47.898]      __var hasDormant = __protocol & 0x00020000;
[02:29:47.898]        // -> [hasDormant <= 0x00000000]
[02:29:47.898]      __var protType   = __protocol & 0x0000FFFF;
[02:29:47.898]        // -> [protType <= 0x00000002]
[02:29:47.898]    </block>
[02:29:47.898]    <control if="protType == 1" while="" timeout="0" info="">
[02:29:47.898]      // if-block "protType == 1"
[02:29:47.898]        // =>  FALSE
[02:29:47.898]      // skip if-block "protType == 1"
[02:29:47.898]    </control>
[02:29:47.898]    <control if="protType == 2" while="" timeout="0" info="">
[02:29:47.898]      // if-block "protType == 2"
[02:29:47.898]        // =>  TRUE
[02:29:47.898]      <control if="isSWJ" while="" timeout="0" info="">
[02:29:47.898]        // if-block "isSWJ"
[02:29:47.898]          // =>  TRUE
[02:29:47.898]        <control if="hasDormant" while="" timeout="0" info="">
[02:29:47.898]          // if-block "hasDormant"
[02:29:47.898]            // =>  FALSE
[02:29:47.898]          // skip if-block "hasDormant"
[02:29:47.898]        </control>
[02:29:47.898]        <control if="!hasDormant" while="" timeout="0" info="">
[02:29:47.898]          // if-block "!hasDormant"
[02:29:47.898]            // =>  TRUE
[02:29:47.898]          <block atomic="false" info="">
[02:29:47.898]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:29:47.902]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:47.902]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:29:47.902]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:29:47.902]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:29:47.906]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:47.906]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:29:47.906]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:29:47.906]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:29:47.906]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:29:47.910]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:29:47.910]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:29:47.910]          </block>
[02:29:47.910]          // end if-block "!hasDormant"
[02:29:47.910]        </control>
[02:29:47.910]        // end if-block "isSWJ"
[02:29:47.910]      </control>
[02:29:47.910]      <control if="!isSWJ" while="" timeout="0" info="">
[02:29:47.910]        // if-block "!isSWJ"
[02:29:47.910]          // =>  FALSE
[02:29:47.910]        // skip if-block "!isSWJ"
[02:29:47.910]      </control>
[02:29:47.910]      <block atomic="false" info="">
[02:29:47.910]        ReadDP(0x0);
[02:29:47.910]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:29:47.914]      </block>
[02:29:47.914]      // end if-block "protType == 2"
[02:29:47.914]    </control>
[02:29:47.914]  </sequence>
[02:29:47.914]  
[02:29:47.914]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:29:47.914]  
[02:29:47.914]  <debugvars>
[02:29:47.914]    // Pre-defined
[02:29:47.914]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:47.914]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:29:47.914]    __dp=0x00000000
[02:29:47.914]    __ap=0x00000000
[02:29:47.914]    __traceout=0x00000000      (Trace Disabled)
[02:29:47.914]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:47.918]    __FlashAddr=0x00000000
[02:29:47.918]    __FlashLen=0x00000000
[02:29:47.918]    __FlashArg=0x00000000
[02:29:47.918]    __FlashOp=0x00000000
[02:29:47.918]    __Result=0x00000000
[02:29:47.918]  </debugvars>
[02:29:47.918]  
[02:29:47.918]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:29:47.918]    <block atomic="false" info="">
[02:29:47.918]      __var SW_DP_ABORT       = 0x0;
[02:29:47.918]        // -> [SW_DP_ABORT <= 0x00000000]
[02:29:47.918]      __var DP_CTRL_STAT      = 0x4;
[02:29:47.918]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:29:47.918]      __var DP_SELECT         = 0x8;
[02:29:47.918]        // -> [DP_SELECT <= 0x00000008]
[02:29:47.918]      __var powered_down      = 0;
[02:29:47.918]        // -> [powered_down <= 0x00000000]
[02:29:47.918]      WriteDP(DP_SELECT, 0x00000000);
[02:29:47.918]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:29:47.922]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:29:47.922]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:29:47.922]        // -> [powered_down <= 0x00000001]
[02:29:47.922]    </block>
[02:29:47.922]    <control if="powered_down" while="" timeout="0" info="">
[02:29:47.922]      // if-block "powered_down"
[02:29:47.922]        // =>  TRUE
[02:29:47.922]      <block atomic="false" info="">
[02:29:47.922]        Message(0, "Debug/System power-up request sent");
[02:29:47.922]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:29:47.926]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:29:47.926]      </block>
[02:29:47.926]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:29:47.926]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:29:47.930]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:29:47.930]        // while-condition  =>  FALSE
[02:29:47.930]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:29:47.930]      </control>
[02:29:47.930]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:29:47.930]        // if-block "(__protocol & 0xFFFF) == 1"
[02:29:47.930]          // =>  FALSE
[02:29:47.930]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:29:47.930]      </control>
[02:29:47.930]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:29:47.930]        // if-block "(__protocol & 0xFFFF) == 2"
[02:29:47.930]          // =>  TRUE
[02:29:47.930]        <block atomic="false" info="">
[02:29:47.930]          Message(0, "executing SWD power up");
[02:29:47.930]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:29:47.934]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:29:47.934]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:29:47.934]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:29:47.938]        </block>
[02:29:47.938]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:29:47.938]      </control>
[02:29:47.938]      // end if-block "powered_down"
[02:29:47.938]    </control>
[02:29:47.938]    <block atomic="false" info="">
[02:29:47.938]      __var DEBUG_PORT_VAL    = 0;
[02:29:47.938]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:29:47.938]      __var ACCESS_POINT_VAL  = 0;
[02:29:47.938]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:29:47.938]      __ap = 1; 
[02:29:47.938]        // -> [__ap <= 0x00000001]
[02:29:47.938]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:29:47.942]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:29:47.942]      __ap = 4;
[02:29:47.942]        // -> [__ap <= 0x00000004]
[02:29:47.942]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:29:47.946]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:29:47.946]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:29:47.946]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:29:47.946]    </block>
[02:29:47.946]    <block atomic="false" info="">
[02:29:47.946]      __var nReset = 0x80;
[02:29:47.946]        // -> [nReset <= 0x00000080]
[02:29:47.950]      __var canReadPins = 0;
[02:29:47.950]        // -> [canReadPins <= 0x00000000]
[02:29:47.950]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:29:47.950]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:29:47.950]        // -> [canReadPins <= 0x00000001]
[02:29:47.950]    </block>
[02:29:47.950]    <control if="" while="1" timeout="200" info="">
[02:29:47.950]      // while "1"  (timeout="200")
[02:29:47.950]      // while-condition  =>  TRUE
[02:29:47.950]      // while "1"  (timeout="200")
[02:29:47.950]      // while-condition  =>  TRUE
[02:29:47.954]      // while "1"  (timeout="200")
[02:29:47.954]      // while  =>  TIMEOUT
[02:29:47.954]      // end while "1"
[02:29:47.954]    </control>
[02:29:47.954]    <control if="canReadPins" while="" timeout="0" info="">
[02:29:47.954]      // if-block "canReadPins"
[02:29:47.954]        // =>  TRUE
[02:29:47.954]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:29:47.954]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:29:47.954]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:29:47.954]        // while-condition  =>  FALSE
[02:29:47.954]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:29:47.954]      </control>
[02:29:47.954]      // end if-block "canReadPins"
[02:29:47.958]    </control>
[02:29:47.958]    <control if="!canReadPins" while="" timeout="0" info="">
[02:29:47.958]      // if-block "!canReadPins"
[02:29:47.958]        // =>  FALSE
[02:29:47.958]      // skip if-block "!canReadPins"
[02:29:47.958]    </control>
[02:29:47.958]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:29:47.958]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:29:47.958]        // =>  TRUE
[02:29:47.959]      <block atomic="false" info="">
[02:29:47.959]        WriteAP(0x00, 0x190008);
[02:29:47.962]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:29:47.962]        WriteAP(0xF0, 0x01);
[02:29:47.966]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:29:47.966]      </block>
[02:29:47.966]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:29:47.966]    </control>
[02:29:47.966]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:29:47.966]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:29:47.966]        // =>  FALSE
[02:29:47.966]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:29:47.966]    </control>
[02:29:47.966]    <block atomic="false" info="">
[02:29:47.966]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:29:47.972]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:29:47.972]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:29:47.972]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:29:47.974]      __ap = 0; //lets make sure we reset the access point selection
[02:29:47.974]        // -> [__ap <= 0x00000000]
[02:29:47.974]    </block>
[02:29:47.974]  </sequence>
[02:29:47.974]  
[02:29:47.998]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:29:47.998]  
[02:29:47.998]  <debugvars>
[02:29:47.998]    // Pre-defined
[02:29:47.998]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:29:47.998]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:29:47.998]    __dp=0x00000000
[02:29:47.998]    __ap=0x00000000
[02:29:47.998]    __traceout=0x00000000      (Trace Disabled)
[02:29:47.998]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:29:47.998]    __FlashAddr=0x00000000
[02:29:47.998]    __FlashLen=0x00000000
[02:29:47.998]    __FlashArg=0x00000000
[02:29:47.998]    __FlashOp=0x00000000
[02:29:47.998]    __Result=0x00000000
[02:29:47.998]  </debugvars>
[02:29:47.998]  
[02:29:47.998]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:29:47.998]    <block atomic="false" info="">
[02:29:47.998]      __var deviceID = 0;
[02:29:47.998]        // -> [deviceID <= 0x00000000]
[02:29:47.998]      __var version = 0;
[02:29:47.998]        // -> [version <= 0x00000000]
[02:29:47.998]      __var partNum = 0;
[02:29:47.998]        // -> [partNum <= 0x00000000]
[02:29:47.998]      __var manuf = 0;
[02:29:47.998]        // -> [manuf <= 0x00000000]
[02:29:47.998]      __var isMSPM0G1X0X_G3X0X = 0;
[02:29:48.002]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:29:48.002]      __var isProduction = 0;
[02:29:48.002]        // -> [isProduction <= 0x00000000]
[02:29:48.002]      __var continueId = 0;
[02:29:48.002]        // -> [continueId <= 0x00000000]
[02:29:48.002]      deviceID =   Read32(0x41C40004);
[02:29:48.006]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:29:48.006]        // -> [deviceID <= 0x2BB8802F]
[02:29:48.006]      version = deviceID >> 28;
[02:29:48.006]        // -> [version <= 0x00000002]
[02:29:48.006]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:29:48.006]        // -> [partNum <= 0x0000BB88]
[02:29:48.006]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:29:48.006]        // -> [manuf <= 0x00000017]
[02:29:48.006]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:29:48.006]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:29:48.006]      isProduction = (version > 0);
[02:29:48.006]        // -> [isProduction <= 0x00000001]
[02:29:48.006]    </block>
[02:29:48.006]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:29:48.006]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:29:48.006]        // =>  FALSE
[02:29:48.006]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:29:48.006]    </control>
[02:29:48.006]    <control if="continueId == 4" while="" timeout="0" info="">
[02:29:48.006]      // if-block "continueId == 4"
[02:29:48.006]        // =>  FALSE
[02:29:48.006]      // skip if-block "continueId == 4"
[02:29:48.006]    </control>
[02:29:48.006]    <control if="!isProduction" while="" timeout="0" info="">
[02:29:48.010]      // if-block "!isProduction"
[02:29:48.011]        // =>  FALSE
[02:29:48.011]      // skip if-block "!isProduction"
[02:29:48.011]    </control>
[02:29:48.011]  </sequence>
[02:29:48.011]  
[02:35:57.404]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:35:57.404]  
[02:35:57.404]  <debugvars>
[02:35:57.404]    // Pre-defined
[02:35:57.404]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:35:57.404]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:35:57.405]    __dp=0x00000000
[02:35:57.405]    __ap=0x00000000
[02:35:57.405]    __traceout=0x00000000      (Trace Disabled)
[02:35:57.405]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:35:57.405]    __FlashAddr=0x00000000
[02:35:57.405]    __FlashLen=0x00000000
[02:35:57.405]    __FlashArg=0x00000000
[02:35:57.405]    __FlashOp=0x00000000
[02:35:57.405]    __Result=0x00000000
[02:35:57.405]  </debugvars>
[02:35:57.405]  
[02:35:57.405]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:35:57.405]    <block atomic="false" info="">
[02:35:57.405]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:35:57.405]        // -> [isSWJ <= 0x00000001]
[02:35:57.407]      __var hasDormant = __protocol & 0x00020000;
[02:35:57.407]        // -> [hasDormant <= 0x00000000]
[02:35:57.407]      __var protType   = __protocol & 0x0000FFFF;
[02:35:57.407]        // -> [protType <= 0x00000002]
[02:35:57.407]    </block>
[02:35:57.407]    <control if="protType == 1" while="" timeout="0" info="">
[02:35:57.407]      // if-block "protType == 1"
[02:35:57.407]        // =>  FALSE
[02:35:57.407]      // skip if-block "protType == 1"
[02:35:57.407]    </control>
[02:35:57.407]    <control if="protType == 2" while="" timeout="0" info="">
[02:35:57.407]      // if-block "protType == 2"
[02:35:57.407]        // =>  TRUE
[02:35:57.407]      <control if="isSWJ" while="" timeout="0" info="">
[02:35:57.407]        // if-block "isSWJ"
[02:35:57.407]          // =>  TRUE
[02:35:57.409]        <control if="hasDormant" while="" timeout="0" info="">
[02:35:57.409]          // if-block "hasDormant"
[02:35:57.409]            // =>  FALSE
[02:35:57.409]          // skip if-block "hasDormant"
[02:35:57.409]        </control>
[02:35:57.409]        <control if="!hasDormant" while="" timeout="0" info="">
[02:35:57.409]          // if-block "!hasDormant"
[02:35:57.409]            // =>  TRUE
[02:35:57.409]          <block atomic="false" info="">
[02:35:57.409]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:35:57.415]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:35:57.415]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:35:57.417]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:35:57.419]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:35:57.420]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:35:57.420]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:35:57.422]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:35:57.422]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:35:57.423]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:35:57.423]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:35:57.424]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:35:57.424]          </block>
[02:35:57.424]          // end if-block "!hasDormant"
[02:35:57.424]        </control>
[02:35:57.424]        // end if-block "isSWJ"
[02:35:57.424]      </control>
[02:35:57.424]      <control if="!isSWJ" while="" timeout="0" info="">
[02:35:57.424]        // if-block "!isSWJ"
[02:35:57.427]          // =>  FALSE
[02:35:57.427]        // skip if-block "!isSWJ"
[02:35:57.427]      </control>
[02:35:57.427]      <block atomic="false" info="">
[02:35:57.428]        ReadDP(0x0);
[02:35:57.428]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:35:57.428]      </block>
[02:35:57.428]      // end if-block "protType == 2"
[02:35:57.428]    </control>
[02:35:57.428]  </sequence>
[02:35:57.428]  
[02:35:57.431]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:35:57.431]  
[02:35:57.431]  <debugvars>
[02:35:57.431]    // Pre-defined
[02:35:57.431]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:35:57.431]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:35:57.431]    __dp=0x00000000
[02:35:57.431]    __ap=0x00000000
[02:35:57.431]    __traceout=0x00000000      (Trace Disabled)
[02:35:57.431]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:35:57.435]    __FlashAddr=0x00000000
[02:35:57.435]    __FlashLen=0x00000000
[02:35:57.435]    __FlashArg=0x00000000
[02:35:57.435]    __FlashOp=0x00000000
[02:35:57.435]    __Result=0x00000000
[02:35:57.435]  </debugvars>
[02:35:57.435]  
[02:35:57.435]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:35:57.435]    <block atomic="false" info="">
[02:35:57.435]      __var SW_DP_ABORT       = 0x0;
[02:35:57.435]        // -> [SW_DP_ABORT <= 0x00000000]
[02:35:57.435]      __var DP_CTRL_STAT      = 0x4;
[02:35:57.435]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:35:57.435]      __var DP_SELECT         = 0x8;
[02:35:57.435]        // -> [DP_SELECT <= 0x00000008]
[02:35:57.437]      __var powered_down      = 0;
[02:35:57.437]        // -> [powered_down <= 0x00000000]
[02:35:57.437]      WriteDP(DP_SELECT, 0x00000000);
[02:35:57.439]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:35:57.439]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:35:57.440]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:35:57.444]        // -> [powered_down <= 0x00000001]
[02:35:57.444]    </block>
[02:35:57.444]    <control if="powered_down" while="" timeout="0" info="">
[02:35:57.444]      // if-block "powered_down"
[02:35:57.444]        // =>  TRUE
[02:35:57.444]      <block atomic="false" info="">
[02:35:57.444]        Message(0, "Debug/System power-up request sent");
[02:35:57.444]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:35:57.452]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:35:57.452]      </block>
[02:35:57.452]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:35:57.452]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:35:57.452]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:35:57.452]        // while-condition  =>  FALSE
[02:35:57.456]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:35:57.456]      </control>
[02:35:57.456]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:35:57.456]        // if-block "(__protocol & 0xFFFF) == 1"
[02:35:57.456]          // =>  FALSE
[02:35:57.456]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:35:57.456]      </control>
[02:35:57.456]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:35:57.456]        // if-block "(__protocol & 0xFFFF) == 2"
[02:35:57.456]          // =>  TRUE
[02:35:57.456]        <block atomic="false" info="">
[02:35:57.456]          Message(0, "executing SWD power up");
[02:35:57.456]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:35:57.460]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:35:57.460]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:35:57.460]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:35:57.460]        </block>
[02:35:57.460]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:35:57.460]      </control>
[02:35:57.460]      // end if-block "powered_down"
[02:35:57.460]    </control>
[02:35:57.460]    <block atomic="false" info="">
[02:35:57.460]      __var DEBUG_PORT_VAL    = 0;
[02:35:57.464]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:35:57.464]      __var ACCESS_POINT_VAL  = 0;
[02:35:57.464]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:35:57.464]      __ap = 1; 
[02:35:57.464]        // -> [__ap <= 0x00000001]
[02:35:57.464]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:35:57.467]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:35:57.468]      __ap = 4;
[02:35:57.468]        // -> [__ap <= 0x00000004]
[02:35:57.468]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:35:57.472]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:35:57.472]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:35:57.472]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:35:57.472]    </block>
[02:35:57.472]    <block atomic="false" info="">
[02:35:57.472]      __var nReset = 0x80;
[02:35:57.472]        // -> [nReset <= 0x00000080]
[02:35:57.472]      __var canReadPins = 0;
[02:35:57.472]        // -> [canReadPins <= 0x00000000]
[02:35:57.472]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:35:57.476]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:35:57.476]        // -> [canReadPins <= 0x00000001]
[02:35:57.476]    </block>
[02:35:57.476]    <control if="" while="1" timeout="200" info="">
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.476]      // while-condition  =>  TRUE
[02:35:57.476]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.480]      // while-condition  =>  TRUE
[02:35:57.480]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.482]      // while-condition  =>  TRUE
[02:35:57.482]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.484]      // while "1"  (timeout="200")
[02:35:57.484]      // while-condition  =>  TRUE
[02:35:57.488]      // while "1"  (timeout="200")
[02:35:57.488]      // while  =>  TIMEOUT
[02:35:57.488]      // end while "1"
[02:35:57.488]    </control>
[02:35:57.488]    <control if="canReadPins" while="" timeout="0" info="">
[02:35:57.488]      // if-block "canReadPins"
[02:35:57.488]        // =>  TRUE
[02:35:57.488]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:35:57.488]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:35:57.488]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:35:57.488]        // while-condition  =>  FALSE
[02:35:57.488]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:35:57.488]      </control>
[02:35:57.488]      // end if-block "canReadPins"
[02:35:57.488]    </control>
[02:35:57.488]    <control if="!canReadPins" while="" timeout="0" info="">
[02:35:57.488]      // if-block "!canReadPins"
[02:35:57.488]        // =>  FALSE
[02:35:57.488]      // skip if-block "!canReadPins"
[02:35:57.488]    </control>
[02:35:57.488]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:35:57.488]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:35:57.488]        // =>  TRUE
[02:35:57.488]      <block atomic="false" info="">
[02:35:57.488]        WriteAP(0x00, 0x190008);
[02:35:57.493]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:35:57.493]        WriteAP(0xF0, 0x01);
[02:35:57.496]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:35:57.496]      </block>
[02:35:57.496]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:35:57.496]    </control>
[02:35:57.496]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:35:57.496]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:35:57.496]        // =>  FALSE
[02:35:57.496]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:35:57.496]    </control>
[02:35:57.499]    <block atomic="false" info="">
[02:35:57.499]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:35:57.500]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:35:57.500]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:35:57.500]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:35:57.504]      __ap = 0; //lets make sure we reset the access point selection
[02:35:57.504]        // -> [__ap <= 0x00000000]
[02:35:57.504]    </block>
[02:35:57.504]  </sequence>
[02:35:57.504]  
[02:35:57.531]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:35:57.531]  
[02:35:57.532]  <debugvars>
[02:35:57.532]    // Pre-defined
[02:35:57.532]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:35:57.532]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:35:57.532]    __dp=0x00000000
[02:35:57.532]    __ap=0x00000000
[02:35:57.532]    __traceout=0x00000000      (Trace Disabled)
[02:35:57.532]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:35:57.532]    __FlashAddr=0x00000000
[02:35:57.532]    __FlashLen=0x00000000
[02:35:57.532]    __FlashArg=0x00000000
[02:35:57.532]    __FlashOp=0x00000000
[02:35:57.532]    __Result=0x00000000
[02:35:57.532]  </debugvars>
[02:35:57.532]  
[02:35:57.532]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:35:57.532]    <block atomic="false" info="">
[02:35:57.532]      __var deviceID = 0;
[02:35:57.532]        // -> [deviceID <= 0x00000000]
[02:35:57.532]      __var version = 0;
[02:35:57.532]        // -> [version <= 0x00000000]
[02:35:57.532]      __var partNum = 0;
[02:35:57.532]        // -> [partNum <= 0x00000000]
[02:35:57.532]      __var manuf = 0;
[02:35:57.532]        // -> [manuf <= 0x00000000]
[02:35:57.532]      __var isMSPM0G1X0X_G3X0X = 0;
[02:35:57.532]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:35:57.532]      __var isProduction = 0;
[02:35:57.532]        // -> [isProduction <= 0x00000000]
[02:35:57.532]      __var continueId = 0;
[02:35:57.532]        // -> [continueId <= 0x00000000]
[02:35:57.532]      deviceID =   Read32(0x41C40004);
[02:35:57.540]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:35:57.540]        // -> [deviceID <= 0x2BB8802F]
[02:35:57.540]      version = deviceID >> 28;
[02:35:57.540]        // -> [version <= 0x00000002]
[02:35:57.540]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:35:57.540]        // -> [partNum <= 0x0000BB88]
[02:35:57.540]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:35:57.540]        // -> [manuf <= 0x00000017]
[02:35:57.540]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:35:57.540]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:35:57.540]      isProduction = (version > 0);
[02:35:57.540]        // -> [isProduction <= 0x00000001]
[02:35:57.540]    </block>
[02:35:57.540]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:35:57.540]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:35:57.540]        // =>  FALSE
[02:35:57.540]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:35:57.540]    </control>
[02:35:57.540]    <control if="continueId == 4" while="" timeout="0" info="">
[02:35:57.540]      // if-block "continueId == 4"
[02:35:57.543]        // =>  FALSE
[02:35:57.543]      // skip if-block "continueId == 4"
[02:35:57.543]    </control>
[02:35:57.543]    <control if="!isProduction" while="" timeout="0" info="">
[02:35:57.543]      // if-block "!isProduction"
[02:35:57.543]        // =>  FALSE
[02:35:57.543]      // skip if-block "!isProduction"
[02:35:57.543]    </control>
[02:35:57.543]  </sequence>
[02:35:57.543]  
[02:36:03.957]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:36:03.957]  
[02:36:03.966]  <debugvars>
[02:36:03.966]    // Pre-defined
[02:36:03.966]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:03.966]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:36:03.966]    __dp=0x00000000
[02:36:03.966]    __ap=0x00000000
[02:36:03.966]    __traceout=0x00000000      (Trace Disabled)
[02:36:03.966]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:03.966]    __FlashAddr=0x00000000
[02:36:03.966]    __FlashLen=0x00000000
[02:36:03.966]    __FlashArg=0x00000000
[02:36:03.966]    __FlashOp=0x00000000
[02:36:03.966]    __Result=0x00000000
[02:36:03.966]  </debugvars>
[02:36:03.966]  
[02:36:03.968]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:36:03.968]    <block atomic="false" info="">
[02:36:03.968]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:36:03.968]        // -> [isSWJ <= 0x00000001]
[02:36:03.968]      __var hasDormant = __protocol & 0x00020000;
[02:36:03.968]        // -> [hasDormant <= 0x00000000]
[02:36:03.968]      __var protType   = __protocol & 0x0000FFFF;
[02:36:03.968]        // -> [protType <= 0x00000002]
[02:36:03.968]    </block>
[02:36:03.968]    <control if="protType == 1" while="" timeout="0" info="">
[02:36:03.968]      // if-block "protType == 1"
[02:36:03.968]        // =>  FALSE
[02:36:03.968]      // skip if-block "protType == 1"
[02:36:03.968]    </control>
[02:36:03.968]    <control if="protType == 2" while="" timeout="0" info="">
[02:36:03.968]      // if-block "protType == 2"
[02:36:03.968]        // =>  TRUE
[02:36:03.968]      <control if="isSWJ" while="" timeout="0" info="">
[02:36:03.968]        // if-block "isSWJ"
[02:36:03.968]          // =>  TRUE
[02:36:03.968]        <control if="hasDormant" while="" timeout="0" info="">
[02:36:03.968]          // if-block "hasDormant"
[02:36:03.968]            // =>  FALSE
[02:36:03.968]          // skip if-block "hasDormant"
[02:36:03.968]        </control>
[02:36:03.968]        <control if="!hasDormant" while="" timeout="0" info="">
[02:36:03.968]          // if-block "!hasDormant"
[02:36:03.968]            // =>  TRUE
[02:36:03.968]          <block atomic="false" info="">
[02:36:03.968]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:36:03.972]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:03.972]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:36:03.972]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:36:03.972]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:36:03.976]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:03.976]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:36:03.976]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:36:03.976]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:36:03.980]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:03.980]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:36:03.984]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:36:03.984]          </block>
[02:36:03.984]          // end if-block "!hasDormant"
[02:36:03.984]        </control>
[02:36:03.984]        // end if-block "isSWJ"
[02:36:03.984]      </control>
[02:36:03.984]      <control if="!isSWJ" while="" timeout="0" info="">
[02:36:03.984]        // if-block "!isSWJ"
[02:36:03.984]          // =>  FALSE
[02:36:03.984]        // skip if-block "!isSWJ"
[02:36:03.984]      </control>
[02:36:03.984]      <block atomic="false" info="">
[02:36:03.984]        ReadDP(0x0);
[02:36:03.984]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:36:03.984]      </block>
[02:36:03.984]      // end if-block "protType == 2"
[02:36:03.988]    </control>
[02:36:03.988]  </sequence>
[02:36:03.988]  
[02:36:03.988]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:36:03.988]  
[02:36:03.988]  <debugvars>
[02:36:03.988]    // Pre-defined
[02:36:03.988]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:03.992]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:36:03.992]    __dp=0x00000000
[02:36:03.992]    __ap=0x00000000
[02:36:03.992]    __traceout=0x00000000      (Trace Disabled)
[02:36:03.992]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:03.992]    __FlashAddr=0x00000000
[02:36:03.992]    __FlashLen=0x00000000
[02:36:03.992]    __FlashArg=0x00000000
[02:36:03.992]    __FlashOp=0x00000000
[02:36:03.992]    __Result=0x00000000
[02:36:03.992]  </debugvars>
[02:36:03.992]  
[02:36:03.992]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:36:03.992]    <block atomic="false" info="">
[02:36:03.992]      __var SW_DP_ABORT       = 0x0;
[02:36:03.992]        // -> [SW_DP_ABORT <= 0x00000000]
[02:36:03.992]      __var DP_CTRL_STAT      = 0x4;
[02:36:03.992]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:36:03.992]      __var DP_SELECT         = 0x8;
[02:36:03.992]        // -> [DP_SELECT <= 0x00000008]
[02:36:03.992]      __var powered_down      = 0;
[02:36:03.992]        // -> [powered_down <= 0x00000000]
[02:36:03.992]      WriteDP(DP_SELECT, 0x00000000);
[02:36:03.996]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:36:03.996]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:36:03.996]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:36:03.996]        // -> [powered_down <= 0x00000001]
[02:36:03.996]    </block>
[02:36:03.996]    <control if="powered_down" while="" timeout="0" info="">
[02:36:03.996]      // if-block "powered_down"
[02:36:03.996]        // =>  TRUE
[02:36:03.996]      <block atomic="false" info="">
[02:36:03.996]        Message(0, "Debug/System power-up request sent");
[02:36:04.000]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:36:04.000]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:36:04.000]      </block>
[02:36:04.000]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:36:04.000]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:36:04.008]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:36:04.008]        // while-condition  =>  FALSE
[02:36:04.008]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:36:04.008]      </control>
[02:36:04.008]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:36:04.008]        // if-block "(__protocol & 0xFFFF) == 1"
[02:36:04.008]          // =>  FALSE
[02:36:04.008]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:36:04.008]      </control>
[02:36:04.008]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:36:04.008]        // if-block "(__protocol & 0xFFFF) == 2"
[02:36:04.008]          // =>  TRUE
[02:36:04.008]        <block atomic="false" info="">
[02:36:04.008]          Message(0, "executing SWD power up");
[02:36:04.008]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:36:04.012]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:36:04.012]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:36:04.016]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:36:04.016]        </block>
[02:36:04.016]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:36:04.016]      </control>
[02:36:04.016]      // end if-block "powered_down"
[02:36:04.016]    </control>
[02:36:04.016]    <block atomic="false" info="">
[02:36:04.016]      __var DEBUG_PORT_VAL    = 0;
[02:36:04.016]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:36:04.016]      __var ACCESS_POINT_VAL  = 0;
[02:36:04.016]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:36:04.016]      __ap = 1; 
[02:36:04.016]        // -> [__ap <= 0x00000001]
[02:36:04.016]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:36:04.020]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:36:04.020]      __ap = 4;
[02:36:04.020]        // -> [__ap <= 0x00000004]
[02:36:04.020]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:36:04.024]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:36:04.024]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:36:04.024]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:36:04.024]    </block>
[02:36:04.024]    <block atomic="false" info="">
[02:36:04.024]      __var nReset = 0x80;
[02:36:04.024]        // -> [nReset <= 0x00000080]
[02:36:04.024]      __var canReadPins = 0;
[02:36:04.024]        // -> [canReadPins <= 0x00000000]
[02:36:04.028]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:36:04.028]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:36:04.028]        // -> [canReadPins <= 0x00000001]
[02:36:04.028]    </block>
[02:36:04.028]    <control if="" while="1" timeout="200" info="">
[02:36:04.028]      // while "1"  (timeout="200")
[02:36:04.028]      // while-condition  =>  TRUE
[02:36:04.028]      // while "1"  (timeout="200")
[02:36:04.028]      // while-condition  =>  TRUE
[02:36:04.028]      // while "1"  (timeout="200")
[02:36:04.028]      // while-condition  =>  TRUE
[02:36:04.028]      // while "1"  (timeout="200")
[02:36:04.028]      // while-condition  =>  TRUE
[02:36:04.028]      // while "1"  (timeout="200")
[02:36:04.028]      // while-condition  =>  TRUE
[02:36:04.028]      // while "1"  (timeout="200")
[02:36:04.028]      // while-condition  =>  TRUE
[02:36:04.028]      // while "1"  (timeout="200")
[02:36:04.028]      // while-condition  =>  TRUE
[02:36:04.032]      // while "1"  (timeout="200")
[02:36:04.032]      // while  =>  TIMEOUT
[02:36:04.032]      // end while "1"
[02:36:04.032]    </control>
[02:36:04.032]    <control if="canReadPins" while="" timeout="0" info="">
[02:36:04.032]      // if-block "canReadPins"
[02:36:04.032]        // =>  TRUE
[02:36:04.032]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:36:04.032]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:36:04.032]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:36:04.032]        // while-condition  =>  FALSE
[02:36:04.032]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:36:04.032]      </control>
[02:36:04.032]      // end if-block "canReadPins"
[02:36:04.032]    </control>
[02:36:04.032]    <control if="!canReadPins" while="" timeout="0" info="">
[02:36:04.032]      // if-block "!canReadPins"
[02:36:04.032]        // =>  FALSE
[02:36:04.032]      // skip if-block "!canReadPins"
[02:36:04.036]    </control>
[02:36:04.036]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:36:04.036]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:36:04.036]        // =>  TRUE
[02:36:04.036]      <block atomic="false" info="">
[02:36:04.036]        WriteAP(0x00, 0x190008);
[02:36:04.036]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:36:04.036]        WriteAP(0xF0, 0x01);
[02:36:04.040]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:36:04.040]      </block>
[02:36:04.040]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:36:04.040]    </control>
[02:36:04.040]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:36:04.040]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:36:04.040]        // =>  FALSE
[02:36:04.040]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:36:04.040]    </control>
[02:36:04.040]    <block atomic="false" info="">
[02:36:04.040]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:36:04.044]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:36:04.044]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:36:04.044]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:36:04.044]      __ap = 0; //lets make sure we reset the access point selection
[02:36:04.044]        // -> [__ap <= 0x00000000]
[02:36:04.044]    </block>
[02:36:04.048]  </sequence>
[02:36:04.048]  
[02:36:04.073]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:36:04.073]  
[02:36:04.073]  <debugvars>
[02:36:04.073]    // Pre-defined
[02:36:04.073]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:04.073]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:36:04.073]    __dp=0x00000000
[02:36:04.073]    __ap=0x00000000
[02:36:04.073]    __traceout=0x00000000      (Trace Disabled)
[02:36:04.073]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:04.073]    __FlashAddr=0x00000000
[02:36:04.073]    __FlashLen=0x00000000
[02:36:04.077]    __FlashArg=0x00000000
[02:36:04.077]    __FlashOp=0x00000000
[02:36:04.077]    __Result=0x00000000
[02:36:04.077]  </debugvars>
[02:36:04.077]  
[02:36:04.077]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:36:04.077]    <block atomic="false" info="">
[02:36:04.077]      __var deviceID = 0;
[02:36:04.077]        // -> [deviceID <= 0x00000000]
[02:36:04.077]      __var version = 0;
[02:36:04.077]        // -> [version <= 0x00000000]
[02:36:04.077]      __var partNum = 0;
[02:36:04.077]        // -> [partNum <= 0x00000000]
[02:36:04.077]      __var manuf = 0;
[02:36:04.077]        // -> [manuf <= 0x00000000]
[02:36:04.077]      __var isMSPM0G1X0X_G3X0X = 0;
[02:36:04.077]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:36:04.077]      __var isProduction = 0;
[02:36:04.077]        // -> [isProduction <= 0x00000000]
[02:36:04.077]      __var continueId = 0;
[02:36:04.077]        // -> [continueId <= 0x00000000]
[02:36:04.077]      deviceID =   Read32(0x41C40004);
[02:36:04.085]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:36:04.085]        // -> [deviceID <= 0x2BB8802F]
[02:36:04.085]      version = deviceID >> 28;
[02:36:04.085]        // -> [version <= 0x00000002]
[02:36:04.085]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:36:04.085]        // -> [partNum <= 0x0000BB88]
[02:36:04.085]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:36:04.085]        // -> [manuf <= 0x00000017]
[02:36:04.085]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:36:04.085]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:36:04.085]      isProduction = (version > 0);
[02:36:04.089]        // -> [isProduction <= 0x00000001]
[02:36:04.089]    </block>
[02:36:04.089]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:36:04.089]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:36:04.089]        // =>  FALSE
[02:36:04.089]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:36:04.089]    </control>
[02:36:04.089]    <control if="continueId == 4" while="" timeout="0" info="">
[02:36:04.089]      // if-block "continueId == 4"
[02:36:04.089]        // =>  FALSE
[02:36:04.089]      // skip if-block "continueId == 4"
[02:36:04.089]    </control>
[02:36:04.089]    <control if="!isProduction" while="" timeout="0" info="">
[02:36:04.089]      // if-block "!isProduction"
[02:36:04.089]        // =>  FALSE
[02:36:04.089]      // skip if-block "!isProduction"
[02:36:04.089]    </control>
[02:36:04.089]  </sequence>
[02:36:04.089]  
[02:36:50.226]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:36:50.226]  
[02:36:50.226]  <debugvars>
[02:36:50.226]    // Pre-defined
[02:36:50.226]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:50.226]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:36:50.226]    __dp=0x00000000
[02:36:50.226]    __ap=0x00000000
[02:36:50.226]    __traceout=0x00000000      (Trace Disabled)
[02:36:50.226]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:50.226]    __FlashAddr=0x00000000
[02:36:50.226]    __FlashLen=0x00000000
[02:36:50.226]    __FlashArg=0x00000000
[02:36:50.226]    __FlashOp=0x00000000
[02:36:50.226]    __Result=0x00000000
[02:36:50.226]  </debugvars>
[02:36:50.230]  
[02:36:50.230]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:36:50.230]    <block atomic="false" info="">
[02:36:50.230]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:36:50.230]        // -> [isSWJ <= 0x00000001]
[02:36:50.230]      __var hasDormant = __protocol & 0x00020000;
[02:36:50.230]        // -> [hasDormant <= 0x00000000]
[02:36:50.230]      __var protType   = __protocol & 0x0000FFFF;
[02:36:50.230]        // -> [protType <= 0x00000002]
[02:36:50.230]    </block>
[02:36:50.230]    <control if="protType == 1" while="" timeout="0" info="">
[02:36:50.230]      // if-block "protType == 1"
[02:36:50.230]        // =>  FALSE
[02:36:50.230]      // skip if-block "protType == 1"
[02:36:50.230]    </control>
[02:36:50.230]    <control if="protType == 2" while="" timeout="0" info="">
[02:36:50.230]      // if-block "protType == 2"
[02:36:50.230]        // =>  TRUE
[02:36:50.230]      <control if="isSWJ" while="" timeout="0" info="">
[02:36:50.230]        // if-block "isSWJ"
[02:36:50.230]          // =>  TRUE
[02:36:50.230]        <control if="hasDormant" while="" timeout="0" info="">
[02:36:50.230]          // if-block "hasDormant"
[02:36:50.230]            // =>  FALSE
[02:36:50.230]          // skip if-block "hasDormant"
[02:36:50.230]        </control>
[02:36:50.230]        <control if="!hasDormant" while="" timeout="0" info="">
[02:36:50.230]          // if-block "!hasDormant"
[02:36:50.230]            // =>  TRUE
[02:36:50.230]          <block atomic="false" info="">
[02:36:50.230]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:36:50.234]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:50.234]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:36:50.238]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:36:50.238]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:36:50.238]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:50.238]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:36:50.238]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:36:50.238]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:36:50.242]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:50.242]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:36:50.242]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:36:50.242]          </block>
[02:36:50.242]          // end if-block "!hasDormant"
[02:36:50.242]        </control>
[02:36:50.242]        // end if-block "isSWJ"
[02:36:50.246]      </control>
[02:36:50.246]      <control if="!isSWJ" while="" timeout="0" info="">
[02:36:50.246]        // if-block "!isSWJ"
[02:36:50.246]          // =>  FALSE
[02:36:50.246]        // skip if-block "!isSWJ"
[02:36:50.246]      </control>
[02:36:50.246]      <block atomic="false" info="">
[02:36:50.246]        ReadDP(0x0);
[02:36:50.246]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:36:50.246]      </block>
[02:36:50.246]      // end if-block "protType == 2"
[02:36:50.246]    </control>
[02:36:50.246]  </sequence>
[02:36:50.246]  
[02:36:50.254]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:36:50.254]  
[02:36:50.254]  <debugvars>
[02:36:50.254]    // Pre-defined
[02:36:50.254]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:50.254]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:36:50.258]    __dp=0x00000000
[02:36:50.258]    __ap=0x00000000
[02:36:50.258]    __traceout=0x00000000      (Trace Disabled)
[02:36:50.258]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:50.258]    __FlashAddr=0x00000000
[02:36:50.258]    __FlashLen=0x00000000
[02:36:50.258]    __FlashArg=0x00000000
[02:36:50.258]    __FlashOp=0x00000000
[02:36:50.258]    __Result=0x00000000
[02:36:50.258]  </debugvars>
[02:36:50.258]  
[02:36:50.258]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:36:50.258]    <block atomic="false" info="">
[02:36:50.258]      __var SW_DP_ABORT       = 0x0;
[02:36:50.258]        // -> [SW_DP_ABORT <= 0x00000000]
[02:36:50.258]      __var DP_CTRL_STAT      = 0x4;
[02:36:50.258]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:36:50.258]      __var DP_SELECT         = 0x8;
[02:36:50.258]        // -> [DP_SELECT <= 0x00000008]
[02:36:50.258]      __var powered_down      = 0;
[02:36:50.258]        // -> [powered_down <= 0x00000000]
[02:36:50.258]      WriteDP(DP_SELECT, 0x00000000);
[02:36:50.258]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:36:50.258]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:36:50.262]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:36:50.262]        // -> [powered_down <= 0x00000001]
[02:36:50.262]    </block>
[02:36:50.262]    <control if="powered_down" while="" timeout="0" info="">
[02:36:50.262]      // if-block "powered_down"
[02:36:50.262]        // =>  TRUE
[02:36:50.262]      <block atomic="false" info="">
[02:36:50.262]        Message(0, "Debug/System power-up request sent");
[02:36:50.266]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:36:50.267]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:36:50.267]      </block>
[02:36:50.267]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:36:50.267]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:36:50.267]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:36:50.267]        // while-condition  =>  FALSE
[02:36:50.267]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:36:50.267]      </control>
[02:36:50.267]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:36:50.267]        // if-block "(__protocol & 0xFFFF) == 1"
[02:36:50.267]          // =>  FALSE
[02:36:50.271]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:36:50.271]      </control>
[02:36:50.271]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:36:50.271]        // if-block "(__protocol & 0xFFFF) == 2"
[02:36:50.271]          // =>  TRUE
[02:36:50.271]        <block atomic="false" info="">
[02:36:50.271]          Message(0, "executing SWD power up");
[02:36:50.272]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:36:50.273]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:36:50.275]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:36:50.275]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:36:50.275]        </block>
[02:36:50.275]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:36:50.275]      </control>
[02:36:50.275]      // end if-block "powered_down"
[02:36:50.275]    </control>
[02:36:50.275]    <block atomic="false" info="">
[02:36:50.275]      __var DEBUG_PORT_VAL    = 0;
[02:36:50.275]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:36:50.275]      __var ACCESS_POINT_VAL  = 0;
[02:36:50.275]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:36:50.275]      __ap = 1; 
[02:36:50.275]        // -> [__ap <= 0x00000001]
[02:36:50.275]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:36:50.279]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:36:50.279]      __ap = 4;
[02:36:50.279]        // -> [__ap <= 0x00000004]
[02:36:50.279]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:36:50.284]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:36:50.284]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:36:50.284]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:36:50.287]    </block>
[02:36:50.288]    <block atomic="false" info="">
[02:36:50.288]      __var nReset = 0x80;
[02:36:50.288]        // -> [nReset <= 0x00000080]
[02:36:50.288]      __var canReadPins = 0;
[02:36:50.288]        // -> [canReadPins <= 0x00000000]
[02:36:50.288]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:36:50.293]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:36:50.293]        // -> [canReadPins <= 0x00000001]
[02:36:50.293]    </block>
[02:36:50.293]    <control if="" while="1" timeout="200" info="">
[02:36:50.293]      // while "1"  (timeout="200")
[02:36:50.293]      // while-condition  =>  TRUE
[02:36:50.293]      // while "1"  (timeout="200")
[02:36:50.293]      // while-condition  =>  TRUE
[02:36:50.293]      // while "1"  (timeout="200")
[02:36:50.293]      // while-condition  =>  TRUE
[02:36:50.293]      // while "1"  (timeout="200")
[02:36:50.293]      // while-condition  =>  TRUE
[02:36:50.293]      // while "1"  (timeout="200")
[02:36:50.293]      // while-condition  =>  TRUE
[02:36:50.293]      // while "1"  (timeout="200")
[02:36:50.293]      // while-condition  =>  TRUE
[02:36:50.293]      // while "1"  (timeout="200")
[02:36:50.293]      // while-condition  =>  TRUE
[02:36:50.293]      // while "1"  (timeout="200")
[02:36:50.293]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.296]      // while-condition  =>  TRUE
[02:36:50.296]      // while "1"  (timeout="200")
[02:36:50.300]      // while-condition  =>  TRUE
[02:36:50.300]      // while "1"  (timeout="200")
[02:36:50.300]      // while  =>  TIMEOUT
[02:36:50.300]      // end while "1"
[02:36:50.300]    </control>
[02:36:50.300]    <control if="canReadPins" while="" timeout="0" info="">
[02:36:50.300]      // if-block "canReadPins"
[02:36:50.300]        // =>  TRUE
[02:36:50.300]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:36:50.300]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:36:50.304]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:36:50.304]        // while-condition  =>  FALSE
[02:36:50.304]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:36:50.304]      </control>
[02:36:50.304]      // end if-block "canReadPins"
[02:36:50.304]    </control>
[02:36:50.304]    <control if="!canReadPins" while="" timeout="0" info="">
[02:36:50.304]      // if-block "!canReadPins"
[02:36:50.304]        // =>  FALSE
[02:36:50.304]      // skip if-block "!canReadPins"
[02:36:50.304]    </control>
[02:36:50.304]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:36:50.304]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:36:50.304]        // =>  TRUE
[02:36:50.304]      <block atomic="false" info="">
[02:36:50.304]        WriteAP(0x00, 0x190008);
[02:36:50.304]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:36:50.308]        WriteAP(0xF0, 0x01);
[02:36:50.308]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:36:50.308]      </block>
[02:36:50.308]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:36:50.308]    </control>
[02:36:50.312]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:36:50.312]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:36:50.312]        // =>  FALSE
[02:36:50.312]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:36:50.312]    </control>
[02:36:50.312]    <block atomic="false" info="">
[02:36:50.312]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:36:50.312]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:36:50.312]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:36:50.316]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:36:50.316]      __ap = 0; //lets make sure we reset the access point selection
[02:36:50.316]        // -> [__ap <= 0x00000000]
[02:36:50.316]    </block>
[02:36:50.316]  </sequence>
[02:36:50.316]  
[02:36:50.343]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:36:50.343]  
[02:36:50.343]  <debugvars>
[02:36:50.343]    // Pre-defined
[02:36:50.343]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:50.343]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:36:50.343]    __dp=0x00000000
[02:36:50.345]    __ap=0x00000000
[02:36:50.345]    __traceout=0x00000000      (Trace Disabled)
[02:36:50.345]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:50.345]    __FlashAddr=0x00000000
[02:36:50.345]    __FlashLen=0x00000000
[02:36:50.345]    __FlashArg=0x00000000
[02:36:50.346]    __FlashOp=0x00000000
[02:36:50.346]    __Result=0x00000000
[02:36:50.346]  </debugvars>
[02:36:50.346]  
[02:36:50.346]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:36:50.346]    <block atomic="false" info="">
[02:36:50.346]      __var deviceID = 0;
[02:36:50.346]        // -> [deviceID <= 0x00000000]
[02:36:50.346]      __var version = 0;
[02:36:50.346]        // -> [version <= 0x00000000]
[02:36:50.348]      __var partNum = 0;
[02:36:50.348]        // -> [partNum <= 0x00000000]
[02:36:50.348]      __var manuf = 0;
[02:36:50.348]        // -> [manuf <= 0x00000000]
[02:36:50.348]      __var isMSPM0G1X0X_G3X0X = 0;
[02:36:50.348]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:36:50.348]      __var isProduction = 0;
[02:36:50.348]        // -> [isProduction <= 0x00000000]
[02:36:50.348]      __var continueId = 0;
[02:36:50.348]        // -> [continueId <= 0x00000000]
[02:36:50.348]      deviceID =   Read32(0x41C40004);
[02:36:50.357]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:36:50.357]        // -> [deviceID <= 0x2BB8802F]
[02:36:50.357]      version = deviceID >> 28;
[02:36:50.357]        // -> [version <= 0x00000002]
[02:36:50.357]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:36:50.357]        // -> [partNum <= 0x0000BB88]
[02:36:50.357]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:36:50.357]        // -> [manuf <= 0x00000017]
[02:36:50.357]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:36:50.357]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:36:50.357]      isProduction = (version > 0);
[02:36:50.357]        // -> [isProduction <= 0x00000001]
[02:36:50.357]    </block>
[02:36:50.357]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:36:50.357]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:36:50.357]        // =>  FALSE
[02:36:50.357]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:36:50.357]    </control>
[02:36:50.357]    <control if="continueId == 4" while="" timeout="0" info="">
[02:36:50.357]      // if-block "continueId == 4"
[02:36:50.357]        // =>  FALSE
[02:36:50.357]      // skip if-block "continueId == 4"
[02:36:50.357]    </control>
[02:36:50.357]    <control if="!isProduction" while="" timeout="0" info="">
[02:36:50.357]      // if-block "!isProduction"
[02:36:50.357]        // =>  FALSE
[02:36:50.361]      // skip if-block "!isProduction"
[02:36:50.361]    </control>
[02:36:50.362]  </sequence>
[02:36:50.362]  
[02:36:56.857]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:36:56.857]  
[02:36:56.867]  <debugvars>
[02:36:56.867]    // Pre-defined
[02:36:56.867]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:56.867]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:36:56.867]    __dp=0x00000000
[02:36:56.868]    __ap=0x00000000
[02:36:56.868]    __traceout=0x00000000      (Trace Disabled)
[02:36:56.868]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:56.868]    __FlashAddr=0x00000000
[02:36:56.868]    __FlashLen=0x00000000
[02:36:56.868]    __FlashArg=0x00000000
[02:36:56.868]    __FlashOp=0x00000000
[02:36:56.868]    __Result=0x00000000
[02:36:56.868]  </debugvars>
[02:36:56.868]  
[02:36:56.868]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:36:56.868]    <block atomic="false" info="">
[02:36:56.868]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:36:56.868]        // -> [isSWJ <= 0x00000001]
[02:36:56.868]      __var hasDormant = __protocol & 0x00020000;
[02:36:56.868]        // -> [hasDormant <= 0x00000000]
[02:36:56.870]      __var protType   = __protocol & 0x0000FFFF;
[02:36:56.870]        // -> [protType <= 0x00000002]
[02:36:56.870]    </block>
[02:36:56.870]    <control if="protType == 1" while="" timeout="0" info="">
[02:36:56.870]      // if-block "protType == 1"
[02:36:56.870]        // =>  FALSE
[02:36:56.870]      // skip if-block "protType == 1"
[02:36:56.870]    </control>
[02:36:56.870]    <control if="protType == 2" while="" timeout="0" info="">
[02:36:56.870]      // if-block "protType == 2"
[02:36:56.870]        // =>  TRUE
[02:36:56.870]      <control if="isSWJ" while="" timeout="0" info="">
[02:36:56.870]        // if-block "isSWJ"
[02:36:56.870]          // =>  TRUE
[02:36:56.870]        <control if="hasDormant" while="" timeout="0" info="">
[02:36:56.870]          // if-block "hasDormant"
[02:36:56.870]            // =>  FALSE
[02:36:56.870]          // skip if-block "hasDormant"
[02:36:56.870]        </control>
[02:36:56.870]        <control if="!hasDormant" while="" timeout="0" info="">
[02:36:56.870]          // if-block "!hasDormant"
[02:36:56.870]            // =>  TRUE
[02:36:56.870]          <block atomic="false" info="">
[02:36:56.870]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:36:56.870]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:56.870]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:36:56.874]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:36:56.874]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:36:56.874]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:56.874]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:36:56.878]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:36:56.878]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:36:56.882]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:36:56.882]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:36:56.886]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:36:56.886]          </block>
[02:36:56.886]          // end if-block "!hasDormant"
[02:36:56.886]        </control>
[02:36:56.886]        // end if-block "isSWJ"
[02:36:56.886]      </control>
[02:36:56.886]      <control if="!isSWJ" while="" timeout="0" info="">
[02:36:56.886]        // if-block "!isSWJ"
[02:36:56.886]          // =>  FALSE
[02:36:56.886]        // skip if-block "!isSWJ"
[02:36:56.886]      </control>
[02:36:56.886]      <block atomic="false" info="">
[02:36:56.886]        ReadDP(0x0);
[02:36:56.890]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:36:56.890]      </block>
[02:36:56.890]      // end if-block "protType == 2"
[02:36:56.890]    </control>
[02:36:56.890]  </sequence>
[02:36:56.890]  
[02:36:56.894]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:36:56.894]  
[02:36:56.894]  <debugvars>
[02:36:56.894]    // Pre-defined
[02:36:56.894]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:56.894]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:36:56.894]    __dp=0x00000000
[02:36:56.894]    __ap=0x00000000
[02:36:56.894]    __traceout=0x00000000      (Trace Disabled)
[02:36:56.894]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:56.894]    __FlashAddr=0x00000000
[02:36:56.894]    __FlashLen=0x00000000
[02:36:56.894]    __FlashArg=0x00000000
[02:36:56.894]    __FlashOp=0x00000000
[02:36:56.898]    __Result=0x00000000
[02:36:56.898]  </debugvars>
[02:36:56.898]  
[02:36:56.898]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:36:56.898]    <block atomic="false" info="">
[02:36:56.898]      __var SW_DP_ABORT       = 0x0;
[02:36:56.898]        // -> [SW_DP_ABORT <= 0x00000000]
[02:36:56.898]      __var DP_CTRL_STAT      = 0x4;
[02:36:56.898]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:36:56.898]      __var DP_SELECT         = 0x8;
[02:36:56.898]        // -> [DP_SELECT <= 0x00000008]
[02:36:56.898]      __var powered_down      = 0;
[02:36:56.898]        // -> [powered_down <= 0x00000000]
[02:36:56.898]      WriteDP(DP_SELECT, 0x00000000);
[02:36:56.902]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:36:56.902]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:36:56.902]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:36:56.902]        // -> [powered_down <= 0x00000001]
[02:36:56.902]    </block>
[02:36:56.902]    <control if="powered_down" while="" timeout="0" info="">
[02:36:56.902]      // if-block "powered_down"
[02:36:56.902]        // =>  TRUE
[02:36:56.902]      <block atomic="false" info="">
[02:36:56.902]        Message(0, "Debug/System power-up request sent");
[02:36:56.906]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:36:56.910]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:36:56.910]      </block>
[02:36:56.910]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:36:56.910]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:36:56.910]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:36:56.910]        // while-condition  =>  FALSE
[02:36:56.910]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:36:56.910]      </control>
[02:36:56.910]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:36:56.910]        // if-block "(__protocol & 0xFFFF) == 1"
[02:36:56.910]          // =>  FALSE
[02:36:56.910]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:36:56.914]      </control>
[02:36:56.914]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:36:56.914]        // if-block "(__protocol & 0xFFFF) == 2"
[02:36:56.914]          // =>  TRUE
[02:36:56.914]        <block atomic="false" info="">
[02:36:56.914]          Message(0, "executing SWD power up");
[02:36:56.914]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:36:56.918]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:36:56.918]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:36:56.918]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:36:56.922]        </block>
[02:36:56.922]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:36:56.922]      </control>
[02:36:56.922]      // end if-block "powered_down"
[02:36:56.922]    </control>
[02:36:56.922]    <block atomic="false" info="">
[02:36:56.922]      __var DEBUG_PORT_VAL    = 0;
[02:36:56.922]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:36:56.922]      __var ACCESS_POINT_VAL  = 0;
[02:36:56.922]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:36:56.922]      __ap = 1; 
[02:36:56.922]        // -> [__ap <= 0x00000001]
[02:36:56.922]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:36:56.926]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:36:56.926]      __ap = 4;
[02:36:56.926]        // -> [__ap <= 0x00000004]
[02:36:56.927]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:36:56.930]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:36:56.930]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:36:56.930]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:36:56.930]    </block>
[02:36:56.930]    <block atomic="false" info="">
[02:36:56.930]      __var nReset = 0x80;
[02:36:56.930]        // -> [nReset <= 0x00000080]
[02:36:56.930]      __var canReadPins = 0;
[02:36:56.930]        // -> [canReadPins <= 0x00000000]
[02:36:56.930]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:36:56.934]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:36:56.934]        // -> [canReadPins <= 0x00000001]
[02:36:56.934]    </block>
[02:36:56.934]    <control if="" while="1" timeout="200" info="">
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.934]      // while "1"  (timeout="200")
[02:36:56.934]      // while-condition  =>  TRUE
[02:36:56.938]      // while "1"  (timeout="200")
[02:36:56.938]      // while  =>  TIMEOUT
[02:36:56.938]      // end while "1"
[02:36:56.938]    </control>
[02:36:56.938]    <control if="canReadPins" while="" timeout="0" info="">
[02:36:56.938]      // if-block "canReadPins"
[02:36:56.938]        // =>  TRUE
[02:36:56.938]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:36:56.938]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:36:56.938]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:36:56.938]        // while-condition  =>  FALSE
[02:36:56.938]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:36:56.938]      </control>
[02:36:56.938]      // end if-block "canReadPins"
[02:36:56.938]    </control>
[02:36:56.938]    <control if="!canReadPins" while="" timeout="0" info="">
[02:36:56.938]      // if-block "!canReadPins"
[02:36:56.938]        // =>  FALSE
[02:36:56.942]      // skip if-block "!canReadPins"
[02:36:56.942]    </control>
[02:36:56.942]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:36:56.942]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:36:56.942]        // =>  TRUE
[02:36:56.942]      <block atomic="false" info="">
[02:36:56.942]        WriteAP(0x00, 0x190008);
[02:36:56.942]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:36:56.942]        WriteAP(0xF0, 0x01);
[02:36:56.950]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:36:56.950]      </block>
[02:36:56.950]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:36:56.950]    </control>
[02:36:56.950]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:36:56.950]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:36:56.950]        // =>  FALSE
[02:36:56.950]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:36:56.950]    </control>
[02:36:56.950]    <block atomic="false" info="">
[02:36:56.950]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:36:56.954]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:36:56.954]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:36:56.954]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:36:56.958]      __ap = 0; //lets make sure we reset the access point selection
[02:36:56.958]        // -> [__ap <= 0x00000000]
[02:36:56.958]    </block>
[02:36:56.958]  </sequence>
[02:36:56.958]  
[02:36:56.978]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:36:56.978]  
[02:36:56.978]  <debugvars>
[02:36:56.982]    // Pre-defined
[02:36:56.982]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:36:56.982]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:36:56.982]    __dp=0x00000000
[02:36:56.982]    __ap=0x00000000
[02:36:56.982]    __traceout=0x00000000      (Trace Disabled)
[02:36:56.982]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:36:56.982]    __FlashAddr=0x00000000
[02:36:56.982]    __FlashLen=0x00000000
[02:36:56.982]    __FlashArg=0x00000000
[02:36:56.982]    __FlashOp=0x00000000
[02:36:56.982]    __Result=0x00000000
[02:36:56.982]  </debugvars>
[02:36:56.982]  
[02:36:56.982]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:36:56.982]    <block atomic="false" info="">
[02:36:56.982]      __var deviceID = 0;
[02:36:56.982]        // -> [deviceID <= 0x00000000]
[02:36:56.982]      __var version = 0;
[02:36:56.982]        // -> [version <= 0x00000000]
[02:36:56.982]      __var partNum = 0;
[02:36:56.982]        // -> [partNum <= 0x00000000]
[02:36:56.982]      __var manuf = 0;
[02:36:56.982]        // -> [manuf <= 0x00000000]
[02:36:56.982]      __var isMSPM0G1X0X_G3X0X = 0;
[02:36:56.982]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:36:56.982]      __var isProduction = 0;
[02:36:56.982]        // -> [isProduction <= 0x00000000]
[02:36:56.982]      __var continueId = 0;
[02:36:56.982]        // -> [continueId <= 0x00000000]
[02:36:56.982]      deviceID =   Read32(0x41C40004);
[02:36:56.990]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:36:56.990]        // -> [deviceID <= 0x2BB8802F]
[02:36:56.990]      version = deviceID >> 28;
[02:36:56.990]        // -> [version <= 0x00000002]
[02:36:56.990]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:36:56.990]        // -> [partNum <= 0x0000BB88]
[02:36:56.990]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:36:56.990]        // -> [manuf <= 0x00000017]
[02:36:56.990]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:36:56.990]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:36:56.990]      isProduction = (version > 0);
[02:36:56.990]        // -> [isProduction <= 0x00000001]
[02:36:56.990]    </block>
[02:36:56.990]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:36:56.990]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:36:56.990]        // =>  FALSE
[02:36:56.990]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:36:56.994]    </control>
[02:36:56.994]    <control if="continueId == 4" while="" timeout="0" info="">
[02:36:56.994]      // if-block "continueId == 4"
[02:36:56.994]        // =>  FALSE
[02:36:56.994]      // skip if-block "continueId == 4"
[02:36:56.994]    </control>
[02:36:56.994]    <control if="!isProduction" while="" timeout="0" info="">
[02:36:56.994]      // if-block "!isProduction"
[02:36:56.994]        // =>  FALSE
[02:36:56.994]      // skip if-block "!isProduction"
[02:36:56.994]    </control>
[02:36:56.994]  </sequence>
[02:36:56.994]  
[02:37:51.558]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:37:51.558]  
[02:37:51.567]  <debugvars>
[02:37:51.567]    // Pre-defined
[02:37:51.567]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:37:51.567]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:37:51.567]    __dp=0x00000000
[02:37:51.567]    __ap=0x00000000
[02:37:51.567]    __traceout=0x00000000      (Trace Disabled)
[02:37:51.567]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:37:51.567]    __FlashAddr=0x00000000
[02:37:51.567]    __FlashLen=0x00000000
[02:37:51.569]    __FlashArg=0x00000000
[02:37:51.569]    __FlashOp=0x00000000
[02:37:51.569]    __Result=0x00000000
[02:37:51.569]  </debugvars>
[02:37:51.569]  
[02:37:51.569]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:37:51.569]    <block atomic="false" info="">
[02:37:51.569]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:37:51.569]        // -> [isSWJ <= 0x00000001]
[02:37:51.569]      __var hasDormant = __protocol & 0x00020000;
[02:37:51.569]        // -> [hasDormant <= 0x00000000]
[02:37:51.569]      __var protType   = __protocol & 0x0000FFFF;
[02:37:51.569]        // -> [protType <= 0x00000002]
[02:37:51.569]    </block>
[02:37:51.569]    <control if="protType == 1" while="" timeout="0" info="">
[02:37:51.569]      // if-block "protType == 1"
[02:37:51.569]        // =>  FALSE
[02:37:51.571]      // skip if-block "protType == 1"
[02:37:51.571]    </control>
[02:37:51.571]    <control if="protType == 2" while="" timeout="0" info="">
[02:37:51.571]      // if-block "protType == 2"
[02:37:51.571]        // =>  TRUE
[02:37:51.571]      <control if="isSWJ" while="" timeout="0" info="">
[02:37:51.571]        // if-block "isSWJ"
[02:37:51.572]          // =>  TRUE
[02:37:51.572]        <control if="hasDormant" while="" timeout="0" info="">
[02:37:51.572]          // if-block "hasDormant"
[02:37:51.572]            // =>  FALSE
[02:37:51.572]          // skip if-block "hasDormant"
[02:37:51.572]        </control>
[02:37:51.572]        <control if="!hasDormant" while="" timeout="0" info="">
[02:37:51.572]          // if-block "!hasDormant"
[02:37:51.572]            // =>  TRUE
[02:37:51.572]          <block atomic="false" info="">
[02:37:51.572]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:37:51.574]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:37:51.574]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:37:51.577]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:37:51.577]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:37:51.579]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:37:51.579]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:37:51.579]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:37:51.579]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:37:51.582]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:37:51.582]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:37:51.583]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:37:51.583]          </block>
[02:37:51.583]          // end if-block "!hasDormant"
[02:37:51.583]        </control>
[02:37:51.583]        // end if-block "isSWJ"
[02:37:51.583]      </control>
[02:37:51.583]      <control if="!isSWJ" while="" timeout="0" info="">
[02:37:51.583]        // if-block "!isSWJ"
[02:37:51.583]          // =>  FALSE
[02:37:51.583]        // skip if-block "!isSWJ"
[02:37:51.583]      </control>
[02:37:51.583]      <block atomic="false" info="">
[02:37:51.583]        ReadDP(0x0);
[02:37:51.586]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:37:51.586]      </block>
[02:37:51.586]      // end if-block "protType == 2"
[02:37:51.586]    </control>
[02:37:51.586]  </sequence>
[02:37:51.586]  
[02:37:51.592]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:37:51.592]  
[02:37:51.592]  <debugvars>
[02:37:51.592]    // Pre-defined
[02:37:51.592]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:37:51.592]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:37:51.592]    __dp=0x00000000
[02:37:51.592]    __ap=0x00000000
[02:37:51.592]    __traceout=0x00000000      (Trace Disabled)
[02:37:51.592]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:37:51.592]    __FlashAddr=0x00000000
[02:37:51.592]    __FlashLen=0x00000000
[02:37:51.592]    __FlashArg=0x00000000
[02:37:51.592]    __FlashOp=0x00000000
[02:37:51.592]    __Result=0x00000000
[02:37:51.592]  </debugvars>
[02:37:51.592]  
[02:37:51.592]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:37:51.592]    <block atomic="false" info="">
[02:37:51.596]      __var SW_DP_ABORT       = 0x0;
[02:37:51.596]        // -> [SW_DP_ABORT <= 0x00000000]
[02:37:51.596]      __var DP_CTRL_STAT      = 0x4;
[02:37:51.596]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:37:51.596]      __var DP_SELECT         = 0x8;
[02:37:51.596]        // -> [DP_SELECT <= 0x00000008]
[02:37:51.596]      __var powered_down      = 0;
[02:37:51.596]        // -> [powered_down <= 0x00000000]
[02:37:51.597]      WriteDP(DP_SELECT, 0x00000000);
[02:37:51.597]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:37:51.597]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:37:51.600]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:37:51.600]        // -> [powered_down <= 0x00000001]
[02:37:51.600]    </block>
[02:37:51.600]    <control if="powered_down" while="" timeout="0" info="">
[02:37:51.600]      // if-block "powered_down"
[02:37:51.600]        // =>  TRUE
[02:37:51.600]      <block atomic="false" info="">
[02:37:51.600]        Message(0, "Debug/System power-up request sent");
[02:37:51.602]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:37:51.604]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:37:51.604]      </block>
[02:37:51.604]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:37:51.604]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:37:51.608]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:37:51.608]        // while-condition  =>  FALSE
[02:37:51.608]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:37:51.608]      </control>
[02:37:51.608]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:37:51.608]        // if-block "(__protocol & 0xFFFF) == 1"
[02:37:51.608]          // =>  FALSE
[02:37:51.608]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:37:51.608]      </control>
[02:37:51.608]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:37:51.608]        // if-block "(__protocol & 0xFFFF) == 2"
[02:37:51.608]          // =>  TRUE
[02:37:51.608]        <block atomic="false" info="">
[02:37:51.608]          Message(0, "executing SWD power up");
[02:37:51.611]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:37:51.613]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:37:51.613]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:37:51.614]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:37:51.614]        </block>
[02:37:51.614]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:37:51.614]      </control>
[02:37:51.614]      // end if-block "powered_down"
[02:37:51.614]    </control>
[02:37:51.614]    <block atomic="false" info="">
[02:37:51.614]      __var DEBUG_PORT_VAL    = 0;
[02:37:51.614]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:37:51.616]      __var ACCESS_POINT_VAL  = 0;
[02:37:51.616]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:37:51.616]      __ap = 1; 
[02:37:51.616]        // -> [__ap <= 0x00000001]
[02:37:51.617]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:37:51.621]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:37:51.621]      __ap = 4;
[02:37:51.621]        // -> [__ap <= 0x00000004]
[02:37:51.621]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:37:51.629]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:37:51.629]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:37:51.629]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:37:51.635]    </block>
[02:37:51.635]    <block atomic="false" info="">
[02:37:51.635]      __var nReset = 0x80;
[02:37:51.635]        // -> [nReset <= 0x00000080]
[02:37:51.635]      __var canReadPins = 0;
[02:37:51.635]        // -> [canReadPins <= 0x00000000]
[02:37:51.635]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:37:51.636]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:37:51.636]        // -> [canReadPins <= 0x00000001]
[02:37:51.636]    </block>
[02:37:51.636]    <control if="" while="1" timeout="200" info="">
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.636]      // while-condition  =>  TRUE
[02:37:51.636]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.641]      // while "1"  (timeout="200")
[02:37:51.641]      // while-condition  =>  TRUE
[02:37:51.645]      // while "1"  (timeout="200")
[02:37:51.645]      // while  =>  TIMEOUT
[02:37:51.645]      // end while "1"
[02:37:51.645]    </control>
[02:37:51.645]    <control if="canReadPins" while="" timeout="0" info="">
[02:37:51.645]      // if-block "canReadPins"
[02:37:51.645]        // =>  TRUE
[02:37:51.645]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:37:51.645]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:37:51.647]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:37:51.647]        // while-condition  =>  FALSE
[02:37:51.647]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:37:51.647]      </control>
[02:37:51.647]      // end if-block "canReadPins"
[02:37:51.647]    </control>
[02:37:51.647]    <control if="!canReadPins" while="" timeout="0" info="">
[02:37:51.647]      // if-block "!canReadPins"
[02:37:51.647]        // =>  FALSE
[02:37:51.647]      // skip if-block "!canReadPins"
[02:37:51.647]    </control>
[02:37:51.647]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:37:51.647]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:37:51.647]        // =>  TRUE
[02:37:51.647]      <block atomic="false" info="">
[02:37:51.649]        WriteAP(0x00, 0x190008);
[02:37:51.649]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:37:51.649]        WriteAP(0xF0, 0x01);
[02:37:51.653]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:37:51.653]      </block>
[02:37:51.653]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:37:51.653]    </control>
[02:37:51.653]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:37:51.653]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:37:51.653]        // =>  FALSE
[02:37:51.653]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:37:51.653]    </control>
[02:37:51.653]    <block atomic="false" info="">
[02:37:51.653]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:37:51.657]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:37:51.657]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:37:51.657]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:37:51.657]      __ap = 0; //lets make sure we reset the access point selection
[02:37:51.657]        // -> [__ap <= 0x00000000]
[02:37:51.657]    </block>
[02:37:51.657]  </sequence>
[02:37:51.657]  
[02:37:51.681]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:37:51.681]  
[02:37:51.681]  <debugvars>
[02:37:51.681]    // Pre-defined
[02:37:51.681]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:37:51.681]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:37:51.681]    __dp=0x00000000
[02:37:51.681]    __ap=0x00000000
[02:37:51.681]    __traceout=0x00000000      (Trace Disabled)
[02:37:51.681]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:37:51.681]    __FlashAddr=0x00000000
[02:37:51.681]    __FlashLen=0x00000000
[02:37:51.681]    __FlashArg=0x00000000
[02:37:51.681]    __FlashOp=0x00000000
[02:37:51.681]    __Result=0x00000000
[02:37:51.681]  </debugvars>
[02:37:51.681]  
[02:37:51.681]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:37:51.681]    <block atomic="false" info="">
[02:37:51.681]      __var deviceID = 0;
[02:37:51.681]        // -> [deviceID <= 0x00000000]
[02:37:51.681]      __var version = 0;
[02:37:51.681]        // -> [version <= 0x00000000]
[02:37:51.681]      __var partNum = 0;
[02:37:51.685]        // -> [partNum <= 0x00000000]
[02:37:51.685]      __var manuf = 0;
[02:37:51.685]        // -> [manuf <= 0x00000000]
[02:37:51.685]      __var isMSPM0G1X0X_G3X0X = 0;
[02:37:51.685]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:37:51.685]      __var isProduction = 0;
[02:37:51.685]        // -> [isProduction <= 0x00000000]
[02:37:51.685]      __var continueId = 0;
[02:37:51.685]        // -> [continueId <= 0x00000000]
[02:37:51.685]      deviceID =   Read32(0x41C40004);
[02:37:51.689]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:37:51.689]        // -> [deviceID <= 0x2BB8802F]
[02:37:51.689]      version = deviceID >> 28;
[02:37:51.689]        // -> [version <= 0x00000002]
[02:37:51.689]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:37:51.689]        // -> [partNum <= 0x0000BB88]
[02:37:51.689]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:37:51.689]        // -> [manuf <= 0x00000017]
[02:37:51.689]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:37:51.689]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:37:51.689]      isProduction = (version > 0);
[02:37:51.689]        // -> [isProduction <= 0x00000001]
[02:37:51.689]    </block>
[02:37:51.689]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:37:51.689]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:37:51.689]        // =>  FALSE
[02:37:51.689]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:37:51.689]    </control>
[02:37:51.689]    <control if="continueId == 4" while="" timeout="0" info="">
[02:37:51.689]      // if-block "continueId == 4"
[02:37:51.689]        // =>  FALSE
[02:37:51.689]      // skip if-block "continueId == 4"
[02:37:51.689]    </control>
[02:37:51.689]    <control if="!isProduction" while="" timeout="0" info="">
[02:37:51.689]      // if-block "!isProduction"
[02:37:51.689]        // =>  FALSE
[02:37:51.689]      // skip if-block "!isProduction"
[02:37:51.689]    </control>
[02:37:51.689]  </sequence>
[02:37:51.689]  
[02:37:57.839]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:37:57.839]  
[02:37:57.850]  <debugvars>
[02:37:57.850]    // Pre-defined
[02:37:57.850]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:37:57.850]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:37:57.850]    __dp=0x00000000
[02:37:57.850]    __ap=0x00000000
[02:37:57.850]    __traceout=0x00000000      (Trace Disabled)
[02:37:57.850]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:37:57.851]    __FlashAddr=0x00000000
[02:37:57.851]    __FlashLen=0x00000000
[02:37:57.851]    __FlashArg=0x00000000
[02:37:57.851]    __FlashOp=0x00000000
[02:37:57.851]    __Result=0x00000000
[02:37:57.851]  </debugvars>
[02:37:57.851]  
[02:37:57.851]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:37:57.851]    <block atomic="false" info="">
[02:37:57.851]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:37:57.852]        // -> [isSWJ <= 0x00000001]
[02:37:57.852]      __var hasDormant = __protocol & 0x00020000;
[02:37:57.852]        // -> [hasDormant <= 0x00000000]
[02:37:57.852]      __var protType   = __protocol & 0x0000FFFF;
[02:37:57.852]        // -> [protType <= 0x00000002]
[02:37:57.852]    </block>
[02:37:57.852]    <control if="protType == 1" while="" timeout="0" info="">
[02:37:57.852]      // if-block "protType == 1"
[02:37:57.852]        // =>  FALSE
[02:37:57.852]      // skip if-block "protType == 1"
[02:37:57.852]    </control>
[02:37:57.852]    <control if="protType == 2" while="" timeout="0" info="">
[02:37:57.852]      // if-block "protType == 2"
[02:37:57.853]        // =>  TRUE
[02:37:57.853]      <control if="isSWJ" while="" timeout="0" info="">
[02:37:57.853]        // if-block "isSWJ"
[02:37:57.853]          // =>  TRUE
[02:37:57.853]        <control if="hasDormant" while="" timeout="0" info="">
[02:37:57.853]          // if-block "hasDormant"
[02:37:57.853]            // =>  FALSE
[02:37:57.853]          // skip if-block "hasDormant"
[02:37:57.853]        </control>
[02:37:57.853]        <control if="!hasDormant" while="" timeout="0" info="">
[02:37:57.853]          // if-block "!hasDormant"
[02:37:57.854]            // =>  TRUE
[02:37:57.854]          <block atomic="false" info="">
[02:37:57.854]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:37:57.857]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:37:57.857]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:37:57.860]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:37:57.860]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:37:57.860]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:37:57.860]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:37:57.863]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:37:57.863]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:37:57.863]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:37:57.863]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:37:57.863]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:37:57.863]          </block>
[02:37:57.863]          // end if-block "!hasDormant"
[02:37:57.867]        </control>
[02:37:57.867]        // end if-block "isSWJ"
[02:37:57.867]      </control>
[02:37:57.867]      <control if="!isSWJ" while="" timeout="0" info="">
[02:37:57.867]        // if-block "!isSWJ"
[02:37:57.867]          // =>  FALSE
[02:37:57.867]        // skip if-block "!isSWJ"
[02:37:57.867]      </control>
[02:37:57.867]      <block atomic="false" info="">
[02:37:57.867]        ReadDP(0x0);
[02:37:57.867]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:37:57.867]      </block>
[02:37:57.867]      // end if-block "protType == 2"
[02:37:57.867]    </control>
[02:37:57.867]  </sequence>
[02:37:57.867]  
[02:37:57.875]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:37:57.875]  
[02:37:57.875]  <debugvars>
[02:37:57.875]    // Pre-defined
[02:37:57.879]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:37:57.879]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:37:57.879]    __dp=0x00000000
[02:37:57.879]    __ap=0x00000000
[02:37:57.879]    __traceout=0x00000000      (Trace Disabled)
[02:37:57.879]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:37:57.879]    __FlashAddr=0x00000000
[02:37:57.879]    __FlashLen=0x00000000
[02:37:57.879]    __FlashArg=0x00000000
[02:37:57.879]    __FlashOp=0x00000000
[02:37:57.879]    __Result=0x00000000
[02:37:57.879]  </debugvars>
[02:37:57.879]  
[02:37:57.879]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:37:57.879]    <block atomic="false" info="">
[02:37:57.879]      __var SW_DP_ABORT       = 0x0;
[02:37:57.879]        // -> [SW_DP_ABORT <= 0x00000000]
[02:37:57.879]      __var DP_CTRL_STAT      = 0x4;
[02:37:57.879]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:37:57.879]      __var DP_SELECT         = 0x8;
[02:37:57.879]        // -> [DP_SELECT <= 0x00000008]
[02:37:57.879]      __var powered_down      = 0;
[02:37:57.879]        // -> [powered_down <= 0x00000000]
[02:37:57.879]      WriteDP(DP_SELECT, 0x00000000);
[02:37:57.883]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:37:57.883]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:37:57.883]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:37:57.883]        // -> [powered_down <= 0x00000001]
[02:37:57.883]    </block>
[02:37:57.883]    <control if="powered_down" while="" timeout="0" info="">
[02:37:57.883]      // if-block "powered_down"
[02:37:57.883]        // =>  TRUE
[02:37:57.883]      <block atomic="false" info="">
[02:37:57.883]        Message(0, "Debug/System power-up request sent");
[02:37:57.887]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:37:57.891]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:37:57.891]      </block>
[02:37:57.891]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:37:57.891]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:37:57.891]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:37:57.891]        // while-condition  =>  FALSE
[02:37:57.891]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:37:57.891]      </control>
[02:37:57.891]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:37:57.891]        // if-block "(__protocol & 0xFFFF) == 1"
[02:37:57.891]          // =>  FALSE
[02:37:57.891]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:37:57.891]      </control>
[02:37:57.891]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:37:57.891]        // if-block "(__protocol & 0xFFFF) == 2"
[02:37:57.891]          // =>  TRUE
[02:37:57.891]        <block atomic="false" info="">
[02:37:57.891]          Message(0, "executing SWD power up");
[02:37:57.896]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:37:57.896]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:37:57.896]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:37:57.900]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:37:57.900]        </block>
[02:37:57.900]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:37:57.900]      </control>
[02:37:57.900]      // end if-block "powered_down"
[02:37:57.900]    </control>
[02:37:57.900]    <block atomic="false" info="">
[02:37:57.900]      __var DEBUG_PORT_VAL    = 0;
[02:37:57.900]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:37:57.900]      __var ACCESS_POINT_VAL  = 0;
[02:37:57.900]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:37:57.900]      __ap = 1; 
[02:37:57.900]        // -> [__ap <= 0x00000001]
[02:37:57.900]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:37:57.904]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:37:57.904]      __ap = 4;
[02:37:57.904]        // -> [__ap <= 0x00000004]
[02:37:57.905]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:37:57.908]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:37:57.908]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:37:57.908]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:37:57.908]    </block>
[02:37:57.910]    <block atomic="false" info="">
[02:37:57.910]      __var nReset = 0x80;
[02:37:57.910]        // -> [nReset <= 0x00000080]
[02:37:57.910]      __var canReadPins = 0;
[02:37:57.910]        // -> [canReadPins <= 0x00000000]
[02:37:57.910]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:37:57.910]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:37:57.912]        // -> [canReadPins <= 0x00000001]
[02:37:57.912]    </block>
[02:37:57.912]    <control if="" while="1" timeout="200" info="">
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.912]      // while-condition  =>  TRUE
[02:37:57.912]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.916]      // while-condition  =>  TRUE
[02:37:57.916]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.920]      // while-condition  =>  TRUE
[02:37:57.920]      // while "1"  (timeout="200")
[02:37:57.924]      // while-condition  =>  TRUE
[02:37:57.924]      // while "1"  (timeout="200")
[02:37:57.924]      // while  =>  TIMEOUT
[02:37:57.924]      // end while "1"
[02:37:57.924]    </control>
[02:37:57.924]    <control if="canReadPins" while="" timeout="0" info="">
[02:37:57.924]      // if-block "canReadPins"
[02:37:57.924]        // =>  TRUE
[02:37:57.924]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:37:57.926]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:37:57.926]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:37:57.926]        // while-condition  =>  FALSE
[02:37:57.926]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:37:57.926]      </control>
[02:37:57.926]      // end if-block "canReadPins"
[02:37:57.926]    </control>
[02:37:57.926]    <control if="!canReadPins" while="" timeout="0" info="">
[02:37:57.926]      // if-block "!canReadPins"
[02:37:57.926]        // =>  FALSE
[02:37:57.926]      // skip if-block "!canReadPins"
[02:37:57.926]    </control>
[02:37:57.929]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:37:57.929]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:37:57.929]        // =>  TRUE
[02:37:57.929]      <block atomic="false" info="">
[02:37:57.929]        WriteAP(0x00, 0x190008);
[02:37:57.929]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:37:57.929]        WriteAP(0xF0, 0x01);
[02:37:57.933]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:37:57.933]      </block>
[02:37:57.933]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:37:57.933]    </control>
[02:37:57.933]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:37:57.933]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:37:57.933]        // =>  FALSE
[02:37:57.933]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:37:57.933]    </control>
[02:37:57.933]    <block atomic="false" info="">
[02:37:57.933]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:37:57.945]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:37:57.945]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:37:57.949]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:37:57.949]      __ap = 0; //lets make sure we reset the access point selection
[02:37:57.949]        // -> [__ap <= 0x00000000]
[02:37:57.949]    </block>
[02:37:57.949]  </sequence>
[02:37:57.949]  
[02:37:57.984]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:37:57.984]  
[02:37:57.986]  <debugvars>
[02:37:57.986]    // Pre-defined
[02:37:57.986]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:37:57.986]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:37:57.986]    __dp=0x00000000
[02:37:57.986]    __ap=0x00000000
[02:37:57.986]    __traceout=0x00000000      (Trace Disabled)
[02:37:57.986]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:37:57.986]    __FlashAddr=0x00000000
[02:37:57.986]    __FlashLen=0x00000000
[02:37:57.986]    __FlashArg=0x00000000
[02:37:57.986]    __FlashOp=0x00000000
[02:37:57.986]    __Result=0x00000000
[02:37:57.986]  </debugvars>
[02:37:57.986]  
[02:37:57.986]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:37:57.986]    <block atomic="false" info="">
[02:37:57.986]      __var deviceID = 0;
[02:37:57.986]        // -> [deviceID <= 0x00000000]
[02:37:57.986]      __var version = 0;
[02:37:57.986]        // -> [version <= 0x00000000]
[02:37:57.989]      __var partNum = 0;
[02:37:57.989]        // -> [partNum <= 0x00000000]
[02:37:57.989]      __var manuf = 0;
[02:37:57.989]        // -> [manuf <= 0x00000000]
[02:37:57.989]      __var isMSPM0G1X0X_G3X0X = 0;
[02:37:57.989]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:37:57.989]      __var isProduction = 0;
[02:37:57.989]        // -> [isProduction <= 0x00000000]
[02:37:57.989]      __var continueId = 0;
[02:37:57.989]        // -> [continueId <= 0x00000000]
[02:37:57.989]      deviceID =   Read32(0x41C40004);
[02:37:57.993]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:37:57.993]        // -> [deviceID <= 0x2BB8802F]
[02:37:57.993]      version = deviceID >> 28;
[02:37:57.993]        // -> [version <= 0x00000002]
[02:37:57.993]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:37:57.993]        // -> [partNum <= 0x0000BB88]
[02:37:57.993]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:37:57.993]        // -> [manuf <= 0x00000017]
[02:37:57.993]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:37:57.993]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:37:57.993]      isProduction = (version > 0);
[02:37:57.993]        // -> [isProduction <= 0x00000001]
[02:37:57.993]    </block>
[02:37:57.993]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:37:57.997]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:37:57.997]        // =>  FALSE
[02:37:57.997]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:37:57.997]    </control>
[02:37:57.997]    <control if="continueId == 4" while="" timeout="0" info="">
[02:37:57.997]      // if-block "continueId == 4"
[02:37:57.997]        // =>  FALSE
[02:37:57.997]      // skip if-block "continueId == 4"
[02:37:57.997]    </control>
[02:37:57.997]    <control if="!isProduction" while="" timeout="0" info="">
[02:37:57.997]      // if-block "!isProduction"
[02:37:57.997]        // =>  FALSE
[02:37:57.997]      // skip if-block "!isProduction"
[02:37:57.997]    </control>
[02:37:57.997]  </sequence>
[02:37:57.997]  
[02:38:31.274]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:38:31.274]  
[02:38:31.282]  <debugvars>
[02:38:31.282]    // Pre-defined
[02:38:31.282]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:38:31.282]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:38:31.282]    __dp=0x00000000
[02:38:31.282]    __ap=0x00000000
[02:38:31.282]    __traceout=0x00000000      (Trace Disabled)
[02:38:31.282]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:38:31.282]    __FlashAddr=0x00000000
[02:38:31.282]    __FlashLen=0x00000000
[02:38:31.282]    __FlashArg=0x00000000
[02:38:31.282]    __FlashOp=0x00000000
[02:38:31.282]    __Result=0x00000000
[02:38:31.282]  </debugvars>
[02:38:31.282]  
[02:38:31.282]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:38:31.282]    <block atomic="false" info="">
[02:38:31.282]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:38:31.282]        // -> [isSWJ <= 0x00000001]
[02:38:31.282]      __var hasDormant = __protocol & 0x00020000;
[02:38:31.282]        // -> [hasDormant <= 0x00000000]
[02:38:31.282]      __var protType   = __protocol & 0x0000FFFF;
[02:38:31.282]        // -> [protType <= 0x00000002]
[02:38:31.282]    </block>
[02:38:31.282]    <control if="protType == 1" while="" timeout="0" info="">
[02:38:31.282]      // if-block "protType == 1"
[02:38:31.285]        // =>  FALSE
[02:38:31.285]      // skip if-block "protType == 1"
[02:38:31.285]    </control>
[02:38:31.285]    <control if="protType == 2" while="" timeout="0" info="">
[02:38:31.285]      // if-block "protType == 2"
[02:38:31.285]        // =>  TRUE
[02:38:31.285]      <control if="isSWJ" while="" timeout="0" info="">
[02:38:31.285]        // if-block "isSWJ"
[02:38:31.285]          // =>  TRUE
[02:38:31.285]        <control if="hasDormant" while="" timeout="0" info="">
[02:38:31.285]          // if-block "hasDormant"
[02:38:31.285]            // =>  FALSE
[02:38:31.285]          // skip if-block "hasDormant"
[02:38:31.285]        </control>
[02:38:31.285]        <control if="!hasDormant" while="" timeout="0" info="">
[02:38:31.285]          // if-block "!hasDormant"
[02:38:31.285]            // =>  TRUE
[02:38:31.285]          <block atomic="false" info="">
[02:38:31.285]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:38:31.287]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:38:31.287]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:38:31.290]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:38:31.290]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:38:31.291]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:38:31.291]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:38:31.291]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:38:31.291]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:38:31.293]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:38:31.293]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:38:31.293]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:38:31.293]          </block>
[02:38:31.293]          // end if-block "!hasDormant"
[02:38:31.293]        </control>
[02:38:31.293]        // end if-block "isSWJ"
[02:38:31.293]      </control>
[02:38:31.293]      <control if="!isSWJ" while="" timeout="0" info="">
[02:38:31.293]        // if-block "!isSWJ"
[02:38:31.293]          // =>  FALSE
[02:38:31.293]        // skip if-block "!isSWJ"
[02:38:31.293]      </control>
[02:38:31.293]      <block atomic="false" info="">
[02:38:31.297]        ReadDP(0x0);
[02:38:31.297]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:38:31.297]      </block>
[02:38:31.297]      // end if-block "protType == 2"
[02:38:31.297]    </control>
[02:38:31.297]  </sequence>
[02:38:31.297]  
[02:38:31.301]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:38:31.301]  
[02:38:31.301]  <debugvars>
[02:38:31.301]    // Pre-defined
[02:38:31.301]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:38:31.301]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:38:31.301]    __dp=0x00000000
[02:38:31.301]    __ap=0x00000000
[02:38:31.301]    __traceout=0x00000000      (Trace Disabled)
[02:38:31.301]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:38:31.301]    __FlashAddr=0x00000000
[02:38:31.301]    __FlashLen=0x00000000
[02:38:31.301]    __FlashArg=0x00000000
[02:38:31.301]    __FlashOp=0x00000000
[02:38:31.301]    __Result=0x00000000
[02:38:31.301]  </debugvars>
[02:38:31.301]  
[02:38:31.301]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:38:31.301]    <block atomic="false" info="">
[02:38:31.301]      __var SW_DP_ABORT       = 0x0;
[02:38:31.301]        // -> [SW_DP_ABORT <= 0x00000000]
[02:38:31.301]      __var DP_CTRL_STAT      = 0x4;
[02:38:31.301]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:38:31.301]      __var DP_SELECT         = 0x8;
[02:38:31.301]        // -> [DP_SELECT <= 0x00000008]
[02:38:31.301]      __var powered_down      = 0;
[02:38:31.301]        // -> [powered_down <= 0x00000000]
[02:38:31.301]      WriteDP(DP_SELECT, 0x00000000);
[02:38:31.306]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:38:31.306]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:38:31.307]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:38:31.307]        // -> [powered_down <= 0x00000001]
[02:38:31.307]    </block>
[02:38:31.307]    <control if="powered_down" while="" timeout="0" info="">
[02:38:31.310]      // if-block "powered_down"
[02:38:31.310]        // =>  TRUE
[02:38:31.310]      <block atomic="false" info="">
[02:38:31.310]        Message(0, "Debug/System power-up request sent");
[02:38:31.311]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:38:31.313]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:38:31.313]      </block>
[02:38:31.313]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:38:31.313]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:38:31.314]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:38:31.314]        // while-condition  =>  FALSE
[02:38:31.316]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:38:31.316]      </control>
[02:38:31.316]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:38:31.316]        // if-block "(__protocol & 0xFFFF) == 1"
[02:38:31.316]          // =>  FALSE
[02:38:31.316]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:38:31.316]      </control>
[02:38:31.316]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:38:31.316]        // if-block "(__protocol & 0xFFFF) == 2"
[02:38:31.316]          // =>  TRUE
[02:38:31.316]        <block atomic="false" info="">
[02:38:31.316]          Message(0, "executing SWD power up");
[02:38:31.317]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:38:31.320]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:38:31.320]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:38:31.327]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:38:31.327]        </block>
[02:38:31.328]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:38:31.328]      </control>
[02:38:31.328]      // end if-block "powered_down"
[02:38:31.328]    </control>
[02:38:31.328]    <block atomic="false" info="">
[02:38:31.328]      __var DEBUG_PORT_VAL    = 0;
[02:38:31.328]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:38:31.328]      __var ACCESS_POINT_VAL  = 0;
[02:38:31.328]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:38:31.328]      __ap = 1; 
[02:38:31.328]        // -> [__ap <= 0x00000001]
[02:38:31.328]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:38:31.330]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:38:31.330]      __ap = 4;
[02:38:31.330]        // -> [__ap <= 0x00000004]
[02:38:31.330]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:38:31.337]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:38:31.337]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:38:31.337]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:38:31.340]    </block>
[02:38:31.340]    <block atomic="false" info="">
[02:38:31.340]      __var nReset = 0x80;
[02:38:31.340]        // -> [nReset <= 0x00000080]
[02:38:31.340]      __var canReadPins = 0;
[02:38:31.340]        // -> [canReadPins <= 0x00000000]
[02:38:31.340]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:38:31.343]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:38:31.343]        // -> [canReadPins <= 0x00000001]
[02:38:31.343]    </block>
[02:38:31.343]    <control if="" while="1" timeout="200" info="">
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.343]      // while "1"  (timeout="200")
[02:38:31.343]      // while-condition  =>  TRUE
[02:38:31.345]      // while "1"  (timeout="200")
[02:38:31.345]      // while  =>  TIMEOUT
[02:38:31.345]      // end while "1"
[02:38:31.345]    </control>
[02:38:31.345]    <control if="canReadPins" while="" timeout="0" info="">
[02:38:31.345]      // if-block "canReadPins"
[02:38:31.345]        // =>  TRUE
[02:38:31.345]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:38:31.345]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:38:31.347]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:38:31.347]        // while-condition  =>  FALSE
[02:38:31.347]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:38:31.347]      </control>
[02:38:31.347]      // end if-block "canReadPins"
[02:38:31.347]    </control>
[02:38:31.347]    <control if="!canReadPins" while="" timeout="0" info="">
[02:38:31.348]      // if-block "!canReadPins"
[02:38:31.348]        // =>  FALSE
[02:38:31.348]      // skip if-block "!canReadPins"
[02:38:31.348]    </control>
[02:38:31.348]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:38:31.348]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:38:31.348]        // =>  TRUE
[02:38:31.348]      <block atomic="false" info="">
[02:38:31.348]        WriteAP(0x00, 0x190008);
[02:38:31.350]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:38:31.350]        WriteAP(0xF0, 0x01);
[02:38:31.353]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:38:31.353]      </block>
[02:38:31.353]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:38:31.353]    </control>
[02:38:31.353]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:38:31.353]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:38:31.353]        // =>  FALSE
[02:38:31.353]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:38:31.353]    </control>
[02:38:31.353]    <block atomic="false" info="">
[02:38:31.353]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:38:31.358]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:38:31.358]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:38:31.358]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:38:31.360]      __ap = 0; //lets make sure we reset the access point selection
[02:38:31.360]        // -> [__ap <= 0x00000000]
[02:38:31.360]    </block>
[02:38:31.360]  </sequence>
[02:38:31.360]  
[02:38:31.386]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:38:31.386]  
[02:38:31.386]  <debugvars>
[02:38:31.386]    // Pre-defined
[02:38:31.386]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:38:31.386]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:38:31.386]    __dp=0x00000000
[02:38:31.386]    __ap=0x00000000
[02:38:31.386]    __traceout=0x00000000      (Trace Disabled)
[02:38:31.386]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:38:31.386]    __FlashAddr=0x00000000
[02:38:31.386]    __FlashLen=0x00000000
[02:38:31.386]    __FlashArg=0x00000000
[02:38:31.386]    __FlashOp=0x00000000
[02:38:31.386]    __Result=0x00000000
[02:38:31.386]  </debugvars>
[02:38:31.386]  
[02:38:31.386]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:38:31.388]    <block atomic="false" info="">
[02:38:31.388]      __var deviceID = 0;
[02:38:31.388]        // -> [deviceID <= 0x00000000]
[02:38:31.388]      __var version = 0;
[02:38:31.388]        // -> [version <= 0x00000000]
[02:38:31.388]      __var partNum = 0;
[02:38:31.388]        // -> [partNum <= 0x00000000]
[02:38:31.388]      __var manuf = 0;
[02:38:31.388]        // -> [manuf <= 0x00000000]
[02:38:31.388]      __var isMSPM0G1X0X_G3X0X = 0;
[02:38:31.388]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:38:31.389]      __var isProduction = 0;
[02:38:31.389]        // -> [isProduction <= 0x00000000]
[02:38:31.389]      __var continueId = 0;
[02:38:31.389]        // -> [continueId <= 0x00000000]
[02:38:31.389]      deviceID =   Read32(0x41C40004);
[02:38:31.393]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:38:31.393]        // -> [deviceID <= 0x2BB8802F]
[02:38:31.393]      version = deviceID >> 28;
[02:38:31.393]        // -> [version <= 0x00000002]
[02:38:31.393]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:38:31.393]        // -> [partNum <= 0x0000BB88]
[02:38:31.393]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:38:31.393]        // -> [manuf <= 0x00000017]
[02:38:31.393]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:38:31.393]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:38:31.393]      isProduction = (version > 0);
[02:38:31.393]        // -> [isProduction <= 0x00000001]
[02:38:31.393]    </block>
[02:38:31.393]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:38:31.393]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:38:31.393]        // =>  FALSE
[02:38:31.393]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:38:31.393]    </control>
[02:38:31.393]    <control if="continueId == 4" while="" timeout="0" info="">
[02:38:31.393]      // if-block "continueId == 4"
[02:38:31.393]        // =>  FALSE
[02:38:31.393]      // skip if-block "continueId == 4"
[02:38:31.393]    </control>
[02:38:31.393]    <control if="!isProduction" while="" timeout="0" info="">
[02:38:31.393]      // if-block "!isProduction"
[02:38:31.393]        // =>  FALSE
[02:38:31.393]      // skip if-block "!isProduction"
[02:38:31.393]    </control>
[02:38:31.393]  </sequence>
[02:38:31.393]  
[02:38:37.749]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:38:37.749]  
[02:38:37.749]  <debugvars>
[02:38:37.749]    // Pre-defined
[02:38:37.749]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:38:37.749]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:38:37.749]    __dp=0x00000000
[02:38:37.749]    __ap=0x00000000
[02:38:37.749]    __traceout=0x00000000      (Trace Disabled)
[02:38:37.749]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:38:37.749]    __FlashAddr=0x00000000
[02:38:37.749]    __FlashLen=0x00000000
[02:38:37.751]    __FlashArg=0x00000000
[02:38:37.751]    __FlashOp=0x00000000
[02:38:37.751]    __Result=0x00000000
[02:38:37.751]  </debugvars>
[02:38:37.751]  
[02:38:37.751]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:38:37.751]    <block atomic="false" info="">
[02:38:37.751]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:38:37.751]        // -> [isSWJ <= 0x00000001]
[02:38:37.751]      __var hasDormant = __protocol & 0x00020000;
[02:38:37.752]        // -> [hasDormant <= 0x00000000]
[02:38:37.752]      __var protType   = __protocol & 0x0000FFFF;
[02:38:37.752]        // -> [protType <= 0x00000002]
[02:38:37.752]    </block>
[02:38:37.752]    <control if="protType == 1" while="" timeout="0" info="">
[02:38:37.752]      // if-block "protType == 1"
[02:38:37.752]        // =>  FALSE
[02:38:37.752]      // skip if-block "protType == 1"
[02:38:37.752]    </control>
[02:38:37.752]    <control if="protType == 2" while="" timeout="0" info="">
[02:38:37.752]      // if-block "protType == 2"
[02:38:37.753]        // =>  TRUE
[02:38:37.753]      <control if="isSWJ" while="" timeout="0" info="">
[02:38:37.753]        // if-block "isSWJ"
[02:38:37.753]          // =>  TRUE
[02:38:37.753]        <control if="hasDormant" while="" timeout="0" info="">
[02:38:37.753]          // if-block "hasDormant"
[02:38:37.753]            // =>  FALSE
[02:38:37.753]          // skip if-block "hasDormant"
[02:38:37.753]        </control>
[02:38:37.754]        <control if="!hasDormant" while="" timeout="0" info="">
[02:38:37.754]          // if-block "!hasDormant"
[02:38:37.754]            // =>  TRUE
[02:38:37.754]          <block atomic="false" info="">
[02:38:37.754]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:38:37.755]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:38:37.755]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:38:37.757]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:38:37.757]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:38:37.760]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:38:37.760]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:38:37.762]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:38:37.762]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:38:37.763]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:38:37.763]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:38:37.763]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:38:37.763]          </block>
[02:38:37.763]          // end if-block "!hasDormant"
[02:38:37.763]        </control>
[02:38:37.763]        // end if-block "isSWJ"
[02:38:37.763]      </control>
[02:38:37.763]      <control if="!isSWJ" while="" timeout="0" info="">
[02:38:37.763]        // if-block "!isSWJ"
[02:38:37.763]          // =>  FALSE
[02:38:37.766]        // skip if-block "!isSWJ"
[02:38:37.766]      </control>
[02:38:37.766]      <block atomic="false" info="">
[02:38:37.766]        ReadDP(0x0);
[02:38:37.767]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:38:37.767]      </block>
[02:38:37.767]      // end if-block "protType == 2"
[02:38:37.767]    </control>
[02:38:37.767]  </sequence>
[02:38:37.767]  
[02:38:37.770]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:38:37.770]  
[02:38:37.770]  <debugvars>
[02:38:37.770]    // Pre-defined
[02:38:37.771]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:38:37.771]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:38:37.771]    __dp=0x00000000
[02:38:37.771]    __ap=0x00000000
[02:38:37.771]    __traceout=0x00000000      (Trace Disabled)
[02:38:37.771]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:38:37.771]    __FlashAddr=0x00000000
[02:38:37.771]    __FlashLen=0x00000000
[02:38:37.771]    __FlashArg=0x00000000
[02:38:37.771]    __FlashOp=0x00000000
[02:38:37.771]    __Result=0x00000000
[02:38:37.771]  </debugvars>
[02:38:37.771]  
[02:38:37.771]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:38:37.771]    <block atomic="false" info="">
[02:38:37.773]      __var SW_DP_ABORT       = 0x0;
[02:38:37.773]        // -> [SW_DP_ABORT <= 0x00000000]
[02:38:37.773]      __var DP_CTRL_STAT      = 0x4;
[02:38:37.773]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:38:37.773]      __var DP_SELECT         = 0x8;
[02:38:37.773]        // -> [DP_SELECT <= 0x00000008]
[02:38:37.773]      __var powered_down      = 0;
[02:38:37.773]        // -> [powered_down <= 0x00000000]
[02:38:37.773]      WriteDP(DP_SELECT, 0x00000000);
[02:38:37.777]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:38:37.777]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:38:37.779]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:38:37.779]        // -> [powered_down <= 0x00000001]
[02:38:37.779]    </block>
[02:38:37.780]    <control if="powered_down" while="" timeout="0" info="">
[02:38:37.780]      // if-block "powered_down"
[02:38:37.780]        // =>  TRUE
[02:38:37.780]      <block atomic="false" info="">
[02:38:37.780]        Message(0, "Debug/System power-up request sent");
[02:38:37.781]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:38:37.783]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:38:37.783]      </block>
[02:38:37.783]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:38:37.783]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:38:37.785]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:38:37.785]        // while-condition  =>  FALSE
[02:38:37.785]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:38:37.785]      </control>
[02:38:37.785]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:38:37.785]        // if-block "(__protocol & 0xFFFF) == 1"
[02:38:37.785]          // =>  FALSE
[02:38:37.785]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:38:37.785]      </control>
[02:38:37.785]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:38:37.785]        // if-block "(__protocol & 0xFFFF) == 2"
[02:38:37.785]          // =>  TRUE
[02:38:37.787]        <block atomic="false" info="">
[02:38:37.787]          Message(0, "executing SWD power up");
[02:38:37.788]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:38:37.792]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:38:37.792]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:38:37.796]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:38:37.796]        </block>
[02:38:37.796]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:38:37.796]      </control>
[02:38:37.796]      // end if-block "powered_down"
[02:38:37.796]    </control>
[02:38:37.796]    <block atomic="false" info="">
[02:38:37.796]      __var DEBUG_PORT_VAL    = 0;
[02:38:37.796]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:38:37.796]      __var ACCESS_POINT_VAL  = 0;
[02:38:37.796]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:38:37.796]      __ap = 1; 
[02:38:37.797]        // -> [__ap <= 0x00000001]
[02:38:37.797]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:38:37.801]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:38:37.801]      __ap = 4;
[02:38:37.801]        // -> [__ap <= 0x00000004]
[02:38:37.801]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:38:37.805]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:38:37.805]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:38:37.805]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:38:37.807]    </block>
[02:38:37.807]    <block atomic="false" info="">
[02:38:37.807]      __var nReset = 0x80;
[02:38:37.807]        // -> [nReset <= 0x00000080]
[02:38:37.807]      __var canReadPins = 0;
[02:38:37.807]        // -> [canReadPins <= 0x00000000]
[02:38:37.807]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:38:37.809]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:38:37.809]        // -> [canReadPins <= 0x00000001]
[02:38:37.809]    </block>
[02:38:37.809]    <control if="" while="1" timeout="200" info="">
[02:38:37.809]      // while "1"  (timeout="200")
[02:38:37.809]      // while-condition  =>  TRUE
[02:38:37.809]      // while "1"  (timeout="200")
[02:38:37.809]      // while-condition  =>  TRUE
[02:38:37.809]      // while "1"  (timeout="200")
[02:38:37.809]      // while-condition  =>  TRUE
[02:38:37.812]      // while "1"  (timeout="200")
[02:38:37.812]      // while-condition  =>  TRUE
[02:38:37.812]      // while "1"  (timeout="200")
[02:38:37.812]      // while-condition  =>  TRUE
[02:38:37.812]      // while "1"  (timeout="200")
[02:38:37.812]      // while-condition  =>  TRUE
[02:38:37.812]      // while "1"  (timeout="200")
[02:38:37.812]      // while-condition  =>  TRUE
[02:38:37.812]      // while "1"  (timeout="200")
[02:38:37.812]      // while-condition  =>  TRUE
[02:38:37.812]      // while "1"  (timeout="200")
[02:38:37.812]      // while-condition  =>  TRUE
[02:38:37.812]      // while "1"  (timeout="200")
[02:38:37.812]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.813]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.813]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.813]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.813]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.813]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.813]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.813]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.813]      // while-condition  =>  TRUE
[02:38:37.813]      // while "1"  (timeout="200")
[02:38:37.815]      // while-condition  =>  TRUE
[02:38:37.815]      // while "1"  (timeout="200")
[02:38:37.815]      // while  =>  TIMEOUT
[02:38:37.815]      // end while "1"
[02:38:37.815]    </control>
[02:38:37.815]    <control if="canReadPins" while="" timeout="0" info="">
[02:38:37.815]      // if-block "canReadPins"
[02:38:37.815]        // =>  TRUE
[02:38:37.815]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:38:37.815]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:38:37.817]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:38:37.817]        // while-condition  =>  FALSE
[02:38:37.817]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:38:37.817]      </control>
[02:38:37.817]      // end if-block "canReadPins"
[02:38:37.817]    </control>
[02:38:37.817]    <control if="!canReadPins" while="" timeout="0" info="">
[02:38:37.817]      // if-block "!canReadPins"
[02:38:37.817]        // =>  FALSE
[02:38:37.817]      // skip if-block "!canReadPins"
[02:38:37.817]    </control>
[02:38:37.817]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:38:37.817]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:38:37.819]        // =>  TRUE
[02:38:37.819]      <block atomic="false" info="">
[02:38:37.819]        WriteAP(0x00, 0x190008);
[02:38:37.820]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:38:37.820]        WriteAP(0xF0, 0x01);
[02:38:37.822]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:38:37.822]      </block>
[02:38:37.822]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:38:37.822]    </control>
[02:38:37.822]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:38:37.822]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:38:37.822]        // =>  FALSE
[02:38:37.822]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:38:37.822]    </control>
[02:38:37.822]    <block atomic="false" info="">
[02:38:37.822]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:38:37.829]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:38:37.829]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:38:37.829]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:38:37.830]      __ap = 0; //lets make sure we reset the access point selection
[02:38:37.830]        // -> [__ap <= 0x00000000]
[02:38:37.830]    </block>
[02:38:37.830]  </sequence>
[02:38:37.830]  
[02:38:37.849]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:38:37.849]  
[02:38:37.851]  <debugvars>
[02:38:37.851]    // Pre-defined
[02:38:37.851]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:38:37.851]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:38:37.851]    __dp=0x00000000
[02:38:37.851]    __ap=0x00000000
[02:38:37.851]    __traceout=0x00000000      (Trace Disabled)
[02:38:37.851]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:38:37.851]    __FlashAddr=0x00000000
[02:38:37.851]    __FlashLen=0x00000000
[02:38:37.851]    __FlashArg=0x00000000
[02:38:37.851]    __FlashOp=0x00000000
[02:38:37.851]    __Result=0x00000000
[02:38:37.851]  </debugvars>
[02:38:37.851]  
[02:38:37.851]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:38:37.851]    <block atomic="false" info="">
[02:38:37.851]      __var deviceID = 0;
[02:38:37.851]        // -> [deviceID <= 0x00000000]
[02:38:37.851]      __var version = 0;
[02:38:37.851]        // -> [version <= 0x00000000]
[02:38:37.853]      __var partNum = 0;
[02:38:37.853]        // -> [partNum <= 0x00000000]
[02:38:37.853]      __var manuf = 0;
[02:38:37.853]        // -> [manuf <= 0x00000000]
[02:38:37.853]      __var isMSPM0G1X0X_G3X0X = 0;
[02:38:37.853]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:38:37.853]      __var isProduction = 0;
[02:38:37.854]        // -> [isProduction <= 0x00000000]
[02:38:37.854]      __var continueId = 0;
[02:38:37.854]        // -> [continueId <= 0x00000000]
[02:38:37.854]      deviceID =   Read32(0x41C40004);
[02:38:37.862]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:38:37.862]        // -> [deviceID <= 0x2BB8802F]
[02:38:37.862]      version = deviceID >> 28;
[02:38:37.866]        // -> [version <= 0x00000002]
[02:38:37.866]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:38:37.866]        // -> [partNum <= 0x0000BB88]
[02:38:37.866]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:38:37.866]        // -> [manuf <= 0x00000017]
[02:38:37.866]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:38:37.866]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:38:37.866]      isProduction = (version > 0);
[02:38:37.866]        // -> [isProduction <= 0x00000001]
[02:38:37.866]    </block>
[02:38:37.866]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:38:37.866]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:38:37.866]        // =>  FALSE
[02:38:37.866]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:38:37.866]    </control>
[02:38:37.866]    <control if="continueId == 4" while="" timeout="0" info="">
[02:38:37.866]      // if-block "continueId == 4"
[02:38:37.866]        // =>  FALSE
[02:38:37.866]      // skip if-block "continueId == 4"
[02:38:37.866]    </control>
[02:38:37.866]    <control if="!isProduction" while="" timeout="0" info="">
[02:38:37.866]      // if-block "!isProduction"
[02:38:37.866]        // =>  FALSE
[02:38:37.866]      // skip if-block "!isProduction"
[02:38:37.866]    </control>
[02:38:37.866]  </sequence>
[02:38:37.866]  
[02:39:12.374]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:39:12.374]  
[02:39:12.374]  <debugvars>
[02:39:12.374]    // Pre-defined
[02:39:12.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:39:12.374]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:39:12.374]    __dp=0x00000000
[02:39:12.374]    __ap=0x00000000
[02:39:12.374]    __traceout=0x00000000      (Trace Disabled)
[02:39:12.374]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:39:12.374]    __FlashAddr=0x00000000
[02:39:12.374]    __FlashLen=0x00000000
[02:39:12.378]    __FlashArg=0x00000000
[02:39:12.378]    __FlashOp=0x00000000
[02:39:12.378]    __Result=0x00000000
[02:39:12.378]  </debugvars>
[02:39:12.378]  
[02:39:12.378]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:39:12.378]    <block atomic="false" info="">
[02:39:12.378]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:39:12.378]        // -> [isSWJ <= 0x00000001]
[02:39:12.378]      __var hasDormant = __protocol & 0x00020000;
[02:39:12.378]        // -> [hasDormant <= 0x00000000]
[02:39:12.378]      __var protType   = __protocol & 0x0000FFFF;
[02:39:12.378]        // -> [protType <= 0x00000002]
[02:39:12.378]    </block>
[02:39:12.378]    <control if="protType == 1" while="" timeout="0" info="">
[02:39:12.378]      // if-block "protType == 1"
[02:39:12.378]        // =>  FALSE
[02:39:12.378]      // skip if-block "protType == 1"
[02:39:12.378]    </control>
[02:39:12.378]    <control if="protType == 2" while="" timeout="0" info="">
[02:39:12.378]      // if-block "protType == 2"
[02:39:12.378]        // =>  TRUE
[02:39:12.378]      <control if="isSWJ" while="" timeout="0" info="">
[02:39:12.378]        // if-block "isSWJ"
[02:39:12.378]          // =>  TRUE
[02:39:12.378]        <control if="hasDormant" while="" timeout="0" info="">
[02:39:12.378]          // if-block "hasDormant"
[02:39:12.378]            // =>  FALSE
[02:39:12.378]          // skip if-block "hasDormant"
[02:39:12.378]        </control>
[02:39:12.382]        <control if="!hasDormant" while="" timeout="0" info="">
[02:39:12.382]          // if-block "!hasDormant"
[02:39:12.382]            // =>  TRUE
[02:39:12.382]          <block atomic="false" info="">
[02:39:12.382]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:39:12.382]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:39:12.382]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:39:12.390]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:39:12.390]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:39:12.390]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:39:12.390]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:39:12.390]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:39:12.390]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:39:12.394]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:39:12.394]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:39:12.394]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:39:12.394]          </block>
[02:39:12.394]          // end if-block "!hasDormant"
[02:39:12.394]        </control>
[02:39:12.394]        // end if-block "isSWJ"
[02:39:12.394]      </control>
[02:39:12.394]      <control if="!isSWJ" while="" timeout="0" info="">
[02:39:12.394]        // if-block "!isSWJ"
[02:39:12.394]          // =>  FALSE
[02:39:12.394]        // skip if-block "!isSWJ"
[02:39:12.394]      </control>
[02:39:12.394]      <block atomic="false" info="">
[02:39:12.398]        ReadDP(0x0);
[02:39:12.403]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:39:12.403]      </block>
[02:39:12.403]      // end if-block "protType == 2"
[02:39:12.403]    </control>
[02:39:12.403]  </sequence>
[02:39:12.403]  
[02:39:12.406]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:39:12.406]  
[02:39:12.406]  <debugvars>
[02:39:12.406]    // Pre-defined
[02:39:12.406]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:39:12.406]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:39:12.406]    __dp=0x00000000
[02:39:12.406]    __ap=0x00000000
[02:39:12.406]    __traceout=0x00000000      (Trace Disabled)
[02:39:12.406]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:39:12.406]    __FlashAddr=0x00000000
[02:39:12.406]    __FlashLen=0x00000000
[02:39:12.406]    __FlashArg=0x00000000
[02:39:12.406]    __FlashOp=0x00000000
[02:39:12.406]    __Result=0x00000000
[02:39:12.406]  </debugvars>
[02:39:12.406]  
[02:39:12.406]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:39:12.406]    <block atomic="false" info="">
[02:39:12.410]      __var SW_DP_ABORT       = 0x0;
[02:39:12.410]        // -> [SW_DP_ABORT <= 0x00000000]
[02:39:12.410]      __var DP_CTRL_STAT      = 0x4;
[02:39:12.410]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:39:12.410]      __var DP_SELECT         = 0x8;
[02:39:12.410]        // -> [DP_SELECT <= 0x00000008]
[02:39:12.410]      __var powered_down      = 0;
[02:39:12.410]        // -> [powered_down <= 0x00000000]
[02:39:12.410]      WriteDP(DP_SELECT, 0x00000000);
[02:39:12.414]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:39:12.414]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:39:12.418]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:39:12.418]        // -> [powered_down <= 0x00000001]
[02:39:12.418]    </block>
[02:39:12.418]    <control if="powered_down" while="" timeout="0" info="">
[02:39:12.418]      // if-block "powered_down"
[02:39:12.418]        // =>  TRUE
[02:39:12.418]      <block atomic="false" info="">
[02:39:12.418]        Message(0, "Debug/System power-up request sent");
[02:39:12.418]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:39:12.422]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:39:12.422]      </block>
[02:39:12.422]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:39:12.422]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:39:12.427]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:39:12.427]        // while-condition  =>  FALSE
[02:39:12.427]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:39:12.427]      </control>
[02:39:12.427]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:39:12.427]        // if-block "(__protocol & 0xFFFF) == 1"
[02:39:12.427]          // =>  FALSE
[02:39:12.427]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:39:12.427]      </control>
[02:39:12.427]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:39:12.427]        // if-block "(__protocol & 0xFFFF) == 2"
[02:39:12.427]          // =>  TRUE
[02:39:12.427]        <block atomic="false" info="">
[02:39:12.427]          Message(0, "executing SWD power up");
[02:39:12.427]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:39:12.431]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:39:12.431]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:39:12.431]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:39:12.431]        </block>
[02:39:12.431]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:39:12.431]      </control>
[02:39:12.431]      // end if-block "powered_down"
[02:39:12.431]    </control>
[02:39:12.435]    <block atomic="false" info="">
[02:39:12.435]      __var DEBUG_PORT_VAL    = 0;
[02:39:12.435]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:39:12.435]      __var ACCESS_POINT_VAL  = 0;
[02:39:12.435]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:39:12.435]      __ap = 1; 
[02:39:12.435]        // -> [__ap <= 0x00000001]
[02:39:12.435]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:39:12.440]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:39:12.440]      __ap = 4;
[02:39:12.440]        // -> [__ap <= 0x00000004]
[02:39:12.440]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:39:12.447]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:39:12.447]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:39:12.447]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:39:12.451]    </block>
[02:39:12.451]    <block atomic="false" info="">
[02:39:12.451]      __var nReset = 0x80;
[02:39:12.451]        // -> [nReset <= 0x00000080]
[02:39:12.451]      __var canReadPins = 0;
[02:39:12.451]        // -> [canReadPins <= 0x00000000]
[02:39:12.451]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:39:12.451]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:39:12.451]        // -> [canReadPins <= 0x00000001]
[02:39:12.451]    </block>
[02:39:12.451]    <control if="" while="1" timeout="200" info="">
[02:39:12.451]      // while "1"  (timeout="200")
[02:39:12.451]      // while-condition  =>  TRUE
[02:39:12.455]      // while "1"  (timeout="200")
[02:39:12.455]      // while  =>  TIMEOUT
[02:39:12.455]      // end while "1"
[02:39:12.455]    </control>
[02:39:12.455]    <control if="canReadPins" while="" timeout="0" info="">
[02:39:12.455]      // if-block "canReadPins"
[02:39:12.455]        // =>  TRUE
[02:39:12.455]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:39:12.455]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:39:12.457]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:39:12.458]        // while-condition  =>  FALSE
[02:39:12.458]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:39:12.458]      </control>
[02:39:12.458]      // end if-block "canReadPins"
[02:39:12.458]    </control>
[02:39:12.458]    <control if="!canReadPins" while="" timeout="0" info="">
[02:39:12.458]      // if-block "!canReadPins"
[02:39:12.458]        // =>  FALSE
[02:39:12.458]      // skip if-block "!canReadPins"
[02:39:12.458]    </control>
[02:39:12.459]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:39:12.459]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:39:12.459]        // =>  TRUE
[02:39:12.459]      <block atomic="false" info="">
[02:39:12.459]        WriteAP(0x00, 0x190008);
[02:39:12.460]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:39:12.460]        WriteAP(0xF0, 0x01);
[02:39:12.464]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:39:12.464]      </block>
[02:39:12.464]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:39:12.464]    </control>
[02:39:12.464]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:39:12.464]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:39:12.466]        // =>  FALSE
[02:39:12.466]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:39:12.466]    </control>
[02:39:12.466]    <block atomic="false" info="">
[02:39:12.466]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:39:12.469]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:39:12.469]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:39:12.469]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:39:12.472]      __ap = 0; //lets make sure we reset the access point selection
[02:39:12.472]        // -> [__ap <= 0x00000000]
[02:39:12.472]    </block>
[02:39:12.472]  </sequence>
[02:39:12.472]  
[02:39:12.497]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:39:12.497]  
[02:39:12.497]  <debugvars>
[02:39:12.498]    // Pre-defined
[02:39:12.498]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:39:12.498]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:39:12.498]    __dp=0x00000000
[02:39:12.498]    __ap=0x00000000
[02:39:12.498]    __traceout=0x00000000      (Trace Disabled)
[02:39:12.498]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:39:12.498]    __FlashAddr=0x00000000
[02:39:12.498]    __FlashLen=0x00000000
[02:39:12.498]    __FlashArg=0x00000000
[02:39:12.498]    __FlashOp=0x00000000
[02:39:12.498]    __Result=0x00000000
[02:39:12.499]  </debugvars>
[02:39:12.499]  
[02:39:12.499]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:39:12.499]    <block atomic="false" info="">
[02:39:12.499]      __var deviceID = 0;
[02:39:12.499]        // -> [deviceID <= 0x00000000]
[02:39:12.499]      __var version = 0;
[02:39:12.499]        // -> [version <= 0x00000000]
[02:39:12.499]      __var partNum = 0;
[02:39:12.499]        // -> [partNum <= 0x00000000]
[02:39:12.499]      __var manuf = 0;
[02:39:12.500]        // -> [manuf <= 0x00000000]
[02:39:12.500]      __var isMSPM0G1X0X_G3X0X = 0;
[02:39:12.500]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:39:12.500]      __var isProduction = 0;
[02:39:12.500]        // -> [isProduction <= 0x00000000]
[02:39:12.500]      __var continueId = 0;
[02:39:12.500]        // -> [continueId <= 0x00000000]
[02:39:12.500]      deviceID =   Read32(0x41C40004);
[02:39:12.512]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:39:12.512]        // -> [deviceID <= 0x2BB8802F]
[02:39:12.512]      version = deviceID >> 28;
[02:39:12.512]        // -> [version <= 0x00000002]
[02:39:12.512]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:39:12.512]        // -> [partNum <= 0x0000BB88]
[02:39:12.512]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:39:12.513]        // -> [manuf <= 0x00000017]
[02:39:12.513]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:39:12.513]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:39:12.513]      isProduction = (version > 0);
[02:39:12.513]        // -> [isProduction <= 0x00000001]
[02:39:12.513]    </block>
[02:39:12.513]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:39:12.513]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:39:12.514]        // =>  FALSE
[02:39:12.514]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:39:12.514]    </control>
[02:39:12.514]    <control if="continueId == 4" while="" timeout="0" info="">
[02:39:12.514]      // if-block "continueId == 4"
[02:39:12.514]        // =>  FALSE
[02:39:12.514]      // skip if-block "continueId == 4"
[02:39:12.514]    </control>
[02:39:12.514]    <control if="!isProduction" while="" timeout="0" info="">
[02:39:12.514]      // if-block "!isProduction"
[02:39:12.514]        // =>  FALSE
[02:39:12.516]      // skip if-block "!isProduction"
[02:39:12.516]    </control>
[02:39:12.516]  </sequence>
[02:39:12.516]  
[02:39:19.153]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:39:19.153]  
[02:39:19.153]  <debugvars>
[02:39:19.153]    // Pre-defined
[02:39:19.153]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:39:19.153]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:39:19.153]    __dp=0x00000000
[02:39:19.153]    __ap=0x00000000
[02:39:19.153]    __traceout=0x00000000      (Trace Disabled)
[02:39:19.153]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:39:19.153]    __FlashAddr=0x00000000
[02:39:19.153]    __FlashLen=0x00000000
[02:39:19.153]    __FlashArg=0x00000000
[02:39:19.153]    __FlashOp=0x00000000
[02:39:19.153]    __Result=0x00000000
[02:39:19.153]  </debugvars>
[02:39:19.153]  
[02:39:19.153]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:39:19.154]    <block atomic="false" info="">
[02:39:19.154]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:39:19.154]        // -> [isSWJ <= 0x00000001]
[02:39:19.154]      __var hasDormant = __protocol & 0x00020000;
[02:39:19.154]        // -> [hasDormant <= 0x00000000]
[02:39:19.154]      __var protType   = __protocol & 0x0000FFFF;
[02:39:19.154]        // -> [protType <= 0x00000002]
[02:39:19.154]    </block>
[02:39:19.154]    <control if="protType == 1" while="" timeout="0" info="">
[02:39:19.154]      // if-block "protType == 1"
[02:39:19.154]        // =>  FALSE
[02:39:19.154]      // skip if-block "protType == 1"
[02:39:19.154]    </control>
[02:39:19.154]    <control if="protType == 2" while="" timeout="0" info="">
[02:39:19.156]      // if-block "protType == 2"
[02:39:19.156]        // =>  TRUE
[02:39:19.156]      <control if="isSWJ" while="" timeout="0" info="">
[02:39:19.156]        // if-block "isSWJ"
[02:39:19.156]          // =>  TRUE
[02:39:19.156]        <control if="hasDormant" while="" timeout="0" info="">
[02:39:19.156]          // if-block "hasDormant"
[02:39:19.156]            // =>  FALSE
[02:39:19.156]          // skip if-block "hasDormant"
[02:39:19.156]        </control>
[02:39:19.157]        <control if="!hasDormant" while="" timeout="0" info="">
[02:39:19.157]          // if-block "!hasDormant"
[02:39:19.157]            // =>  TRUE
[02:39:19.157]          <block atomic="false" info="">
[02:39:19.157]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:39:19.160]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:39:19.161]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:39:19.162]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:39:19.162]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:39:19.164]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:39:19.164]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:39:19.166]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:39:19.166]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:39:19.168]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:39:19.168]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:39:19.169]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:39:19.169]          </block>
[02:39:19.169]          // end if-block "!hasDormant"
[02:39:19.169]        </control>
[02:39:19.169]        // end if-block "isSWJ"
[02:39:19.169]      </control>
[02:39:19.169]      <control if="!isSWJ" while="" timeout="0" info="">
[02:39:19.169]        // if-block "!isSWJ"
[02:39:19.169]          // =>  FALSE
[02:39:19.171]        // skip if-block "!isSWJ"
[02:39:19.171]      </control>
[02:39:19.171]      <block atomic="false" info="">
[02:39:19.171]        ReadDP(0x0);
[02:39:19.173]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:39:19.173]      </block>
[02:39:19.173]      // end if-block "protType == 2"
[02:39:19.173]    </control>
[02:39:19.173]  </sequence>
[02:39:19.173]  
[02:39:19.177]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:39:19.177]  
[02:39:19.177]  <debugvars>
[02:39:19.177]    // Pre-defined
[02:39:19.177]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:39:19.177]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:39:19.177]    __dp=0x00000000
[02:39:19.177]    __ap=0x00000000
[02:39:19.177]    __traceout=0x00000000      (Trace Disabled)
[02:39:19.177]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:39:19.177]    __FlashAddr=0x00000000
[02:39:19.177]    __FlashLen=0x00000000
[02:39:19.177]    __FlashArg=0x00000000
[02:39:19.177]    __FlashOp=0x00000000
[02:39:19.177]    __Result=0x00000000
[02:39:19.177]  </debugvars>
[02:39:19.177]  
[02:39:19.177]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:39:19.177]    <block atomic="false" info="">
[02:39:19.177]      __var SW_DP_ABORT       = 0x0;
[02:39:19.177]        // -> [SW_DP_ABORT <= 0x00000000]
[02:39:19.177]      __var DP_CTRL_STAT      = 0x4;
[02:39:19.177]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:39:19.177]      __var DP_SELECT         = 0x8;
[02:39:19.177]        // -> [DP_SELECT <= 0x00000008]
[02:39:19.177]      __var powered_down      = 0;
[02:39:19.181]        // -> [powered_down <= 0x00000000]
[02:39:19.182]      WriteDP(DP_SELECT, 0x00000000);
[02:39:19.185]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:39:19.185]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:39:19.185]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:39:19.185]        // -> [powered_down <= 0x00000001]
[02:39:19.185]    </block>
[02:39:19.185]    <control if="powered_down" while="" timeout="0" info="">
[02:39:19.185]      // if-block "powered_down"
[02:39:19.185]        // =>  TRUE
[02:39:19.185]      <block atomic="false" info="">
[02:39:19.185]        Message(0, "Debug/System power-up request sent");
[02:39:19.189]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:39:19.189]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:39:19.189]      </block>
[02:39:19.189]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:39:19.189]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:39:19.189]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:39:19.189]        // while-condition  =>  FALSE
[02:39:19.189]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:39:19.189]      </control>
[02:39:19.189]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:39:19.193]        // if-block "(__protocol & 0xFFFF) == 1"
[02:39:19.193]          // =>  FALSE
[02:39:19.193]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:39:19.193]      </control>
[02:39:19.193]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:39:19.193]        // if-block "(__protocol & 0xFFFF) == 2"
[02:39:19.193]          // =>  TRUE
[02:39:19.193]        <block atomic="false" info="">
[02:39:19.193]          Message(0, "executing SWD power up");
[02:39:19.193]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:39:19.198]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:39:19.198]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:39:19.198]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:39:19.198]        </block>
[02:39:19.198]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:39:19.198]      </control>
[02:39:19.198]      // end if-block "powered_down"
[02:39:19.198]    </control>
[02:39:19.198]    <block atomic="false" info="">
[02:39:19.198]      __var DEBUG_PORT_VAL    = 0;
[02:39:19.202]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:39:19.202]      __var ACCESS_POINT_VAL  = 0;
[02:39:19.202]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:39:19.202]      __ap = 1; 
[02:39:19.202]        // -> [__ap <= 0x00000001]
[02:39:19.202]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:39:19.202]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:39:19.202]      __ap = 4;
[02:39:19.206]        // -> [__ap <= 0x00000004]
[02:39:19.206]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:39:19.210]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:39:19.210]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:39:19.210]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:39:19.210]    </block>
[02:39:19.212]    <block atomic="false" info="">
[02:39:19.212]      __var nReset = 0x80;
[02:39:19.212]        // -> [nReset <= 0x00000080]
[02:39:19.212]      __var canReadPins = 0;
[02:39:19.212]        // -> [canReadPins <= 0x00000000]
[02:39:19.212]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:39:19.212]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:39:19.214]        // -> [canReadPins <= 0x00000001]
[02:39:19.214]    </block>
[02:39:19.214]    <control if="" while="1" timeout="200" info="">
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.214]      // while "1"  (timeout="200")
[02:39:19.214]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.218]      // while-condition  =>  TRUE
[02:39:19.218]      // while "1"  (timeout="200")
[02:39:19.222]      // while-condition  =>  TRUE
[02:39:19.222]      // while "1"  (timeout="200")
[02:39:19.222]      // while  =>  TIMEOUT
[02:39:19.222]      // end while "1"
[02:39:19.222]    </control>
[02:39:19.222]    <control if="canReadPins" while="" timeout="0" info="">
[02:39:19.222]      // if-block "canReadPins"
[02:39:19.222]        // =>  TRUE
[02:39:19.222]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:39:19.222]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:39:19.222]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:39:19.222]        // while-condition  =>  FALSE
[02:39:19.222]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:39:19.222]      </control>
[02:39:19.222]      // end if-block "canReadPins"
[02:39:19.222]    </control>
[02:39:19.222]    <control if="!canReadPins" while="" timeout="0" info="">
[02:39:19.222]      // if-block "!canReadPins"
[02:39:19.222]        // =>  FALSE
[02:39:19.222]      // skip if-block "!canReadPins"
[02:39:19.226]    </control>
[02:39:19.226]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:39:19.226]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:39:19.226]        // =>  TRUE
[02:39:19.226]      <block atomic="false" info="">
[02:39:19.226]        WriteAP(0x00, 0x190008);
[02:39:19.226]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:39:19.226]        WriteAP(0xF0, 0x01);
[02:39:19.230]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:39:19.230]      </block>
[02:39:19.230]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:39:19.230]    </control>
[02:39:19.230]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:39:19.230]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:39:19.230]        // =>  FALSE
[02:39:19.230]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:39:19.230]    </control>
[02:39:19.230]    <block atomic="false" info="">
[02:39:19.230]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:39:19.234]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:39:19.234]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:39:19.234]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:39:19.238]      __ap = 0; //lets make sure we reset the access point selection
[02:39:19.238]        // -> [__ap <= 0x00000000]
[02:39:19.238]    </block>
[02:39:19.238]  </sequence>
[02:39:19.238]  
[02:39:19.266]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:39:19.266]  
[02:39:19.270]  <debugvars>
[02:39:19.270]    // Pre-defined
[02:39:19.270]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:39:19.270]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:39:19.270]    __dp=0x00000000
[02:39:19.270]    __ap=0x00000000
[02:39:19.270]    __traceout=0x00000000      (Trace Disabled)
[02:39:19.270]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:39:19.270]    __FlashAddr=0x00000000
[02:39:19.270]    __FlashLen=0x00000000
[02:39:19.270]    __FlashArg=0x00000000
[02:39:19.270]    __FlashOp=0x00000000
[02:39:19.270]    __Result=0x00000000
[02:39:19.270]  </debugvars>
[02:39:19.270]  
[02:39:19.270]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:39:19.270]    <block atomic="false" info="">
[02:39:19.270]      __var deviceID = 0;
[02:39:19.270]        // -> [deviceID <= 0x00000000]
[02:39:19.270]      __var version = 0;
[02:39:19.270]        // -> [version <= 0x00000000]
[02:39:19.270]      __var partNum = 0;
[02:39:19.270]        // -> [partNum <= 0x00000000]
[02:39:19.270]      __var manuf = 0;
[02:39:19.270]        // -> [manuf <= 0x00000000]
[02:39:19.270]      __var isMSPM0G1X0X_G3X0X = 0;
[02:39:19.270]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:39:19.270]      __var isProduction = 0;
[02:39:19.270]        // -> [isProduction <= 0x00000000]
[02:39:19.270]      __var continueId = 0;
[02:39:19.270]        // -> [continueId <= 0x00000000]
[02:39:19.270]      deviceID =   Read32(0x41C40004);
[02:39:19.274]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:39:19.274]        // -> [deviceID <= 0x2BB8802F]
[02:39:19.274]      version = deviceID >> 28;
[02:39:19.278]        // -> [version <= 0x00000002]
[02:39:19.278]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:39:19.278]        // -> [partNum <= 0x0000BB88]
[02:39:19.278]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:39:19.278]        // -> [manuf <= 0x00000017]
[02:39:19.278]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:39:19.278]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:39:19.278]      isProduction = (version > 0);
[02:39:19.278]        // -> [isProduction <= 0x00000001]
[02:39:19.278]    </block>
[02:39:19.278]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:39:19.278]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:39:19.278]        // =>  FALSE
[02:39:19.278]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:39:19.278]    </control>
[02:39:19.278]    <control if="continueId == 4" while="" timeout="0" info="">
[02:39:19.278]      // if-block "continueId == 4"
[02:39:19.278]        // =>  FALSE
[02:39:19.278]      // skip if-block "continueId == 4"
[02:39:19.278]    </control>
[02:39:19.278]    <control if="!isProduction" while="" timeout="0" info="">
[02:39:19.278]      // if-block "!isProduction"
[02:39:19.278]        // =>  FALSE
[02:39:19.278]      // skip if-block "!isProduction"
[02:39:19.278]    </control>
[02:39:19.278]  </sequence>
[02:39:19.278]  
[02:40:54.869]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:40:54.869]  
[02:40:54.869]  <debugvars>
[02:40:54.869]    // Pre-defined
[02:40:54.869]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:40:54.873]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:40:54.873]    __dp=0x00000000
[02:40:54.873]    __ap=0x00000000
[02:40:54.873]    __traceout=0x00000000      (Trace Disabled)
[02:40:54.873]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:40:54.873]    __FlashAddr=0x00000000
[02:40:54.873]    __FlashLen=0x00000000
[02:40:54.873]    __FlashArg=0x00000000
[02:40:54.873]    __FlashOp=0x00000000
[02:40:54.873]    __Result=0x00000000
[02:40:54.873]  </debugvars>
[02:40:54.873]  
[02:40:54.873]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:40:54.873]    <block atomic="false" info="">
[02:40:54.873]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:40:54.873]        // -> [isSWJ <= 0x00000001]
[02:40:54.873]      __var hasDormant = __protocol & 0x00020000;
[02:40:54.873]        // -> [hasDormant <= 0x00000000]
[02:40:54.873]      __var protType   = __protocol & 0x0000FFFF;
[02:40:54.873]        // -> [protType <= 0x00000002]
[02:40:54.873]    </block>
[02:40:54.873]    <control if="protType == 1" while="" timeout="0" info="">
[02:40:54.873]      // if-block "protType == 1"
[02:40:54.873]        // =>  FALSE
[02:40:54.873]      // skip if-block "protType == 1"
[02:40:54.873]    </control>
[02:40:54.873]    <control if="protType == 2" while="" timeout="0" info="">
[02:40:54.873]      // if-block "protType == 2"
[02:40:54.873]        // =>  TRUE
[02:40:54.873]      <control if="isSWJ" while="" timeout="0" info="">
[02:40:54.873]        // if-block "isSWJ"
[02:40:54.873]          // =>  TRUE
[02:40:54.873]        <control if="hasDormant" while="" timeout="0" info="">
[02:40:54.873]          // if-block "hasDormant"
[02:40:54.873]            // =>  FALSE
[02:40:54.873]          // skip if-block "hasDormant"
[02:40:54.873]        </control>
[02:40:54.873]        <control if="!hasDormant" while="" timeout="0" info="">
[02:40:54.873]          // if-block "!hasDormant"
[02:40:54.873]            // =>  TRUE
[02:40:54.877]          <block atomic="false" info="">
[02:40:54.877]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:40:54.877]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:40:54.877]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:40:54.881]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:40:54.881]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:40:54.881]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:40:54.881]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:40:54.885]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:40:54.885]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:40:54.885]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:40:54.885]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:40:54.893]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:40:54.893]          </block>
[02:40:54.893]          // end if-block "!hasDormant"
[02:40:54.893]        </control>
[02:40:54.893]        // end if-block "isSWJ"
[02:40:54.893]      </control>
[02:40:54.893]      <control if="!isSWJ" while="" timeout="0" info="">
[02:40:54.893]        // if-block "!isSWJ"
[02:40:54.893]          // =>  FALSE
[02:40:54.893]        // skip if-block "!isSWJ"
[02:40:54.893]      </control>
[02:40:54.893]      <block atomic="false" info="">
[02:40:54.893]        ReadDP(0x0);
[02:40:54.897]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:40:54.897]      </block>
[02:40:54.897]      // end if-block "protType == 2"
[02:40:54.897]    </control>
[02:40:54.897]  </sequence>
[02:40:54.897]  
[02:40:54.901]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:40:54.901]  
[02:40:54.901]  <debugvars>
[02:40:54.901]    // Pre-defined
[02:40:54.901]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:40:54.901]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:40:54.901]    __dp=0x00000000
[02:40:54.901]    __ap=0x00000000
[02:40:54.901]    __traceout=0x00000000      (Trace Disabled)
[02:40:54.901]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:40:54.901]    __FlashAddr=0x00000000
[02:40:54.901]    __FlashLen=0x00000000
[02:40:54.901]    __FlashArg=0x00000000
[02:40:54.901]    __FlashOp=0x00000000
[02:40:54.901]    __Result=0x00000000
[02:40:54.901]  </debugvars>
[02:40:54.901]  
[02:40:54.901]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:40:54.901]    <block atomic="false" info="">
[02:40:54.901]      __var SW_DP_ABORT       = 0x0;
[02:40:54.901]        // -> [SW_DP_ABORT <= 0x00000000]
[02:40:54.901]      __var DP_CTRL_STAT      = 0x4;
[02:40:54.901]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:40:54.901]      __var DP_SELECT         = 0x8;
[02:40:54.905]        // -> [DP_SELECT <= 0x00000008]
[02:40:54.905]      __var powered_down      = 0;
[02:40:54.905]        // -> [powered_down <= 0x00000000]
[02:40:54.905]      WriteDP(DP_SELECT, 0x00000000);
[02:40:54.905]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:40:54.905]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:40:54.905]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:40:54.905]        // -> [powered_down <= 0x00000001]
[02:40:54.905]    </block>
[02:40:54.909]    <control if="powered_down" while="" timeout="0" info="">
[02:40:54.909]      // if-block "powered_down"
[02:40:54.909]        // =>  TRUE
[02:40:54.909]      <block atomic="false" info="">
[02:40:54.909]        Message(0, "Debug/System power-up request sent");
[02:40:54.909]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:40:54.913]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:40:54.913]      </block>
[02:40:54.913]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:40:54.913]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:40:54.917]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:40:54.917]        // while-condition  =>  FALSE
[02:40:54.917]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:40:54.917]      </control>
[02:40:54.917]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:40:54.917]        // if-block "(__protocol & 0xFFFF) == 1"
[02:40:54.917]          // =>  FALSE
[02:40:54.917]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:40:54.917]      </control>
[02:40:54.917]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:40:54.917]        // if-block "(__protocol & 0xFFFF) == 2"
[02:40:54.917]          // =>  TRUE
[02:40:54.917]        <block atomic="false" info="">
[02:40:54.917]          Message(0, "executing SWD power up");
[02:40:54.917]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:40:54.921]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:40:54.921]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:40:54.921]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:40:54.921]        </block>
[02:40:54.921]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:40:54.921]      </control>
[02:40:54.921]      // end if-block "powered_down"
[02:40:54.921]    </control>
[02:40:54.921]    <block atomic="false" info="">
[02:40:54.921]      __var DEBUG_PORT_VAL    = 0;
[02:40:54.925]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:40:54.925]      __var ACCESS_POINT_VAL  = 0;
[02:40:54.925]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:40:54.925]      __ap = 1; 
[02:40:54.925]        // -> [__ap <= 0x00000001]
[02:40:54.925]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:40:54.929]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:40:54.929]      __ap = 4;
[02:40:54.929]        // -> [__ap <= 0x00000004]
[02:40:54.929]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:40:54.933]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:40:54.933]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:40:54.933]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:40:54.933]    </block>
[02:40:54.933]    <block atomic="false" info="">
[02:40:54.933]      __var nReset = 0x80;
[02:40:54.933]        // -> [nReset <= 0x00000080]
[02:40:54.937]      __var canReadPins = 0;
[02:40:54.937]        // -> [canReadPins <= 0x00000000]
[02:40:54.937]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:40:54.937]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:40:54.937]        // -> [canReadPins <= 0x00000001]
[02:40:54.937]    </block>
[02:40:54.937]    <control if="" while="1" timeout="200" info="">
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.937]      // while "1"  (timeout="200")
[02:40:54.937]      // while-condition  =>  TRUE
[02:40:54.941]      // while "1"  (timeout="200")
[02:40:54.941]      // while  =>  TIMEOUT
[02:40:54.941]      // end while "1"
[02:40:54.941]    </control>
[02:40:54.941]    <control if="canReadPins" while="" timeout="0" info="">
[02:40:54.941]      // if-block "canReadPins"
[02:40:54.941]        // =>  TRUE
[02:40:54.941]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:40:54.941]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:40:54.941]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:40:54.941]        // while-condition  =>  FALSE
[02:40:54.941]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:40:54.941]      </control>
[02:40:54.941]      // end if-block "canReadPins"
[02:40:54.941]    </control>
[02:40:54.941]    <control if="!canReadPins" while="" timeout="0" info="">
[02:40:54.941]      // if-block "!canReadPins"
[02:40:54.941]        // =>  FALSE
[02:40:54.941]      // skip if-block "!canReadPins"
[02:40:54.941]    </control>
[02:40:54.941]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:40:54.941]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:40:54.941]        // =>  TRUE
[02:40:54.941]      <block atomic="false" info="">
[02:40:54.941]        WriteAP(0x00, 0x190008);
[02:40:54.945]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:40:54.945]        WriteAP(0xF0, 0x01);
[02:40:54.949]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:40:54.949]      </block>
[02:40:54.949]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:40:54.949]    </control>
[02:40:54.949]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:40:54.949]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:40:54.949]        // =>  FALSE
[02:40:54.949]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:40:54.949]    </control>
[02:40:54.949]    <block atomic="false" info="">
[02:40:54.949]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:40:54.953]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:40:54.953]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:40:54.953]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:40:54.953]      __ap = 0; //lets make sure we reset the access point selection
[02:40:54.953]        // -> [__ap <= 0x00000000]
[02:40:54.953]    </block>
[02:40:54.953]  </sequence>
[02:40:54.953]  
[02:40:54.977]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:40:54.977]  
[02:40:54.977]  <debugvars>
[02:40:54.977]    // Pre-defined
[02:40:54.977]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:40:54.977]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:40:54.977]    __dp=0x00000000
[02:40:54.977]    __ap=0x00000000
[02:40:54.977]    __traceout=0x00000000      (Trace Disabled)
[02:40:54.977]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:40:54.977]    __FlashAddr=0x00000000
[02:40:54.977]    __FlashLen=0x00000000
[02:40:54.977]    __FlashArg=0x00000000
[02:40:54.977]    __FlashOp=0x00000000
[02:40:54.977]    __Result=0x00000000
[02:40:54.977]  </debugvars>
[02:40:54.977]  
[02:40:54.977]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:40:54.977]    <block atomic="false" info="">
[02:40:54.977]      __var deviceID = 0;
[02:40:54.977]        // -> [deviceID <= 0x00000000]
[02:40:54.977]      __var version = 0;
[02:40:54.977]        // -> [version <= 0x00000000]
[02:40:54.977]      __var partNum = 0;
[02:40:54.977]        // -> [partNum <= 0x00000000]
[02:40:54.977]      __var manuf = 0;
[02:40:54.977]        // -> [manuf <= 0x00000000]
[02:40:54.977]      __var isMSPM0G1X0X_G3X0X = 0;
[02:40:54.977]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:40:54.977]      __var isProduction = 0;
[02:40:54.977]        // -> [isProduction <= 0x00000000]
[02:40:54.977]      __var continueId = 0;
[02:40:54.977]        // -> [continueId <= 0x00000000]
[02:40:54.977]      deviceID =   Read32(0x41C40004);
[02:40:54.985]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:40:54.985]        // -> [deviceID <= 0x2BB8802F]
[02:40:54.985]      version = deviceID >> 28;
[02:40:54.985]        // -> [version <= 0x00000002]
[02:40:54.985]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:40:54.985]        // -> [partNum <= 0x0000BB88]
[02:40:54.985]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:40:54.985]        // -> [manuf <= 0x00000017]
[02:40:54.985]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:40:54.985]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:40:54.985]      isProduction = (version > 0);
[02:40:54.985]        // -> [isProduction <= 0x00000001]
[02:40:54.985]    </block>
[02:40:54.985]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:40:54.985]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:40:54.985]        // =>  FALSE
[02:40:54.985]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:40:54.985]    </control>
[02:40:54.985]    <control if="continueId == 4" while="" timeout="0" info="">
[02:40:54.985]      // if-block "continueId == 4"
[02:40:54.985]        // =>  FALSE
[02:40:54.985]      // skip if-block "continueId == 4"
[02:40:54.985]    </control>
[02:40:54.985]    <control if="!isProduction" while="" timeout="0" info="">
[02:40:54.985]      // if-block "!isProduction"
[02:40:54.985]        // =>  FALSE
[02:40:54.985]      // skip if-block "!isProduction"
[02:40:54.985]    </control>
[02:40:54.985]  </sequence>
[02:40:54.985]  
[02:41:01.514]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:41:01.514]  
[02:41:01.514]  <debugvars>
[02:41:01.514]    // Pre-defined
[02:41:01.514]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:41:01.514]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:41:01.514]    __dp=0x00000000
[02:41:01.514]    __ap=0x00000000
[02:41:01.514]    __traceout=0x00000000      (Trace Disabled)
[02:41:01.514]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:41:01.514]    __FlashAddr=0x00000000
[02:41:01.514]    __FlashLen=0x00000000
[02:41:01.514]    __FlashArg=0x00000000
[02:41:01.514]    __FlashOp=0x00000000
[02:41:01.514]    __Result=0x00000000
[02:41:01.514]  </debugvars>
[02:41:01.514]  
[02:41:01.514]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:41:01.518]    <block atomic="false" info="">
[02:41:01.518]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:41:01.518]        // -> [isSWJ <= 0x00000001]
[02:41:01.518]      __var hasDormant = __protocol & 0x00020000;
[02:41:01.518]        // -> [hasDormant <= 0x00000000]
[02:41:01.518]      __var protType   = __protocol & 0x0000FFFF;
[02:41:01.518]        // -> [protType <= 0x00000002]
[02:41:01.518]    </block>
[02:41:01.518]    <control if="protType == 1" while="" timeout="0" info="">
[02:41:01.518]      // if-block "protType == 1"
[02:41:01.518]        // =>  FALSE
[02:41:01.518]      // skip if-block "protType == 1"
[02:41:01.518]    </control>
[02:41:01.518]    <control if="protType == 2" while="" timeout="0" info="">
[02:41:01.518]      // if-block "protType == 2"
[02:41:01.518]        // =>  TRUE
[02:41:01.518]      <control if="isSWJ" while="" timeout="0" info="">
[02:41:01.518]        // if-block "isSWJ"
[02:41:01.518]          // =>  TRUE
[02:41:01.518]        <control if="hasDormant" while="" timeout="0" info="">
[02:41:01.518]          // if-block "hasDormant"
[02:41:01.518]            // =>  FALSE
[02:41:01.518]          // skip if-block "hasDormant"
[02:41:01.518]        </control>
[02:41:01.518]        <control if="!hasDormant" while="" timeout="0" info="">
[02:41:01.518]          // if-block "!hasDormant"
[02:41:01.518]            // =>  TRUE
[02:41:01.518]          <block atomic="false" info="">
[02:41:01.518]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:41:01.522]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:41:01.522]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:41:01.522]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:41:01.522]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:41:01.522]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:41:01.522]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:41:01.526]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:41:01.526]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:41:01.526]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:41:01.526]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:41:01.530]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:41:01.530]          </block>
[02:41:01.530]          // end if-block "!hasDormant"
[02:41:01.530]        </control>
[02:41:01.530]        // end if-block "isSWJ"
[02:41:01.530]      </control>
[02:41:01.530]      <control if="!isSWJ" while="" timeout="0" info="">
[02:41:01.530]        // if-block "!isSWJ"
[02:41:01.530]          // =>  FALSE
[02:41:01.530]        // skip if-block "!isSWJ"
[02:41:01.530]      </control>
[02:41:01.530]      <block atomic="false" info="">
[02:41:01.530]        ReadDP(0x0);
[02:41:01.534]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:41:01.534]      </block>
[02:41:01.534]      // end if-block "protType == 2"
[02:41:01.534]    </control>
[02:41:01.534]  </sequence>
[02:41:01.534]  
[02:41:01.538]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:41:01.538]  
[02:41:01.538]  <debugvars>
[02:41:01.538]    // Pre-defined
[02:41:01.538]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:41:01.538]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:41:01.538]    __dp=0x00000000
[02:41:01.538]    __ap=0x00000000
[02:41:01.538]    __traceout=0x00000000      (Trace Disabled)
[02:41:01.538]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:41:01.538]    __FlashAddr=0x00000000
[02:41:01.538]    __FlashLen=0x00000000
[02:41:01.538]    __FlashArg=0x00000000
[02:41:01.538]    __FlashOp=0x00000000
[02:41:01.538]    __Result=0x00000000
[02:41:01.538]  </debugvars>
[02:41:01.538]  
[02:41:01.538]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:41:01.538]    <block atomic="false" info="">
[02:41:01.538]      __var SW_DP_ABORT       = 0x0;
[02:41:01.538]        // -> [SW_DP_ABORT <= 0x00000000]
[02:41:01.538]      __var DP_CTRL_STAT      = 0x4;
[02:41:01.538]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:41:01.542]      __var DP_SELECT         = 0x8;
[02:41:01.542]        // -> [DP_SELECT <= 0x00000008]
[02:41:01.542]      __var powered_down      = 0;
[02:41:01.542]        // -> [powered_down <= 0x00000000]
[02:41:01.542]      WriteDP(DP_SELECT, 0x00000000);
[02:41:01.542]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:41:01.542]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:41:01.550]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:41:01.550]        // -> [powered_down <= 0x00000001]
[02:41:01.550]    </block>
[02:41:01.550]    <control if="powered_down" while="" timeout="0" info="">
[02:41:01.550]      // if-block "powered_down"
[02:41:01.550]        // =>  TRUE
[02:41:01.550]      <block atomic="false" info="">
[02:41:01.550]        Message(0, "Debug/System power-up request sent");
[02:41:01.550]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:41:01.554]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:41:01.554]      </block>
[02:41:01.554]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:41:01.554]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:41:01.554]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:41:01.554]        // while-condition  =>  FALSE
[02:41:01.554]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:41:01.554]      </control>
[02:41:01.558]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:41:01.558]        // if-block "(__protocol & 0xFFFF) == 1"
[02:41:01.558]          // =>  FALSE
[02:41:01.558]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:41:01.558]      </control>
[02:41:01.558]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:41:01.558]        // if-block "(__protocol & 0xFFFF) == 2"
[02:41:01.558]          // =>  TRUE
[02:41:01.558]        <block atomic="false" info="">
[02:41:01.558]          Message(0, "executing SWD power up");
[02:41:01.558]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:41:01.562]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:41:01.562]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:41:01.562]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:41:01.562]        </block>
[02:41:01.562]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:41:01.562]      </control>
[02:41:01.562]      // end if-block "powered_down"
[02:41:01.562]    </control>
[02:41:01.562]    <block atomic="false" info="">
[02:41:01.562]      __var DEBUG_PORT_VAL    = 0;
[02:41:01.562]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:41:01.562]      __var ACCESS_POINT_VAL  = 0;
[02:41:01.562]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:41:01.562]      __ap = 1; 
[02:41:01.562]        // -> [__ap <= 0x00000001]
[02:41:01.562]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:41:01.570]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:41:01.570]      __ap = 4;
[02:41:01.570]        // -> [__ap <= 0x00000004]
[02:41:01.570]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:41:01.574]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:41:01.574]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:41:01.574]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:41:01.574]    </block>
[02:41:01.574]    <block atomic="false" info="">
[02:41:01.574]      __var nReset = 0x80;
[02:41:01.574]        // -> [nReset <= 0x00000080]
[02:41:01.574]      __var canReadPins = 0;
[02:41:01.574]        // -> [canReadPins <= 0x00000000]
[02:41:01.574]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:41:01.578]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:41:01.578]        // -> [canReadPins <= 0x00000001]
[02:41:01.578]    </block>
[02:41:01.578]    <control if="" while="1" timeout="200" info="">
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.578]      // while-condition  =>  TRUE
[02:41:01.578]      // while "1"  (timeout="200")
[02:41:01.582]      // while-condition  =>  TRUE
[02:41:01.582]      // while "1"  (timeout="200")
[02:41:01.582]      // while  =>  TIMEOUT
[02:41:01.582]      // end while "1"
[02:41:01.582]    </control>
[02:41:01.582]    <control if="canReadPins" while="" timeout="0" info="">
[02:41:01.582]      // if-block "canReadPins"
[02:41:01.582]        // =>  TRUE
[02:41:01.582]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:41:01.582]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:41:01.582]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:41:01.582]        // while-condition  =>  FALSE
[02:41:01.582]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:41:01.582]      </control>
[02:41:01.582]      // end if-block "canReadPins"
[02:41:01.582]    </control>
[02:41:01.582]    <control if="!canReadPins" while="" timeout="0" info="">
[02:41:01.582]      // if-block "!canReadPins"
[02:41:01.582]        // =>  FALSE
[02:41:01.582]      // skip if-block "!canReadPins"
[02:41:01.586]    </control>
[02:41:01.586]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:41:01.586]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:41:01.586]        // =>  TRUE
[02:41:01.586]      <block atomic="false" info="">
[02:41:01.586]        WriteAP(0x00, 0x190008);
[02:41:01.586]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:41:01.586]        WriteAP(0xF0, 0x01);
[02:41:01.590]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:41:01.590]      </block>
[02:41:01.590]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:41:01.590]    </control>
[02:41:01.590]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:41:01.590]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:41:01.590]        // =>  FALSE
[02:41:01.590]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:41:01.590]    </control>
[02:41:01.590]    <block atomic="false" info="">
[02:41:01.590]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:41:01.598]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:41:01.598]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:41:01.598]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:41:01.598]      __ap = 0; //lets make sure we reset the access point selection
[02:41:01.598]        // -> [__ap <= 0x00000000]
[02:41:01.598]    </block>
[02:41:01.598]  </sequence>
[02:41:01.598]  
[02:41:01.626]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:41:01.626]  
[02:41:01.626]  <debugvars>
[02:41:01.626]    // Pre-defined
[02:41:01.626]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:41:01.626]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:41:01.626]    __dp=0x00000000
[02:41:01.626]    __ap=0x00000000
[02:41:01.626]    __traceout=0x00000000      (Trace Disabled)
[02:41:01.626]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:41:01.626]    __FlashAddr=0x00000000
[02:41:01.626]    __FlashLen=0x00000000
[02:41:01.626]    __FlashArg=0x00000000
[02:41:01.626]    __FlashOp=0x00000000
[02:41:01.626]    __Result=0x00000000
[02:41:01.626]  </debugvars>
[02:41:01.626]  
[02:41:01.626]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:41:01.626]    <block atomic="false" info="">
[02:41:01.626]      __var deviceID = 0;
[02:41:01.626]        // -> [deviceID <= 0x00000000]
[02:41:01.626]      __var version = 0;
[02:41:01.626]        // -> [version <= 0x00000000]
[02:41:01.626]      __var partNum = 0;
[02:41:01.626]        // -> [partNum <= 0x00000000]
[02:41:01.626]      __var manuf = 0;
[02:41:01.626]        // -> [manuf <= 0x00000000]
[02:41:01.626]      __var isMSPM0G1X0X_G3X0X = 0;
[02:41:01.626]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:41:01.626]      __var isProduction = 0;
[02:41:01.626]        // -> [isProduction <= 0x00000000]
[02:41:01.626]      __var continueId = 0;
[02:41:01.626]        // -> [continueId <= 0x00000000]
[02:41:01.626]      deviceID =   Read32(0x41C40004);
[02:41:01.634]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:41:01.634]        // -> [deviceID <= 0x2BB8802F]
[02:41:01.634]      version = deviceID >> 28;
[02:41:01.638]        // -> [version <= 0x00000002]
[02:41:01.638]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:41:01.638]        // -> [partNum <= 0x0000BB88]
[02:41:01.638]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:41:01.638]        // -> [manuf <= 0x00000017]
[02:41:01.638]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:41:01.638]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:41:01.638]      isProduction = (version > 0);
[02:41:01.638]        // -> [isProduction <= 0x00000001]
[02:41:01.638]    </block>
[02:41:01.638]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:41:01.638]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:41:01.638]        // =>  FALSE
[02:41:01.638]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:41:01.638]    </control>
[02:41:01.638]    <control if="continueId == 4" while="" timeout="0" info="">
[02:41:01.638]      // if-block "continueId == 4"
[02:41:01.638]        // =>  FALSE
[02:41:01.638]      // skip if-block "continueId == 4"
[02:41:01.638]    </control>
[02:41:01.638]    <control if="!isProduction" while="" timeout="0" info="">
[02:41:01.638]      // if-block "!isProduction"
[02:41:01.638]        // =>  FALSE
[02:41:01.638]      // skip if-block "!isProduction"
[02:41:01.638]    </control>
[02:41:01.638]  </sequence>
[02:41:01.638]  
[02:42:52.977]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:42:52.977]  
[02:42:52.985]  <debugvars>
[02:42:52.985]    // Pre-defined
[02:42:52.985]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:42:52.985]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:42:52.985]    __dp=0x00000000
[02:42:52.985]    __ap=0x00000000
[02:42:52.985]    __traceout=0x00000000      (Trace Disabled)
[02:42:52.985]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:42:52.985]    __FlashAddr=0x00000000
[02:42:52.985]    __FlashLen=0x00000000
[02:42:52.985]    __FlashArg=0x00000000
[02:42:52.985]    __FlashOp=0x00000000
[02:42:52.985]    __Result=0x00000000
[02:42:52.985]  </debugvars>
[02:42:52.985]  
[02:42:52.988]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:42:52.988]    <block atomic="false" info="">
[02:42:52.988]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:42:52.988]        // -> [isSWJ <= 0x00000001]
[02:42:52.988]      __var hasDormant = __protocol & 0x00020000;
[02:42:52.988]        // -> [hasDormant <= 0x00000000]
[02:42:52.988]      __var protType   = __protocol & 0x0000FFFF;
[02:42:52.988]        // -> [protType <= 0x00000002]
[02:42:52.988]    </block>
[02:42:52.988]    <control if="protType == 1" while="" timeout="0" info="">
[02:42:52.988]      // if-block "protType == 1"
[02:42:52.988]        // =>  FALSE
[02:42:52.988]      // skip if-block "protType == 1"
[02:42:52.988]    </control>
[02:42:52.988]    <control if="protType == 2" while="" timeout="0" info="">
[02:42:52.988]      // if-block "protType == 2"
[02:42:52.988]        // =>  TRUE
[02:42:52.988]      <control if="isSWJ" while="" timeout="0" info="">
[02:42:52.988]        // if-block "isSWJ"
[02:42:52.988]          // =>  TRUE
[02:42:52.988]        <control if="hasDormant" while="" timeout="0" info="">
[02:42:52.988]          // if-block "hasDormant"
[02:42:52.988]            // =>  FALSE
[02:42:52.988]          // skip if-block "hasDormant"
[02:42:52.990]        </control>
[02:42:52.990]        <control if="!hasDormant" while="" timeout="0" info="">
[02:42:52.990]          // if-block "!hasDormant"
[02:42:52.990]            // =>  TRUE
[02:42:52.990]          <block atomic="false" info="">
[02:42:52.990]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:42:52.990]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:42:52.990]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:42:52.994]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:42:52.994]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:42:52.994]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:42:52.994]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:42:52.998]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:42:52.998]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:42:53.002]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:42:53.002]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:42:53.006]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:42:53.006]          </block>
[02:42:53.006]          // end if-block "!hasDormant"
[02:42:53.006]        </control>
[02:42:53.006]        // end if-block "isSWJ"
[02:42:53.006]      </control>
[02:42:53.006]      <control if="!isSWJ" while="" timeout="0" info="">
[02:42:53.006]        // if-block "!isSWJ"
[02:42:53.006]          // =>  FALSE
[02:42:53.006]        // skip if-block "!isSWJ"
[02:42:53.006]      </control>
[02:42:53.006]      <block atomic="false" info="">
[02:42:53.010]        ReadDP(0x0);
[02:42:53.010]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:42:53.010]      </block>
[02:42:53.010]      // end if-block "protType == 2"
[02:42:53.010]    </control>
[02:42:53.010]  </sequence>
[02:42:53.010]  
[02:42:53.014]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:42:53.014]  
[02:42:53.014]  <debugvars>
[02:42:53.014]    // Pre-defined
[02:42:53.014]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:42:53.014]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:42:53.014]    __dp=0x00000000
[02:42:53.014]    __ap=0x00000000
[02:42:53.018]    __traceout=0x00000000      (Trace Disabled)
[02:42:53.018]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:42:53.018]    __FlashAddr=0x00000000
[02:42:53.018]    __FlashLen=0x00000000
[02:42:53.018]    __FlashArg=0x00000000
[02:42:53.018]    __FlashOp=0x00000000
[02:42:53.018]    __Result=0x00000000
[02:42:53.018]  </debugvars>
[02:42:53.018]  
[02:42:53.018]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:42:53.018]    <block atomic="false" info="">
[02:42:53.018]      __var SW_DP_ABORT       = 0x0;
[02:42:53.018]        // -> [SW_DP_ABORT <= 0x00000000]
[02:42:53.018]      __var DP_CTRL_STAT      = 0x4;
[02:42:53.018]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:42:53.018]      __var DP_SELECT         = 0x8;
[02:42:53.018]        // -> [DP_SELECT <= 0x00000008]
[02:42:53.018]      __var powered_down      = 0;
[02:42:53.018]        // -> [powered_down <= 0x00000000]
[02:42:53.018]      WriteDP(DP_SELECT, 0x00000000);
[02:42:53.022]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:42:53.022]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:42:53.026]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:42:53.026]        // -> [powered_down <= 0x00000001]
[02:42:53.026]    </block>
[02:42:53.026]    <control if="powered_down" while="" timeout="0" info="">
[02:42:53.026]      // if-block "powered_down"
[02:42:53.026]        // =>  TRUE
[02:42:53.026]      <block atomic="false" info="">
[02:42:53.026]        Message(0, "Debug/System power-up request sent");
[02:42:53.030]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:42:53.030]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:42:53.030]      </block>
[02:42:53.030]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:42:53.030]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:42:53.030]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:42:53.030]        // while-condition  =>  FALSE
[02:42:53.030]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:42:53.030]      </control>
[02:42:53.034]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:42:53.034]        // if-block "(__protocol & 0xFFFF) == 1"
[02:42:53.034]          // =>  FALSE
[02:42:53.034]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:42:53.034]      </control>
[02:42:53.034]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:42:53.034]        // if-block "(__protocol & 0xFFFF) == 2"
[02:42:53.034]          // =>  TRUE
[02:42:53.034]        <block atomic="false" info="">
[02:42:53.034]          Message(0, "executing SWD power up");
[02:42:53.034]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:42:53.050]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:42:53.050]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:42:53.050]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:42:53.050]        </block>
[02:42:53.050]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:42:53.050]      </control>
[02:42:53.050]      // end if-block "powered_down"
[02:42:53.050]    </control>
[02:42:53.050]    <block atomic="false" info="">
[02:42:53.050]      __var DEBUG_PORT_VAL    = 0;
[02:42:53.050]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:42:53.050]      __var ACCESS_POINT_VAL  = 0;
[02:42:53.054]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:42:53.054]      __ap = 1; 
[02:42:53.054]        // -> [__ap <= 0x00000001]
[02:42:53.054]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:42:53.058]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:42:53.058]      __ap = 4;
[02:42:53.058]        // -> [__ap <= 0x00000004]
[02:42:53.058]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:42:53.070]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:42:53.070]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:42:53.070]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:42:53.070]    </block>
[02:42:53.070]    <block atomic="false" info="">
[02:42:53.070]      __var nReset = 0x80;
[02:42:53.070]        // -> [nReset <= 0x00000080]
[02:42:53.070]      __var canReadPins = 0;
[02:42:53.070]        // -> [canReadPins <= 0x00000000]
[02:42:53.070]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:42:53.078]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:42:53.078]        // -> [canReadPins <= 0x00000001]
[02:42:53.078]    </block>
[02:42:53.078]    <control if="" while="1" timeout="200" info="">
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.078]      // while "1"  (timeout="200")
[02:42:53.078]      // while-condition  =>  TRUE
[02:42:53.082]      // while "1"  (timeout="200")
[02:42:53.082]      // while  =>  TIMEOUT
[02:42:53.082]      // end while "1"
[02:42:53.082]    </control>
[02:42:53.082]    <control if="canReadPins" while="" timeout="0" info="">
[02:42:53.082]      // if-block "canReadPins"
[02:42:53.082]        // =>  TRUE
[02:42:53.082]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:42:53.082]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:42:53.084]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:42:53.084]        // while-condition  =>  FALSE
[02:42:53.084]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:42:53.084]      </control>
[02:42:53.084]      // end if-block "canReadPins"
[02:42:53.084]    </control>
[02:42:53.084]    <control if="!canReadPins" while="" timeout="0" info="">
[02:42:53.084]      // if-block "!canReadPins"
[02:42:53.084]        // =>  FALSE
[02:42:53.084]      // skip if-block "!canReadPins"
[02:42:53.084]    </control>
[02:42:53.084]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:42:53.084]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:42:53.084]        // =>  TRUE
[02:42:53.084]      <block atomic="false" info="">
[02:42:53.084]        WriteAP(0x00, 0x190008);
[02:42:53.086]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:42:53.086]        WriteAP(0xF0, 0x01);
[02:42:53.090]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:42:53.090]      </block>
[02:42:53.090]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:42:53.090]    </control>
[02:42:53.090]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:42:53.090]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:42:53.090]        // =>  FALSE
[02:42:53.090]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:42:53.090]    </control>
[02:42:53.090]    <block atomic="false" info="">
[02:42:53.090]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:42:53.099]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:42:53.099]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:42:53.099]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:42:53.103]      __ap = 0; //lets make sure we reset the access point selection
[02:42:53.103]        // -> [__ap <= 0x00000000]
[02:42:53.103]    </block>
[02:42:53.103]  </sequence>
[02:42:53.103]  
[02:42:53.127]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:42:53.127]  
[02:42:53.131]  <debugvars>
[02:42:53.131]    // Pre-defined
[02:42:53.131]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:42:53.131]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:42:53.131]    __dp=0x00000000
[02:42:53.131]    __ap=0x00000000
[02:42:53.131]    __traceout=0x00000000      (Trace Disabled)
[02:42:53.131]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:42:53.131]    __FlashAddr=0x00000000
[02:42:53.131]    __FlashLen=0x00000000
[02:42:53.131]    __FlashArg=0x00000000
[02:42:53.131]    __FlashOp=0x00000000
[02:42:53.131]    __Result=0x00000000
[02:42:53.131]  </debugvars>
[02:42:53.131]  
[02:42:53.131]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:42:53.131]    <block atomic="false" info="">
[02:42:53.131]      __var deviceID = 0;
[02:42:53.131]        // -> [deviceID <= 0x00000000]
[02:42:53.131]      __var version = 0;
[02:42:53.131]        // -> [version <= 0x00000000]
[02:42:53.131]      __var partNum = 0;
[02:42:53.131]        // -> [partNum <= 0x00000000]
[02:42:53.131]      __var manuf = 0;
[02:42:53.131]        // -> [manuf <= 0x00000000]
[02:42:53.131]      __var isMSPM0G1X0X_G3X0X = 0;
[02:42:53.131]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:42:53.131]      __var isProduction = 0;
[02:42:53.131]        // -> [isProduction <= 0x00000000]
[02:42:53.131]      __var continueId = 0;
[02:42:53.131]        // -> [continueId <= 0x00000000]
[02:42:53.135]      deviceID =   Read32(0x41C40004);
[02:42:53.147]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:42:53.147]        // -> [deviceID <= 0x2BB8802F]
[02:42:53.147]      version = deviceID >> 28;
[02:42:53.147]        // -> [version <= 0x00000002]
[02:42:53.147]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:42:53.147]        // -> [partNum <= 0x0000BB88]
[02:42:53.147]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:42:53.147]        // -> [manuf <= 0x00000017]
[02:42:53.147]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:42:53.147]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:42:53.147]      isProduction = (version > 0);
[02:42:53.147]        // -> [isProduction <= 0x00000001]
[02:42:53.147]    </block>
[02:42:53.147]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:42:53.147]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:42:53.147]        // =>  FALSE
[02:42:53.147]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:42:53.147]    </control>
[02:42:53.147]    <control if="continueId == 4" while="" timeout="0" info="">
[02:42:53.147]      // if-block "continueId == 4"
[02:42:53.147]        // =>  FALSE
[02:42:53.147]      // skip if-block "continueId == 4"
[02:42:53.147]    </control>
[02:42:53.147]    <control if="!isProduction" while="" timeout="0" info="">
[02:42:53.147]      // if-block "!isProduction"
[02:42:53.147]        // =>  FALSE
[02:42:53.147]      // skip if-block "!isProduction"
[02:42:53.147]    </control>
[02:42:53.147]  </sequence>
[02:42:53.147]  
[02:43:01.264]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:43:01.264]  
[02:43:01.275]  <debugvars>
[02:43:01.275]    // Pre-defined
[02:43:01.275]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:43:01.275]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:43:01.275]    __dp=0x00000000
[02:43:01.275]    __ap=0x00000000
[02:43:01.275]    __traceout=0x00000000      (Trace Disabled)
[02:43:01.275]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:43:01.275]    __FlashAddr=0x00000000
[02:43:01.275]    __FlashLen=0x00000000
[02:43:01.275]    __FlashArg=0x00000000
[02:43:01.277]    __FlashOp=0x00000000
[02:43:01.277]    __Result=0x00000000
[02:43:01.277]  </debugvars>
[02:43:01.277]  
[02:43:01.277]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:43:01.277]    <block atomic="false" info="">
[02:43:01.277]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:43:01.277]        // -> [isSWJ <= 0x00000001]
[02:43:01.277]      __var hasDormant = __protocol & 0x00020000;
[02:43:01.277]        // -> [hasDormant <= 0x00000000]
[02:43:01.277]      __var protType   = __protocol & 0x0000FFFF;
[02:43:01.277]        // -> [protType <= 0x00000002]
[02:43:01.277]    </block>
[02:43:01.277]    <control if="protType == 1" while="" timeout="0" info="">
[02:43:01.277]      // if-block "protType == 1"
[02:43:01.277]        // =>  FALSE
[02:43:01.277]      // skip if-block "protType == 1"
[02:43:01.277]    </control>
[02:43:01.277]    <control if="protType == 2" while="" timeout="0" info="">
[02:43:01.277]      // if-block "protType == 2"
[02:43:01.277]        // =>  TRUE
[02:43:01.277]      <control if="isSWJ" while="" timeout="0" info="">
[02:43:01.277]        // if-block "isSWJ"
[02:43:01.277]          // =>  TRUE
[02:43:01.277]        <control if="hasDormant" while="" timeout="0" info="">
[02:43:01.277]          // if-block "hasDormant"
[02:43:01.277]            // =>  FALSE
[02:43:01.277]          // skip if-block "hasDormant"
[02:43:01.277]        </control>
[02:43:01.277]        <control if="!hasDormant" while="" timeout="0" info="">
[02:43:01.277]          // if-block "!hasDormant"
[02:43:01.277]            // =>  TRUE
[02:43:01.277]          <block atomic="false" info="">
[02:43:01.277]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:43:01.281]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:43:01.281]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:43:01.281]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:43:01.281]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:43:01.289]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:43:01.289]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:43:01.293]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:43:01.293]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:43:01.293]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:43:01.293]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:43:01.297]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:43:01.297]          </block>
[02:43:01.297]          // end if-block "!hasDormant"
[02:43:01.297]        </control>
[02:43:01.297]        // end if-block "isSWJ"
[02:43:01.297]      </control>
[02:43:01.297]      <control if="!isSWJ" while="" timeout="0" info="">
[02:43:01.297]        // if-block "!isSWJ"
[02:43:01.297]          // =>  FALSE
[02:43:01.297]        // skip if-block "!isSWJ"
[02:43:01.297]      </control>
[02:43:01.297]      <block atomic="false" info="">
[02:43:01.297]        ReadDP(0x0);
[02:43:01.301]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:43:01.301]      </block>
[02:43:01.301]      // end if-block "protType == 2"
[02:43:01.301]    </control>
[02:43:01.301]  </sequence>
[02:43:01.301]  
[02:43:01.309]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:43:01.309]  
[02:43:01.309]  <debugvars>
[02:43:01.309]    // Pre-defined
[02:43:01.309]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:43:01.309]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:43:01.309]    __dp=0x00000000
[02:43:01.309]    __ap=0x00000000
[02:43:01.309]    __traceout=0x00000000      (Trace Disabled)
[02:43:01.309]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:43:01.309]    __FlashAddr=0x00000000
[02:43:01.309]    __FlashLen=0x00000000
[02:43:01.309]    __FlashArg=0x00000000
[02:43:01.309]    __FlashOp=0x00000000
[02:43:01.309]    __Result=0x00000000
[02:43:01.309]  </debugvars>
[02:43:01.309]  
[02:43:01.309]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:43:01.309]    <block atomic="false" info="">
[02:43:01.309]      __var SW_DP_ABORT       = 0x0;
[02:43:01.309]        // -> [SW_DP_ABORT <= 0x00000000]
[02:43:01.309]      __var DP_CTRL_STAT      = 0x4;
[02:43:01.309]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:43:01.309]      __var DP_SELECT         = 0x8;
[02:43:01.309]        // -> [DP_SELECT <= 0x00000008]
[02:43:01.313]      __var powered_down      = 0;
[02:43:01.313]        // -> [powered_down <= 0x00000000]
[02:43:01.313]      WriteDP(DP_SELECT, 0x00000000);
[02:43:01.313]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:43:01.313]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:43:01.313]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:43:01.313]        // -> [powered_down <= 0x00000001]
[02:43:01.313]    </block>
[02:43:01.313]    <control if="powered_down" while="" timeout="0" info="">
[02:43:01.317]      // if-block "powered_down"
[02:43:01.317]        // =>  TRUE
[02:43:01.317]      <block atomic="false" info="">
[02:43:01.317]        Message(0, "Debug/System power-up request sent");
[02:43:01.317]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:43:01.317]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:43:01.317]      </block>
[02:43:01.321]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:43:01.321]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:43:01.321]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:43:01.321]        // while-condition  =>  FALSE
[02:43:01.321]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:43:01.321]      </control>
[02:43:01.321]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:43:01.321]        // if-block "(__protocol & 0xFFFF) == 1"
[02:43:01.321]          // =>  FALSE
[02:43:01.321]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:43:01.321]      </control>
[02:43:01.321]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:43:01.321]        // if-block "(__protocol & 0xFFFF) == 2"
[02:43:01.321]          // =>  TRUE
[02:43:01.321]        <block atomic="false" info="">
[02:43:01.321]          Message(0, "executing SWD power up");
[02:43:01.325]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:43:01.325]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:43:01.325]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:43:01.329]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:43:01.333]        </block>
[02:43:01.333]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:43:01.333]      </control>
[02:43:01.333]      // end if-block "powered_down"
[02:43:01.333]    </control>
[02:43:01.333]    <block atomic="false" info="">
[02:43:01.333]      __var DEBUG_PORT_VAL    = 0;
[02:43:01.333]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:43:01.333]      __var ACCESS_POINT_VAL  = 0;
[02:43:01.333]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:43:01.333]      __ap = 1; 
[02:43:01.333]        // -> [__ap <= 0x00000001]
[02:43:01.333]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:43:01.337]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:43:01.337]      __ap = 4;
[02:43:01.337]        // -> [__ap <= 0x00000004]
[02:43:01.337]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:43:01.353]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:43:01.353]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:43:01.353]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:43:01.353]    </block>
[02:43:01.353]    <block atomic="false" info="">
[02:43:01.353]      __var nReset = 0x80;
[02:43:01.353]        // -> [nReset <= 0x00000080]
[02:43:01.353]      __var canReadPins = 0;
[02:43:01.353]        // -> [canReadPins <= 0x00000000]
[02:43:01.353]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:43:01.363]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:43:01.364]        // -> [canReadPins <= 0x00000001]
[02:43:01.364]    </block>
[02:43:01.364]    <control if="" while="1" timeout="200" info="">
[02:43:01.364]      // while "1"  (timeout="200")
[02:43:01.364]      // while-condition  =>  TRUE
[02:43:01.364]      // while "1"  (timeout="200")
[02:43:01.364]      // while-condition  =>  TRUE
[02:43:01.364]      // while "1"  (timeout="200")
[02:43:01.364]      // while-condition  =>  TRUE
[02:43:01.364]      // while "1"  (timeout="200")
[02:43:01.365]      // while-condition  =>  TRUE
[02:43:01.365]      // while "1"  (timeout="200")
[02:43:01.365]      // while-condition  =>  TRUE
[02:43:01.365]      // while "1"  (timeout="200")
[02:43:01.365]      // while-condition  =>  TRUE
[02:43:01.365]      // while "1"  (timeout="200")
[02:43:01.365]      // while-condition  =>  TRUE
[02:43:01.365]      // while "1"  (timeout="200")
[02:43:01.365]      // while-condition  =>  TRUE
[02:43:01.365]      // while "1"  (timeout="200")
[02:43:01.365]      // while-condition  =>  TRUE
[02:43:01.366]      // while "1"  (timeout="200")
[02:43:01.366]      // while-condition  =>  TRUE
[02:43:01.366]      // while "1"  (timeout="200")
[02:43:01.366]      // while-condition  =>  TRUE
[02:43:01.366]      // while "1"  (timeout="200")
[02:43:01.366]      // while-condition  =>  TRUE
[02:43:01.366]      // while "1"  (timeout="200")
[02:43:01.366]      // while-condition  =>  TRUE
[02:43:01.366]      // while "1"  (timeout="200")
[02:43:01.367]      // while-condition  =>  TRUE
[02:43:01.367]      // while "1"  (timeout="200")
[02:43:01.367]      // while-condition  =>  TRUE
[02:43:01.367]      // while "1"  (timeout="200")
[02:43:01.368]      // while-condition  =>  TRUE
[02:43:01.368]      // while "1"  (timeout="200")
[02:43:01.368]      // while-condition  =>  TRUE
[02:43:01.368]      // while "1"  (timeout="200")
[02:43:01.368]      // while-condition  =>  TRUE
[02:43:01.368]      // while "1"  (timeout="200")
[02:43:01.368]      // while-condition  =>  TRUE
[02:43:01.368]      // while "1"  (timeout="200")
[02:43:01.368]      // while-condition  =>  TRUE
[02:43:01.369]      // while "1"  (timeout="200")
[02:43:01.369]      // while-condition  =>  TRUE
[02:43:01.369]      // while "1"  (timeout="200")
[02:43:01.369]      // while-condition  =>  TRUE
[02:43:01.369]      // while "1"  (timeout="200")
[02:43:01.369]      // while-condition  =>  TRUE
[02:43:01.369]      // while "1"  (timeout="200")
[02:43:01.369]      // while-condition  =>  TRUE
[02:43:01.369]      // while "1"  (timeout="200")
[02:43:01.369]      // while-condition  =>  TRUE
[02:43:01.370]      // while "1"  (timeout="200")
[02:43:01.370]      // while-condition  =>  TRUE
[02:43:01.370]      // while "1"  (timeout="200")
[02:43:01.370]      // while-condition  =>  TRUE
[02:43:01.370]      // while "1"  (timeout="200")
[02:43:01.370]      // while-condition  =>  TRUE
[02:43:01.370]      // while "1"  (timeout="200")
[02:43:01.370]      // while-condition  =>  TRUE
[02:43:01.370]      // while "1"  (timeout="200")
[02:43:01.370]      // while-condition  =>  TRUE
[02:43:01.371]      // while "1"  (timeout="200")
[02:43:01.371]      // while-condition  =>  TRUE
[02:43:01.371]      // while "1"  (timeout="200")
[02:43:01.371]      // while-condition  =>  TRUE
[02:43:01.371]      // while "1"  (timeout="200")
[02:43:01.371]      // while-condition  =>  TRUE
[02:43:01.371]      // while "1"  (timeout="200")
[02:43:01.371]      // while-condition  =>  TRUE
[02:43:01.372]      // while "1"  (timeout="200")
[02:43:01.372]      // while-condition  =>  TRUE
[02:43:01.372]      // while "1"  (timeout="200")
[02:43:01.372]      // while-condition  =>  TRUE
[02:43:01.372]      // while "1"  (timeout="200")
[02:43:01.373]      // while-condition  =>  TRUE
[02:43:01.373]      // while "1"  (timeout="200")
[02:43:01.373]      // while-condition  =>  TRUE
[02:43:01.373]      // while "1"  (timeout="200")
[02:43:01.373]      // while-condition  =>  TRUE
[02:43:01.373]      // while "1"  (timeout="200")
[02:43:01.373]      // while-condition  =>  TRUE
[02:43:01.373]      // while "1"  (timeout="200")
[02:43:01.373]      // while-condition  =>  TRUE
[02:43:01.373]      // while "1"  (timeout="200")
[02:43:01.374]      // while-condition  =>  TRUE
[02:43:01.374]      // while "1"  (timeout="200")
[02:43:01.374]      // while-condition  =>  TRUE
[02:43:01.374]      // while "1"  (timeout="200")
[02:43:01.375]      // while-condition  =>  TRUE
[02:43:01.375]      // while "1"  (timeout="200")
[02:43:01.375]      // while-condition  =>  TRUE
[02:43:01.375]      // while "1"  (timeout="200")
[02:43:01.375]      // while-condition  =>  TRUE
[02:43:01.375]      // while "1"  (timeout="200")
[02:43:01.375]      // while-condition  =>  TRUE
[02:43:01.375]      // while "1"  (timeout="200")
[02:43:01.376]      // while-condition  =>  TRUE
[02:43:01.376]      // while "1"  (timeout="200")
[02:43:01.376]      // while-condition  =>  TRUE
[02:43:01.376]      // while "1"  (timeout="200")
[02:43:01.376]      // while-condition  =>  TRUE
[02:43:01.376]      // while "1"  (timeout="200")
[02:43:01.376]      // while  =>  TIMEOUT
[02:43:01.376]      // end while "1"
[02:43:01.376]    </control>
[02:43:01.377]    <control if="canReadPins" while="" timeout="0" info="">
[02:43:01.377]      // if-block "canReadPins"
[02:43:01.377]        // =>  TRUE
[02:43:01.377]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:43:01.377]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:43:01.384]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:43:01.384]        // while-condition  =>  FALSE
[02:43:01.384]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:43:01.385]      </control>
[02:43:01.385]      // end if-block "canReadPins"
[02:43:01.385]    </control>
[02:43:01.385]    <control if="!canReadPins" while="" timeout="0" info="">
[02:43:01.385]      // if-block "!canReadPins"
[02:43:01.385]        // =>  FALSE
[02:43:01.385]      // skip if-block "!canReadPins"
[02:43:01.386]    </control>
[02:43:01.386]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:43:01.386]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:43:01.386]        // =>  TRUE
[02:43:01.386]      <block atomic="false" info="">
[02:43:01.386]        WriteAP(0x00, 0x190008);
[02:43:01.388]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:43:01.388]        WriteAP(0xF0, 0x01);
[02:43:01.404]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:43:01.404]      </block>
[02:43:01.404]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:43:01.404]    </control>
[02:43:01.404]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:43:01.404]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:43:01.404]        // =>  FALSE
[02:43:01.404]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:43:01.404]    </control>
[02:43:01.404]    <block atomic="false" info="">
[02:43:01.404]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:43:01.412]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:43:01.412]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:43:01.412]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:43:01.412]      __ap = 0; //lets make sure we reset the access point selection
[02:43:01.412]        // -> [__ap <= 0x00000000]
[02:43:01.412]    </block>
[02:43:01.412]  </sequence>
[02:43:01.412]  
[02:43:01.453]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:43:01.453]  
[02:43:01.453]  <debugvars>
[02:43:01.453]    // Pre-defined
[02:43:01.453]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:43:01.453]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:43:01.453]    __dp=0x00000000
[02:43:01.457]    __ap=0x00000000
[02:43:01.457]    __traceout=0x00000000      (Trace Disabled)
[02:43:01.457]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:43:01.457]    __FlashAddr=0x00000000
[02:43:01.457]    __FlashLen=0x00000000
[02:43:01.457]    __FlashArg=0x00000000
[02:43:01.457]    __FlashOp=0x00000000
[02:43:01.457]    __Result=0x00000000
[02:43:01.457]  </debugvars>
[02:43:01.457]  
[02:43:01.457]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:43:01.457]    <block atomic="false" info="">
[02:43:01.457]      __var deviceID = 0;
[02:43:01.457]        // -> [deviceID <= 0x00000000]
[02:43:01.457]      __var version = 0;
[02:43:01.457]        // -> [version <= 0x00000000]
[02:43:01.457]      __var partNum = 0;
[02:43:01.457]        // -> [partNum <= 0x00000000]
[02:43:01.457]      __var manuf = 0;
[02:43:01.457]        // -> [manuf <= 0x00000000]
[02:43:01.457]      __var isMSPM0G1X0X_G3X0X = 0;
[02:43:01.457]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:43:01.457]      __var isProduction = 0;
[02:43:01.457]        // -> [isProduction <= 0x00000000]
[02:43:01.457]      __var continueId = 0;
[02:43:01.457]        // -> [continueId <= 0x00000000]
[02:43:01.457]      deviceID =   Read32(0x41C40004);
[02:43:01.465]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:43:01.465]        // -> [deviceID <= 0x2BB8802F]
[02:43:01.465]      version = deviceID >> 28;
[02:43:01.465]        // -> [version <= 0x00000002]
[02:43:01.465]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:43:01.469]        // -> [partNum <= 0x0000BB88]
[02:43:01.469]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:43:01.469]        // -> [manuf <= 0x00000017]
[02:43:01.469]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:43:01.469]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:43:01.469]      isProduction = (version > 0);
[02:43:01.469]        // -> [isProduction <= 0x00000001]
[02:43:01.469]    </block>
[02:43:01.469]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:43:01.469]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:43:01.469]        // =>  FALSE
[02:43:01.469]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:43:01.469]    </control>
[02:43:01.469]    <control if="continueId == 4" while="" timeout="0" info="">
[02:43:01.469]      // if-block "continueId == 4"
[02:43:01.469]        // =>  FALSE
[02:43:01.469]      // skip if-block "continueId == 4"
[02:43:01.469]    </control>
[02:43:01.469]    <control if="!isProduction" while="" timeout="0" info="">
[02:43:01.469]      // if-block "!isProduction"
[02:43:01.469]        // =>  FALSE
[02:43:01.469]      // skip if-block "!isProduction"
[02:43:01.469]    </control>
[02:43:01.469]  </sequence>
[02:43:01.469]  
[02:47:21.648]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:47:21.648]  
[02:47:21.658]  <debugvars>
[02:47:21.658]    // Pre-defined
[02:47:21.658]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:47:21.658]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:47:21.658]    __dp=0x00000000
[02:47:21.658]    __ap=0x00000000
[02:47:21.658]    __traceout=0x00000000      (Trace Disabled)
[02:47:21.658]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:47:21.658]    __FlashAddr=0x00000000
[02:47:21.658]    __FlashLen=0x00000000
[02:47:21.658]    __FlashArg=0x00000000
[02:47:21.658]    __FlashOp=0x00000000
[02:47:21.658]    __Result=0x00000000
[02:47:21.658]  </debugvars>
[02:47:21.658]  
[02:47:21.658]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:47:21.658]    <block atomic="false" info="">
[02:47:21.658]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:47:21.658]        // -> [isSWJ <= 0x00000001]
[02:47:21.658]      __var hasDormant = __protocol & 0x00020000;
[02:47:21.658]        // -> [hasDormant <= 0x00000000]
[02:47:21.658]      __var protType   = __protocol & 0x0000FFFF;
[02:47:21.660]        // -> [protType <= 0x00000002]
[02:47:21.660]    </block>
[02:47:21.660]    <control if="protType == 1" while="" timeout="0" info="">
[02:47:21.660]      // if-block "protType == 1"
[02:47:21.660]        // =>  FALSE
[02:47:21.660]      // skip if-block "protType == 1"
[02:47:21.660]    </control>
[02:47:21.660]    <control if="protType == 2" while="" timeout="0" info="">
[02:47:21.660]      // if-block "protType == 2"
[02:47:21.660]        // =>  TRUE
[02:47:21.660]      <control if="isSWJ" while="" timeout="0" info="">
[02:47:21.660]        // if-block "isSWJ"
[02:47:21.660]          // =>  TRUE
[02:47:21.660]        <control if="hasDormant" while="" timeout="0" info="">
[02:47:21.660]          // if-block "hasDormant"
[02:47:21.660]            // =>  FALSE
[02:47:21.660]          // skip if-block "hasDormant"
[02:47:21.660]        </control>
[02:47:21.660]        <control if="!hasDormant" while="" timeout="0" info="">
[02:47:21.660]          // if-block "!hasDormant"
[02:47:21.660]            // =>  TRUE
[02:47:21.660]          <block atomic="false" info="">
[02:47:21.660]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:47:21.668]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:47:21.668]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:47:21.668]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:47:21.668]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:47:21.668]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:47:21.668]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:47:21.672]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:47:21.672]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:47:21.672]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:47:21.672]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:47:21.672]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:47:21.676]          </block>
[02:47:21.676]          // end if-block "!hasDormant"
[02:47:21.676]        </control>
[02:47:21.676]        // end if-block "isSWJ"
[02:47:21.676]      </control>
[02:47:21.676]      <control if="!isSWJ" while="" timeout="0" info="">
[02:47:21.676]        // if-block "!isSWJ"
[02:47:21.676]          // =>  FALSE
[02:47:21.676]        // skip if-block "!isSWJ"
[02:47:21.676]      </control>
[02:47:21.676]      <block atomic="false" info="">
[02:47:21.676]        ReadDP(0x0);
[02:47:21.676]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:47:21.676]      </block>
[02:47:21.676]      // end if-block "protType == 2"
[02:47:21.676]    </control>
[02:47:21.676]  </sequence>
[02:47:21.676]  
[02:47:21.680]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:47:21.680]  
[02:47:21.680]  <debugvars>
[02:47:21.680]    // Pre-defined
[02:47:21.680]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:47:21.680]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:47:21.680]    __dp=0x00000000
[02:47:21.680]    __ap=0x00000000
[02:47:21.680]    __traceout=0x00000000      (Trace Disabled)
[02:47:21.680]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:47:21.680]    __FlashAddr=0x00000000
[02:47:21.680]    __FlashLen=0x00000000
[02:47:21.680]    __FlashArg=0x00000000
[02:47:21.680]    __FlashOp=0x00000000
[02:47:21.680]    __Result=0x00000000
[02:47:21.680]  </debugvars>
[02:47:21.680]  
[02:47:21.680]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:47:21.680]    <block atomic="false" info="">
[02:47:21.680]      __var SW_DP_ABORT       = 0x0;
[02:47:21.680]        // -> [SW_DP_ABORT <= 0x00000000]
[02:47:21.684]      __var DP_CTRL_STAT      = 0x4;
[02:47:21.684]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:47:21.684]      __var DP_SELECT         = 0x8;
[02:47:21.684]        // -> [DP_SELECT <= 0x00000008]
[02:47:21.684]      __var powered_down      = 0;
[02:47:21.684]        // -> [powered_down <= 0x00000000]
[02:47:21.684]      WriteDP(DP_SELECT, 0x00000000);
[02:47:21.684]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:47:21.684]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:47:21.688]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:47:21.688]        // -> [powered_down <= 0x00000001]
[02:47:21.688]    </block>
[02:47:21.688]    <control if="powered_down" while="" timeout="0" info="">
[02:47:21.688]      // if-block "powered_down"
[02:47:21.688]        // =>  TRUE
[02:47:21.688]      <block atomic="false" info="">
[02:47:21.688]        Message(0, "Debug/System power-up request sent");
[02:47:21.690]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:47:21.690]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:47:21.693]      </block>
[02:47:21.693]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:47:21.693]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:47:21.693]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:47:21.693]        // while-condition  =>  FALSE
[02:47:21.693]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:47:21.693]      </control>
[02:47:21.693]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:47:21.693]        // if-block "(__protocol & 0xFFFF) == 1"
[02:47:21.693]          // =>  FALSE
[02:47:21.693]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:47:21.693]      </control>
[02:47:21.693]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:47:21.693]        // if-block "(__protocol & 0xFFFF) == 2"
[02:47:21.693]          // =>  TRUE
[02:47:21.693]        <block atomic="false" info="">
[02:47:21.693]          Message(0, "executing SWD power up");
[02:47:21.697]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:47:21.697]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:47:21.697]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:47:21.701]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:47:21.701]        </block>
[02:47:21.701]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:47:21.701]      </control>
[02:47:21.701]      // end if-block "powered_down"
[02:47:21.701]    </control>
[02:47:21.701]    <block atomic="false" info="">
[02:47:21.701]      __var DEBUG_PORT_VAL    = 0;
[02:47:21.701]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:47:21.701]      __var ACCESS_POINT_VAL  = 0;
[02:47:21.701]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:47:21.705]      __ap = 1; 
[02:47:21.705]        // -> [__ap <= 0x00000001]
[02:47:21.705]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:47:21.705]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:47:21.705]      __ap = 4;
[02:47:21.709]        // -> [__ap <= 0x00000004]
[02:47:21.709]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:47:21.709]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:47:21.709]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:47:21.713]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:47:21.714]    </block>
[02:47:21.714]    <block atomic="false" info="">
[02:47:21.714]      __var nReset = 0x80;
[02:47:21.714]        // -> [nReset <= 0x00000080]
[02:47:21.714]      __var canReadPins = 0;
[02:47:21.714]        // -> [canReadPins <= 0x00000000]
[02:47:21.714]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:47:21.717]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:47:21.717]        // -> [canReadPins <= 0x00000001]
[02:47:21.717]    </block>
[02:47:21.717]    <control if="" while="1" timeout="200" info="">
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.717]      // while-condition  =>  TRUE
[02:47:21.717]      // while "1"  (timeout="200")
[02:47:21.721]      // while-condition  =>  TRUE
[02:47:21.721]      // while "1"  (timeout="200")
[02:47:21.721]      // while  =>  TIMEOUT
[02:47:21.721]      // end while "1"
[02:47:21.721]    </control>
[02:47:21.721]    <control if="canReadPins" while="" timeout="0" info="">
[02:47:21.721]      // if-block "canReadPins"
[02:47:21.721]        // =>  TRUE
[02:47:21.721]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:47:21.721]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:47:21.721]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:47:21.721]        // while-condition  =>  FALSE
[02:47:21.721]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:47:21.721]      </control>
[02:47:21.721]      // end if-block "canReadPins"
[02:47:21.721]    </control>
[02:47:21.721]    <control if="!canReadPins" while="" timeout="0" info="">
[02:47:21.721]      // if-block "!canReadPins"
[02:47:21.721]        // =>  FALSE
[02:47:21.721]      // skip if-block "!canReadPins"
[02:47:21.721]    </control>
[02:47:21.721]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:47:21.721]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:47:21.721]        // =>  TRUE
[02:47:21.721]      <block atomic="false" info="">
[02:47:21.721]        WriteAP(0x00, 0x190008);
[02:47:21.725]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:47:21.725]        WriteAP(0xF0, 0x01);
[02:47:21.729]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:47:21.729]      </block>
[02:47:21.729]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:47:21.729]    </control>
[02:47:21.729]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:47:21.729]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:47:21.729]        // =>  FALSE
[02:47:21.729]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:47:21.729]    </control>
[02:47:21.729]    <block atomic="false" info="">
[02:47:21.729]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:47:21.733]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:47:21.733]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:47:21.733]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:47:21.737]      __ap = 0; //lets make sure we reset the access point selection
[02:47:21.737]        // -> [__ap <= 0x00000000]
[02:47:21.737]    </block>
[02:47:21.737]  </sequence>
[02:47:21.737]  
[02:47:21.777]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:47:21.777]  
[02:47:21.777]  <debugvars>
[02:47:21.777]    // Pre-defined
[02:47:21.777]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:47:21.777]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:47:21.777]    __dp=0x00000000
[02:47:21.777]    __ap=0x00000000
[02:47:21.777]    __traceout=0x00000000      (Trace Disabled)
[02:47:21.777]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:47:21.777]    __FlashAddr=0x00000000
[02:47:21.777]    __FlashLen=0x00000000
[02:47:21.777]    __FlashArg=0x00000000
[02:47:21.777]    __FlashOp=0x00000000
[02:47:21.777]    __Result=0x00000000
[02:47:21.777]  </debugvars>
[02:47:21.777]  
[02:47:21.777]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:47:21.777]    <block atomic="false" info="">
[02:47:21.777]      __var deviceID = 0;
[02:47:21.777]        // -> [deviceID <= 0x00000000]
[02:47:21.777]      __var version = 0;
[02:47:21.777]        // -> [version <= 0x00000000]
[02:47:21.777]      __var partNum = 0;
[02:47:21.777]        // -> [partNum <= 0x00000000]
[02:47:21.777]      __var manuf = 0;
[02:47:21.777]        // -> [manuf <= 0x00000000]
[02:47:21.777]      __var isMSPM0G1X0X_G3X0X = 0;
[02:47:21.777]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:47:21.777]      __var isProduction = 0;
[02:47:21.777]        // -> [isProduction <= 0x00000000]
[02:47:21.777]      __var continueId = 0;
[02:47:21.777]        // -> [continueId <= 0x00000000]
[02:47:21.777]      deviceID =   Read32(0x41C40004);
[02:47:21.793]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:47:21.793]        // -> [deviceID <= 0x2BB8802F]
[02:47:21.793]      version = deviceID >> 28;
[02:47:21.793]        // -> [version <= 0x00000002]
[02:47:21.793]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:47:21.793]        // -> [partNum <= 0x0000BB88]
[02:47:21.793]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:47:21.793]        // -> [manuf <= 0x00000017]
[02:47:21.793]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:47:21.793]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:47:21.793]      isProduction = (version > 0);
[02:47:21.793]        // -> [isProduction <= 0x00000001]
[02:47:21.793]    </block>
[02:47:21.793]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:47:21.793]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:47:21.793]        // =>  FALSE
[02:47:21.793]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:47:21.793]    </control>
[02:47:21.793]    <control if="continueId == 4" while="" timeout="0" info="">
[02:47:21.793]      // if-block "continueId == 4"
[02:47:21.793]        // =>  FALSE
[02:47:21.793]      // skip if-block "continueId == 4"
[02:47:21.793]    </control>
[02:47:21.793]    <control if="!isProduction" while="" timeout="0" info="">
[02:47:21.793]      // if-block "!isProduction"
[02:47:21.793]        // =>  FALSE
[02:47:21.793]      // skip if-block "!isProduction"
[02:47:21.793]    </control>
[02:47:21.793]  </sequence>
[02:47:21.793]  
[02:48:20.259]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:48:20.259]  
[02:48:20.267]  <debugvars>
[02:48:20.267]    // Pre-defined
[02:48:20.267]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:48:20.267]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:48:20.267]    __dp=0x00000000
[02:48:20.267]    __ap=0x00000000
[02:48:20.267]    __traceout=0x00000000      (Trace Disabled)
[02:48:20.267]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:48:20.267]    __FlashAddr=0x00000000
[02:48:20.267]    __FlashLen=0x00000000
[02:48:20.267]    __FlashArg=0x00000000
[02:48:20.267]    __FlashOp=0x00000000
[02:48:20.267]    __Result=0x00000000
[02:48:20.267]  </debugvars>
[02:48:20.267]  
[02:48:20.268]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:48:20.268]    <block atomic="false" info="">
[02:48:20.268]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:48:20.268]        // -> [isSWJ <= 0x00000001]
[02:48:20.268]      __var hasDormant = __protocol & 0x00020000;
[02:48:20.268]        // -> [hasDormant <= 0x00000000]
[02:48:20.268]      __var protType   = __protocol & 0x0000FFFF;
[02:48:20.268]        // -> [protType <= 0x00000002]
[02:48:20.268]    </block>
[02:48:20.268]    <control if="protType == 1" while="" timeout="0" info="">
[02:48:20.268]      // if-block "protType == 1"
[02:48:20.268]        // =>  FALSE
[02:48:20.269]      // skip if-block "protType == 1"
[02:48:20.269]    </control>
[02:48:20.269]    <control if="protType == 2" while="" timeout="0" info="">
[02:48:20.269]      // if-block "protType == 2"
[02:48:20.269]        // =>  TRUE
[02:48:20.269]      <control if="isSWJ" while="" timeout="0" info="">
[02:48:20.269]        // if-block "isSWJ"
[02:48:20.269]          // =>  TRUE
[02:48:20.269]        <control if="hasDormant" while="" timeout="0" info="">
[02:48:20.269]          // if-block "hasDormant"
[02:48:20.269]            // =>  FALSE
[02:48:20.269]          // skip if-block "hasDormant"
[02:48:20.269]        </control>
[02:48:20.269]        <control if="!hasDormant" while="" timeout="0" info="">
[02:48:20.269]          // if-block "!hasDormant"
[02:48:20.269]            // =>  TRUE
[02:48:20.269]          <block atomic="false" info="">
[02:48:20.271]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:48:20.279]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:48:20.279]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:48:20.283]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:48:20.283]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:48:20.300]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:48:20.300]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:48:20.303]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:48:20.303]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:48:20.306]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:48:20.306]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:48:20.308]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:48:20.308]          </block>
[02:48:20.308]          // end if-block "!hasDormant"
[02:48:20.308]        </control>
[02:48:20.308]        // end if-block "isSWJ"
[02:48:20.308]      </control>
[02:48:20.308]      <control if="!isSWJ" while="" timeout="0" info="">
[02:48:20.308]        // if-block "!isSWJ"
[02:48:20.308]          // =>  FALSE
[02:48:20.308]        // skip if-block "!isSWJ"
[02:48:20.308]      </control>
[02:48:20.308]      <block atomic="false" info="">
[02:48:20.308]        ReadDP(0x0);
[02:48:20.312]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:48:20.312]      </block>
[02:48:20.312]      // end if-block "protType == 2"
[02:48:20.312]    </control>
[02:48:20.312]  </sequence>
[02:48:20.312]  
[02:48:20.320]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:48:20.320]  
[02:48:20.320]  <debugvars>
[02:48:20.320]    // Pre-defined
[02:48:20.320]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:48:20.324]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:48:20.324]    __dp=0x00000000
[02:48:20.324]    __ap=0x00000000
[02:48:20.324]    __traceout=0x00000000      (Trace Disabled)
[02:48:20.324]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:48:20.324]    __FlashAddr=0x00000000
[02:48:20.324]    __FlashLen=0x00000000
[02:48:20.324]    __FlashArg=0x00000000
[02:48:20.324]    __FlashOp=0x00000000
[02:48:20.324]    __Result=0x00000000
[02:48:20.324]  </debugvars>
[02:48:20.324]  
[02:48:20.324]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:48:20.324]    <block atomic="false" info="">
[02:48:20.324]      __var SW_DP_ABORT       = 0x0;
[02:48:20.324]        // -> [SW_DP_ABORT <= 0x00000000]
[02:48:20.324]      __var DP_CTRL_STAT      = 0x4;
[02:48:20.324]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:48:20.324]      __var DP_SELECT         = 0x8;
[02:48:20.324]        // -> [DP_SELECT <= 0x00000008]
[02:48:20.324]      __var powered_down      = 0;
[02:48:20.324]        // -> [powered_down <= 0x00000000]
[02:48:20.324]      WriteDP(DP_SELECT, 0x00000000);
[02:48:20.337]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:48:20.338]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:48:20.353]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:48:20.353]        // -> [powered_down <= 0x00000001]
[02:48:20.353]    </block>
[02:48:20.353]    <control if="powered_down" while="" timeout="0" info="">
[02:48:20.353]      // if-block "powered_down"
[02:48:20.353]        // =>  TRUE
[02:48:20.353]      <block atomic="false" info="">
[02:48:20.353]        Message(0, "Debug/System power-up request sent");
[02:48:20.355]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:48:20.358]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:48:20.358]      </block>
[02:48:20.358]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:48:20.358]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:48:20.362]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:48:20.362]        // while-condition  =>  FALSE
[02:48:20.362]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:48:20.362]      </control>
[02:48:20.362]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:48:20.362]        // if-block "(__protocol & 0xFFFF) == 1"
[02:48:20.362]          // =>  FALSE
[02:48:20.362]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:48:20.362]      </control>
[02:48:20.362]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:48:20.362]        // if-block "(__protocol & 0xFFFF) == 2"
[02:48:20.362]          // =>  TRUE
[02:48:20.362]        <block atomic="false" info="">
[02:48:20.362]          Message(0, "executing SWD power up");
[02:48:20.362]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:48:20.375]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:48:20.375]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:48:20.382]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:48:20.382]        </block>
[02:48:20.382]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:48:20.382]      </control>
[02:48:20.382]      // end if-block "powered_down"
[02:48:20.382]    </control>
[02:48:20.382]    <block atomic="false" info="">
[02:48:20.382]      __var DEBUG_PORT_VAL    = 0;
[02:48:20.382]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:48:20.382]      __var ACCESS_POINT_VAL  = 0;
[02:48:20.382]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:48:20.382]      __ap = 1; 
[02:48:20.382]        // -> [__ap <= 0x00000001]
[02:48:20.382]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:48:20.402]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:48:20.402]      __ap = 4;
[02:48:20.402]        // -> [__ap <= 0x00000004]
[02:48:20.402]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:48:20.417]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:48:20.417]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:48:20.417]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:48:20.418]    </block>
[02:48:20.418]    <block atomic="false" info="">
[02:48:20.418]      __var nReset = 0x80;
[02:48:20.418]        // -> [nReset <= 0x00000080]
[02:48:20.418]      __var canReadPins = 0;
[02:48:20.418]        // -> [canReadPins <= 0x00000000]
[02:48:20.418]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:48:20.450]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:48:20.450]        // -> [canReadPins <= 0x00000001]
[02:48:20.450]    </block>
[02:48:20.450]    <control if="" while="1" timeout="200" info="">
[02:48:20.450]      // while "1"  (timeout="200")
[02:48:20.450]      // while-condition  =>  TRUE
[02:48:20.450]      // while "1"  (timeout="200")
[02:48:20.450]      // while-condition  =>  TRUE
[02:48:20.450]      // while "1"  (timeout="200")
[02:48:20.450]      // while-condition  =>  TRUE
[02:48:20.450]      // while "1"  (timeout="200")
[02:48:20.453]      // while-condition  =>  TRUE
[02:48:20.453]      // while "1"  (timeout="200")
[02:48:20.453]      // while-condition  =>  TRUE
[02:48:20.453]      // while "1"  (timeout="200")
[02:48:20.453]      // while-condition  =>  TRUE
[02:48:20.453]      // while "1"  (timeout="200")
[02:48:20.453]      // while-condition  =>  TRUE
[02:48:20.453]      // while "1"  (timeout="200")
[02:48:20.453]      // while-condition  =>  TRUE
[02:48:20.453]      // while "1"  (timeout="200")
[02:48:20.453]      // while-condition  =>  TRUE
[02:48:20.453]      // while "1"  (timeout="200")
[02:48:20.453]      // while-condition  =>  TRUE
[02:48:20.453]      // while "1"  (timeout="200")
[02:48:20.453]      // while-condition  =>  TRUE
[02:48:20.453]      // while "1"  (timeout="200")
[02:48:20.455]      // while-condition  =>  TRUE
[02:48:20.455]      // while "1"  (timeout="200")
[02:48:20.455]      // while  =>  TIMEOUT
[02:48:20.455]      // end while "1"
[02:48:20.455]    </control>
[02:48:20.455]    <control if="canReadPins" while="" timeout="0" info="">
[02:48:20.455]      // if-block "canReadPins"
[02:48:20.455]        // =>  TRUE
[02:48:20.455]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:48:20.455]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:48:20.463]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:48:20.463]        // while-condition  =>  FALSE
[02:48:20.463]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:48:20.463]      </control>
[02:48:20.463]      // end if-block "canReadPins"
[02:48:20.463]    </control>
[02:48:20.463]    <control if="!canReadPins" while="" timeout="0" info="">
[02:48:20.463]      // if-block "!canReadPins"
[02:48:20.463]        // =>  FALSE
[02:48:20.463]      // skip if-block "!canReadPins"
[02:48:20.465]    </control>
[02:48:20.465]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:48:20.465]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:48:20.465]        // =>  TRUE
[02:48:20.465]      <block atomic="false" info="">
[02:48:20.465]        WriteAP(0x00, 0x190008);
[02:48:20.476]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:48:20.478]        WriteAP(0xF0, 0x01);
[02:48:20.488]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:48:20.490]      </block>
[02:48:20.490]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:48:20.490]    </control>
[02:48:20.490]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:48:20.490]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:48:20.490]        // =>  FALSE
[02:48:20.490]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:48:20.490]    </control>
[02:48:20.490]    <block atomic="false" info="">
[02:48:20.490]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:48:20.515]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:48:20.515]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:48:20.515]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:48:20.519]      __ap = 0; //lets make sure we reset the access point selection
[02:48:20.519]        // -> [__ap <= 0x00000000]
[02:48:20.519]    </block>
[02:48:20.519]  </sequence>
[02:48:20.519]  
[02:48:20.641]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:48:20.641]  
[02:48:20.645]  <debugvars>
[02:48:20.645]    // Pre-defined
[02:48:20.645]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:48:20.646]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:48:20.646]    __dp=0x00000000
[02:48:20.646]    __ap=0x00000000
[02:48:20.646]    __traceout=0x00000000      (Trace Disabled)
[02:48:20.646]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:48:20.646]    __FlashAddr=0x00000000
[02:48:20.646]    __FlashLen=0x00000000
[02:48:20.646]    __FlashArg=0x00000000
[02:48:20.646]    __FlashOp=0x00000000
[02:48:20.646]    __Result=0x00000000
[02:48:20.646]  </debugvars>
[02:48:20.646]  
[02:48:20.646]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:48:20.646]    <block atomic="false" info="">
[02:48:20.646]      __var deviceID = 0;
[02:48:20.646]        // -> [deviceID <= 0x00000000]
[02:48:20.646]      __var version = 0;
[02:48:20.646]        // -> [version <= 0x00000000]
[02:48:20.646]      __var partNum = 0;
[02:48:20.646]        // -> [partNum <= 0x00000000]
[02:48:20.646]      __var manuf = 0;
[02:48:20.646]        // -> [manuf <= 0x00000000]
[02:48:20.646]      __var isMSPM0G1X0X_G3X0X = 0;
[02:48:20.646]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:48:20.646]      __var isProduction = 0;
[02:48:20.646]        // -> [isProduction <= 0x00000000]
[02:48:20.646]      __var continueId = 0;
[02:48:20.646]        // -> [continueId <= 0x00000000]
[02:48:20.646]      deviceID =   Read32(0x41C40004);
[02:48:20.671]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:48:20.671]        // -> [deviceID <= 0x2BB8802F]
[02:48:20.671]      version = deviceID >> 28;
[02:48:20.671]        // -> [version <= 0x00000002]
[02:48:20.671]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:48:20.671]        // -> [partNum <= 0x0000BB88]
[02:48:20.671]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:48:20.671]        // -> [manuf <= 0x00000017]
[02:48:20.671]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:48:20.671]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:48:20.671]      isProduction = (version > 0);
[02:48:20.671]        // -> [isProduction <= 0x00000001]
[02:48:20.671]    </block>
[02:48:20.671]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:48:20.671]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:48:20.671]        // =>  FALSE
[02:48:20.671]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:48:20.671]    </control>
[02:48:20.671]    <control if="continueId == 4" while="" timeout="0" info="">
[02:48:20.674]      // if-block "continueId == 4"
[02:48:20.674]        // =>  FALSE
[02:48:20.674]      // skip if-block "continueId == 4"
[02:48:20.674]    </control>
[02:48:20.674]    <control if="!isProduction" while="" timeout="0" info="">
[02:48:20.674]      // if-block "!isProduction"
[02:48:20.674]        // =>  FALSE
[02:48:20.674]      // skip if-block "!isProduction"
[02:48:20.674]    </control>
[02:48:20.674]  </sequence>
[02:48:20.674]  
[02:49:10.854]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:49:10.854]  
[02:49:10.854]  <debugvars>
[02:49:10.854]    // Pre-defined
[02:49:10.854]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:49:10.854]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:49:10.854]    __dp=0x00000000
[02:49:10.854]    __ap=0x00000000
[02:49:10.854]    __traceout=0x00000000      (Trace Disabled)
[02:49:10.854]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:49:10.854]    __FlashAddr=0x00000000
[02:49:10.854]    __FlashLen=0x00000000
[02:49:10.854]    __FlashArg=0x00000000
[02:49:10.854]    __FlashOp=0x00000000
[02:49:10.854]    __Result=0x00000000
[02:49:10.854]  </debugvars>
[02:49:10.854]  
[02:49:10.854]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:49:10.854]    <block atomic="false" info="">
[02:49:10.854]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:49:10.854]        // -> [isSWJ <= 0x00000001]
[02:49:10.854]      __var hasDormant = __protocol & 0x00020000;
[02:49:10.854]        // -> [hasDormant <= 0x00000000]
[02:49:10.854]      __var protType   = __protocol & 0x0000FFFF;
[02:49:10.854]        // -> [protType <= 0x00000002]
[02:49:10.854]    </block>
[02:49:10.854]    <control if="protType == 1" while="" timeout="0" info="">
[02:49:10.854]      // if-block "protType == 1"
[02:49:10.854]        // =>  FALSE
[02:49:10.854]      // skip if-block "protType == 1"
[02:49:10.854]    </control>
[02:49:10.854]    <control if="protType == 2" while="" timeout="0" info="">
[02:49:10.858]      // if-block "protType == 2"
[02:49:10.858]        // =>  TRUE
[02:49:10.858]      <control if="isSWJ" while="" timeout="0" info="">
[02:49:10.858]        // if-block "isSWJ"
[02:49:10.858]          // =>  TRUE
[02:49:10.858]        <control if="hasDormant" while="" timeout="0" info="">
[02:49:10.858]          // if-block "hasDormant"
[02:49:10.858]            // =>  FALSE
[02:49:10.858]          // skip if-block "hasDormant"
[02:49:10.858]        </control>
[02:49:10.858]        <control if="!hasDormant" while="" timeout="0" info="">
[02:49:10.858]          // if-block "!hasDormant"
[02:49:10.858]            // =>  TRUE
[02:49:10.858]          <block atomic="false" info="">
[02:49:10.858]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:49:10.862]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:49:10.862]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:49:10.862]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:49:10.862]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:49:10.866]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:49:10.866]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:49:10.866]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:49:10.866]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:49:10.866]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:49:10.866]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:49:10.870]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:49:10.870]          </block>
[02:49:10.870]          // end if-block "!hasDormant"
[02:49:10.870]        </control>
[02:49:10.870]        // end if-block "isSWJ"
[02:49:10.870]      </control>
[02:49:10.870]      <control if="!isSWJ" while="" timeout="0" info="">
[02:49:10.870]        // if-block "!isSWJ"
[02:49:10.870]          // =>  FALSE
[02:49:10.870]        // skip if-block "!isSWJ"
[02:49:10.870]      </control>
[02:49:10.870]      <block atomic="false" info="">
[02:49:10.870]        ReadDP(0x0);
[02:49:10.874]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:49:10.874]      </block>
[02:49:10.874]      // end if-block "protType == 2"
[02:49:10.874]    </control>
[02:49:10.874]  </sequence>
[02:49:10.874]  
[02:49:10.878]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:49:10.878]  
[02:49:10.878]  <debugvars>
[02:49:10.878]    // Pre-defined
[02:49:10.878]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:49:10.878]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:49:10.878]    __dp=0x00000000
[02:49:10.878]    __ap=0x00000000
[02:49:10.878]    __traceout=0x00000000      (Trace Disabled)
[02:49:10.878]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:49:10.878]    __FlashAddr=0x00000000
[02:49:10.878]    __FlashLen=0x00000000
[02:49:10.878]    __FlashArg=0x00000000
[02:49:10.878]    __FlashOp=0x00000000
[02:49:10.878]    __Result=0x00000000
[02:49:10.878]  </debugvars>
[02:49:10.878]  
[02:49:10.878]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:49:10.878]    <block atomic="false" info="">
[02:49:10.878]      __var SW_DP_ABORT       = 0x0;
[02:49:10.878]        // -> [SW_DP_ABORT <= 0x00000000]
[02:49:10.878]      __var DP_CTRL_STAT      = 0x4;
[02:49:10.878]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:49:10.878]      __var DP_SELECT         = 0x8;
[02:49:10.878]        // -> [DP_SELECT <= 0x00000008]
[02:49:10.878]      __var powered_down      = 0;
[02:49:10.878]        // -> [powered_down <= 0x00000000]
[02:49:10.878]      WriteDP(DP_SELECT, 0x00000000);
[02:49:10.882]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:49:10.882]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:49:10.882]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:49:10.882]        // -> [powered_down <= 0x00000001]
[02:49:10.882]    </block>
[02:49:10.882]    <control if="powered_down" while="" timeout="0" info="">
[02:49:10.882]      // if-block "powered_down"
[02:49:10.882]        // =>  TRUE
[02:49:10.882]      <block atomic="false" info="">
[02:49:10.882]        Message(0, "Debug/System power-up request sent");
[02:49:10.886]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:49:10.891]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:49:10.891]      </block>
[02:49:10.891]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:49:10.891]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:49:10.894]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:49:10.894]        // while-condition  =>  FALSE
[02:49:10.894]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:49:10.894]      </control>
[02:49:10.894]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:49:10.895]        // if-block "(__protocol & 0xFFFF) == 1"
[02:49:10.895]          // =>  FALSE
[02:49:10.895]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:49:10.895]      </control>
[02:49:10.895]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:49:10.895]        // if-block "(__protocol & 0xFFFF) == 2"
[02:49:10.895]          // =>  TRUE
[02:49:10.895]        <block atomic="false" info="">
[02:49:10.895]          Message(0, "executing SWD power up");
[02:49:10.895]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:49:10.899]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:49:10.899]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:49:10.900]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:49:10.900]        </block>
[02:49:10.900]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:49:10.900]      </control>
[02:49:10.901]      // end if-block "powered_down"
[02:49:10.901]    </control>
[02:49:10.901]    <block atomic="false" info="">
[02:49:10.901]      __var DEBUG_PORT_VAL    = 0;
[02:49:10.901]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:49:10.901]      __var ACCESS_POINT_VAL  = 0;
[02:49:10.901]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:49:10.901]      __ap = 1; 
[02:49:10.901]        // -> [__ap <= 0x00000001]
[02:49:10.901]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:49:10.908]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:49:10.908]      __ap = 4;
[02:49:10.908]        // -> [__ap <= 0x00000004]
[02:49:10.908]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:49:10.915]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:49:10.915]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:49:10.915]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:49:10.917]    </block>
[02:49:10.917]    <block atomic="false" info="">
[02:49:10.917]      __var nReset = 0x80;
[02:49:10.917]        // -> [nReset <= 0x00000080]
[02:49:10.917]      __var canReadPins = 0;
[02:49:10.917]        // -> [canReadPins <= 0x00000000]
[02:49:10.917]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:49:10.917]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:49:10.917]        // -> [canReadPins <= 0x00000001]
[02:49:10.919]    </block>
[02:49:10.919]    <control if="" while="1" timeout="200" info="">
[02:49:10.919]      // while "1"  (timeout="200")
[02:49:10.919]      // while-condition  =>  TRUE
[02:49:10.920]      // while "1"  (timeout="200")
[02:49:10.920]      // while-condition  =>  TRUE
[02:49:10.920]      // while "1"  (timeout="200")
[02:49:10.920]      // while-condition  =>  TRUE
[02:49:10.920]      // while "1"  (timeout="200")
[02:49:10.920]      // while-condition  =>  TRUE
[02:49:10.920]      // while "1"  (timeout="200")
[02:49:10.920]      // while-condition  =>  TRUE
[02:49:10.920]      // while "1"  (timeout="200")
[02:49:10.920]      // while-condition  =>  TRUE
[02:49:10.920]      // while "1"  (timeout="200")
[02:49:10.920]      // while-condition  =>  TRUE
[02:49:10.920]      // while "1"  (timeout="200")
[02:49:10.920]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.921]      // while "1"  (timeout="200")
[02:49:10.921]      // while-condition  =>  TRUE
[02:49:10.924]      // while "1"  (timeout="200")
[02:49:10.924]      // while  =>  TIMEOUT
[02:49:10.924]      // end while "1"
[02:49:10.924]    </control>
[02:49:10.924]    <control if="canReadPins" while="" timeout="0" info="">
[02:49:10.924]      // if-block "canReadPins"
[02:49:10.924]        // =>  TRUE
[02:49:10.924]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:49:10.924]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:49:10.932]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:49:10.932]        // while-condition  =>  FALSE
[02:49:10.932]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:49:10.932]      </control>
[02:49:10.932]      // end if-block "canReadPins"
[02:49:10.932]    </control>
[02:49:10.932]    <control if="!canReadPins" while="" timeout="0" info="">
[02:49:10.932]      // if-block "!canReadPins"
[02:49:10.932]        // =>  FALSE
[02:49:10.932]      // skip if-block "!canReadPins"
[02:49:10.932]    </control>
[02:49:10.932]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:49:10.932]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:49:10.932]        // =>  TRUE
[02:49:10.932]      <block atomic="false" info="">
[02:49:10.932]        WriteAP(0x00, 0x190008);
[02:49:10.932]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:49:10.936]        WriteAP(0xF0, 0x01);
[02:49:10.942]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:49:10.942]      </block>
[02:49:10.942]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:49:10.942]    </control>
[02:49:10.942]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:49:10.942]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:49:10.942]        // =>  FALSE
[02:49:10.942]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:49:10.942]    </control>
[02:49:10.942]    <block atomic="false" info="">
[02:49:10.942]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:49:10.952]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:49:10.952]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:49:10.952]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:49:10.952]      __ap = 0; //lets make sure we reset the access point selection
[02:49:10.952]        // -> [__ap <= 0x00000000]
[02:49:10.952]    </block>
[02:49:10.952]  </sequence>
[02:49:10.952]  
[02:49:10.997]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:49:10.997]  
[02:49:10.997]  <debugvars>
[02:49:10.997]    // Pre-defined
[02:49:10.997]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:49:10.997]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:49:10.997]    __dp=0x00000000
[02:49:10.997]    __ap=0x00000000
[02:49:10.997]    __traceout=0x00000000      (Trace Disabled)
[02:49:10.997]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:49:10.997]    __FlashAddr=0x00000000
[02:49:10.997]    __FlashLen=0x00000000
[02:49:10.997]    __FlashArg=0x00000000
[02:49:10.997]    __FlashOp=0x00000000
[02:49:10.997]    __Result=0x00000000
[02:49:10.997]  </debugvars>
[02:49:10.997]  
[02:49:10.997]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:49:10.997]    <block atomic="false" info="">
[02:49:10.997]      __var deviceID = 0;
[02:49:10.997]        // -> [deviceID <= 0x00000000]
[02:49:10.997]      __var version = 0;
[02:49:10.997]        // -> [version <= 0x00000000]
[02:49:10.997]      __var partNum = 0;
[02:49:10.997]        // -> [partNum <= 0x00000000]
[02:49:11.001]      __var manuf = 0;
[02:49:11.001]        // -> [manuf <= 0x00000000]
[02:49:11.001]      __var isMSPM0G1X0X_G3X0X = 0;
[02:49:11.001]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:49:11.001]      __var isProduction = 0;
[02:49:11.001]        // -> [isProduction <= 0x00000000]
[02:49:11.001]      __var continueId = 0;
[02:49:11.001]        // -> [continueId <= 0x00000000]
[02:49:11.001]      deviceID =   Read32(0x41C40004);
[02:49:11.009]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:49:11.009]        // -> [deviceID <= 0x2BB8802F]
[02:49:11.009]      version = deviceID >> 28;
[02:49:11.009]        // -> [version <= 0x00000002]
[02:49:11.009]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:49:11.009]        // -> [partNum <= 0x0000BB88]
[02:49:11.012]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:49:11.012]        // -> [manuf <= 0x00000017]
[02:49:11.012]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:49:11.012]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:49:11.012]      isProduction = (version > 0);
[02:49:11.012]        // -> [isProduction <= 0x00000001]
[02:49:11.012]    </block>
[02:49:11.012]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:49:11.012]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:49:11.012]        // =>  FALSE
[02:49:11.012]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:49:11.012]    </control>
[02:49:11.012]    <control if="continueId == 4" while="" timeout="0" info="">
[02:49:11.012]      // if-block "continueId == 4"
[02:49:11.012]        // =>  FALSE
[02:49:11.012]      // skip if-block "continueId == 4"
[02:49:11.012]    </control>
[02:49:11.012]    <control if="!isProduction" while="" timeout="0" info="">
[02:49:11.013]      // if-block "!isProduction"
[02:49:11.013]        // =>  FALSE
[02:49:11.013]      // skip if-block "!isProduction"
[02:49:11.013]    </control>
[02:49:11.013]  </sequence>
[02:49:11.013]  
[02:56:10.584]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:56:10.584]  
[02:56:10.587]  <debugvars>
[02:56:10.587]    // Pre-defined
[02:56:10.588]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:10.588]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:56:10.588]    __dp=0x00000000
[02:56:10.588]    __ap=0x00000000
[02:56:10.588]    __traceout=0x00000000      (Trace Disabled)
[02:56:10.588]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:10.588]    __FlashAddr=0x00000000
[02:56:10.588]    __FlashLen=0x00000000
[02:56:10.588]    __FlashArg=0x00000000
[02:56:10.588]    __FlashOp=0x00000000
[02:56:10.588]    __Result=0x00000000
[02:56:10.588]  </debugvars>
[02:56:10.588]  
[02:56:10.588]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:56:10.588]    <block atomic="false" info="">
[02:56:10.588]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:56:10.588]        // -> [isSWJ <= 0x00000001]
[02:56:10.588]      __var hasDormant = __protocol & 0x00020000;
[02:56:10.588]        // -> [hasDormant <= 0x00000000]
[02:56:10.589]      __var protType   = __protocol & 0x0000FFFF;
[02:56:10.589]        // -> [protType <= 0x00000002]
[02:56:10.589]    </block>
[02:56:10.589]    <control if="protType == 1" while="" timeout="0" info="">
[02:56:10.589]      // if-block "protType == 1"
[02:56:10.589]        // =>  FALSE
[02:56:10.589]      // skip if-block "protType == 1"
[02:56:10.589]    </control>
[02:56:10.591]    <control if="protType == 2" while="" timeout="0" info="">
[02:56:10.591]      // if-block "protType == 2"
[02:56:10.591]        // =>  TRUE
[02:56:10.591]      <control if="isSWJ" while="" timeout="0" info="">
[02:56:10.591]        // if-block "isSWJ"
[02:56:10.591]          // =>  TRUE
[02:56:10.591]        <control if="hasDormant" while="" timeout="0" info="">
[02:56:10.591]          // if-block "hasDormant"
[02:56:10.591]            // =>  FALSE
[02:56:10.591]          // skip if-block "hasDormant"
[02:56:10.591]        </control>
[02:56:10.591]        <control if="!hasDormant" while="" timeout="0" info="">
[02:56:10.591]          // if-block "!hasDormant"
[02:56:10.592]            // =>  TRUE
[02:56:10.592]          <block atomic="false" info="">
[02:56:10.592]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:56:10.596]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:10.596]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:56:10.598]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:56:10.598]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:56:10.599]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:10.599]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:56:10.601]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:56:10.601]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:56:10.602]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:10.603]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:56:10.604]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:56:10.604]          </block>
[02:56:10.604]          // end if-block "!hasDormant"
[02:56:10.604]        </control>
[02:56:10.604]        // end if-block "isSWJ"
[02:56:10.604]      </control>
[02:56:10.604]      <control if="!isSWJ" while="" timeout="0" info="">
[02:56:10.604]        // if-block "!isSWJ"
[02:56:10.604]          // =>  FALSE
[02:56:10.607]        // skip if-block "!isSWJ"
[02:56:10.607]      </control>
[02:56:10.607]      <block atomic="false" info="">
[02:56:10.607]        ReadDP(0x0);
[02:56:10.608]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:56:10.608]      </block>
[02:56:10.608]      // end if-block "protType == 2"
[02:56:10.608]    </control>
[02:56:10.608]  </sequence>
[02:56:10.608]  
[02:56:10.612]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:56:10.612]  
[02:56:10.612]  <debugvars>
[02:56:10.612]    // Pre-defined
[02:56:10.612]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:10.612]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:56:10.612]    __dp=0x00000000
[02:56:10.613]    __ap=0x00000000
[02:56:10.613]    __traceout=0x00000000      (Trace Disabled)
[02:56:10.613]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:10.613]    __FlashAddr=0x00000000
[02:56:10.613]    __FlashLen=0x00000000
[02:56:10.613]    __FlashArg=0x00000000
[02:56:10.613]    __FlashOp=0x00000000
[02:56:10.613]    __Result=0x00000000
[02:56:10.613]  </debugvars>
[02:56:10.613]  
[02:56:10.613]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:56:10.613]    <block atomic="false" info="">
[02:56:10.613]      __var SW_DP_ABORT       = 0x0;
[02:56:10.613]        // -> [SW_DP_ABORT <= 0x00000000]
[02:56:10.613]      __var DP_CTRL_STAT      = 0x4;
[02:56:10.613]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:56:10.613]      __var DP_SELECT         = 0x8;
[02:56:10.613]        // -> [DP_SELECT <= 0x00000008]
[02:56:10.613]      __var powered_down      = 0;
[02:56:10.613]        // -> [powered_down <= 0x00000000]
[02:56:10.615]      WriteDP(DP_SELECT, 0x00000000);
[02:56:10.615]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:56:10.615]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:56:10.619]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:56:10.619]        // -> [powered_down <= 0x00000001]
[02:56:10.619]    </block>
[02:56:10.619]    <control if="powered_down" while="" timeout="0" info="">
[02:56:10.619]      // if-block "powered_down"
[02:56:10.619]        // =>  TRUE
[02:56:10.619]      <block atomic="false" info="">
[02:56:10.619]        Message(0, "Debug/System power-up request sent");
[02:56:10.619]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:56:10.625]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:56:10.627]      </block>
[02:56:10.627]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:56:10.627]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:56:10.627]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:56:10.627]        // while-condition  =>  FALSE
[02:56:10.627]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:56:10.627]      </control>
[02:56:10.627]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:56:10.627]        // if-block "(__protocol & 0xFFFF) == 1"
[02:56:10.627]          // =>  FALSE
[02:56:10.627]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:56:10.627]      </control>
[02:56:10.627]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:56:10.627]        // if-block "(__protocol & 0xFFFF) == 2"
[02:56:10.627]          // =>  TRUE
[02:56:10.627]        <block atomic="false" info="">
[02:56:10.627]          Message(0, "executing SWD power up");
[02:56:10.631]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:56:10.633]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:56:10.633]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:56:10.635]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:56:10.635]        </block>
[02:56:10.635]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:56:10.635]      </control>
[02:56:10.635]      // end if-block "powered_down"
[02:56:10.635]    </control>
[02:56:10.635]    <block atomic="false" info="">
[02:56:10.635]      __var DEBUG_PORT_VAL    = 0;
[02:56:10.635]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:56:10.635]      __var ACCESS_POINT_VAL  = 0;
[02:56:10.635]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:56:10.635]      __ap = 1; 
[02:56:10.635]        // -> [__ap <= 0x00000001]
[02:56:10.635]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:56:10.639]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:56:10.639]      __ap = 4;
[02:56:10.639]        // -> [__ap <= 0x00000004]
[02:56:10.639]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:56:10.645]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:56:10.645]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:56:10.645]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:56:10.645]    </block>
[02:56:10.645]    <block atomic="false" info="">
[02:56:10.647]      __var nReset = 0x80;
[02:56:10.647]        // -> [nReset <= 0x00000080]
[02:56:10.647]      __var canReadPins = 0;
[02:56:10.647]        // -> [canReadPins <= 0x00000000]
[02:56:10.647]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:56:10.647]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:56:10.647]        // -> [canReadPins <= 0x00000001]
[02:56:10.647]    </block>
[02:56:10.647]    <control if="" while="1" timeout="200" info="">
[02:56:10.647]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.651]      // while-condition  =>  TRUE
[02:56:10.651]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.655]      // while "1"  (timeout="200")
[02:56:10.655]      // while-condition  =>  TRUE
[02:56:10.659]      // while "1"  (timeout="200")
[02:56:10.659]      // while  =>  TIMEOUT
[02:56:10.659]      // end while "1"
[02:56:10.659]    </control>
[02:56:10.659]    <control if="canReadPins" while="" timeout="0" info="">
[02:56:10.659]      // if-block "canReadPins"
[02:56:10.659]        // =>  TRUE
[02:56:10.659]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:56:10.659]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:56:10.659]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:56:10.659]        // while-condition  =>  FALSE
[02:56:10.659]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:56:10.659]      </control>
[02:56:10.659]      // end if-block "canReadPins"
[02:56:10.659]    </control>
[02:56:10.659]    <control if="!canReadPins" while="" timeout="0" info="">
[02:56:10.659]      // if-block "!canReadPins"
[02:56:10.659]        // =>  FALSE
[02:56:10.659]      // skip if-block "!canReadPins"
[02:56:10.659]    </control>
[02:56:10.659]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:56:10.663]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:56:10.663]        // =>  TRUE
[02:56:10.663]      <block atomic="false" info="">
[02:56:10.663]        WriteAP(0x00, 0x190008);
[02:56:10.663]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:56:10.663]        WriteAP(0xF0, 0x01);
[02:56:10.669]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:56:10.669]      </block>
[02:56:10.669]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:56:10.669]    </control>
[02:56:10.669]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:56:10.669]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:56:10.669]        // =>  FALSE
[02:56:10.669]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:56:10.669]    </control>
[02:56:10.669]    <block atomic="false" info="">
[02:56:10.669]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:56:10.676]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:56:10.676]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:56:10.676]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:56:10.676]      __ap = 0; //lets make sure we reset the access point selection
[02:56:10.676]        // -> [__ap <= 0x00000000]
[02:56:10.676]    </block>
[02:56:10.676]  </sequence>
[02:56:10.680]  
[02:56:10.700]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:56:10.700]  
[02:56:10.700]  <debugvars>
[02:56:10.700]    // Pre-defined
[02:56:10.700]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:10.700]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:56:10.700]    __dp=0x00000000
[02:56:10.700]    __ap=0x00000000
[02:56:10.700]    __traceout=0x00000000      (Trace Disabled)
[02:56:10.700]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:10.700]    __FlashAddr=0x00000000
[02:56:10.700]    __FlashLen=0x00000000
[02:56:10.700]    __FlashArg=0x00000000
[02:56:10.700]    __FlashOp=0x00000000
[02:56:10.700]    __Result=0x00000000
[02:56:10.700]  </debugvars>
[02:56:10.700]  
[02:56:10.700]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:56:10.700]    <block atomic="false" info="">
[02:56:10.700]      __var deviceID = 0;
[02:56:10.700]        // -> [deviceID <= 0x00000000]
[02:56:10.700]      __var version = 0;
[02:56:10.700]        // -> [version <= 0x00000000]
[02:56:10.700]      __var partNum = 0;
[02:56:10.700]        // -> [partNum <= 0x00000000]
[02:56:10.700]      __var manuf = 0;
[02:56:10.700]        // -> [manuf <= 0x00000000]
[02:56:10.700]      __var isMSPM0G1X0X_G3X0X = 0;
[02:56:10.700]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:56:10.700]      __var isProduction = 0;
[02:56:10.700]        // -> [isProduction <= 0x00000000]
[02:56:10.700]      __var continueId = 0;
[02:56:10.700]        // -> [continueId <= 0x00000000]
[02:56:10.700]      deviceID =   Read32(0x41C40004);
[02:56:10.708]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:56:10.708]        // -> [deviceID <= 0x2BB8802F]
[02:56:10.708]      version = deviceID >> 28;
[02:56:10.708]        // -> [version <= 0x00000002]
[02:56:10.708]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:56:10.708]        // -> [partNum <= 0x0000BB88]
[02:56:10.708]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:56:10.708]        // -> [manuf <= 0x00000017]
[02:56:10.708]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:56:10.708]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:56:10.708]      isProduction = (version > 0);
[02:56:10.708]        // -> [isProduction <= 0x00000001]
[02:56:10.708]    </block>
[02:56:10.708]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:56:10.708]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:56:10.708]        // =>  FALSE
[02:56:10.708]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:56:10.708]    </control>
[02:56:10.708]    <control if="continueId == 4" while="" timeout="0" info="">
[02:56:10.708]      // if-block "continueId == 4"
[02:56:10.708]        // =>  FALSE
[02:56:10.708]      // skip if-block "continueId == 4"
[02:56:10.708]    </control>
[02:56:10.708]    <control if="!isProduction" while="" timeout="0" info="">
[02:56:10.708]      // if-block "!isProduction"
[02:56:10.708]        // =>  FALSE
[02:56:10.708]      // skip if-block "!isProduction"
[02:56:10.708]    </control>
[02:56:10.708]  </sequence>
[02:56:10.708]  
[02:56:16.750]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:56:16.750]  
[02:56:16.758]  <debugvars>
[02:56:16.758]    // Pre-defined
[02:56:16.758]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:16.758]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:56:16.758]    __dp=0x00000000
[02:56:16.758]    __ap=0x00000000
[02:56:16.758]    __traceout=0x00000000      (Trace Disabled)
[02:56:16.758]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:16.758]    __FlashAddr=0x00000000
[02:56:16.758]    __FlashLen=0x00000000
[02:56:16.758]    __FlashArg=0x00000000
[02:56:16.758]    __FlashOp=0x00000000
[02:56:16.758]    __Result=0x00000000
[02:56:16.758]  </debugvars>
[02:56:16.758]  
[02:56:16.758]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:56:16.758]    <block atomic="false" info="">
[02:56:16.758]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:56:16.758]        // -> [isSWJ <= 0x00000001]
[02:56:16.758]      __var hasDormant = __protocol & 0x00020000;
[02:56:16.758]        // -> [hasDormant <= 0x00000000]
[02:56:16.758]      __var protType   = __protocol & 0x0000FFFF;
[02:56:16.758]        // -> [protType <= 0x00000002]
[02:56:16.758]    </block>
[02:56:16.758]    <control if="protType == 1" while="" timeout="0" info="">
[02:56:16.758]      // if-block "protType == 1"
[02:56:16.758]        // =>  FALSE
[02:56:16.758]      // skip if-block "protType == 1"
[02:56:16.758]    </control>
[02:56:16.758]    <control if="protType == 2" while="" timeout="0" info="">
[02:56:16.758]      // if-block "protType == 2"
[02:56:16.758]        // =>  TRUE
[02:56:16.758]      <control if="isSWJ" while="" timeout="0" info="">
[02:56:16.762]        // if-block "isSWJ"
[02:56:16.762]          // =>  TRUE
[02:56:16.762]        <control if="hasDormant" while="" timeout="0" info="">
[02:56:16.762]          // if-block "hasDormant"
[02:56:16.762]            // =>  FALSE
[02:56:16.762]          // skip if-block "hasDormant"
[02:56:16.762]        </control>
[02:56:16.762]        <control if="!hasDormant" while="" timeout="0" info="">
[02:56:16.762]          // if-block "!hasDormant"
[02:56:16.762]            // =>  TRUE
[02:56:16.762]          <block atomic="false" info="">
[02:56:16.762]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:56:16.762]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:16.762]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:56:16.766]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:56:16.766]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:56:16.766]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:16.766]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:56:16.766]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:56:16.766]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:56:16.770]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:16.770]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:56:16.770]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:56:16.774]          </block>
[02:56:16.774]          // end if-block "!hasDormant"
[02:56:16.774]        </control>
[02:56:16.774]        // end if-block "isSWJ"
[02:56:16.774]      </control>
[02:56:16.774]      <control if="!isSWJ" while="" timeout="0" info="">
[02:56:16.774]        // if-block "!isSWJ"
[02:56:16.774]          // =>  FALSE
[02:56:16.774]        // skip if-block "!isSWJ"
[02:56:16.774]      </control>
[02:56:16.774]      <block atomic="false" info="">
[02:56:16.774]        ReadDP(0x0);
[02:56:16.774]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:56:16.778]      </block>
[02:56:16.778]      // end if-block "protType == 2"
[02:56:16.778]    </control>
[02:56:16.778]  </sequence>
[02:56:16.778]  
[02:56:16.778]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:56:16.778]  
[02:56:16.778]  <debugvars>
[02:56:16.778]    // Pre-defined
[02:56:16.778]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:16.778]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:56:16.782]    __dp=0x00000000
[02:56:16.782]    __ap=0x00000000
[02:56:16.782]    __traceout=0x00000000      (Trace Disabled)
[02:56:16.782]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:16.782]    __FlashAddr=0x00000000
[02:56:16.782]    __FlashLen=0x00000000
[02:56:16.782]    __FlashArg=0x00000000
[02:56:16.782]    __FlashOp=0x00000000
[02:56:16.782]    __Result=0x00000000
[02:56:16.782]  </debugvars>
[02:56:16.782]  
[02:56:16.782]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:56:16.782]    <block atomic="false" info="">
[02:56:16.782]      __var SW_DP_ABORT       = 0x0;
[02:56:16.782]        // -> [SW_DP_ABORT <= 0x00000000]
[02:56:16.782]      __var DP_CTRL_STAT      = 0x4;
[02:56:16.782]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:56:16.782]      __var DP_SELECT         = 0x8;
[02:56:16.782]        // -> [DP_SELECT <= 0x00000008]
[02:56:16.782]      __var powered_down      = 0;
[02:56:16.782]        // -> [powered_down <= 0x00000000]
[02:56:16.782]      WriteDP(DP_SELECT, 0x00000000);
[02:56:16.786]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:56:16.786]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:56:16.786]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:56:16.786]        // -> [powered_down <= 0x00000001]
[02:56:16.786]    </block>
[02:56:16.786]    <control if="powered_down" while="" timeout="0" info="">
[02:56:16.786]      // if-block "powered_down"
[02:56:16.786]        // =>  TRUE
[02:56:16.786]      <block atomic="false" info="">
[02:56:16.786]        Message(0, "Debug/System power-up request sent");
[02:56:16.790]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:56:16.790]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:56:16.790]      </block>
[02:56:16.790]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:56:16.790]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:56:16.790]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:56:16.794]        // while-condition  =>  FALSE
[02:56:16.794]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:56:16.794]      </control>
[02:56:16.794]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:56:16.794]        // if-block "(__protocol & 0xFFFF) == 1"
[02:56:16.794]          // =>  FALSE
[02:56:16.794]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:56:16.794]      </control>
[02:56:16.794]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:56:16.794]        // if-block "(__protocol & 0xFFFF) == 2"
[02:56:16.794]          // =>  TRUE
[02:56:16.794]        <block atomic="false" info="">
[02:56:16.794]          Message(0, "executing SWD power up");
[02:56:16.794]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:56:16.798]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:56:16.798]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:56:16.798]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:56:16.798]        </block>
[02:56:16.798]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:56:16.798]      </control>
[02:56:16.798]      // end if-block "powered_down"
[02:56:16.798]    </control>
[02:56:16.798]    <block atomic="false" info="">
[02:56:16.798]      __var DEBUG_PORT_VAL    = 0;
[02:56:16.798]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:56:16.798]      __var ACCESS_POINT_VAL  = 0;
[02:56:16.798]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:56:16.798]      __ap = 1; 
[02:56:16.802]        // -> [__ap <= 0x00000001]
[02:56:16.802]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:56:16.806]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:56:16.806]      __ap = 4;
[02:56:16.806]        // -> [__ap <= 0x00000004]
[02:56:16.806]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:56:16.810]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:56:16.810]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:56:16.810]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:56:16.810]    </block>
[02:56:16.810]    <block atomic="false" info="">
[02:56:16.810]      __var nReset = 0x80;
[02:56:16.810]        // -> [nReset <= 0x00000080]
[02:56:16.810]      __var canReadPins = 0;
[02:56:16.814]        // -> [canReadPins <= 0x00000000]
[02:56:16.814]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:56:16.818]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:56:16.818]        // -> [canReadPins <= 0x00000001]
[02:56:16.818]    </block>
[02:56:16.818]    <control if="" while="1" timeout="200" info="">
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.818]      // while-condition  =>  TRUE
[02:56:16.818]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.822]      // while "1"  (timeout="200")
[02:56:16.822]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.826]      // while "1"  (timeout="200")
[02:56:16.826]      // while-condition  =>  TRUE
[02:56:16.830]      // while "1"  (timeout="200")
[02:56:16.830]      // while  =>  TIMEOUT
[02:56:16.830]      // end while "1"
[02:56:16.830]    </control>
[02:56:16.830]    <control if="canReadPins" while="" timeout="0" info="">
[02:56:16.830]      // if-block "canReadPins"
[02:56:16.830]        // =>  TRUE
[02:56:16.830]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:56:16.830]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:56:16.830]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:56:16.830]        // while-condition  =>  FALSE
[02:56:16.830]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:56:16.830]      </control>
[02:56:16.830]      // end if-block "canReadPins"
[02:56:16.830]    </control>
[02:56:16.830]    <control if="!canReadPins" while="" timeout="0" info="">
[02:56:16.830]      // if-block "!canReadPins"
[02:56:16.830]        // =>  FALSE
[02:56:16.830]      // skip if-block "!canReadPins"
[02:56:16.830]    </control>
[02:56:16.830]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:56:16.830]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:56:16.830]        // =>  TRUE
[02:56:16.830]      <block atomic="false" info="">
[02:56:16.830]        WriteAP(0x00, 0x190008);
[02:56:16.834]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:56:16.834]        WriteAP(0xF0, 0x01);
[02:56:16.838]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:56:16.838]      </block>
[02:56:16.838]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:56:16.838]    </control>
[02:56:16.838]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:56:16.838]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:56:16.838]        // =>  FALSE
[02:56:16.838]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:56:16.838]    </control>
[02:56:16.838]    <block atomic="false" info="">
[02:56:16.838]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:56:16.842]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:56:16.842]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:56:16.842]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:56:16.846]      __ap = 0; //lets make sure we reset the access point selection
[02:56:16.846]        // -> [__ap <= 0x00000000]
[02:56:16.846]    </block>
[02:56:16.846]  </sequence>
[02:56:16.846]  
[02:56:16.866]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:56:16.866]  
[02:56:16.866]  <debugvars>
[02:56:16.866]    // Pre-defined
[02:56:16.866]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:16.866]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:56:16.866]    __dp=0x00000000
[02:56:16.866]    __ap=0x00000000
[02:56:16.866]    __traceout=0x00000000      (Trace Disabled)
[02:56:16.866]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:16.866]    __FlashAddr=0x00000000
[02:56:16.866]    __FlashLen=0x00000000
[02:56:16.866]    __FlashArg=0x00000000
[02:56:16.866]    __FlashOp=0x00000000
[02:56:16.866]    __Result=0x00000000
[02:56:16.866]  </debugvars>
[02:56:16.866]  
[02:56:16.866]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:56:16.866]    <block atomic="false" info="">
[02:56:16.866]      __var deviceID = 0;
[02:56:16.870]        // -> [deviceID <= 0x00000000]
[02:56:16.870]      __var version = 0;
[02:56:16.870]        // -> [version <= 0x00000000]
[02:56:16.870]      __var partNum = 0;
[02:56:16.870]        // -> [partNum <= 0x00000000]
[02:56:16.870]      __var manuf = 0;
[02:56:16.870]        // -> [manuf <= 0x00000000]
[02:56:16.870]      __var isMSPM0G1X0X_G3X0X = 0;
[02:56:16.870]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:56:16.870]      __var isProduction = 0;
[02:56:16.870]        // -> [isProduction <= 0x00000000]
[02:56:16.870]      __var continueId = 0;
[02:56:16.870]        // -> [continueId <= 0x00000000]
[02:56:16.870]      deviceID =   Read32(0x41C40004);
[02:56:16.874]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:56:16.874]        // -> [deviceID <= 0x2BB8802F]
[02:56:16.874]      version = deviceID >> 28;
[02:56:16.874]        // -> [version <= 0x00000002]
[02:56:16.874]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:56:16.874]        // -> [partNum <= 0x0000BB88]
[02:56:16.874]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:56:16.874]        // -> [manuf <= 0x00000017]
[02:56:16.874]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:56:16.878]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:56:16.878]      isProduction = (version > 0);
[02:56:16.878]        // -> [isProduction <= 0x00000001]
[02:56:16.878]    </block>
[02:56:16.878]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:56:16.878]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:56:16.878]        // =>  FALSE
[02:56:16.878]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:56:16.878]    </control>
[02:56:16.878]    <control if="continueId == 4" while="" timeout="0" info="">
[02:56:16.878]      // if-block "continueId == 4"
[02:56:16.878]        // =>  FALSE
[02:56:16.878]      // skip if-block "continueId == 4"
[02:56:16.878]    </control>
[02:56:16.878]    <control if="!isProduction" while="" timeout="0" info="">
[02:56:16.878]      // if-block "!isProduction"
[02:56:16.878]        // =>  FALSE
[02:56:16.878]      // skip if-block "!isProduction"
[02:56:16.878]    </control>
[02:56:16.878]  </sequence>
[02:56:16.878]  
[02:56:48.081]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:56:48.081]  
[02:56:48.094]  <debugvars>
[02:56:48.094]    // Pre-defined
[02:56:48.094]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:48.094]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:56:48.094]    __dp=0x00000000
[02:56:48.094]    __ap=0x00000000
[02:56:48.094]    __traceout=0x00000000      (Trace Disabled)
[02:56:48.094]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:48.094]    __FlashAddr=0x00000000
[02:56:48.094]    __FlashLen=0x00000000
[02:56:48.094]    __FlashArg=0x00000000
[02:56:48.094]    __FlashOp=0x00000000
[02:56:48.094]    __Result=0x00000000
[02:56:48.094]  </debugvars>
[02:56:48.094]  
[02:56:48.094]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:56:48.094]    <block atomic="false" info="">
[02:56:48.094]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:56:48.094]        // -> [isSWJ <= 0x00000001]
[02:56:48.094]      __var hasDormant = __protocol & 0x00020000;
[02:56:48.094]        // -> [hasDormant <= 0x00000000]
[02:56:48.094]      __var protType   = __protocol & 0x0000FFFF;
[02:56:48.094]        // -> [protType <= 0x00000002]
[02:56:48.094]    </block>
[02:56:48.094]    <control if="protType == 1" while="" timeout="0" info="">
[02:56:48.094]      // if-block "protType == 1"
[02:56:48.094]        // =>  FALSE
[02:56:48.094]      // skip if-block "protType == 1"
[02:56:48.094]    </control>
[02:56:48.094]    <control if="protType == 2" while="" timeout="0" info="">
[02:56:48.094]      // if-block "protType == 2"
[02:56:48.094]        // =>  TRUE
[02:56:48.094]      <control if="isSWJ" while="" timeout="0" info="">
[02:56:48.094]        // if-block "isSWJ"
[02:56:48.094]          // =>  TRUE
[02:56:48.098]        <control if="hasDormant" while="" timeout="0" info="">
[02:56:48.098]          // if-block "hasDormant"
[02:56:48.098]            // =>  FALSE
[02:56:48.098]          // skip if-block "hasDormant"
[02:56:48.098]        </control>
[02:56:48.098]        <control if="!hasDormant" while="" timeout="0" info="">
[02:56:48.098]          // if-block "!hasDormant"
[02:56:48.098]            // =>  TRUE
[02:56:48.098]          <block atomic="false" info="">
[02:56:48.098]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:56:48.098]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:48.101]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:56:48.101]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:56:48.101]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:56:48.103]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:48.103]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:56:48.105]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:56:48.105]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:56:48.105]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:48.105]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:56:48.105]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:56:48.105]          </block>
[02:56:48.105]          // end if-block "!hasDormant"
[02:56:48.105]        </control>
[02:56:48.105]        // end if-block "isSWJ"
[02:56:48.109]      </control>
[02:56:48.109]      <control if="!isSWJ" while="" timeout="0" info="">
[02:56:48.109]        // if-block "!isSWJ"
[02:56:48.109]          // =>  FALSE
[02:56:48.109]        // skip if-block "!isSWJ"
[02:56:48.109]      </control>
[02:56:48.109]      <block atomic="false" info="">
[02:56:48.109]        ReadDP(0x0);
[02:56:48.109]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:56:48.111]      </block>
[02:56:48.111]      // end if-block "protType == 2"
[02:56:48.111]    </control>
[02:56:48.111]  </sequence>
[02:56:48.111]  
[02:56:48.113]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:56:48.113]  
[02:56:48.113]  <debugvars>
[02:56:48.113]    // Pre-defined
[02:56:48.113]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:48.113]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:56:48.113]    __dp=0x00000000
[02:56:48.113]    __ap=0x00000000
[02:56:48.113]    __traceout=0x00000000      (Trace Disabled)
[02:56:48.113]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:48.113]    __FlashAddr=0x00000000
[02:56:48.113]    __FlashLen=0x00000000
[02:56:48.113]    __FlashArg=0x00000000
[02:56:48.113]    __FlashOp=0x00000000
[02:56:48.113]    __Result=0x00000000
[02:56:48.113]  </debugvars>
[02:56:48.113]  
[02:56:48.113]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:56:48.113]    <block atomic="false" info="">
[02:56:48.113]      __var SW_DP_ABORT       = 0x0;
[02:56:48.113]        // -> [SW_DP_ABORT <= 0x00000000]
[02:56:48.113]      __var DP_CTRL_STAT      = 0x4;
[02:56:48.113]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:56:48.113]      __var DP_SELECT         = 0x8;
[02:56:48.113]        // -> [DP_SELECT <= 0x00000008]
[02:56:48.113]      __var powered_down      = 0;
[02:56:48.117]        // -> [powered_down <= 0x00000000]
[02:56:48.117]      WriteDP(DP_SELECT, 0x00000000);
[02:56:48.117]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:56:48.117]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:56:48.117]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:56:48.121]        // -> [powered_down <= 0x00000001]
[02:56:48.121]    </block>
[02:56:48.121]    <control if="powered_down" while="" timeout="0" info="">
[02:56:48.121]      // if-block "powered_down"
[02:56:48.121]        // =>  TRUE
[02:56:48.121]      <block atomic="false" info="">
[02:56:48.121]        Message(0, "Debug/System power-up request sent");
[02:56:48.121]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:56:48.126]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:56:48.126]      </block>
[02:56:48.126]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:56:48.126]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:56:48.126]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:56:48.126]        // while-condition  =>  FALSE
[02:56:48.126]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:56:48.126]      </control>
[02:56:48.126]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:56:48.126]        // if-block "(__protocol & 0xFFFF) == 1"
[02:56:48.126]          // =>  FALSE
[02:56:48.126]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:56:48.126]      </control>
[02:56:48.126]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:56:48.126]        // if-block "(__protocol & 0xFFFF) == 2"
[02:56:48.126]          // =>  TRUE
[02:56:48.126]        <block atomic="false" info="">
[02:56:48.126]          Message(0, "executing SWD power up");
[02:56:48.130]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:56:48.131]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:56:48.131]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:56:48.134]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:56:48.134]        </block>
[02:56:48.134]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:56:48.134]      </control>
[02:56:48.134]      // end if-block "powered_down"
[02:56:48.134]    </control>
[02:56:48.134]    <block atomic="false" info="">
[02:56:48.134]      __var DEBUG_PORT_VAL    = 0;
[02:56:48.134]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:56:48.134]      __var ACCESS_POINT_VAL  = 0;
[02:56:48.134]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:56:48.134]      __ap = 1; 
[02:56:48.134]        // -> [__ap <= 0x00000001]
[02:56:48.134]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:56:48.139]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:56:48.139]      __ap = 4;
[02:56:48.139]        // -> [__ap <= 0x00000004]
[02:56:48.139]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:56:48.141]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:56:48.141]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:56:48.145]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:56:48.145]    </block>
[02:56:48.145]    <block atomic="false" info="">
[02:56:48.145]      __var nReset = 0x80;
[02:56:48.145]        // -> [nReset <= 0x00000080]
[02:56:48.145]      __var canReadPins = 0;
[02:56:48.145]        // -> [canReadPins <= 0x00000000]
[02:56:48.145]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:56:48.145]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:56:48.149]        // -> [canReadPins <= 0x00000001]
[02:56:48.149]    </block>
[02:56:48.149]    <control if="" while="1" timeout="200" info="">
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.149]      // while-condition  =>  TRUE
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.149]      // while-condition  =>  TRUE
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.149]      // while-condition  =>  TRUE
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.149]      // while-condition  =>  TRUE
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.149]      // while-condition  =>  TRUE
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.149]      // while-condition  =>  TRUE
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.149]      // while-condition  =>  TRUE
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.149]      // while-condition  =>  TRUE
[02:56:48.149]      // while "1"  (timeout="200")
[02:56:48.151]      // while-condition  =>  TRUE
[02:56:48.151]      // while "1"  (timeout="200")
[02:56:48.151]      // while-condition  =>  TRUE
[02:56:48.151]      // while "1"  (timeout="200")
[02:56:48.151]      // while-condition  =>  TRUE
[02:56:48.151]      // while "1"  (timeout="200")
[02:56:48.151]      // while-condition  =>  TRUE
[02:56:48.151]      // while "1"  (timeout="200")
[02:56:48.151]      // while-condition  =>  TRUE
[02:56:48.151]      // while "1"  (timeout="200")
[02:56:48.151]      // while-condition  =>  TRUE
[02:56:48.151]      // while "1"  (timeout="200")
[02:56:48.151]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.153]      // while-condition  =>  TRUE
[02:56:48.153]      // while "1"  (timeout="200")
[02:56:48.157]      // while-condition  =>  TRUE
[02:56:48.157]      // while "1"  (timeout="200")
[02:56:48.157]      // while  =>  TIMEOUT
[02:56:48.157]      // end while "1"
[02:56:48.157]    </control>
[02:56:48.157]    <control if="canReadPins" while="" timeout="0" info="">
[02:56:48.157]      // if-block "canReadPins"
[02:56:48.157]        // =>  TRUE
[02:56:48.157]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:56:48.157]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:56:48.157]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:56:48.157]        // while-condition  =>  FALSE
[02:56:48.157]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:56:48.157]      </control>
[02:56:48.157]      // end if-block "canReadPins"
[02:56:48.157]    </control>
[02:56:48.157]    <control if="!canReadPins" while="" timeout="0" info="">
[02:56:48.157]      // if-block "!canReadPins"
[02:56:48.157]        // =>  FALSE
[02:56:48.157]      // skip if-block "!canReadPins"
[02:56:48.157]    </control>
[02:56:48.157]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:56:48.157]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:56:48.157]        // =>  TRUE
[02:56:48.157]      <block atomic="false" info="">
[02:56:48.161]        WriteAP(0x00, 0x190008);
[02:56:48.161]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:56:48.161]        WriteAP(0xF0, 0x01);
[02:56:48.166]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:56:48.166]      </block>
[02:56:48.166]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:56:48.166]    </control>
[02:56:48.166]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:56:48.166]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:56:48.166]        // =>  FALSE
[02:56:48.166]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:56:48.166]    </control>
[02:56:48.166]    <block atomic="false" info="">
[02:56:48.166]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:56:48.172]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:56:48.172]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:56:48.172]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:56:48.174]      __ap = 0; //lets make sure we reset the access point selection
[02:56:48.174]        // -> [__ap <= 0x00000000]
[02:56:48.174]    </block>
[02:56:48.174]  </sequence>
[02:56:48.174]  
[02:56:48.194]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:56:48.194]  
[02:56:48.194]  <debugvars>
[02:56:48.194]    // Pre-defined
[02:56:48.194]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:48.194]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[02:56:48.197]    __dp=0x00000000
[02:56:48.197]    __ap=0x00000000
[02:56:48.197]    __traceout=0x00000000      (Trace Disabled)
[02:56:48.197]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:48.197]    __FlashAddr=0x00000000
[02:56:48.197]    __FlashLen=0x00000000
[02:56:48.197]    __FlashArg=0x00000000
[02:56:48.197]    __FlashOp=0x00000000
[02:56:48.197]    __Result=0x00000000
[02:56:48.197]  </debugvars>
[02:56:48.197]  
[02:56:48.197]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:56:48.197]    <block atomic="false" info="">
[02:56:48.197]      __var deviceID = 0;
[02:56:48.197]        // -> [deviceID <= 0x00000000]
[02:56:48.197]      __var version = 0;
[02:56:48.197]        // -> [version <= 0x00000000]
[02:56:48.197]      __var partNum = 0;
[02:56:48.197]        // -> [partNum <= 0x00000000]
[02:56:48.197]      __var manuf = 0;
[02:56:48.197]        // -> [manuf <= 0x00000000]
[02:56:48.197]      __var isMSPM0G1X0X_G3X0X = 0;
[02:56:48.197]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:56:48.197]      __var isProduction = 0;
[02:56:48.197]        // -> [isProduction <= 0x00000000]
[02:56:48.197]      __var continueId = 0;
[02:56:48.197]        // -> [continueId <= 0x00000000]
[02:56:48.197]      deviceID =   Read32(0x41C40004);
[02:56:48.203]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:56:48.203]        // -> [deviceID <= 0x2BB8802F]
[02:56:48.203]      version = deviceID >> 28;
[02:56:48.203]        // -> [version <= 0x00000002]
[02:56:48.203]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:56:48.203]        // -> [partNum <= 0x0000BB88]
[02:56:48.203]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:56:48.203]        // -> [manuf <= 0x00000017]
[02:56:48.203]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:56:48.203]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:56:48.203]      isProduction = (version > 0);
[02:56:48.203]        // -> [isProduction <= 0x00000001]
[02:56:48.203]    </block>
[02:56:48.203]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:56:48.203]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:56:48.203]        // =>  FALSE
[02:56:48.203]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:56:48.203]    </control>
[02:56:48.203]    <control if="continueId == 4" while="" timeout="0" info="">
[02:56:48.203]      // if-block "continueId == 4"
[02:56:48.206]        // =>  FALSE
[02:56:48.206]      // skip if-block "continueId == 4"
[02:56:48.206]    </control>
[02:56:48.206]    <control if="!isProduction" while="" timeout="0" info="">
[02:56:48.206]      // if-block "!isProduction"
[02:56:48.206]        // =>  FALSE
[02:56:48.206]      // skip if-block "!isProduction"
[02:56:48.206]    </control>
[02:56:48.206]  </sequence>
[02:56:48.207]  
[02:56:54.329]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[02:56:54.329]  
[02:56:54.329]  <debugvars>
[02:56:54.329]    // Pre-defined
[02:56:54.329]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:54.329]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:56:54.329]    __dp=0x00000000
[02:56:54.329]    __ap=0x00000000
[02:56:54.329]    __traceout=0x00000000      (Trace Disabled)
[02:56:54.329]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:54.329]    __FlashAddr=0x00000000
[02:56:54.329]    __FlashLen=0x00000000
[02:56:54.329]    __FlashArg=0x00000000
[02:56:54.329]    __FlashOp=0x00000000
[02:56:54.329]    __Result=0x00000000
[02:56:54.329]  </debugvars>
[02:56:54.329]  
[02:56:54.329]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[02:56:54.329]    <block atomic="false" info="">
[02:56:54.329]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[02:56:54.329]        // -> [isSWJ <= 0x00000001]
[02:56:54.329]      __var hasDormant = __protocol & 0x00020000;
[02:56:54.329]        // -> [hasDormant <= 0x00000000]
[02:56:54.329]      __var protType   = __protocol & 0x0000FFFF;
[02:56:54.329]        // -> [protType <= 0x00000002]
[02:56:54.333]    </block>
[02:56:54.333]    <control if="protType == 1" while="" timeout="0" info="">
[02:56:54.333]      // if-block "protType == 1"
[02:56:54.333]        // =>  FALSE
[02:56:54.333]      // skip if-block "protType == 1"
[02:56:54.333]    </control>
[02:56:54.333]    <control if="protType == 2" while="" timeout="0" info="">
[02:56:54.333]      // if-block "protType == 2"
[02:56:54.333]        // =>  TRUE
[02:56:54.333]      <control if="isSWJ" while="" timeout="0" info="">
[02:56:54.333]        // if-block "isSWJ"
[02:56:54.333]          // =>  TRUE
[02:56:54.333]        <control if="hasDormant" while="" timeout="0" info="">
[02:56:54.333]          // if-block "hasDormant"
[02:56:54.333]            // =>  FALSE
[02:56:54.333]          // skip if-block "hasDormant"
[02:56:54.333]        </control>
[02:56:54.333]        <control if="!hasDormant" while="" timeout="0" info="">
[02:56:54.333]          // if-block "!hasDormant"
[02:56:54.333]            // =>  TRUE
[02:56:54.333]          <block atomic="false" info="">
[02:56:54.333]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[02:56:54.337]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:54.337]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[02:56:54.337]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[02:56:54.337]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[02:56:54.337]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:54.341]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[02:56:54.341]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[02:56:54.341]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[02:56:54.341]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[02:56:54.341]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[02:56:54.345]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[02:56:54.345]          </block>
[02:56:54.345]          // end if-block "!hasDormant"
[02:56:54.345]        </control>
[02:56:54.345]        // end if-block "isSWJ"
[02:56:54.345]      </control>
[02:56:54.345]      <control if="!isSWJ" while="" timeout="0" info="">
[02:56:54.345]        // if-block "!isSWJ"
[02:56:54.345]          // =>  FALSE
[02:56:54.345]        // skip if-block "!isSWJ"
[02:56:54.345]      </control>
[02:56:54.345]      <block atomic="false" info="">
[02:56:54.345]        ReadDP(0x0);
[02:56:54.345]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[02:56:54.345]      </block>
[02:56:54.345]      // end if-block "protType == 2"
[02:56:54.345]    </control>
[02:56:54.345]  </sequence>
[02:56:54.345]  
[02:56:54.349]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[02:56:54.349]  
[02:56:54.349]  <debugvars>
[02:56:54.349]    // Pre-defined
[02:56:54.349]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:54.349]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:56:54.349]    __dp=0x00000000
[02:56:54.349]    __ap=0x00000000
[02:56:54.349]    __traceout=0x00000000      (Trace Disabled)
[02:56:54.349]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:54.349]    __FlashAddr=0x00000000
[02:56:54.349]    __FlashLen=0x00000000
[02:56:54.349]    __FlashArg=0x00000000
[02:56:54.349]    __FlashOp=0x00000000
[02:56:54.349]    __Result=0x00000000
[02:56:54.349]  </debugvars>
[02:56:54.349]  
[02:56:54.349]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[02:56:54.349]    <block atomic="false" info="">
[02:56:54.349]      __var SW_DP_ABORT       = 0x0;
[02:56:54.349]        // -> [SW_DP_ABORT <= 0x00000000]
[02:56:54.353]      __var DP_CTRL_STAT      = 0x4;
[02:56:54.353]        // -> [DP_CTRL_STAT <= 0x00000004]
[02:56:54.353]      __var DP_SELECT         = 0x8;
[02:56:54.353]        // -> [DP_SELECT <= 0x00000008]
[02:56:54.353]      __var powered_down      = 0;
[02:56:54.353]        // -> [powered_down <= 0x00000000]
[02:56:54.353]      WriteDP(DP_SELECT, 0x00000000);
[02:56:54.353]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[02:56:54.353]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[02:56:54.357]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[02:56:54.357]        // -> [powered_down <= 0x00000001]
[02:56:54.357]    </block>
[02:56:54.357]    <control if="powered_down" while="" timeout="0" info="">
[02:56:54.357]      // if-block "powered_down"
[02:56:54.357]        // =>  TRUE
[02:56:54.357]      <block atomic="false" info="">
[02:56:54.357]        Message(0, "Debug/System power-up request sent");
[02:56:54.357]        WriteDP(DP_CTRL_STAT, 0x50000000);
[02:56:54.361]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[02:56:54.361]      </block>
[02:56:54.361]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[02:56:54.361]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[02:56:54.361]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[02:56:54.361]        // while-condition  =>  FALSE
[02:56:54.361]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[02:56:54.361]      </control>
[02:56:54.361]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[02:56:54.361]        // if-block "(__protocol & 0xFFFF) == 1"
[02:56:54.361]          // =>  FALSE
[02:56:54.361]        // skip if-block "(__protocol & 0xFFFF) == 1"
[02:56:54.361]      </control>
[02:56:54.361]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[02:56:54.361]        // if-block "(__protocol & 0xFFFF) == 2"
[02:56:54.361]          // =>  TRUE
[02:56:54.361]        <block atomic="false" info="">
[02:56:54.361]          Message(0, "executing SWD power up");
[02:56:54.365]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[02:56:54.365]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[02:56:54.369]          WriteDP(SW_DP_ABORT, 0x0000001E);
[02:56:54.369]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[02:56:54.369]        </block>
[02:56:54.369]        // end if-block "(__protocol & 0xFFFF) == 2"
[02:56:54.369]      </control>
[02:56:54.369]      // end if-block "powered_down"
[02:56:54.369]    </control>
[02:56:54.369]    <block atomic="false" info="">
[02:56:54.369]      __var DEBUG_PORT_VAL    = 0;
[02:56:54.369]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[02:56:54.369]      __var ACCESS_POINT_VAL  = 0;
[02:56:54.369]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[02:56:54.369]      __ap = 1; 
[02:56:54.369]        // -> [__ap <= 0x00000001]
[02:56:54.369]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[02:56:54.373]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[02:56:54.373]      __ap = 4;
[02:56:54.373]        // -> [__ap <= 0x00000004]
[02:56:54.373]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:56:54.377]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[02:56:54.377]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[02:56:54.377]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:56:54.377]    </block>
[02:56:54.377]    <block atomic="false" info="">
[02:56:54.377]      __var nReset = 0x80;
[02:56:54.377]        // -> [nReset <= 0x00000080]
[02:56:54.377]      __var canReadPins = 0;
[02:56:54.377]        // -> [canReadPins <= 0x00000000]
[02:56:54.377]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[02:56:54.381]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[02:56:54.381]        // -> [canReadPins <= 0x00000001]
[02:56:54.381]    </block>
[02:56:54.381]    <control if="" while="1" timeout="200" info="">
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.381]      // while "1"  (timeout="200")
[02:56:54.381]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.385]      // while-condition  =>  TRUE
[02:56:54.385]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.389]      // while-condition  =>  TRUE
[02:56:54.389]      // while "1"  (timeout="200")
[02:56:54.393]      // while-condition  =>  TRUE
[02:56:54.393]      // while "1"  (timeout="200")
[02:56:54.393]      // while  =>  TIMEOUT
[02:56:54.393]      // end while "1"
[02:56:54.393]    </control>
[02:56:54.393]    <control if="canReadPins" while="" timeout="0" info="">
[02:56:54.393]      // if-block "canReadPins"
[02:56:54.393]        // =>  TRUE
[02:56:54.393]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[02:56:54.393]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[02:56:54.393]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[02:56:54.393]        // while-condition  =>  FALSE
[02:56:54.393]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[02:56:54.393]      </control>
[02:56:54.393]      // end if-block "canReadPins"
[02:56:54.393]    </control>
[02:56:54.393]    <control if="!canReadPins" while="" timeout="0" info="">
[02:56:54.393]      // if-block "!canReadPins"
[02:56:54.393]        // =>  FALSE
[02:56:54.397]      // skip if-block "!canReadPins"
[02:56:54.397]    </control>
[02:56:54.397]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[02:56:54.397]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:56:54.397]        // =>  TRUE
[02:56:54.397]      <block atomic="false" info="">
[02:56:54.397]        WriteAP(0x00, 0x190008);
[02:56:54.397]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[02:56:54.401]        WriteAP(0xF0, 0x01);
[02:56:54.401]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[02:56:54.401]      </block>
[02:56:54.401]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[02:56:54.405]    </control>
[02:56:54.405]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[02:56:54.405]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:56:54.405]        // =>  FALSE
[02:56:54.405]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[02:56:54.405]    </control>
[02:56:54.405]    <block atomic="false" info="">
[02:56:54.405]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[02:56:54.409]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[02:56:54.409]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[02:56:54.409]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[02:56:54.409]      __ap = 0; //lets make sure we reset the access point selection
[02:56:54.409]        // -> [__ap <= 0x00000000]
[02:56:54.409]    </block>
[02:56:54.409]  </sequence>
[02:56:54.409]  
[02:56:54.433]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:56:54.433]  
[02:56:54.433]  <debugvars>
[02:56:54.433]    // Pre-defined
[02:56:54.433]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:56:54.433]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[02:56:54.433]    __dp=0x00000000
[02:56:54.433]    __ap=0x00000000
[02:56:54.433]    __traceout=0x00000000      (Trace Disabled)
[02:56:54.433]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:56:54.433]    __FlashAddr=0x00000000
[02:56:54.433]    __FlashLen=0x00000000
[02:56:54.433]    __FlashArg=0x00000000
[02:56:54.433]    __FlashOp=0x00000000
[02:56:54.433]    __Result=0x00000000
[02:56:54.433]  </debugvars>
[02:56:54.433]  
[02:56:54.433]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:56:54.433]    <block atomic="false" info="">
[02:56:54.433]      __var deviceID = 0;
[02:56:54.433]        // -> [deviceID <= 0x00000000]
[02:56:54.433]      __var version = 0;
[02:56:54.433]        // -> [version <= 0x00000000]
[02:56:54.433]      __var partNum = 0;
[02:56:54.433]        // -> [partNum <= 0x00000000]
[02:56:54.433]      __var manuf = 0;
[02:56:54.433]        // -> [manuf <= 0x00000000]
[02:56:54.437]      __var isMSPM0G1X0X_G3X0X = 0;
[02:56:54.437]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[02:56:54.437]      __var isProduction = 0;
[02:56:54.437]        // -> [isProduction <= 0x00000000]
[02:56:54.437]      __var continueId = 0;
[02:56:54.437]        // -> [continueId <= 0x00000000]
[02:56:54.437]      deviceID =   Read32(0x41C40004);
[02:56:54.441]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[02:56:54.441]        // -> [deviceID <= 0x2BB8802F]
[02:56:54.441]      version = deviceID >> 28;
[02:56:54.441]        // -> [version <= 0x00000002]
[02:56:54.441]      partNum = (deviceID & 0x0FFFF000) >> 12;
[02:56:54.441]        // -> [partNum <= 0x0000BB88]
[02:56:54.441]      manuf = (deviceID & 0x00000FFE) >> 1;
[02:56:54.441]        // -> [manuf <= 0x00000017]
[02:56:54.441]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[02:56:54.441]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[02:56:54.441]      isProduction = (version > 0);
[02:56:54.441]        // -> [isProduction <= 0x00000001]
[02:56:54.441]    </block>
[02:56:54.441]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[02:56:54.441]      // if-block "!isMSPM0G1X0X_G3X0X"
[02:56:54.441]        // =>  FALSE
[02:56:54.441]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[02:56:54.441]    </control>
[02:56:54.441]    <control if="continueId == 4" while="" timeout="0" info="">
[02:56:54.441]      // if-block "continueId == 4"
[02:56:54.445]        // =>  FALSE
[02:56:54.445]      // skip if-block "continueId == 4"
[02:56:54.445]    </control>
[02:56:54.445]    <control if="!isProduction" while="" timeout="0" info="">
[02:56:54.445]      // if-block "!isProduction"
[02:56:54.445]        // =>  FALSE
[02:56:54.445]      // skip if-block "!isProduction"
[02:56:54.445]    </control>
[02:56:54.445]  </sequence>
[02:56:54.445]  
[03:00:07.311]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[03:00:07.311]  
[03:00:07.313]  <debugvars>
[03:00:07.313]    // Pre-defined
[03:00:07.313]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:00:07.313]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[03:00:07.313]    __dp=0x00000000
[03:00:07.313]    __ap=0x00000000
[03:00:07.313]    __traceout=0x00000000      (Trace Disabled)
[03:00:07.313]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:00:07.313]    __FlashAddr=0x00000000
[03:00:07.313]    __FlashLen=0x00000000
[03:00:07.313]    __FlashArg=0x00000000
[03:00:07.313]    __FlashOp=0x00000000
[03:00:07.313]    __Result=0x00000000
[03:00:07.313]  </debugvars>
[03:00:07.313]  
[03:00:07.313]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:00:07.313]    <block atomic="false" info="">
[03:00:07.313]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:00:07.313]        // -> [isSWJ <= 0x00000001]
[03:00:07.313]      __var hasDormant = __protocol & 0x00020000;
[03:00:07.313]        // -> [hasDormant <= 0x00000000]
[03:00:07.313]      __var protType   = __protocol & 0x0000FFFF;
[03:00:07.313]        // -> [protType <= 0x00000002]
[03:00:07.313]    </block>
[03:00:07.313]    <control if="protType == 1" while="" timeout="0" info="">
[03:00:07.313]      // if-block "protType == 1"
[03:00:07.313]        // =>  FALSE
[03:00:07.313]      // skip if-block "protType == 1"
[03:00:07.313]    </control>
[03:00:07.313]    <control if="protType == 2" while="" timeout="0" info="">
[03:00:07.313]      // if-block "protType == 2"
[03:00:07.313]        // =>  TRUE
[03:00:07.317]      <control if="isSWJ" while="" timeout="0" info="">
[03:00:07.317]        // if-block "isSWJ"
[03:00:07.317]          // =>  TRUE
[03:00:07.318]        <control if="hasDormant" while="" timeout="0" info="">
[03:00:07.318]          // if-block "hasDormant"
[03:00:07.318]            // =>  FALSE
[03:00:07.318]          // skip if-block "hasDormant"
[03:00:07.318]        </control>
[03:00:07.318]        <control if="!hasDormant" while="" timeout="0" info="">
[03:00:07.318]          // if-block "!hasDormant"
[03:00:07.318]            // =>  TRUE
[03:00:07.318]          <block atomic="false" info="">
[03:00:07.318]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:00:07.320]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:00:07.320]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:00:07.321]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:00:07.321]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:00:07.325]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:00:07.326]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:00:07.327]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:00:07.327]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:00:07.327]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:00:07.327]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:00:07.330]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:00:07.330]          </block>
[03:00:07.330]          // end if-block "!hasDormant"
[03:00:07.330]        </control>
[03:00:07.330]        // end if-block "isSWJ"
[03:00:07.330]      </control>
[03:00:07.330]      <control if="!isSWJ" while="" timeout="0" info="">
[03:00:07.330]        // if-block "!isSWJ"
[03:00:07.330]          // =>  FALSE
[03:00:07.330]        // skip if-block "!isSWJ"
[03:00:07.330]      </control>
[03:00:07.330]      <block atomic="false" info="">
[03:00:07.330]        ReadDP(0x0);
[03:00:07.330]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:00:07.330]      </block>
[03:00:07.334]      // end if-block "protType == 2"
[03:00:07.334]    </control>
[03:00:07.334]  </sequence>
[03:00:07.334]  
[03:00:07.337]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[03:00:07.337]  
[03:00:07.337]  <debugvars>
[03:00:07.337]    // Pre-defined
[03:00:07.337]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:00:07.337]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[03:00:07.337]    __dp=0x00000000
[03:00:07.338]    __ap=0x00000000
[03:00:07.338]    __traceout=0x00000000      (Trace Disabled)
[03:00:07.338]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:00:07.338]    __FlashAddr=0x00000000
[03:00:07.338]    __FlashLen=0x00000000
[03:00:07.338]    __FlashArg=0x00000000
[03:00:07.338]    __FlashOp=0x00000000
[03:00:07.338]    __Result=0x00000000
[03:00:07.338]  </debugvars>
[03:00:07.338]  
[03:00:07.338]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[03:00:07.338]    <block atomic="false" info="">
[03:00:07.338]      __var SW_DP_ABORT       = 0x0;
[03:00:07.338]        // -> [SW_DP_ABORT <= 0x00000000]
[03:00:07.338]      __var DP_CTRL_STAT      = 0x4;
[03:00:07.338]        // -> [DP_CTRL_STAT <= 0x00000004]
[03:00:07.338]      __var DP_SELECT         = 0x8;
[03:00:07.338]        // -> [DP_SELECT <= 0x00000008]
[03:00:07.338]      __var powered_down      = 0;
[03:00:07.338]        // -> [powered_down <= 0x00000000]
[03:00:07.338]      WriteDP(DP_SELECT, 0x00000000);
[03:00:07.342]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[03:00:07.342]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[03:00:07.347]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[03:00:07.347]        // -> [powered_down <= 0x00000001]
[03:00:07.347]    </block>
[03:00:07.347]    <control if="powered_down" while="" timeout="0" info="">
[03:00:07.347]      // if-block "powered_down"
[03:00:07.347]        // =>  TRUE
[03:00:07.347]      <block atomic="false" info="">
[03:00:07.347]        Message(0, "Debug/System power-up request sent");
[03:00:07.347]        WriteDP(DP_CTRL_STAT, 0x50000000);
[03:00:07.351]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[03:00:07.351]      </block>
[03:00:07.351]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[03:00:07.351]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[03:00:07.352]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[03:00:07.352]        // while-condition  =>  FALSE
[03:00:07.352]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[03:00:07.352]      </control>
[03:00:07.352]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[03:00:07.352]        // if-block "(__protocol & 0xFFFF) == 1"
[03:00:07.352]          // =>  FALSE
[03:00:07.352]        // skip if-block "(__protocol & 0xFFFF) == 1"
[03:00:07.352]      </control>
[03:00:07.352]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[03:00:07.352]        // if-block "(__protocol & 0xFFFF) == 2"
[03:00:07.352]          // =>  TRUE
[03:00:07.352]        <block atomic="false" info="">
[03:00:07.352]          Message(0, "executing SWD power up");
[03:00:07.355]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[03:00:07.357]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[03:00:07.357]          WriteDP(SW_DP_ABORT, 0x0000001E);
[03:00:07.358]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[03:00:07.358]        </block>
[03:00:07.359]        // end if-block "(__protocol & 0xFFFF) == 2"
[03:00:07.359]      </control>
[03:00:07.359]      // end if-block "powered_down"
[03:00:07.359]    </control>
[03:00:07.359]    <block atomic="false" info="">
[03:00:07.359]      __var DEBUG_PORT_VAL    = 0;
[03:00:07.359]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[03:00:07.359]      __var ACCESS_POINT_VAL  = 0;
[03:00:07.359]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[03:00:07.359]      __ap = 1; 
[03:00:07.359]        // -> [__ap <= 0x00000001]
[03:00:07.359]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[03:00:07.364]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[03:00:07.364]      __ap = 4;
[03:00:07.364]        // -> [__ap <= 0x00000004]
[03:00:07.364]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[03:00:07.368]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[03:00:07.368]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[03:00:07.368]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[03:00:07.369]    </block>
[03:00:07.369]    <block atomic="false" info="">
[03:00:07.369]      __var nReset = 0x80;
[03:00:07.369]        // -> [nReset <= 0x00000080]
[03:00:07.369]      __var canReadPins = 0;
[03:00:07.369]        // -> [canReadPins <= 0x00000000]
[03:00:07.369]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[03:00:07.371]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[03:00:07.372]        // -> [canReadPins <= 0x00000001]
[03:00:07.372]    </block>
[03:00:07.372]    <control if="" while="1" timeout="200" info="">
[03:00:07.372]      // while "1"  (timeout="200")
[03:00:07.372]      // while-condition  =>  TRUE
[03:00:07.372]      // while "1"  (timeout="200")
[03:00:07.372]      // while-condition  =>  TRUE
[03:00:07.372]      // while "1"  (timeout="200")
[03:00:07.372]      // while-condition  =>  TRUE
[03:00:07.372]      // while "1"  (timeout="200")
[03:00:07.372]      // while-condition  =>  TRUE
[03:00:07.372]      // while "1"  (timeout="200")
[03:00:07.372]      // while-condition  =>  TRUE
[03:00:07.372]      // while "1"  (timeout="200")
[03:00:07.372]      // while-condition  =>  TRUE
[03:00:07.374]      // while "1"  (timeout="200")
[03:00:07.374]      // while-condition  =>  TRUE
[03:00:07.374]      // while "1"  (timeout="200")
[03:00:07.374]      // while-condition  =>  TRUE
[03:00:07.374]      // while "1"  (timeout="200")
[03:00:07.374]      // while-condition  =>  TRUE
[03:00:07.374]      // while "1"  (timeout="200")
[03:00:07.374]      // while-condition  =>  TRUE
[03:00:07.374]      // while "1"  (timeout="200")
[03:00:07.374]      // while-condition  =>  TRUE
[03:00:07.374]      // while "1"  (timeout="200")
[03:00:07.375]      // while-condition  =>  TRUE
[03:00:07.375]      // while "1"  (timeout="200")
[03:00:07.375]      // while-condition  =>  TRUE
[03:00:07.375]      // while "1"  (timeout="200")
[03:00:07.375]      // while-condition  =>  TRUE
[03:00:07.375]      // while "1"  (timeout="200")
[03:00:07.375]      // while-condition  =>  TRUE
[03:00:07.375]      // while "1"  (timeout="200")
[03:00:07.375]      // while-condition  =>  TRUE
[03:00:07.375]      // while "1"  (timeout="200")
[03:00:07.375]      // while-condition  =>  TRUE
[03:00:07.375]      // while "1"  (timeout="200")
[03:00:07.375]      // while-condition  =>  TRUE
[03:00:07.375]      // while "1"  (timeout="200")
[03:00:07.375]      // while-condition  =>  TRUE
[03:00:07.377]      // while "1"  (timeout="200")
[03:00:07.377]      // while  =>  TIMEOUT
[03:00:07.377]      // end while "1"
[03:00:07.377]    </control>
[03:00:07.377]    <control if="canReadPins" while="" timeout="0" info="">
[03:00:07.377]      // if-block "canReadPins"
[03:00:07.377]        // =>  TRUE
[03:00:07.377]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[03:00:07.377]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[03:00:07.377]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[03:00:07.377]        // while-condition  =>  FALSE
[03:00:07.379]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[03:00:07.379]      </control>
[03:00:07.379]      // end if-block "canReadPins"
[03:00:07.379]    </control>
[03:00:07.379]    <control if="!canReadPins" while="" timeout="0" info="">
[03:00:07.379]      // if-block "!canReadPins"
[03:00:07.379]        // =>  FALSE
[03:00:07.379]      // skip if-block "!canReadPins"
[03:00:07.379]    </control>
[03:00:07.379]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[03:00:07.379]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[03:00:07.379]        // =>  TRUE
[03:00:07.380]      <block atomic="false" info="">
[03:00:07.380]        WriteAP(0x00, 0x190008);
[03:00:07.380]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[03:00:07.380]        WriteAP(0xF0, 0x01);
[03:00:07.387]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[03:00:07.387]      </block>
[03:00:07.387]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[03:00:07.387]    </control>
[03:00:07.387]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[03:00:07.387]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[03:00:07.387]        // =>  FALSE
[03:00:07.387]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[03:00:07.387]    </control>
[03:00:07.387]    <block atomic="false" info="">
[03:00:07.387]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[03:00:07.391]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[03:00:07.391]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[03:00:07.391]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[03:00:07.392]      __ap = 0; //lets make sure we reset the access point selection
[03:00:07.392]        // -> [__ap <= 0x00000000]
[03:00:07.392]    </block>
[03:00:07.392]  </sequence>
[03:00:07.392]  
[03:00:07.411]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[03:00:07.411]  
[03:00:07.411]  <debugvars>
[03:00:07.411]    // Pre-defined
[03:00:07.411]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:00:07.411]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[03:00:07.411]    __dp=0x00000000
[03:00:07.411]    __ap=0x00000000
[03:00:07.411]    __traceout=0x00000000      (Trace Disabled)
[03:00:07.412]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:00:07.412]    __FlashAddr=0x00000000
[03:00:07.412]    __FlashLen=0x00000000
[03:00:07.412]    __FlashArg=0x00000000
[03:00:07.412]    __FlashOp=0x00000000
[03:00:07.412]    __Result=0x00000000
[03:00:07.412]  </debugvars>
[03:00:07.413]  
[03:00:07.413]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[03:00:07.413]    <block atomic="false" info="">
[03:00:07.413]      __var deviceID = 0;
[03:00:07.413]        // -> [deviceID <= 0x00000000]
[03:00:07.413]      __var version = 0;
[03:00:07.413]        // -> [version <= 0x00000000]
[03:00:07.413]      __var partNum = 0;
[03:00:07.413]        // -> [partNum <= 0x00000000]
[03:00:07.413]      __var manuf = 0;
[03:00:07.413]        // -> [manuf <= 0x00000000]
[03:00:07.413]      __var isMSPM0G1X0X_G3X0X = 0;
[03:00:07.414]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[03:00:07.414]      __var isProduction = 0;
[03:00:07.414]        // -> [isProduction <= 0x00000000]
[03:00:07.414]      __var continueId = 0;
[03:00:07.414]        // -> [continueId <= 0x00000000]
[03:00:07.414]      deviceID =   Read32(0x41C40004);
[03:00:07.419]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[03:00:07.419]        // -> [deviceID <= 0x2BB8802F]
[03:00:07.420]      version = deviceID >> 28;
[03:00:07.420]        // -> [version <= 0x00000002]
[03:00:07.420]      partNum = (deviceID & 0x0FFFF000) >> 12;
[03:00:07.420]        // -> [partNum <= 0x0000BB88]
[03:00:07.420]      manuf = (deviceID & 0x00000FFE) >> 1;
[03:00:07.420]        // -> [manuf <= 0x00000017]
[03:00:07.420]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[03:00:07.420]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[03:00:07.420]      isProduction = (version > 0);
[03:00:07.420]        // -> [isProduction <= 0x00000001]
[03:00:07.420]    </block>
[03:00:07.420]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[03:00:07.420]      // if-block "!isMSPM0G1X0X_G3X0X"
[03:00:07.420]        // =>  FALSE
[03:00:07.420]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[03:00:07.420]    </control>
[03:00:07.420]    <control if="continueId == 4" while="" timeout="0" info="">
[03:00:07.420]      // if-block "continueId == 4"
[03:00:07.420]        // =>  FALSE
[03:00:07.420]      // skip if-block "continueId == 4"
[03:00:07.420]    </control>
[03:00:07.420]    <control if="!isProduction" while="" timeout="0" info="">
[03:00:07.422]      // if-block "!isProduction"
[03:00:07.422]        // =>  FALSE
[03:00:07.422]      // skip if-block "!isProduction"
[03:00:07.422]    </control>
[03:00:07.422]  </sequence>
[03:00:07.422]  
[03:01:08.518]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[03:01:08.518]  
[03:01:08.529]  <debugvars>
[03:01:08.529]    // Pre-defined
[03:01:08.529]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:08.529]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:08.529]    __dp=0x00000000
[03:01:08.529]    __ap=0x00000000
[03:01:08.529]    __traceout=0x00000000      (Trace Disabled)
[03:01:08.529]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:08.529]    __FlashAddr=0x00000000
[03:01:08.529]    __FlashLen=0x00000000
[03:01:08.529]    __FlashArg=0x00000000
[03:01:08.529]    __FlashOp=0x00000000
[03:01:08.529]    __Result=0x00000000
[03:01:08.529]  </debugvars>
[03:01:08.531]  
[03:01:08.531]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:08.531]    <block atomic="false" info="">
[03:01:08.531]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:08.531]        // -> [isSWJ <= 0x00000001]
[03:01:08.531]      __var hasDormant = __protocol & 0x00020000;
[03:01:08.531]        // -> [hasDormant <= 0x00000000]
[03:01:08.531]      __var protType   = __protocol & 0x0000FFFF;
[03:01:08.531]        // -> [protType <= 0x00000002]
[03:01:08.531]    </block>
[03:01:08.531]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:08.531]      // if-block "protType == 1"
[03:01:08.531]        // =>  FALSE
[03:01:08.531]      // skip if-block "protType == 1"
[03:01:08.531]    </control>
[03:01:08.531]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:08.531]      // if-block "protType == 2"
[03:01:08.531]        // =>  TRUE
[03:01:08.531]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:08.531]        // if-block "isSWJ"
[03:01:08.531]          // =>  TRUE
[03:01:08.531]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:08.531]          // if-block "hasDormant"
[03:01:08.531]            // =>  FALSE
[03:01:08.531]          // skip if-block "hasDormant"
[03:01:08.531]        </control>
[03:01:08.531]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:08.531]          // if-block "!hasDormant"
[03:01:08.531]            // =>  TRUE
[03:01:08.531]          <block atomic="false" info="">
[03:01:08.531]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:08.535]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:01:08.535]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:01:08.535]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:01:08.535]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:01:08.539]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:01:08.539]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:01:08.539]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:01:08.539]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:01:08.543]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:01:08.543]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:01:08.543]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:01:08.543]          </block>
[03:01:08.543]          // end if-block "!hasDormant"
[03:01:08.543]        </control>
[03:01:08.543]        // end if-block "isSWJ"
[03:01:08.543]      </control>
[03:01:08.543]      <control if="!isSWJ" while="" timeout="0" info="">
[03:01:08.543]        // if-block "!isSWJ"
[03:01:08.543]          // =>  FALSE
[03:01:08.543]        // skip if-block "!isSWJ"
[03:01:08.543]      </control>
[03:01:08.543]      <block atomic="false" info="">
[03:01:08.543]        ReadDP(0x0);
[03:01:08.547]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:01:08.547]      </block>
[03:01:08.547]      // end if-block "protType == 2"
[03:01:08.547]    </control>
[03:01:08.547]  </sequence>
[03:01:08.547]  
[03:01:08.547]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[03:01:08.547]  
[03:01:08.547]  <debugvars>
[03:01:08.547]    // Pre-defined
[03:01:08.547]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:08.547]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:08.547]    __dp=0x00000000
[03:01:08.547]    __ap=0x00000000
[03:01:08.551]    __traceout=0x00000000      (Trace Disabled)
[03:01:08.551]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:08.551]    __FlashAddr=0x00000000
[03:01:08.551]    __FlashLen=0x00000000
[03:01:08.551]    __FlashArg=0x00000000
[03:01:08.551]    __FlashOp=0x00000000
[03:01:08.551]    __Result=0x00000000
[03:01:08.551]  </debugvars>
[03:01:08.551]  
[03:01:08.551]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[03:01:08.551]    <block atomic="false" info="">
[03:01:08.551]      __var SW_DP_ABORT       = 0x0;
[03:01:08.551]        // -> [SW_DP_ABORT <= 0x00000000]
[03:01:08.551]      __var DP_CTRL_STAT      = 0x4;
[03:01:08.551]        // -> [DP_CTRL_STAT <= 0x00000004]
[03:01:08.551]      __var DP_SELECT         = 0x8;
[03:01:08.551]        // -> [DP_SELECT <= 0x00000008]
[03:01:08.551]      __var powered_down      = 0;
[03:01:08.551]        // -> [powered_down <= 0x00000000]
[03:01:08.551]      WriteDP(DP_SELECT, 0x00000000);
[03:01:08.555]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[03:01:08.555]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[03:01:08.563]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[03:01:08.563]        // -> [powered_down <= 0x00000001]
[03:01:08.563]    </block>
[03:01:08.563]    <control if="powered_down" while="" timeout="0" info="">
[03:01:08.563]      // if-block "powered_down"
[03:01:08.563]        // =>  TRUE
[03:01:08.563]      <block atomic="false" info="">
[03:01:08.563]        Message(0, "Debug/System power-up request sent");
[03:01:08.563]        WriteDP(DP_CTRL_STAT, 0x50000000);
[03:01:08.567]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[03:01:08.567]      </block>
[03:01:08.567]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[03:01:08.567]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[03:01:08.567]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[03:01:08.567]        // while-condition  =>  FALSE
[03:01:08.567]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[03:01:08.567]      </control>
[03:01:08.567]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[03:01:08.567]        // if-block "(__protocol & 0xFFFF) == 1"
[03:01:08.567]          // =>  FALSE
[03:01:08.567]        // skip if-block "(__protocol & 0xFFFF) == 1"
[03:01:08.567]      </control>
[03:01:08.571]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[03:01:08.571]        // if-block "(__protocol & 0xFFFF) == 2"
[03:01:08.571]          // =>  TRUE
[03:01:08.571]        <block atomic="false" info="">
[03:01:08.571]          Message(0, "executing SWD power up");
[03:01:08.571]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[03:01:08.571]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[03:01:08.571]          WriteDP(SW_DP_ABORT, 0x0000001E);
[03:01:08.576]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[03:01:08.576]        </block>
[03:01:08.576]        // end if-block "(__protocol & 0xFFFF) == 2"
[03:01:08.576]      </control>
[03:01:08.576]      // end if-block "powered_down"
[03:01:08.576]    </control>
[03:01:08.576]    <block atomic="false" info="">
[03:01:08.576]      __var DEBUG_PORT_VAL    = 0;
[03:01:08.576]        // -> [DEBUG_PORT_VAL <= 0x00000000]
[03:01:08.576]      __var ACCESS_POINT_VAL  = 0;
[03:01:08.576]        // -> [ACCESS_POINT_VAL <= 0x00000000]
[03:01:08.576]      __ap = 1; 
[03:01:08.576]        // -> [__ap <= 0x00000001]
[03:01:08.576]      WriteAP(0x0C, 0x04); //lets use the mini pwr-ap as backup
[03:01:08.580]        // -> [WriteAP(0x0000000C, 0x00000004)]   (__dp=0x00000000, __ap=0x00000001)
[03:01:08.580]      __ap = 4;
[03:01:08.580]        // -> [__ap <= 0x00000004]
[03:01:08.580]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[03:01:08.584]        // -> [ReadAP(0x00000000) => 0x00080027]   (__dp=0x00000000, __ap=0x00000004)
[03:01:08.584]        // -> [ACCESS_POINT_VAL <= 0x00080027]
[03:01:08.584]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[03:01:08.584]    </block>
[03:01:08.584]    <block atomic="false" info="">
[03:01:08.584]      __var nReset = 0x80;
[03:01:08.584]        // -> [nReset <= 0x00000080]
[03:01:08.584]      __var canReadPins = 0;
[03:01:08.584]        // -> [canReadPins <= 0x00000000]
[03:01:08.584]      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
[03:01:08.590]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[03:01:08.590]        // -> [canReadPins <= 0x00000001]
[03:01:08.590]    </block>
[03:01:08.590]    <control if="" while="1" timeout="200" info="">
[03:01:08.590]      // while "1"  (timeout="200")
[03:01:08.590]      // while-condition  =>  TRUE
[03:01:08.590]      // while "1"  (timeout="200")
[03:01:08.590]      // while-condition  =>  TRUE
[03:01:08.590]      // while "1"  (timeout="200")
[03:01:08.590]      // while-condition  =>  TRUE
[03:01:08.590]      // while "1"  (timeout="200")
[03:01:08.590]      // while-condition  =>  TRUE
[03:01:08.590]      // while "1"  (timeout="200")
[03:01:08.590]      // while-condition  =>  TRUE
[03:01:08.590]      // while "1"  (timeout="200")
[03:01:08.590]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.592]      // while-condition  =>  TRUE
[03:01:08.592]      // while "1"  (timeout="200")
[03:01:08.596]      // while-condition  =>  TRUE
[03:01:08.596]      // while "1"  (timeout="200")
[03:01:08.596]      // while  =>  TIMEOUT
[03:01:08.596]      // end while "1"
[03:01:08.596]    </control>
[03:01:08.596]    <control if="canReadPins" while="" timeout="0" info="">
[03:01:08.596]      // if-block "canReadPins"
[03:01:08.596]        // =>  TRUE
[03:01:08.596]      <control if="" while="(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0" timeout="1000000" info="">
[03:01:08.596]        // while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"  (timeout="1000000")
[03:01:08.596]          // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x83]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=1)
[03:01:08.596]        // while-condition  =>  FALSE
[03:01:08.596]        // end while "(DAP_SWJ_Pins(nReset, nReset, 0) & nReset) == 0"
[03:01:08.596]      </control>
[03:01:08.596]      // end if-block "canReadPins"
[03:01:08.596]    </control>
[03:01:08.600]    <control if="!canReadPins" while="" timeout="0" info="">
[03:01:08.600]      // if-block "!canReadPins"
[03:01:08.600]        // =>  FALSE
[03:01:08.600]      // skip if-block "!canReadPins"
[03:01:08.600]    </control>
[03:01:08.601]    <control if="(ACCESS_POINT_VAL & 0x00E00000) == 0" while="" timeout="0" info="">
[03:01:08.601]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[03:01:08.601]        // =>  TRUE
[03:01:08.601]      <block atomic="false" info="">
[03:01:08.601]        WriteAP(0x00, 0x190008);
[03:01:08.603]          // -> [WriteAP(0x00000000, 0x00190008)]   (__dp=0x00000000, __ap=0x00000004)
[03:01:08.603]        WriteAP(0xF0, 0x01);
[03:01:08.606]          // -> [WriteAP(0x000000F0, 0x00000001)]   (__dp=0x00000000, __ap=0x00000004)
[03:01:08.606]      </block>
[03:01:08.606]      // end if-block "(ACCESS_POINT_VAL & 0x00E00000) == 0"
[03:01:08.606]    </control>
[03:01:08.606]    <control if="(ACCESS_POINT_VAL & 0x00E00000) != 0" while="" timeout="0" info="">
[03:01:08.606]      // if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[03:01:08.606]        // =>  FALSE
[03:01:08.606]      // skip if-block "(ACCESS_POINT_VAL & 0x00E00000) != 0"
[03:01:08.606]    </control>
[03:01:08.606]    <block atomic="false" info="">
[03:01:08.606]      ACCESS_POINT_VAL = ReadAP(0x00);//Reading current state of access point
[03:01:08.609]        // -> [ReadAP(0x00000000) => 0x0079002F]   (__dp=0x00000000, __ap=0x00000004)
[03:01:08.609]        // -> [ACCESS_POINT_VAL <= 0x0079002F]
[03:01:08.609]      Message(0, "Current state of access point is: %x",ACCESS_POINT_VAL);
[03:01:08.611]      __ap = 0; //lets make sure we reset the access point selection
[03:01:08.611]        // -> [__ap <= 0x00000000]
[03:01:08.611]    </block>
[03:01:08.611]  </sequence>
[03:01:08.611]  
[03:01:08.630]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[03:01:08.630]  
[03:01:08.630]  <debugvars>
[03:01:08.630]    // Pre-defined
[03:01:08.630]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:08.630]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:08.630]    __dp=0x00000000
[03:01:08.630]    __ap=0x00000000
[03:01:08.630]    __traceout=0x00000000      (Trace Disabled)
[03:01:08.630]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:08.630]    __FlashAddr=0x00000000
[03:01:08.630]    __FlashLen=0x00000000
[03:01:08.630]    __FlashArg=0x00000000
[03:01:08.630]    __FlashOp=0x00000000
[03:01:08.630]    __Result=0x00000000
[03:01:08.630]  </debugvars>
[03:01:08.630]  
[03:01:08.630]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[03:01:08.630]    <block atomic="false" info="">
[03:01:08.630]      __var deviceID = 0;
[03:01:08.630]        // -> [deviceID <= 0x00000000]
[03:01:08.630]      __var version = 0;
[03:01:08.630]        // -> [version <= 0x00000000]
[03:01:08.630]      __var partNum = 0;
[03:01:08.630]        // -> [partNum <= 0x00000000]
[03:01:08.630]      __var manuf = 0;
[03:01:08.630]        // -> [manuf <= 0x00000000]
[03:01:08.630]      __var isMSPM0G1X0X_G3X0X = 0;
[03:01:08.634]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000000]
[03:01:08.634]      __var isProduction = 0;
[03:01:08.634]        // -> [isProduction <= 0x00000000]
[03:01:08.634]      __var continueId = 0;
[03:01:08.634]        // -> [continueId <= 0x00000000]
[03:01:08.634]      deviceID =   Read32(0x41C40004);
[03:01:08.638]        // -> [Read32(0x41C40004) => 0x2BB8802F]   (__dp=0x00000000, __ap=0x00000000)
[03:01:08.638]        // -> [deviceID <= 0x2BB8802F]
[03:01:08.640]      version = deviceID >> 28;
[03:01:08.640]        // -> [version <= 0x00000002]
[03:01:08.640]      partNum = (deviceID & 0x0FFFF000) >> 12;
[03:01:08.640]        // -> [partNum <= 0x0000BB88]
[03:01:08.640]      manuf = (deviceID & 0x00000FFE) >> 1;
[03:01:08.640]        // -> [manuf <= 0x00000017]
[03:01:08.640]      isMSPM0G1X0X_G3X0X = (partNum == 0xBB88) && (manuf == 0x17);
[03:01:08.640]        // -> [isMSPM0G1X0X_G3X0X <= 0x00000001]
[03:01:08.640]      isProduction = (version > 0);
[03:01:08.641]        // -> [isProduction <= 0x00000001]
[03:01:08.641]    </block>
[03:01:08.641]    <control if="!isMSPM0G1X0X_G3X0X" while="" timeout="0" info="">
[03:01:08.641]      // if-block "!isMSPM0G1X0X_G3X0X"
[03:01:08.641]        // =>  FALSE
[03:01:08.641]      // skip if-block "!isMSPM0G1X0X_G3X0X"
[03:01:08.641]    </control>
[03:01:08.641]    <control if="continueId == 4" while="" timeout="0" info="">
[03:01:08.641]      // if-block "continueId == 4"
[03:01:08.641]        // =>  FALSE
[03:01:08.641]      // skip if-block "continueId == 4"
[03:01:08.641]    </control>
[03:01:08.642]    <control if="!isProduction" while="" timeout="0" info="">
[03:01:08.642]      // if-block "!isProduction"
[03:01:08.642]        // =>  FALSE
[03:01:08.642]      // skip if-block "!isProduction"
[03:01:08.642]    </control>
[03:01:08.642]  </sequence>
[03:01:08.643]  
[03:01:37.727]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:37.727]  
[03:01:37.735]  <debugvars>
[03:01:37.735]    // Pre-defined
[03:01:37.735]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:37.735]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:37.735]    __dp=0x00000000
[03:01:37.735]    __ap=0x00000000
[03:01:37.735]    __traceout=0x00000000      (Trace Disabled)
[03:01:37.735]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:37.735]    __FlashAddr=0x00000000
[03:01:37.735]    __FlashLen=0x00000000
[03:01:37.735]    __FlashArg=0x00000000
[03:01:37.735]    __FlashOp=0x00000000
[03:01:37.735]    __Result=0x00000000
[03:01:37.735]  </debugvars>
[03:01:37.735]  
[03:01:37.735]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:37.735]    <block atomic="false" info="">
[03:01:37.735]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:37.735]        // -> [isSWJ <= 0x00000001]
[03:01:37.735]      __var hasDormant = __protocol & 0x00020000;
[03:01:37.735]        // -> [hasDormant <= 0x00000000]
[03:01:37.735]      __var protType   = __protocol & 0x0000FFFF;
[03:01:37.735]        // -> [protType <= 0x00000002]
[03:01:37.735]    </block>
[03:01:37.735]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:37.735]      // if-block "protType == 1"
[03:01:37.735]        // =>  FALSE
[03:01:37.735]      // skip if-block "protType == 1"
[03:01:37.735]    </control>
[03:01:37.735]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:37.735]      // if-block "protType == 2"
[03:01:37.735]        // =>  TRUE
[03:01:37.735]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:37.735]        // if-block "isSWJ"
[03:01:37.735]          // =>  TRUE
[03:01:37.735]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:37.739]          // if-block "hasDormant"
[03:01:37.739]            // =>  FALSE
[03:01:37.739]          // skip if-block "hasDormant"
[03:01:37.739]        </control>
[03:01:37.739]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:37.739]          // if-block "!hasDormant"
[03:01:37.739]            // =>  TRUE
[03:01:37.739]          <block atomic="false" info="">
[03:01:37.739]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:38.749]  
[03:01:38.749]  !!! E320 : DAP access error
[03:01:38.749]  
[03:01:38.757]          </block>
[03:01:38.757]          // end if-block "!hasDormant"
[03:01:38.757]        </control>
[03:01:38.757]        // end if-block "isSWJ"
[03:01:38.757]      </control>
[03:01:38.757]      // end if-block "protType == 2"
[03:01:38.757]    </control>
[03:01:38.757]  </sequence>
[03:01:38.757]  
[03:01:39.014]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:39.014]  
[03:01:39.022]  <debugvars>
[03:01:39.022]    // Pre-defined
[03:01:39.022]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:39.022]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:39.022]    __dp=0x00000000
[03:01:39.022]    __ap=0x00000000
[03:01:39.022]    __traceout=0x00000000      (Trace Disabled)
[03:01:39.022]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:39.022]    __FlashAddr=0x00000000
[03:01:39.022]    __FlashLen=0x00000000
[03:01:39.022]    __FlashArg=0x00000000
[03:01:39.022]    __FlashOp=0x00000000
[03:01:39.022]    __Result=0x00000000
[03:01:39.022]  </debugvars>
[03:01:39.022]  
[03:01:39.022]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:39.022]    <block atomic="false" info="">
[03:01:39.022]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:39.022]        // -> [isSWJ <= 0x00000001]
[03:01:39.022]      __var hasDormant = __protocol & 0x00020000;
[03:01:39.022]        // -> [hasDormant <= 0x00000000]
[03:01:39.022]      __var protType   = __protocol & 0x0000FFFF;
[03:01:39.022]        // -> [protType <= 0x00000002]
[03:01:39.022]    </block>
[03:01:39.022]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:39.022]      // if-block "protType == 1"
[03:01:39.022]        // =>  FALSE
[03:01:39.022]      // skip if-block "protType == 1"
[03:01:39.022]    </control>
[03:01:39.022]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:39.026]      // if-block "protType == 2"
[03:01:39.026]        // =>  TRUE
[03:01:39.026]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:39.026]        // if-block "isSWJ"
[03:01:39.026]          // =>  TRUE
[03:01:39.026]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:39.026]          // if-block "hasDormant"
[03:01:39.026]            // =>  FALSE
[03:01:39.026]          // skip if-block "hasDormant"
[03:01:39.026]        </control>
[03:01:39.026]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:39.026]          // if-block "!hasDormant"
[03:01:39.026]            // =>  TRUE
[03:01:39.026]          <block atomic="false" info="">
[03:01:39.026]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:40.031]  
[03:01:40.031]  !!! E320 : DAP access error
[03:01:40.031]  
[03:01:40.040]          </block>
[03:01:40.040]          // end if-block "!hasDormant"
[03:01:40.040]        </control>
[03:01:40.040]        // end if-block "isSWJ"
[03:01:40.040]      </control>
[03:01:40.040]      // end if-block "protType == 2"
[03:01:40.040]    </control>
[03:01:40.040]  </sequence>
[03:01:40.040]  
[03:01:40.297]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:40.297]  
[03:01:40.305]  <debugvars>
[03:01:40.305]    // Pre-defined
[03:01:40.305]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:40.305]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:40.305]    __dp=0x00000000
[03:01:40.305]    __ap=0x00000000
[03:01:40.305]    __traceout=0x00000000      (Trace Disabled)
[03:01:40.305]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:40.305]    __FlashAddr=0x00000000
[03:01:40.305]    __FlashLen=0x00000000
[03:01:40.305]    __FlashArg=0x00000000
[03:01:40.305]    __FlashOp=0x00000000
[03:01:40.305]    __Result=0x00000000
[03:01:40.305]  </debugvars>
[03:01:40.305]  
[03:01:40.305]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:40.305]    <block atomic="false" info="">
[03:01:40.305]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:40.305]        // -> [isSWJ <= 0x00000001]
[03:01:40.305]      __var hasDormant = __protocol & 0x00020000;
[03:01:40.305]        // -> [hasDormant <= 0x00000000]
[03:01:40.305]      __var protType   = __protocol & 0x0000FFFF;
[03:01:40.305]        // -> [protType <= 0x00000002]
[03:01:40.305]    </block>
[03:01:40.305]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:40.305]      // if-block "protType == 1"
[03:01:40.305]        // =>  FALSE
[03:01:40.305]      // skip if-block "protType == 1"
[03:01:40.305]    </control>
[03:01:40.305]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:40.305]      // if-block "protType == 2"
[03:01:40.305]        // =>  TRUE
[03:01:40.305]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:40.309]        // if-block "isSWJ"
[03:01:40.309]          // =>  TRUE
[03:01:40.309]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:40.309]          // if-block "hasDormant"
[03:01:40.309]            // =>  FALSE
[03:01:40.309]          // skip if-block "hasDormant"
[03:01:40.309]        </control>
[03:01:40.309]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:40.309]          // if-block "!hasDormant"
[03:01:40.309]            // =>  TRUE
[03:01:40.309]          <block atomic="false" info="">
[03:01:40.309]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:41.314]  
[03:01:41.314]  !!! E320 : DAP access error
[03:01:41.314]  
[03:01:41.323]          </block>
[03:01:41.323]          // end if-block "!hasDormant"
[03:01:41.323]        </control>
[03:01:41.323]        // end if-block "isSWJ"
[03:01:41.323]      </control>
[03:01:41.323]      // end if-block "protType == 2"
[03:01:41.323]    </control>
[03:01:41.323]  </sequence>
[03:01:41.323]  
[03:01:41.581]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:41.581]  
[03:01:41.581]  <debugvars>
[03:01:41.581]    // Pre-defined
[03:01:41.581]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:41.581]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:41.581]    __dp=0x00000000
[03:01:41.581]    __ap=0x00000000
[03:01:41.581]    __traceout=0x00000000      (Trace Disabled)
[03:01:41.581]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:41.581]    __FlashAddr=0x00000000
[03:01:41.581]    __FlashLen=0x00000000
[03:01:41.581]    __FlashArg=0x00000000
[03:01:41.581]    __FlashOp=0x00000000
[03:01:41.581]    __Result=0x00000000
[03:01:41.581]  </debugvars>
[03:01:41.581]  
[03:01:41.581]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:41.581]    <block atomic="false" info="">
[03:01:41.581]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:41.581]        // -> [isSWJ <= 0x00000001]
[03:01:41.581]      __var hasDormant = __protocol & 0x00020000;
[03:01:41.581]        // -> [hasDormant <= 0x00000000]
[03:01:41.581]      __var protType   = __protocol & 0x0000FFFF;
[03:01:41.581]        // -> [protType <= 0x00000002]
[03:01:41.581]    </block>
[03:01:41.581]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:41.581]      // if-block "protType == 1"
[03:01:41.581]        // =>  FALSE
[03:01:41.581]      // skip if-block "protType == 1"
[03:01:41.585]    </control>
[03:01:41.585]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:41.585]      // if-block "protType == 2"
[03:01:41.585]        // =>  TRUE
[03:01:41.585]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:41.585]        // if-block "isSWJ"
[03:01:41.585]          // =>  TRUE
[03:01:41.585]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:41.585]          // if-block "hasDormant"
[03:01:41.585]            // =>  FALSE
[03:01:41.585]          // skip if-block "hasDormant"
[03:01:41.585]        </control>
[03:01:41.585]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:41.585]          // if-block "!hasDormant"
[03:01:41.585]            // =>  TRUE
[03:01:41.585]          <block atomic="false" info="">
[03:01:41.585]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:42.592]  
[03:01:42.592]  !!! E320 : DAP access error
[03:01:42.592]  
[03:01:42.600]          </block>
[03:01:42.600]          // end if-block "!hasDormant"
[03:01:42.600]        </control>
[03:01:42.600]        // end if-block "isSWJ"
[03:01:42.600]      </control>
[03:01:42.600]      // end if-block "protType == 2"
[03:01:42.600]    </control>
[03:01:42.600]  </sequence>
[03:01:42.600]  
[03:01:42.856]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:42.856]  
[03:01:42.865]  <debugvars>
[03:01:42.865]    // Pre-defined
[03:01:42.865]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:42.865]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:42.865]    __dp=0x00000000
[03:01:42.865]    __ap=0x00000000
[03:01:42.865]    __traceout=0x00000000      (Trace Disabled)
[03:01:42.865]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:42.865]    __FlashAddr=0x00000000
[03:01:42.865]    __FlashLen=0x00000000
[03:01:42.865]    __FlashArg=0x00000000
[03:01:42.865]    __FlashOp=0x00000000
[03:01:42.865]    __Result=0x00000000
[03:01:42.865]  </debugvars>
[03:01:42.865]  
[03:01:42.865]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:42.865]    <block atomic="false" info="">
[03:01:42.865]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:42.865]        // -> [isSWJ <= 0x00000001]
[03:01:42.865]      __var hasDormant = __protocol & 0x00020000;
[03:01:42.865]        // -> [hasDormant <= 0x00000000]
[03:01:42.865]      __var protType   = __protocol & 0x0000FFFF;
[03:01:42.865]        // -> [protType <= 0x00000002]
[03:01:42.865]    </block>
[03:01:42.865]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:42.868]      // if-block "protType == 1"
[03:01:42.868]        // =>  FALSE
[03:01:42.868]      // skip if-block "protType == 1"
[03:01:42.868]    </control>
[03:01:42.868]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:42.868]      // if-block "protType == 2"
[03:01:42.868]        // =>  TRUE
[03:01:42.868]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:42.868]        // if-block "isSWJ"
[03:01:42.868]          // =>  TRUE
[03:01:42.868]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:42.868]          // if-block "hasDormant"
[03:01:42.868]            // =>  FALSE
[03:01:42.868]          // skip if-block "hasDormant"
[03:01:42.868]        </control>
[03:01:42.868]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:42.868]          // if-block "!hasDormant"
[03:01:42.868]            // =>  TRUE
[03:01:42.868]          <block atomic="false" info="">
[03:01:42.868]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:43.878]  
[03:01:43.878]  !!! E320 : DAP access error
[03:01:43.878]  
[03:01:43.887]          </block>
[03:01:43.887]          // end if-block "!hasDormant"
[03:01:43.887]        </control>
[03:01:43.887]        // end if-block "isSWJ"
[03:01:43.887]      </control>
[03:01:43.887]      // end if-block "protType == 2"
[03:01:43.887]    </control>
[03:01:43.887]  </sequence>
[03:01:43.887]  
[03:01:44.144]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:44.144]  
[03:01:44.152]  <debugvars>
[03:01:44.152]    // Pre-defined
[03:01:44.152]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:44.152]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:44.152]    __dp=0x00000000
[03:01:44.152]    __ap=0x00000000
[03:01:44.152]    __traceout=0x00000000      (Trace Disabled)
[03:01:44.152]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:44.152]    __FlashAddr=0x00000000
[03:01:44.153]    __FlashLen=0x00000000
[03:01:44.153]    __FlashArg=0x00000000
[03:01:44.153]    __FlashOp=0x00000000
[03:01:44.153]    __Result=0x00000000
[03:01:44.153]  </debugvars>
[03:01:44.153]  
[03:01:44.153]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:44.153]    <block atomic="false" info="">
[03:01:44.153]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:44.153]        // -> [isSWJ <= 0x00000001]
[03:01:44.153]      __var hasDormant = __protocol & 0x00020000;
[03:01:44.154]        // -> [hasDormant <= 0x00000000]
[03:01:44.154]      __var protType   = __protocol & 0x0000FFFF;
[03:01:44.154]        // -> [protType <= 0x00000002]
[03:01:44.154]    </block>
[03:01:44.154]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:44.154]      // if-block "protType == 1"
[03:01:44.154]        // =>  FALSE
[03:01:44.154]      // skip if-block "protType == 1"
[03:01:44.154]    </control>
[03:01:44.156]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:44.156]      // if-block "protType == 2"
[03:01:44.156]        // =>  TRUE
[03:01:44.156]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:44.156]        // if-block "isSWJ"
[03:01:44.156]          // =>  TRUE
[03:01:44.156]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:44.156]          // if-block "hasDormant"
[03:01:44.156]            // =>  FALSE
[03:01:44.156]          // skip if-block "hasDormant"
[03:01:44.156]        </control>
[03:01:44.156]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:44.156]          // if-block "!hasDormant"
[03:01:44.157]            // =>  TRUE
[03:01:44.157]          <block atomic="false" info="">
[03:01:44.157]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:45.161]  
[03:01:45.161]  !!! E320 : DAP access error
[03:01:45.161]  
[03:01:45.169]          </block>
[03:01:45.170]          // end if-block "!hasDormant"
[03:01:45.170]        </control>
[03:01:45.170]        // end if-block "isSWJ"
[03:01:45.170]      </control>
[03:01:45.170]      // end if-block "protType == 2"
[03:01:45.170]    </control>
[03:01:45.170]  </sequence>
[03:01:45.170]  
[03:01:45.421]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:45.421]  
[03:01:45.429]  <debugvars>
[03:01:45.429]    // Pre-defined
[03:01:45.429]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:45.429]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:45.429]    __dp=0x00000000
[03:01:45.429]    __ap=0x00000000
[03:01:45.429]    __traceout=0x00000000      (Trace Disabled)
[03:01:45.429]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:45.429]    __FlashAddr=0x00000000
[03:01:45.429]    __FlashLen=0x00000000
[03:01:45.429]    __FlashArg=0x00000000
[03:01:45.429]    __FlashOp=0x00000000
[03:01:45.429]    __Result=0x00000000
[03:01:45.429]  </debugvars>
[03:01:45.429]  
[03:01:45.429]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:45.429]    <block atomic="false" info="">
[03:01:45.429]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:45.429]        // -> [isSWJ <= 0x00000001]
[03:01:45.429]      __var hasDormant = __protocol & 0x00020000;
[03:01:45.429]        // -> [hasDormant <= 0x00000000]
[03:01:45.429]      __var protType   = __protocol & 0x0000FFFF;
[03:01:45.429]        // -> [protType <= 0x00000002]
[03:01:45.429]    </block>
[03:01:45.429]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:45.429]      // if-block "protType == 1"
[03:01:45.429]        // =>  FALSE
[03:01:45.429]      // skip if-block "protType == 1"
[03:01:45.429]    </control>
[03:01:45.429]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:45.429]      // if-block "protType == 2"
[03:01:45.429]        // =>  TRUE
[03:01:45.429]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:45.429]        // if-block "isSWJ"
[03:01:45.433]          // =>  TRUE
[03:01:45.433]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:45.434]          // if-block "hasDormant"
[03:01:45.434]            // =>  FALSE
[03:01:45.434]          // skip if-block "hasDormant"
[03:01:45.434]        </control>
[03:01:45.434]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:45.434]          // if-block "!hasDormant"
[03:01:45.434]            // =>  TRUE
[03:01:45.434]          <block atomic="false" info="">
[03:01:45.434]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:46.435]  
[03:01:46.435]  !!! E320 : DAP access error
[03:01:46.435]  
[03:01:46.445]          </block>
[03:01:46.445]          // end if-block "!hasDormant"
[03:01:46.445]        </control>
[03:01:46.445]        // end if-block "isSWJ"
[03:01:46.445]      </control>
[03:01:46.445]      // end if-block "protType == 2"
[03:01:46.445]    </control>
[03:01:46.446]  </sequence>
[03:01:46.446]  
[03:01:46.698]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:46.698]  
[03:01:46.707]  <debugvars>
[03:01:46.707]    // Pre-defined
[03:01:46.707]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:46.707]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:46.707]    __dp=0x00000000
[03:01:46.707]    __ap=0x00000000
[03:01:46.707]    __traceout=0x00000000      (Trace Disabled)
[03:01:46.707]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:46.707]    __FlashAddr=0x00000000
[03:01:46.707]    __FlashLen=0x00000000
[03:01:46.707]    __FlashArg=0x00000000
[03:01:46.707]    __FlashOp=0x00000000
[03:01:46.707]    __Result=0x00000000
[03:01:46.707]  </debugvars>
[03:01:46.707]  
[03:01:46.707]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:46.707]    <block atomic="false" info="">
[03:01:46.707]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:46.707]        // -> [isSWJ <= 0x00000001]
[03:01:46.707]      __var hasDormant = __protocol & 0x00020000;
[03:01:46.707]        // -> [hasDormant <= 0x00000000]
[03:01:46.707]      __var protType   = __protocol & 0x0000FFFF;
[03:01:46.707]        // -> [protType <= 0x00000002]
[03:01:46.707]    </block>
[03:01:46.707]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:46.707]      // if-block "protType == 1"
[03:01:46.707]        // =>  FALSE
[03:01:46.707]      // skip if-block "protType == 1"
[03:01:46.707]    </control>
[03:01:46.707]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:46.707]      // if-block "protType == 2"
[03:01:46.707]        // =>  TRUE
[03:01:46.711]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:46.711]        // if-block "isSWJ"
[03:01:46.711]          // =>  TRUE
[03:01:46.711]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:46.711]          // if-block "hasDormant"
[03:01:46.711]            // =>  FALSE
[03:01:46.711]          // skip if-block "hasDormant"
[03:01:46.711]        </control>
[03:01:46.711]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:46.711]          // if-block "!hasDormant"
[03:01:46.711]            // =>  TRUE
[03:01:46.711]          <block atomic="false" info="">
[03:01:46.711]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:47.718]  
[03:01:47.718]  !!! E320 : DAP access error
[03:01:47.718]  
[03:01:47.727]          </block>
[03:01:47.727]          // end if-block "!hasDormant"
[03:01:47.727]        </control>
[03:01:47.727]        // end if-block "isSWJ"
[03:01:47.727]      </control>
[03:01:47.727]      // end if-block "protType == 2"
[03:01:47.727]    </control>
[03:01:47.727]  </sequence>
[03:01:47.727]  
[03:01:47.989]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:47.989]  
[03:01:47.997]  <debugvars>
[03:01:47.997]    // Pre-defined
[03:01:47.997]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:47.997]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:47.997]    __dp=0x00000000
[03:01:47.997]    __ap=0x00000000
[03:01:47.997]    __traceout=0x00000000      (Trace Disabled)
[03:01:47.997]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:47.997]    __FlashAddr=0x00000000
[03:01:47.997]    __FlashLen=0x00000000
[03:01:47.997]    __FlashArg=0x00000000
[03:01:47.997]    __FlashOp=0x00000000
[03:01:47.997]    __Result=0x00000000
[03:01:47.997]  </debugvars>
[03:01:47.997]  
[03:01:47.997]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:47.997]    <block atomic="false" info="">
[03:01:47.997]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:47.997]        // -> [isSWJ <= 0x00000001]
[03:01:47.997]      __var hasDormant = __protocol & 0x00020000;
[03:01:47.997]        // -> [hasDormant <= 0x00000000]
[03:01:47.997]      __var protType   = __protocol & 0x0000FFFF;
[03:01:47.997]        // -> [protType <= 0x00000002]
[03:01:47.997]    </block>
[03:01:47.997]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:47.997]      // if-block "protType == 1"
[03:01:47.997]        // =>  FALSE
[03:01:47.997]      // skip if-block "protType == 1"
[03:01:47.997]    </control>
[03:01:48.000]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:48.000]      // if-block "protType == 2"
[03:01:48.000]        // =>  TRUE
[03:01:48.000]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:48.000]        // if-block "isSWJ"
[03:01:48.000]          // =>  TRUE
[03:01:48.000]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:48.000]          // if-block "hasDormant"
[03:01:48.000]            // =>  FALSE
[03:01:48.000]          // skip if-block "hasDormant"
[03:01:48.000]        </control>
[03:01:48.000]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:48.000]          // if-block "!hasDormant"
[03:01:48.000]            // =>  TRUE
[03:01:48.000]          <block atomic="false" info="">
[03:01:48.000]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:49.009]  
[03:01:49.009]  !!! E320 : DAP access error
[03:01:49.009]  
[03:01:49.009]          </block>
[03:01:49.009]          // end if-block "!hasDormant"
[03:01:49.009]        </control>
[03:01:49.009]        // end if-block "isSWJ"
[03:01:49.009]      </control>
[03:01:49.009]      // end if-block "protType == 2"
[03:01:49.009]    </control>
[03:01:49.009]  </sequence>
[03:01:49.009]  
[03:01:49.263]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:49.263]  
[03:01:49.265]  <debugvars>
[03:01:49.265]    // Pre-defined
[03:01:49.265]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:49.265]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:49.265]    __dp=0x00000000
[03:01:49.265]    __ap=0x00000000
[03:01:49.265]    __traceout=0x00000000      (Trace Disabled)
[03:01:49.265]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:49.265]    __FlashAddr=0x00000000
[03:01:49.265]    __FlashLen=0x00000000
[03:01:49.265]    __FlashArg=0x00000000
[03:01:49.265]    __FlashOp=0x00000000
[03:01:49.265]    __Result=0x00000000
[03:01:49.265]  </debugvars>
[03:01:49.265]  
[03:01:49.265]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:49.265]    <block atomic="false" info="">
[03:01:49.265]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:49.265]        // -> [isSWJ <= 0x00000001]
[03:01:49.265]      __var hasDormant = __protocol & 0x00020000;
[03:01:49.265]        // -> [hasDormant <= 0x00000000]
[03:01:49.265]      __var protType   = __protocol & 0x0000FFFF;
[03:01:49.265]        // -> [protType <= 0x00000002]
[03:01:49.265]    </block>
[03:01:49.265]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:49.265]      // if-block "protType == 1"
[03:01:49.265]        // =>  FALSE
[03:01:49.268]      // skip if-block "protType == 1"
[03:01:49.268]    </control>
[03:01:49.268]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:49.268]      // if-block "protType == 2"
[03:01:49.268]        // =>  TRUE
[03:01:49.268]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:49.268]        // if-block "isSWJ"
[03:01:49.268]          // =>  TRUE
[03:01:49.268]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:49.268]          // if-block "hasDormant"
[03:01:49.268]            // =>  FALSE
[03:01:49.268]          // skip if-block "hasDormant"
[03:01:49.268]        </control>
[03:01:49.268]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:49.268]          // if-block "!hasDormant"
[03:01:49.268]            // =>  TRUE
[03:01:49.268]          <block atomic="false" info="">
[03:01:49.268]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:50.277]  
[03:01:50.277]  !!! E320 : DAP access error
[03:01:50.277]  
[03:01:50.285]          </block>
[03:01:50.285]          // end if-block "!hasDormant"
[03:01:50.285]        </control>
[03:01:50.285]        // end if-block "isSWJ"
[03:01:50.285]      </control>
[03:01:50.285]      // end if-block "protType == 2"
[03:01:50.285]    </control>
[03:01:50.285]  </sequence>
[03:01:50.285]  
[03:01:50.542]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:50.542]  
[03:01:50.543]  <debugvars>
[03:01:50.543]    // Pre-defined
[03:01:50.543]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:50.543]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:50.543]    __dp=0x00000000
[03:01:50.543]    __ap=0x00000000
[03:01:50.543]    __traceout=0x00000000      (Trace Disabled)
[03:01:50.543]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:50.543]    __FlashAddr=0x00000000
[03:01:50.544]    __FlashLen=0x00000000
[03:01:50.544]    __FlashArg=0x00000000
[03:01:50.544]    __FlashOp=0x00000000
[03:01:50.544]    __Result=0x00000000
[03:01:50.544]  </debugvars>
[03:01:50.544]  
[03:01:50.544]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:50.544]    <block atomic="false" info="">
[03:01:50.544]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:50.544]        // -> [isSWJ <= 0x00000001]
[03:01:50.544]      __var hasDormant = __protocol & 0x00020000;
[03:01:50.544]        // -> [hasDormant <= 0x00000000]
[03:01:50.544]      __var protType   = __protocol & 0x0000FFFF;
[03:01:50.544]        // -> [protType <= 0x00000002]
[03:01:50.544]    </block>
[03:01:50.544]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:50.544]      // if-block "protType == 1"
[03:01:50.544]        // =>  FALSE
[03:01:50.544]      // skip if-block "protType == 1"
[03:01:50.544]    </control>
[03:01:50.544]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:50.544]      // if-block "protType == 2"
[03:01:50.544]        // =>  TRUE
[03:01:50.544]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:50.544]        // if-block "isSWJ"
[03:01:50.544]          // =>  TRUE
[03:01:50.544]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:50.544]          // if-block "hasDormant"
[03:01:50.546]            // =>  FALSE
[03:01:50.546]          // skip if-block "hasDormant"
[03:01:50.546]        </control>
[03:01:50.546]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:50.546]          // if-block "!hasDormant"
[03:01:50.546]            // =>  TRUE
[03:01:50.546]          <block atomic="false" info="">
[03:01:50.546]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:51.552]  
[03:01:51.552]  !!! E320 : DAP access error
[03:01:51.552]  
[03:01:51.552]          </block>
[03:01:51.552]          // end if-block "!hasDormant"
[03:01:51.552]        </control>
[03:01:51.552]        // end if-block "isSWJ"
[03:01:51.552]      </control>
[03:01:51.552]      // end if-block "protType == 2"
[03:01:51.552]    </control>
[03:01:51.552]  </sequence>
[03:01:51.552]  
[03:01:51.812]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:51.812]  
[03:01:51.813]  <debugvars>
[03:01:51.813]    // Pre-defined
[03:01:51.813]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:51.813]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:51.813]    __dp=0x00000000
[03:01:51.813]    __ap=0x00000000
[03:01:51.813]    __traceout=0x00000000      (Trace Disabled)
[03:01:51.813]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:51.813]    __FlashAddr=0x00000000
[03:01:51.814]    __FlashLen=0x00000000
[03:01:51.814]    __FlashArg=0x00000000
[03:01:51.814]    __FlashOp=0x00000000
[03:01:51.814]    __Result=0x00000000
[03:01:51.814]  </debugvars>
[03:01:51.814]  
[03:01:51.814]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:51.814]    <block atomic="false" info="">
[03:01:51.814]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:51.814]        // -> [isSWJ <= 0x00000001]
[03:01:51.814]      __var hasDormant = __protocol & 0x00020000;
[03:01:51.814]        // -> [hasDormant <= 0x00000000]
[03:01:51.814]      __var protType   = __protocol & 0x0000FFFF;
[03:01:51.814]        // -> [protType <= 0x00000002]
[03:01:51.814]    </block>
[03:01:51.814]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:51.814]      // if-block "protType == 1"
[03:01:51.814]        // =>  FALSE
[03:01:51.814]      // skip if-block "protType == 1"
[03:01:51.814]    </control>
[03:01:51.816]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:51.816]      // if-block "protType == 2"
[03:01:51.816]        // =>  TRUE
[03:01:51.816]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:51.816]        // if-block "isSWJ"
[03:01:51.816]          // =>  TRUE
[03:01:51.816]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:51.816]          // if-block "hasDormant"
[03:01:51.816]            // =>  FALSE
[03:01:51.816]          // skip if-block "hasDormant"
[03:01:51.816]        </control>
[03:01:51.816]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:51.816]          // if-block "!hasDormant"
[03:01:51.816]            // =>  TRUE
[03:01:51.816]          <block atomic="false" info="">
[03:01:51.816]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:52.822]  
[03:01:52.822]  !!! E320 : DAP access error
[03:01:52.822]  
[03:01:52.822]          </block>
[03:01:52.822]          // end if-block "!hasDormant"
[03:01:52.822]        </control>
[03:01:52.822]        // end if-block "isSWJ"
[03:01:52.822]      </control>
[03:01:52.822]      // end if-block "protType == 2"
[03:01:52.822]    </control>
[03:01:52.822]  </sequence>
[03:01:52.822]  
[03:01:53.082]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:53.082]  
[03:01:53.090]  <debugvars>
[03:01:53.090]    // Pre-defined
[03:01:53.090]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:53.090]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:53.090]    __dp=0x00000000
[03:01:53.090]    __ap=0x00000000
[03:01:53.090]    __traceout=0x00000000      (Trace Disabled)
[03:01:53.090]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:53.090]    __FlashAddr=0x00000000
[03:01:53.090]    __FlashLen=0x00000000
[03:01:53.090]    __FlashArg=0x00000000
[03:01:53.090]    __FlashOp=0x00000000
[03:01:53.090]    __Result=0x00000000
[03:01:53.090]  </debugvars>
[03:01:53.090]  
[03:01:53.090]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:53.090]    <block atomic="false" info="">
[03:01:53.090]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:53.090]        // -> [isSWJ <= 0x00000001]
[03:01:53.090]      __var hasDormant = __protocol & 0x00020000;
[03:01:53.090]        // -> [hasDormant <= 0x00000000]
[03:01:53.090]      __var protType   = __protocol & 0x0000FFFF;
[03:01:53.090]        // -> [protType <= 0x00000002]
[03:01:53.090]    </block>
[03:01:53.090]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:53.090]      // if-block "protType == 1"
[03:01:53.090]        // =>  FALSE
[03:01:53.090]      // skip if-block "protType == 1"
[03:01:53.090]    </control>
[03:01:53.090]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:53.090]      // if-block "protType == 2"
[03:01:53.090]        // =>  TRUE
[03:01:53.090]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:53.090]        // if-block "isSWJ"
[03:01:53.094]          // =>  TRUE
[03:01:53.094]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:53.094]          // if-block "hasDormant"
[03:01:53.094]            // =>  FALSE
[03:01:53.094]          // skip if-block "hasDormant"
[03:01:53.094]        </control>
[03:01:53.094]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:53.094]          // if-block "!hasDormant"
[03:01:53.094]            // =>  TRUE
[03:01:53.094]          <block atomic="false" info="">
[03:01:53.094]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:54.106]  
[03:01:54.106]  !!! E320 : DAP access error
[03:01:54.106]  
[03:01:54.106]          </block>
[03:01:54.106]          // end if-block "!hasDormant"
[03:01:54.106]        </control>
[03:01:54.106]        // end if-block "isSWJ"
[03:01:54.106]      </control>
[03:01:54.106]      // end if-block "protType == 2"
[03:01:54.106]    </control>
[03:01:54.106]  </sequence>
[03:01:54.106]  
[03:01:54.360]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:54.360]  
[03:01:54.369]  <debugvars>
[03:01:54.369]    // Pre-defined
[03:01:54.369]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:54.369]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:54.369]    __dp=0x00000000
[03:01:54.369]    __ap=0x00000000
[03:01:54.369]    __traceout=0x00000000      (Trace Disabled)
[03:01:54.369]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:54.369]    __FlashAddr=0x00000000
[03:01:54.369]    __FlashLen=0x00000000
[03:01:54.369]    __FlashArg=0x00000000
[03:01:54.369]    __FlashOp=0x00000000
[03:01:54.369]    __Result=0x00000000
[03:01:54.369]  </debugvars>
[03:01:54.369]  
[03:01:54.369]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:54.369]    <block atomic="false" info="">
[03:01:54.369]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:54.369]        // -> [isSWJ <= 0x00000001]
[03:01:54.369]      __var hasDormant = __protocol & 0x00020000;
[03:01:54.369]        // -> [hasDormant <= 0x00000000]
[03:01:54.369]      __var protType   = __protocol & 0x0000FFFF;
[03:01:54.369]        // -> [protType <= 0x00000002]
[03:01:54.369]    </block>
[03:01:54.372]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:54.372]      // if-block "protType == 1"
[03:01:54.372]        // =>  FALSE
[03:01:54.372]      // skip if-block "protType == 1"
[03:01:54.372]    </control>
[03:01:54.372]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:54.372]      // if-block "protType == 2"
[03:01:54.372]        // =>  TRUE
[03:01:54.372]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:54.372]        // if-block "isSWJ"
[03:01:54.372]          // =>  TRUE
[03:01:54.372]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:54.372]          // if-block "hasDormant"
[03:01:54.372]            // =>  FALSE
[03:01:54.372]          // skip if-block "hasDormant"
[03:01:54.372]        </control>
[03:01:54.372]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:54.372]          // if-block "!hasDormant"
[03:01:54.372]            // =>  TRUE
[03:01:54.372]          <block atomic="false" info="">
[03:01:54.372]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:55.382]  
[03:01:55.382]  !!! E320 : DAP access error
[03:01:55.382]  
[03:01:55.391]          </block>
[03:01:55.391]          // end if-block "!hasDormant"
[03:01:55.391]        </control>
[03:01:55.391]        // end if-block "isSWJ"
[03:01:55.391]      </control>
[03:01:55.391]      // end if-block "protType == 2"
[03:01:55.391]    </control>
[03:01:55.391]  </sequence>
[03:01:55.391]  
[03:01:55.643]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:55.643]  
[03:01:55.643]  <debugvars>
[03:01:55.643]    // Pre-defined
[03:01:55.643]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:55.643]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:55.643]    __dp=0x00000000
[03:01:55.643]    __ap=0x00000000
[03:01:55.643]    __traceout=0x00000000      (Trace Disabled)
[03:01:55.643]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:55.646]    __FlashAddr=0x00000000
[03:01:55.646]    __FlashLen=0x00000000
[03:01:55.646]    __FlashArg=0x00000000
[03:01:55.646]    __FlashOp=0x00000000
[03:01:55.646]    __Result=0x00000000
[03:01:55.647]  </debugvars>
[03:01:55.647]  
[03:01:55.647]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:55.647]    <block atomic="false" info="">
[03:01:55.647]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:55.647]        // -> [isSWJ <= 0x00000001]
[03:01:55.647]      __var hasDormant = __protocol & 0x00020000;
[03:01:55.648]        // -> [hasDormant <= 0x00000000]
[03:01:55.648]      __var protType   = __protocol & 0x0000FFFF;
[03:01:55.648]        // -> [protType <= 0x00000002]
[03:01:55.648]    </block>
[03:01:55.648]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:55.648]      // if-block "protType == 1"
[03:01:55.648]        // =>  FALSE
[03:01:55.648]      // skip if-block "protType == 1"
[03:01:55.648]    </control>
[03:01:55.648]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:55.648]      // if-block "protType == 2"
[03:01:55.648]        // =>  TRUE
[03:01:55.648]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:55.648]        // if-block "isSWJ"
[03:01:55.648]          // =>  TRUE
[03:01:55.648]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:55.648]          // if-block "hasDormant"
[03:01:55.648]            // =>  FALSE
[03:01:55.648]          // skip if-block "hasDormant"
[03:01:55.648]        </control>
[03:01:55.648]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:55.648]          // if-block "!hasDormant"
[03:01:55.648]            // =>  TRUE
[03:01:55.648]          <block atomic="false" info="">
[03:01:55.648]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:56.659]  
[03:01:56.659]  !!! E320 : DAP access error
[03:01:56.659]  
[03:01:56.667]          </block>
[03:01:56.667]          // end if-block "!hasDormant"
[03:01:56.667]        </control>
[03:01:56.667]        // end if-block "isSWJ"
[03:01:56.667]      </control>
[03:01:56.667]      // end if-block "protType == 2"
[03:01:56.667]    </control>
[03:01:56.667]  </sequence>
[03:01:56.667]  
[03:01:56.926]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:56.926]  
[03:01:56.926]  <debugvars>
[03:01:56.926]    // Pre-defined
[03:01:56.926]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:56.926]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:56.926]    __dp=0x00000000
[03:01:56.926]    __ap=0x00000000
[03:01:56.926]    __traceout=0x00000000      (Trace Disabled)
[03:01:56.926]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:56.926]    __FlashAddr=0x00000000
[03:01:56.926]    __FlashLen=0x00000000
[03:01:56.926]    __FlashArg=0x00000000
[03:01:56.926]    __FlashOp=0x00000000
[03:01:56.926]    __Result=0x00000000
[03:01:56.926]  </debugvars>
[03:01:56.926]  
[03:01:56.926]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:56.926]    <block atomic="false" info="">
[03:01:56.926]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:56.930]        // -> [isSWJ <= 0x00000001]
[03:01:56.930]      __var hasDormant = __protocol & 0x00020000;
[03:01:56.930]        // -> [hasDormant <= 0x00000000]
[03:01:56.930]      __var protType   = __protocol & 0x0000FFFF;
[03:01:56.930]        // -> [protType <= 0x00000002]
[03:01:56.930]    </block>
[03:01:56.930]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:56.930]      // if-block "protType == 1"
[03:01:56.930]        // =>  FALSE
[03:01:56.930]      // skip if-block "protType == 1"
[03:01:56.930]    </control>
[03:01:56.930]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:56.930]      // if-block "protType == 2"
[03:01:56.930]        // =>  TRUE
[03:01:56.930]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:56.930]        // if-block "isSWJ"
[03:01:56.930]          // =>  TRUE
[03:01:56.930]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:56.930]          // if-block "hasDormant"
[03:01:56.930]            // =>  FALSE
[03:01:56.930]          // skip if-block "hasDormant"
[03:01:56.930]        </control>
[03:01:56.930]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:56.930]          // if-block "!hasDormant"
[03:01:56.930]            // =>  TRUE
[03:01:56.930]          <block atomic="false" info="">
[03:01:56.930]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:57.935]  
[03:01:57.935]  !!! E320 : DAP access error
[03:01:57.935]  
[03:01:57.943]          </block>
[03:01:57.943]          // end if-block "!hasDormant"
[03:01:57.943]        </control>
[03:01:57.943]        // end if-block "isSWJ"
[03:01:57.943]      </control>
[03:01:57.943]      // end if-block "protType == 2"
[03:01:57.943]    </control>
[03:01:57.943]  </sequence>
[03:01:57.943]  
[03:01:58.193]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:58.193]  
[03:01:58.193]  <debugvars>
[03:01:58.193]    // Pre-defined
[03:01:58.193]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:58.193]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:58.193]    __dp=0x00000000
[03:01:58.193]    __ap=0x00000000
[03:01:58.193]    __traceout=0x00000000      (Trace Disabled)
[03:01:58.193]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:58.193]    __FlashAddr=0x00000000
[03:01:58.193]    __FlashLen=0x00000000
[03:01:58.193]    __FlashArg=0x00000000
[03:01:58.193]    __FlashOp=0x00000000
[03:01:58.193]    __Result=0x00000000
[03:01:58.193]  </debugvars>
[03:01:58.193]  
[03:01:58.193]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:58.193]    <block atomic="false" info="">
[03:01:58.193]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:58.193]        // -> [isSWJ <= 0x00000001]
[03:01:58.193]      __var hasDormant = __protocol & 0x00020000;
[03:01:58.193]        // -> [hasDormant <= 0x00000000]
[03:01:58.193]      __var protType   = __protocol & 0x0000FFFF;
[03:01:58.197]        // -> [protType <= 0x00000002]
[03:01:58.197]    </block>
[03:01:58.197]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:58.197]      // if-block "protType == 1"
[03:01:58.197]        // =>  FALSE
[03:01:58.197]      // skip if-block "protType == 1"
[03:01:58.197]    </control>
[03:01:58.197]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:58.197]      // if-block "protType == 2"
[03:01:58.197]        // =>  TRUE
[03:01:58.197]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:58.197]        // if-block "isSWJ"
[03:01:58.197]          // =>  TRUE
[03:01:58.197]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:58.197]          // if-block "hasDormant"
[03:01:58.197]            // =>  FALSE
[03:01:58.197]          // skip if-block "hasDormant"
[03:01:58.197]        </control>
[03:01:58.197]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:58.197]          // if-block "!hasDormant"
[03:01:58.197]            // =>  TRUE
[03:01:58.197]          <block atomic="false" info="">
[03:01:58.197]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:01:59.207]  
[03:01:59.207]  !!! E320 : DAP access error
[03:01:59.207]  
[03:01:59.207]          </block>
[03:01:59.207]          // end if-block "!hasDormant"
[03:01:59.207]        </control>
[03:01:59.207]        // end if-block "isSWJ"
[03:01:59.207]      </control>
[03:01:59.207]      // end if-block "protType == 2"
[03:01:59.207]    </control>
[03:01:59.207]  </sequence>
[03:01:59.207]  
[03:01:59.460]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:01:59.460]  
[03:01:59.469]  <debugvars>
[03:01:59.469]    // Pre-defined
[03:01:59.469]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:01:59.469]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:01:59.469]    __dp=0x00000000
[03:01:59.469]    __ap=0x00000000
[03:01:59.469]    __traceout=0x00000000      (Trace Disabled)
[03:01:59.469]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:01:59.469]    __FlashAddr=0x00000000
[03:01:59.469]    __FlashLen=0x00000000
[03:01:59.469]    __FlashArg=0x00000000
[03:01:59.469]    __FlashOp=0x00000000
[03:01:59.469]    __Result=0x00000000
[03:01:59.469]  </debugvars>
[03:01:59.469]  
[03:01:59.469]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:01:59.469]    <block atomic="false" info="">
[03:01:59.469]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:01:59.469]        // -> [isSWJ <= 0x00000001]
[03:01:59.469]      __var hasDormant = __protocol & 0x00020000;
[03:01:59.469]        // -> [hasDormant <= 0x00000000]
[03:01:59.469]      __var protType   = __protocol & 0x0000FFFF;
[03:01:59.469]        // -> [protType <= 0x00000002]
[03:01:59.469]    </block>
[03:01:59.469]    <control if="protType == 1" while="" timeout="0" info="">
[03:01:59.469]      // if-block "protType == 1"
[03:01:59.469]        // =>  FALSE
[03:01:59.469]      // skip if-block "protType == 1"
[03:01:59.472]    </control>
[03:01:59.472]    <control if="protType == 2" while="" timeout="0" info="">
[03:01:59.472]      // if-block "protType == 2"
[03:01:59.472]        // =>  TRUE
[03:01:59.472]      <control if="isSWJ" while="" timeout="0" info="">
[03:01:59.472]        // if-block "isSWJ"
[03:01:59.472]          // =>  TRUE
[03:01:59.472]        <control if="hasDormant" while="" timeout="0" info="">
[03:01:59.472]          // if-block "hasDormant"
[03:01:59.472]            // =>  FALSE
[03:01:59.472]          // skip if-block "hasDormant"
[03:01:59.472]        </control>
[03:01:59.472]        <control if="!hasDormant" while="" timeout="0" info="">
[03:01:59.472]          // if-block "!hasDormant"
[03:01:59.472]            // =>  TRUE
[03:01:59.472]          <block atomic="false" info="">
[03:01:59.472]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:00.477]  
[03:02:00.477]  !!! E320 : DAP access error
[03:02:00.477]  
[03:02:00.487]          </block>
[03:02:00.487]          // end if-block "!hasDormant"
[03:02:00.487]        </control>
[03:02:00.487]        // end if-block "isSWJ"
[03:02:00.487]      </control>
[03:02:00.487]      // end if-block "protType == 2"
[03:02:00.487]    </control>
[03:02:00.487]  </sequence>
[03:02:00.487]  
[03:02:00.738]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:00.738]  
[03:02:00.746]  <debugvars>
[03:02:00.746]    // Pre-defined
[03:02:00.746]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:00.746]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:00.746]    __dp=0x00000000
[03:02:00.746]    __ap=0x00000000
[03:02:00.746]    __traceout=0x00000000      (Trace Disabled)
[03:02:00.747]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:00.747]    __FlashAddr=0x00000000
[03:02:00.747]    __FlashLen=0x00000000
[03:02:00.747]    __FlashArg=0x00000000
[03:02:00.747]    __FlashOp=0x00000000
[03:02:00.747]    __Result=0x00000000
[03:02:00.747]  </debugvars>
[03:02:00.747]  
[03:02:00.747]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:00.747]    <block atomic="false" info="">
[03:02:00.747]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:00.747]        // -> [isSWJ <= 0x00000001]
[03:02:00.747]      __var hasDormant = __protocol & 0x00020000;
[03:02:00.747]        // -> [hasDormant <= 0x00000000]
[03:02:00.747]      __var protType   = __protocol & 0x0000FFFF;
[03:02:00.747]        // -> [protType <= 0x00000002]
[03:02:00.750]    </block>
[03:02:00.750]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:00.750]      // if-block "protType == 1"
[03:02:00.750]        // =>  FALSE
[03:02:00.750]      // skip if-block "protType == 1"
[03:02:00.750]    </control>
[03:02:00.750]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:00.750]      // if-block "protType == 2"
[03:02:00.750]        // =>  TRUE
[03:02:00.750]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:00.751]        // if-block "isSWJ"
[03:02:00.751]          // =>  TRUE
[03:02:00.751]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:00.751]          // if-block "hasDormant"
[03:02:00.751]            // =>  FALSE
[03:02:00.751]          // skip if-block "hasDormant"
[03:02:00.751]        </control>
[03:02:00.751]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:00.751]          // if-block "!hasDormant"
[03:02:00.751]            // =>  TRUE
[03:02:00.751]          <block atomic="false" info="">
[03:02:00.751]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:01.760]  
[03:02:01.760]  !!! E320 : DAP access error
[03:02:01.760]  
[03:02:01.768]          </block>
[03:02:01.768]          // end if-block "!hasDormant"
[03:02:01.768]        </control>
[03:02:01.768]        // end if-block "isSWJ"
[03:02:01.768]      </control>
[03:02:01.768]      // end if-block "protType == 2"
[03:02:01.768]    </control>
[03:02:01.768]  </sequence>
[03:02:01.768]  
[03:02:02.025]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:02.025]  
[03:02:02.033]  <debugvars>
[03:02:02.033]    // Pre-defined
[03:02:02.033]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:02.033]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:02.033]    __dp=0x00000000
[03:02:02.033]    __ap=0x00000000
[03:02:02.033]    __traceout=0x00000000      (Trace Disabled)
[03:02:02.033]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:02.033]    __FlashAddr=0x00000000
[03:02:02.033]    __FlashLen=0x00000000
[03:02:02.033]    __FlashArg=0x00000000
[03:02:02.033]    __FlashOp=0x00000000
[03:02:02.033]    __Result=0x00000000
[03:02:02.033]  </debugvars>
[03:02:02.033]  
[03:02:02.033]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:02.033]    <block atomic="false" info="">
[03:02:02.033]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:02.033]        // -> [isSWJ <= 0x00000001]
[03:02:02.033]      __var hasDormant = __protocol & 0x00020000;
[03:02:02.033]        // -> [hasDormant <= 0x00000000]
[03:02:02.033]      __var protType   = __protocol & 0x0000FFFF;
[03:02:02.033]        // -> [protType <= 0x00000002]
[03:02:02.033]    </block>
[03:02:02.033]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:02.033]      // if-block "protType == 1"
[03:02:02.033]        // =>  FALSE
[03:02:02.033]      // skip if-block "protType == 1"
[03:02:02.033]    </control>
[03:02:02.033]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:02.033]      // if-block "protType == 2"
[03:02:02.033]        // =>  TRUE
[03:02:02.033]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:02.033]        // if-block "isSWJ"
[03:02:02.033]          // =>  TRUE
[03:02:02.033]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:02.037]          // if-block "hasDormant"
[03:02:02.037]            // =>  FALSE
[03:02:02.037]          // skip if-block "hasDormant"
[03:02:02.037]        </control>
[03:02:02.037]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:02.037]          // if-block "!hasDormant"
[03:02:02.037]            // =>  TRUE
[03:02:02.037]          <block atomic="false" info="">
[03:02:02.037]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:03.046]  
[03:02:03.046]  !!! E320 : DAP access error
[03:02:03.046]  
[03:02:03.056]          </block>
[03:02:03.056]          // end if-block "!hasDormant"
[03:02:03.056]        </control>
[03:02:03.056]        // end if-block "isSWJ"
[03:02:03.056]      </control>
[03:02:03.056]      // end if-block "protType == 2"
[03:02:03.056]    </control>
[03:02:03.056]  </sequence>
[03:02:03.056]  
[03:02:03.308]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:03.308]  
[03:02:03.317]  <debugvars>
[03:02:03.317]    // Pre-defined
[03:02:03.318]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:03.318]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:03.318]    __dp=0x00000000
[03:02:03.318]    __ap=0x00000000
[03:02:03.318]    __traceout=0x00000000      (Trace Disabled)
[03:02:03.318]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:03.318]    __FlashAddr=0x00000000
[03:02:03.318]    __FlashLen=0x00000000
[03:02:03.318]    __FlashArg=0x00000000
[03:02:03.318]    __FlashOp=0x00000000
[03:02:03.318]    __Result=0x00000000
[03:02:03.318]  </debugvars>
[03:02:03.318]  
[03:02:03.318]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:03.318]    <block atomic="false" info="">
[03:02:03.318]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:03.318]        // -> [isSWJ <= 0x00000001]
[03:02:03.318]      __var hasDormant = __protocol & 0x00020000;
[03:02:03.318]        // -> [hasDormant <= 0x00000000]
[03:02:03.319]      __var protType   = __protocol & 0x0000FFFF;
[03:02:03.319]        // -> [protType <= 0x00000002]
[03:02:03.319]    </block>
[03:02:03.319]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:03.319]      // if-block "protType == 1"
[03:02:03.319]        // =>  FALSE
[03:02:03.319]      // skip if-block "protType == 1"
[03:02:03.319]    </control>
[03:02:03.319]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:03.319]      // if-block "protType == 2"
[03:02:03.319]        // =>  TRUE
[03:02:03.319]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:03.321]        // if-block "isSWJ"
[03:02:03.321]          // =>  TRUE
[03:02:03.321]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:03.321]          // if-block "hasDormant"
[03:02:03.321]            // =>  FALSE
[03:02:03.321]          // skip if-block "hasDormant"
[03:02:03.321]        </control>
[03:02:03.321]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:03.321]          // if-block "!hasDormant"
[03:02:03.322]            // =>  TRUE
[03:02:03.322]          <block atomic="false" info="">
[03:02:03.322]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:04.323]  
[03:02:04.323]  !!! E320 : DAP access error
[03:02:04.323]  
[03:02:04.332]          </block>
[03:02:04.332]          // end if-block "!hasDormant"
[03:02:04.332]        </control>
[03:02:04.332]        // end if-block "isSWJ"
[03:02:04.332]      </control>
[03:02:04.332]      // end if-block "protType == 2"
[03:02:04.332]    </control>
[03:02:04.332]  </sequence>
[03:02:04.332]  
[03:02:04.590]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:04.590]  
[03:02:04.598]  <debugvars>
[03:02:04.598]    // Pre-defined
[03:02:04.598]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:04.598]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:04.598]    __dp=0x00000000
[03:02:04.598]    __ap=0x00000000
[03:02:04.598]    __traceout=0x00000000      (Trace Disabled)
[03:02:04.598]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:04.598]    __FlashAddr=0x00000000
[03:02:04.598]    __FlashLen=0x00000000
[03:02:04.598]    __FlashArg=0x00000000
[03:02:04.598]    __FlashOp=0x00000000
[03:02:04.598]    __Result=0x00000000
[03:02:04.598]  </debugvars>
[03:02:04.598]  
[03:02:04.598]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:04.598]    <block atomic="false" info="">
[03:02:04.598]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:04.598]        // -> [isSWJ <= 0x00000001]
[03:02:04.598]      __var hasDormant = __protocol & 0x00020000;
[03:02:04.598]        // -> [hasDormant <= 0x00000000]
[03:02:04.598]      __var protType   = __protocol & 0x0000FFFF;
[03:02:04.598]        // -> [protType <= 0x00000002]
[03:02:04.598]    </block>
[03:02:04.598]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:04.598]      // if-block "protType == 1"
[03:02:04.598]        // =>  FALSE
[03:02:04.598]      // skip if-block "protType == 1"
[03:02:04.598]    </control>
[03:02:04.598]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:04.598]      // if-block "protType == 2"
[03:02:04.602]        // =>  TRUE
[03:02:04.602]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:04.602]        // if-block "isSWJ"
[03:02:04.602]          // =>  TRUE
[03:02:04.602]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:04.602]          // if-block "hasDormant"
[03:02:04.602]            // =>  FALSE
[03:02:04.602]          // skip if-block "hasDormant"
[03:02:04.602]        </control>
[03:02:04.602]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:04.604]          // if-block "!hasDormant"
[03:02:04.604]            // =>  TRUE
[03:02:04.604]          <block atomic="false" info="">
[03:02:04.604]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:05.610]  
[03:02:05.610]  !!! E320 : DAP access error
[03:02:05.610]  
[03:02:05.618]          </block>
[03:02:05.618]          // end if-block "!hasDormant"
[03:02:05.618]        </control>
[03:02:05.618]        // end if-block "isSWJ"
[03:02:05.618]      </control>
[03:02:05.618]      // end if-block "protType == 2"
[03:02:05.618]    </control>
[03:02:05.618]  </sequence>
[03:02:05.618]  
[03:02:05.869]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:05.869]  
[03:02:05.878]  <debugvars>
[03:02:05.878]    // Pre-defined
[03:02:05.878]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:05.878]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:05.878]    __dp=0x00000000
[03:02:05.878]    __ap=0x00000000
[03:02:05.878]    __traceout=0x00000000      (Trace Disabled)
[03:02:05.878]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:05.878]    __FlashAddr=0x00000000
[03:02:05.878]    __FlashLen=0x00000000
[03:02:05.878]    __FlashArg=0x00000000
[03:02:05.878]    __FlashOp=0x00000000
[03:02:05.878]    __Result=0x00000000
[03:02:05.878]  </debugvars>
[03:02:05.878]  
[03:02:05.878]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:05.878]    <block atomic="false" info="">
[03:02:05.879]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:05.879]        // -> [isSWJ <= 0x00000001]
[03:02:05.879]      __var hasDormant = __protocol & 0x00020000;
[03:02:05.879]        // -> [hasDormant <= 0x00000000]
[03:02:05.879]      __var protType   = __protocol & 0x0000FFFF;
[03:02:05.879]        // -> [protType <= 0x00000002]
[03:02:05.879]    </block>
[03:02:05.879]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:05.879]      // if-block "protType == 1"
[03:02:05.879]        // =>  FALSE
[03:02:05.879]      // skip if-block "protType == 1"
[03:02:05.879]    </control>
[03:02:05.879]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:05.879]      // if-block "protType == 2"
[03:02:05.881]        // =>  TRUE
[03:02:05.881]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:05.881]        // if-block "isSWJ"
[03:02:05.881]          // =>  TRUE
[03:02:05.881]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:05.881]          // if-block "hasDormant"
[03:02:05.881]            // =>  FALSE
[03:02:05.881]          // skip if-block "hasDormant"
[03:02:05.881]        </control>
[03:02:05.881]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:05.881]          // if-block "!hasDormant"
[03:02:05.882]            // =>  TRUE
[03:02:05.882]          <block atomic="false" info="">
[03:02:05.882]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:06.893]  
[03:02:06.893]  !!! E320 : DAP access error
[03:02:06.893]  
[03:02:06.901]          </block>
[03:02:06.901]          // end if-block "!hasDormant"
[03:02:06.901]        </control>
[03:02:06.901]        // end if-block "isSWJ"
[03:02:06.901]      </control>
[03:02:06.901]      // end if-block "protType == 2"
[03:02:06.901]    </control>
[03:02:06.901]  </sequence>
[03:02:06.901]  
[03:02:07.163]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:07.163]  
[03:02:07.172]  <debugvars>
[03:02:07.172]    // Pre-defined
[03:02:07.172]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:07.172]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:07.172]    __dp=0x00000000
[03:02:07.172]    __ap=0x00000000
[03:02:07.172]    __traceout=0x00000000      (Trace Disabled)
[03:02:07.172]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:07.172]    __FlashAddr=0x00000000
[03:02:07.172]    __FlashLen=0x00000000
[03:02:07.172]    __FlashArg=0x00000000
[03:02:07.172]    __FlashOp=0x00000000
[03:02:07.172]    __Result=0x00000000
[03:02:07.172]  </debugvars>
[03:02:07.172]  
[03:02:07.172]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:07.172]    <block atomic="false" info="">
[03:02:07.172]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:07.172]        // -> [isSWJ <= 0x00000001]
[03:02:07.172]      __var hasDormant = __protocol & 0x00020000;
[03:02:07.172]        // -> [hasDormant <= 0x00000000]
[03:02:07.172]      __var protType   = __protocol & 0x0000FFFF;
[03:02:07.175]        // -> [protType <= 0x00000002]
[03:02:07.175]    </block>
[03:02:07.175]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:07.175]      // if-block "protType == 1"
[03:02:07.175]        // =>  FALSE
[03:02:07.175]      // skip if-block "protType == 1"
[03:02:07.175]    </control>
[03:02:07.175]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:07.175]      // if-block "protType == 2"
[03:02:07.175]        // =>  TRUE
[03:02:07.175]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:07.175]        // if-block "isSWJ"
[03:02:07.175]          // =>  TRUE
[03:02:07.175]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:07.175]          // if-block "hasDormant"
[03:02:07.175]            // =>  FALSE
[03:02:07.175]          // skip if-block "hasDormant"
[03:02:07.175]        </control>
[03:02:07.175]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:07.175]          // if-block "!hasDormant"
[03:02:07.175]            // =>  TRUE
[03:02:07.175]          <block atomic="false" info="">
[03:02:07.175]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:08.186]  
[03:02:08.186]  !!! E320 : DAP access error
[03:02:08.186]  
[03:02:08.195]          </block>
[03:02:08.195]          // end if-block "!hasDormant"
[03:02:08.195]        </control>
[03:02:08.195]        // end if-block "isSWJ"
[03:02:08.195]      </control>
[03:02:08.195]      // end if-block "protType == 2"
[03:02:08.195]    </control>
[03:02:08.195]  </sequence>
[03:02:08.195]  
[03:02:08.453]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:08.453]  
[03:02:08.461]  <debugvars>
[03:02:08.461]    // Pre-defined
[03:02:08.461]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:08.461]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:08.461]    __dp=0x00000000
[03:02:08.461]    __ap=0x00000000
[03:02:08.461]    __traceout=0x00000000      (Trace Disabled)
[03:02:08.461]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:08.461]    __FlashAddr=0x00000000
[03:02:08.461]    __FlashLen=0x00000000
[03:02:08.461]    __FlashArg=0x00000000
[03:02:08.461]    __FlashOp=0x00000000
[03:02:08.461]    __Result=0x00000000
[03:02:08.463]  </debugvars>
[03:02:08.463]  
[03:02:08.463]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:08.463]    <block atomic="false" info="">
[03:02:08.463]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:08.463]        // -> [isSWJ <= 0x00000001]
[03:02:08.463]      __var hasDormant = __protocol & 0x00020000;
[03:02:08.463]        // -> [hasDormant <= 0x00000000]
[03:02:08.463]      __var protType   = __protocol & 0x0000FFFF;
[03:02:08.463]        // -> [protType <= 0x00000002]
[03:02:08.463]    </block>
[03:02:08.463]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:08.463]      // if-block "protType == 1"
[03:02:08.463]        // =>  FALSE
[03:02:08.463]      // skip if-block "protType == 1"
[03:02:08.463]    </control>
[03:02:08.463]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:08.463]      // if-block "protType == 2"
[03:02:08.463]        // =>  TRUE
[03:02:08.463]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:08.463]        // if-block "isSWJ"
[03:02:08.463]          // =>  TRUE
[03:02:08.463]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:08.463]          // if-block "hasDormant"
[03:02:08.463]            // =>  FALSE
[03:02:08.465]          // skip if-block "hasDormant"
[03:02:08.465]        </control>
[03:02:08.465]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:08.465]          // if-block "!hasDormant"
[03:02:08.465]            // =>  TRUE
[03:02:08.465]          <block atomic="false" info="">
[03:02:08.465]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:09.477]  
[03:02:09.477]  !!! E320 : DAP access error
[03:02:09.477]  
[03:02:09.485]          </block>
[03:02:09.485]          // end if-block "!hasDormant"
[03:02:09.485]        </control>
[03:02:09.485]        // end if-block "isSWJ"
[03:02:09.485]      </control>
[03:02:09.485]      // end if-block "protType == 2"
[03:02:09.485]    </control>
[03:02:09.485]  </sequence>
[03:02:09.485]  
[03:02:09.742]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:09.742]  
[03:02:09.750]  <debugvars>
[03:02:09.750]    // Pre-defined
[03:02:09.750]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:09.750]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:09.750]    __dp=0x00000000
[03:02:09.750]    __ap=0x00000000
[03:02:09.750]    __traceout=0x00000000      (Trace Disabled)
[03:02:09.750]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:09.750]    __FlashAddr=0x00000000
[03:02:09.750]    __FlashLen=0x00000000
[03:02:09.750]    __FlashArg=0x00000000
[03:02:09.750]    __FlashOp=0x00000000
[03:02:09.750]    __Result=0x00000000
[03:02:09.750]  </debugvars>
[03:02:09.750]  
[03:02:09.750]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:09.750]    <block atomic="false" info="">
[03:02:09.750]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:09.750]        // -> [isSWJ <= 0x00000001]
[03:02:09.750]      __var hasDormant = __protocol & 0x00020000;
[03:02:09.750]        // -> [hasDormant <= 0x00000000]
[03:02:09.750]      __var protType   = __protocol & 0x0000FFFF;
[03:02:09.750]        // -> [protType <= 0x00000002]
[03:02:09.750]    </block>
[03:02:09.750]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:09.750]      // if-block "protType == 1"
[03:02:09.750]        // =>  FALSE
[03:02:09.750]      // skip if-block "protType == 1"
[03:02:09.750]    </control>
[03:02:09.750]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:09.750]      // if-block "protType == 2"
[03:02:09.750]        // =>  TRUE
[03:02:09.750]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:09.750]        // if-block "isSWJ"
[03:02:09.750]          // =>  TRUE
[03:02:09.750]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:09.754]          // if-block "hasDormant"
[03:02:09.754]            // =>  FALSE
[03:02:09.754]          // skip if-block "hasDormant"
[03:02:09.754]        </control>
[03:02:09.754]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:09.754]          // if-block "!hasDormant"
[03:02:09.754]            // =>  TRUE
[03:02:09.754]          <block atomic="false" info="">
[03:02:09.754]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:10.762]  
[03:02:10.762]  !!! E320 : DAP access error
[03:02:10.762]  
[03:02:10.770]          </block>
[03:02:10.770]          // end if-block "!hasDormant"
[03:02:10.770]        </control>
[03:02:10.770]        // end if-block "isSWJ"
[03:02:10.770]      </control>
[03:02:10.770]      // end if-block "protType == 2"
[03:02:10.770]    </control>
[03:02:10.770]  </sequence>
[03:02:10.770]  
[03:02:11.030]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:11.030]  
[03:02:11.039]  <debugvars>
[03:02:11.039]    // Pre-defined
[03:02:11.039]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:11.039]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:11.039]    __dp=0x00000000
[03:02:11.040]    __ap=0x00000000
[03:02:11.040]    __traceout=0x00000000      (Trace Disabled)
[03:02:11.040]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:11.040]    __FlashAddr=0x00000000
[03:02:11.040]    __FlashLen=0x00000000
[03:02:11.040]    __FlashArg=0x00000000
[03:02:11.040]    __FlashOp=0x00000000
[03:02:11.040]    __Result=0x00000000
[03:02:11.041]  </debugvars>
[03:02:11.041]  
[03:02:11.041]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:11.041]    <block atomic="false" info="">
[03:02:11.041]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:11.041]        // -> [isSWJ <= 0x00000001]
[03:02:11.041]      __var hasDormant = __protocol & 0x00020000;
[03:02:11.041]        // -> [hasDormant <= 0x00000000]
[03:02:11.041]      __var protType   = __protocol & 0x0000FFFF;
[03:02:11.041]        // -> [protType <= 0x00000002]
[03:02:11.042]    </block>
[03:02:11.042]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:11.042]      // if-block "protType == 1"
[03:02:11.042]        // =>  FALSE
[03:02:11.042]      // skip if-block "protType == 1"
[03:02:11.042]    </control>
[03:02:11.042]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:11.042]      // if-block "protType == 2"
[03:02:11.042]        // =>  TRUE
[03:02:11.042]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:11.043]        // if-block "isSWJ"
[03:02:11.043]          // =>  TRUE
[03:02:11.043]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:11.044]          // if-block "hasDormant"
[03:02:11.044]            // =>  FALSE
[03:02:11.044]          // skip if-block "hasDormant"
[03:02:11.044]        </control>
[03:02:11.044]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:11.044]          // if-block "!hasDormant"
[03:02:11.044]            // =>  TRUE
[03:02:11.044]          <block atomic="false" info="">
[03:02:11.044]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:12.050]  
[03:02:12.050]  !!! E320 : DAP access error
[03:02:12.050]  
[03:02:12.058]          </block>
[03:02:12.058]          // end if-block "!hasDormant"
[03:02:12.058]        </control>
[03:02:12.058]        // end if-block "isSWJ"
[03:02:12.058]      </control>
[03:02:12.058]      // end if-block "protType == 2"
[03:02:12.058]    </control>
[03:02:12.058]  </sequence>
[03:02:12.058]  
[03:02:12.319]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:12.319]  
[03:02:12.319]  <debugvars>
[03:02:12.319]    // Pre-defined
[03:02:12.319]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:12.319]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:12.319]    __dp=0x00000000
[03:02:12.319]    __ap=0x00000000
[03:02:12.319]    __traceout=0x00000000      (Trace Disabled)
[03:02:12.319]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:12.319]    __FlashAddr=0x00000000
[03:02:12.319]    __FlashLen=0x00000000
[03:02:12.319]    __FlashArg=0x00000000
[03:02:12.319]    __FlashOp=0x00000000
[03:02:12.319]    __Result=0x00000000
[03:02:12.319]  </debugvars>
[03:02:12.319]  
[03:02:12.319]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:12.319]    <block atomic="false" info="">
[03:02:12.319]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:12.319]        // -> [isSWJ <= 0x00000001]
[03:02:12.319]      __var hasDormant = __protocol & 0x00020000;
[03:02:12.319]        // -> [hasDormant <= 0x00000000]
[03:02:12.319]      __var protType   = __protocol & 0x0000FFFF;
[03:02:12.319]        // -> [protType <= 0x00000002]
[03:02:12.319]    </block>
[03:02:12.323]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:12.323]      // if-block "protType == 1"
[03:02:12.323]        // =>  FALSE
[03:02:12.323]      // skip if-block "protType == 1"
[03:02:12.323]    </control>
[03:02:12.323]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:12.323]      // if-block "protType == 2"
[03:02:12.323]        // =>  TRUE
[03:02:12.323]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:12.323]        // if-block "isSWJ"
[03:02:12.323]          // =>  TRUE
[03:02:12.323]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:12.323]          // if-block "hasDormant"
[03:02:12.323]            // =>  FALSE
[03:02:12.323]          // skip if-block "hasDormant"
[03:02:12.323]        </control>
[03:02:12.323]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:12.323]          // if-block "!hasDormant"
[03:02:12.323]            // =>  TRUE
[03:02:12.323]          <block atomic="false" info="">
[03:02:12.323]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:13.331]  
[03:02:13.331]  !!! E320 : DAP access error
[03:02:13.331]  
[03:02:13.331]          </block>
[03:02:13.331]          // end if-block "!hasDormant"
[03:02:13.331]        </control>
[03:02:13.331]        // end if-block "isSWJ"
[03:02:13.331]      </control>
[03:02:13.331]      // end if-block "protType == 2"
[03:02:13.331]    </control>
[03:02:13.331]  </sequence>
[03:02:13.331]  
[03:02:13.585]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:13.585]  
[03:02:13.593]  <debugvars>
[03:02:13.593]    // Pre-defined
[03:02:13.593]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:13.593]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:13.593]    __dp=0x00000000
[03:02:13.593]    __ap=0x00000000
[03:02:13.593]    __traceout=0x00000000      (Trace Disabled)
[03:02:13.593]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:13.593]    __FlashAddr=0x00000000
[03:02:13.593]    __FlashLen=0x00000000
[03:02:13.593]    __FlashArg=0x00000000
[03:02:13.593]    __FlashOp=0x00000000
[03:02:13.593]    __Result=0x00000000
[03:02:13.593]  </debugvars>
[03:02:13.593]  
[03:02:13.593]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:13.593]    <block atomic="false" info="">
[03:02:13.593]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:13.593]        // -> [isSWJ <= 0x00000001]
[03:02:13.593]      __var hasDormant = __protocol & 0x00020000;
[03:02:13.593]        // -> [hasDormant <= 0x00000000]
[03:02:13.593]      __var protType   = __protocol & 0x0000FFFF;
[03:02:13.593]        // -> [protType <= 0x00000002]
[03:02:13.593]    </block>
[03:02:13.593]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:13.593]      // if-block "protType == 1"
[03:02:13.593]        // =>  FALSE
[03:02:13.593]      // skip if-block "protType == 1"
[03:02:13.593]    </control>
[03:02:13.597]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:13.597]      // if-block "protType == 2"
[03:02:13.597]        // =>  TRUE
[03:02:13.597]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:13.597]        // if-block "isSWJ"
[03:02:13.597]          // =>  TRUE
[03:02:13.597]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:13.597]          // if-block "hasDormant"
[03:02:13.597]            // =>  FALSE
[03:02:13.597]          // skip if-block "hasDormant"
[03:02:13.597]        </control>
[03:02:13.597]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:13.597]          // if-block "!hasDormant"
[03:02:13.597]            // =>  TRUE
[03:02:13.597]          <block atomic="false" info="">
[03:02:13.597]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:14.606]  
[03:02:14.606]  !!! E320 : DAP access error
[03:02:14.606]  
[03:02:14.606]          </block>
[03:02:14.606]          // end if-block "!hasDormant"
[03:02:14.606]        </control>
[03:02:14.606]        // end if-block "isSWJ"
[03:02:14.606]      </control>
[03:02:14.606]      // end if-block "protType == 2"
[03:02:14.606]    </control>
[03:02:14.606]  </sequence>
[03:02:14.606]  
[03:02:14.866]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:14.866]  
[03:02:14.874]  <debugvars>
[03:02:14.874]    // Pre-defined
[03:02:14.874]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:14.874]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:14.874]    __dp=0x00000000
[03:02:14.874]    __ap=0x00000000
[03:02:14.874]    __traceout=0x00000000      (Trace Disabled)
[03:02:14.874]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:14.874]    __FlashAddr=0x00000000
[03:02:14.874]    __FlashLen=0x00000000
[03:02:14.874]    __FlashArg=0x00000000
[03:02:14.874]    __FlashOp=0x00000000
[03:02:14.874]    __Result=0x00000000
[03:02:14.874]  </debugvars>
[03:02:14.874]  
[03:02:14.874]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:14.874]    <block atomic="false" info="">
[03:02:14.874]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:14.874]        // -> [isSWJ <= 0x00000001]
[03:02:14.874]      __var hasDormant = __protocol & 0x00020000;
[03:02:14.874]        // -> [hasDormant <= 0x00000000]
[03:02:14.874]      __var protType   = __protocol & 0x0000FFFF;
[03:02:14.874]        // -> [protType <= 0x00000002]
[03:02:14.874]    </block>
[03:02:14.874]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:14.874]      // if-block "protType == 1"
[03:02:14.874]        // =>  FALSE
[03:02:14.874]      // skip if-block "protType == 1"
[03:02:14.874]    </control>
[03:02:14.874]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:14.878]      // if-block "protType == 2"
[03:02:14.878]        // =>  TRUE
[03:02:14.879]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:14.879]        // if-block "isSWJ"
[03:02:14.879]          // =>  TRUE
[03:02:14.879]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:14.879]          // if-block "hasDormant"
[03:02:14.879]            // =>  FALSE
[03:02:14.879]          // skip if-block "hasDormant"
[03:02:14.879]        </control>
[03:02:14.879]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:14.880]          // if-block "!hasDormant"
[03:02:14.880]            // =>  TRUE
[03:02:14.880]          <block atomic="false" info="">
[03:02:14.880]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:15.886]  
[03:02:15.886]  !!! E320 : DAP access error
[03:02:15.886]  
[03:02:15.894]          </block>
[03:02:15.894]          // end if-block "!hasDormant"
[03:02:15.894]        </control>
[03:02:15.894]        // end if-block "isSWJ"
[03:02:15.894]      </control>
[03:02:15.894]      // end if-block "protType == 2"
[03:02:15.894]    </control>
[03:02:15.894]  </sequence>
[03:02:15.894]  
[03:02:16.152]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:16.152]  
[03:02:16.161]  <debugvars>
[03:02:16.161]    // Pre-defined
[03:02:16.161]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:16.161]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:16.161]    __dp=0x00000000
[03:02:16.161]    __ap=0x00000000
[03:02:16.161]    __traceout=0x00000000      (Trace Disabled)
[03:02:16.161]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:16.161]    __FlashAddr=0x00000000
[03:02:16.161]    __FlashLen=0x00000000
[03:02:16.161]    __FlashArg=0x00000000
[03:02:16.161]    __FlashOp=0x00000000
[03:02:16.161]    __Result=0x00000000
[03:02:16.161]  </debugvars>
[03:02:16.161]  
[03:02:16.161]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:16.161]    <block atomic="false" info="">
[03:02:16.161]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:16.161]        // -> [isSWJ <= 0x00000001]
[03:02:16.161]      __var hasDormant = __protocol & 0x00020000;
[03:02:16.161]        // -> [hasDormant <= 0x00000000]
[03:02:16.161]      __var protType   = __protocol & 0x0000FFFF;
[03:02:16.161]        // -> [protType <= 0x00000002]
[03:02:16.161]    </block>
[03:02:16.161]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:16.161]      // if-block "protType == 1"
[03:02:16.161]        // =>  FALSE
[03:02:16.164]      // skip if-block "protType == 1"
[03:02:16.164]    </control>
[03:02:16.164]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:16.164]      // if-block "protType == 2"
[03:02:16.164]        // =>  TRUE
[03:02:16.164]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:16.164]        // if-block "isSWJ"
[03:02:16.164]          // =>  TRUE
[03:02:16.164]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:16.164]          // if-block "hasDormant"
[03:02:16.164]            // =>  FALSE
[03:02:16.164]          // skip if-block "hasDormant"
[03:02:16.164]        </control>
[03:02:16.164]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:16.164]          // if-block "!hasDormant"
[03:02:16.164]            // =>  TRUE
[03:02:16.164]          <block atomic="false" info="">
[03:02:16.164]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:17.171]  
[03:02:17.171]  !!! E320 : DAP access error
[03:02:17.171]  
[03:02:17.180]          </block>
[03:02:17.181]          // end if-block "!hasDormant"
[03:02:17.181]        </control>
[03:02:17.181]        // end if-block "isSWJ"
[03:02:17.181]      </control>
[03:02:17.181]      // end if-block "protType == 2"
[03:02:17.181]    </control>
[03:02:17.181]  </sequence>
[03:02:17.181]  
[03:02:17.433]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:17.433]  
[03:02:17.433]  <debugvars>
[03:02:17.433]    // Pre-defined
[03:02:17.433]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:17.433]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:17.433]    __dp=0x00000000
[03:02:17.433]    __ap=0x00000000
[03:02:17.433]    __traceout=0x00000000      (Trace Disabled)
[03:02:17.433]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:17.433]    __FlashAddr=0x00000000
[03:02:17.433]    __FlashLen=0x00000000
[03:02:17.433]    __FlashArg=0x00000000
[03:02:17.433]    __FlashOp=0x00000000
[03:02:17.433]    __Result=0x00000000
[03:02:17.433]  </debugvars>
[03:02:17.433]  
[03:02:17.433]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:17.433]    <block atomic="false" info="">
[03:02:17.433]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:17.433]        // -> [isSWJ <= 0x00000001]
[03:02:17.433]      __var hasDormant = __protocol & 0x00020000;
[03:02:17.433]        // -> [hasDormant <= 0x00000000]
[03:02:17.433]      __var protType   = __protocol & 0x0000FFFF;
[03:02:17.433]        // -> [protType <= 0x00000002]
[03:02:17.433]    </block>
[03:02:17.437]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:17.437]      // if-block "protType == 1"
[03:02:17.437]        // =>  FALSE
[03:02:17.437]      // skip if-block "protType == 1"
[03:02:17.437]    </control>
[03:02:17.437]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:17.437]      // if-block "protType == 2"
[03:02:17.437]        // =>  TRUE
[03:02:17.437]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:17.437]        // if-block "isSWJ"
[03:02:17.437]          // =>  TRUE
[03:02:17.437]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:17.437]          // if-block "hasDormant"
[03:02:17.437]            // =>  FALSE
[03:02:17.437]          // skip if-block "hasDormant"
[03:02:17.437]        </control>
[03:02:17.437]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:17.437]          // if-block "!hasDormant"
[03:02:17.437]            // =>  TRUE
[03:02:17.437]          <block atomic="false" info="">
[03:02:17.437]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:18.447]  
[03:02:18.447]  !!! E320 : DAP access error
[03:02:18.447]  
[03:02:18.456]          </block>
[03:02:18.456]          // end if-block "!hasDormant"
[03:02:18.456]        </control>
[03:02:18.456]        // end if-block "isSWJ"
[03:02:18.456]      </control>
[03:02:18.456]      // end if-block "protType == 2"
[03:02:18.456]    </control>
[03:02:18.456]  </sequence>
[03:02:18.456]  
[03:02:18.715]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:18.715]  
[03:02:18.715]  <debugvars>
[03:02:18.715]    // Pre-defined
[03:02:18.715]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:18.715]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:18.715]    __dp=0x00000000
[03:02:18.715]    __ap=0x00000000
[03:02:18.715]    __traceout=0x00000000      (Trace Disabled)
[03:02:18.715]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:18.715]    __FlashAddr=0x00000000
[03:02:18.715]    __FlashLen=0x00000000
[03:02:18.715]    __FlashArg=0x00000000
[03:02:18.715]    __FlashOp=0x00000000
[03:02:18.715]    __Result=0x00000000
[03:02:18.715]  </debugvars>
[03:02:18.715]  
[03:02:18.715]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:18.715]    <block atomic="false" info="">
[03:02:18.715]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:18.715]        // -> [isSWJ <= 0x00000001]
[03:02:18.715]      __var hasDormant = __protocol & 0x00020000;
[03:02:18.719]        // -> [hasDormant <= 0x00000000]
[03:02:18.719]      __var protType   = __protocol & 0x0000FFFF;
[03:02:18.719]        // -> [protType <= 0x00000002]
[03:02:18.719]    </block>
[03:02:18.719]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:18.719]      // if-block "protType == 1"
[03:02:18.719]        // =>  FALSE
[03:02:18.719]      // skip if-block "protType == 1"
[03:02:18.719]    </control>
[03:02:18.719]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:18.719]      // if-block "protType == 2"
[03:02:18.719]        // =>  TRUE
[03:02:18.719]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:18.719]        // if-block "isSWJ"
[03:02:18.719]          // =>  TRUE
[03:02:18.719]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:18.719]          // if-block "hasDormant"
[03:02:18.719]            // =>  FALSE
[03:02:18.719]          // skip if-block "hasDormant"
[03:02:18.719]        </control>
[03:02:18.719]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:18.719]          // if-block "!hasDormant"
[03:02:18.719]            // =>  TRUE
[03:02:18.719]          <block atomic="false" info="">
[03:02:18.719]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:19.728]  
[03:02:19.728]  !!! E320 : DAP access error
[03:02:19.728]  
[03:02:19.737]          </block>
[03:02:19.737]          // end if-block "!hasDormant"
[03:02:19.737]        </control>
[03:02:19.737]        // end if-block "isSWJ"
[03:02:19.737]      </control>
[03:02:19.737]      // end if-block "protType == 2"
[03:02:19.737]    </control>
[03:02:19.737]  </sequence>
[03:02:19.737]  
[03:02:19.997]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:19.997]  
[03:02:20.006]  <debugvars>
[03:02:20.006]    // Pre-defined
[03:02:20.006]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:20.006]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:20.006]    __dp=0x00000000
[03:02:20.006]    __ap=0x00000000
[03:02:20.006]    __traceout=0x00000000      (Trace Disabled)
[03:02:20.006]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:20.006]    __FlashAddr=0x00000000
[03:02:20.006]    __FlashLen=0x00000000
[03:02:20.006]    __FlashArg=0x00000000
[03:02:20.006]    __FlashOp=0x00000000
[03:02:20.006]    __Result=0x00000000
[03:02:20.006]  </debugvars>
[03:02:20.006]  
[03:02:20.006]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:20.006]    <block atomic="false" info="">
[03:02:20.006]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:20.006]        // -> [isSWJ <= 0x00000001]
[03:02:20.006]      __var hasDormant = __protocol & 0x00020000;
[03:02:20.006]        // -> [hasDormant <= 0x00000000]
[03:02:20.006]      __var protType   = __protocol & 0x0000FFFF;
[03:02:20.006]        // -> [protType <= 0x00000002]
[03:02:20.006]    </block>
[03:02:20.006]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:20.009]      // if-block "protType == 1"
[03:02:20.009]        // =>  FALSE
[03:02:20.009]      // skip if-block "protType == 1"
[03:02:20.009]    </control>
[03:02:20.009]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:20.009]      // if-block "protType == 2"
[03:02:20.009]        // =>  TRUE
[03:02:20.009]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:20.009]        // if-block "isSWJ"
[03:02:20.009]          // =>  TRUE
[03:02:20.009]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:20.009]          // if-block "hasDormant"
[03:02:20.009]            // =>  FALSE
[03:02:20.009]          // skip if-block "hasDormant"
[03:02:20.009]        </control>
[03:02:20.009]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:20.009]          // if-block "!hasDormant"
[03:02:20.009]            // =>  TRUE
[03:02:20.009]          <block atomic="false" info="">
[03:02:20.009]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:21.016]  
[03:02:21.016]  !!! E320 : DAP access error
[03:02:21.016]  
[03:02:21.026]          </block>
[03:02:21.026]          // end if-block "!hasDormant"
[03:02:21.026]        </control>
[03:02:21.026]        // end if-block "isSWJ"
[03:02:21.026]      </control>
[03:02:21.026]      // end if-block "protType == 2"
[03:02:21.026]    </control>
[03:02:21.026]  </sequence>
[03:02:21.026]  
[03:02:21.287]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:21.287]  
[03:02:21.295]  <debugvars>
[03:02:21.295]    // Pre-defined
[03:02:21.295]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:21.295]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:21.295]    __dp=0x00000000
[03:02:21.295]    __ap=0x00000000
[03:02:21.295]    __traceout=0x00000000      (Trace Disabled)
[03:02:21.295]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:21.295]    __FlashAddr=0x00000000
[03:02:21.295]    __FlashLen=0x00000000
[03:02:21.295]    __FlashArg=0x00000000
[03:02:21.295]    __FlashOp=0x00000000
[03:02:21.295]    __Result=0x00000000
[03:02:21.295]  </debugvars>
[03:02:21.295]  
[03:02:21.295]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:21.295]    <block atomic="false" info="">
[03:02:21.295]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:21.295]        // -> [isSWJ <= 0x00000001]
[03:02:21.295]      __var hasDormant = __protocol & 0x00020000;
[03:02:21.295]        // -> [hasDormant <= 0x00000000]
[03:02:21.295]      __var protType   = __protocol & 0x0000FFFF;
[03:02:21.295]        // -> [protType <= 0x00000002]
[03:02:21.295]    </block>
[03:02:21.295]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:21.295]      // if-block "protType == 1"
[03:02:21.298]        // =>  FALSE
[03:02:21.298]      // skip if-block "protType == 1"
[03:02:21.298]    </control>
[03:02:21.298]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:21.298]      // if-block "protType == 2"
[03:02:21.298]        // =>  TRUE
[03:02:21.298]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:21.298]        // if-block "isSWJ"
[03:02:21.298]          // =>  TRUE
[03:02:21.298]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:21.298]          // if-block "hasDormant"
[03:02:21.298]            // =>  FALSE
[03:02:21.298]          // skip if-block "hasDormant"
[03:02:21.298]        </control>
[03:02:21.298]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:21.298]          // if-block "!hasDormant"
[03:02:21.298]            // =>  TRUE
[03:02:21.298]          <block atomic="false" info="">
[03:02:21.298]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:22.302]  
[03:02:22.302]  !!! E320 : DAP access error
[03:02:22.302]  
[03:02:22.302]          </block>
[03:02:22.302]          // end if-block "!hasDormant"
[03:02:22.302]        </control>
[03:02:22.302]        // end if-block "isSWJ"
[03:02:22.302]      </control>
[03:02:22.302]      // end if-block "protType == 2"
[03:02:22.302]    </control>
[03:02:22.302]  </sequence>
[03:02:22.302]  
[03:02:22.563]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:22.563]  
[03:02:22.572]  <debugvars>
[03:02:22.572]    // Pre-defined
[03:02:22.572]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:22.572]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:22.572]    __dp=0x00000000
[03:02:22.572]    __ap=0x00000000
[03:02:22.572]    __traceout=0x00000000      (Trace Disabled)
[03:02:22.572]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:22.572]    __FlashAddr=0x00000000
[03:02:22.572]    __FlashLen=0x00000000
[03:02:22.572]    __FlashArg=0x00000000
[03:02:22.572]    __FlashOp=0x00000000
[03:02:22.572]    __Result=0x00000000
[03:02:22.572]  </debugvars>
[03:02:22.572]  
[03:02:22.572]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:22.572]    <block atomic="false" info="">
[03:02:22.572]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:22.572]        // -> [isSWJ <= 0x00000001]
[03:02:22.572]      __var hasDormant = __protocol & 0x00020000;
[03:02:22.572]        // -> [hasDormant <= 0x00000000]
[03:02:22.572]      __var protType   = __protocol & 0x0000FFFF;
[03:02:22.572]        // -> [protType <= 0x00000002]
[03:02:22.575]    </block>
[03:02:22.575]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:22.575]      // if-block "protType == 1"
[03:02:22.575]        // =>  FALSE
[03:02:22.575]      // skip if-block "protType == 1"
[03:02:22.575]    </control>
[03:02:22.575]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:22.575]      // if-block "protType == 2"
[03:02:22.575]        // =>  TRUE
[03:02:22.575]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:22.575]        // if-block "isSWJ"
[03:02:22.575]          // =>  TRUE
[03:02:22.575]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:22.575]          // if-block "hasDormant"
[03:02:22.575]            // =>  FALSE
[03:02:22.577]          // skip if-block "hasDormant"
[03:02:22.577]        </control>
[03:02:22.577]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:22.577]          // if-block "!hasDormant"
[03:02:22.577]            // =>  TRUE
[03:02:22.577]          <block atomic="false" info="">
[03:02:22.577]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:23.588]  
[03:02:23.588]  !!! E320 : DAP access error
[03:02:23.588]  
[03:02:23.597]          </block>
[03:02:23.597]          // end if-block "!hasDormant"
[03:02:23.597]        </control>
[03:02:23.597]        // end if-block "isSWJ"
[03:02:23.597]      </control>
[03:02:23.597]      // end if-block "protType == 2"
[03:02:23.597]    </control>
[03:02:23.597]  </sequence>
[03:02:23.597]  
[03:02:23.857]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:23.857]  
[03:02:23.866]  <debugvars>
[03:02:23.866]    // Pre-defined
[03:02:23.866]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:23.866]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:23.866]    __dp=0x00000000
[03:02:23.866]    __ap=0x00000000
[03:02:23.867]    __traceout=0x00000000      (Trace Disabled)
[03:02:23.867]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:23.867]    __FlashAddr=0x00000000
[03:02:23.867]    __FlashLen=0x00000000
[03:02:23.867]    __FlashArg=0x00000000
[03:02:23.867]    __FlashOp=0x00000000
[03:02:23.867]    __Result=0x00000000
[03:02:23.867]  </debugvars>
[03:02:23.867]  
[03:02:23.868]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:23.868]    <block atomic="false" info="">
[03:02:23.868]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:23.868]        // -> [isSWJ <= 0x00000001]
[03:02:23.868]      __var hasDormant = __protocol & 0x00020000;
[03:02:23.868]        // -> [hasDormant <= 0x00000000]
[03:02:23.868]      __var protType   = __protocol & 0x0000FFFF;
[03:02:23.868]        // -> [protType <= 0x00000002]
[03:02:23.868]    </block>
[03:02:23.868]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:23.868]      // if-block "protType == 1"
[03:02:23.868]        // =>  FALSE
[03:02:23.868]      // skip if-block "protType == 1"
[03:02:23.868]    </control>
[03:02:23.868]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:23.868]      // if-block "protType == 2"
[03:02:23.868]        // =>  TRUE
[03:02:23.870]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:23.870]        // if-block "isSWJ"
[03:02:23.870]          // =>  TRUE
[03:02:23.870]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:23.870]          // if-block "hasDormant"
[03:02:23.870]            // =>  FALSE
[03:02:23.870]          // skip if-block "hasDormant"
[03:02:23.870]        </control>
[03:02:23.870]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:23.870]          // if-block "!hasDormant"
[03:02:23.870]            // =>  TRUE
[03:02:23.870]          <block atomic="false" info="">
[03:02:23.870]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:24.871]  
[03:02:24.871]  !!! E320 : DAP access error
[03:02:24.871]  
[03:02:24.881]          </block>
[03:02:24.881]          // end if-block "!hasDormant"
[03:02:24.881]        </control>
[03:02:24.881]        // end if-block "isSWJ"
[03:02:24.881]      </control>
[03:02:24.881]      // end if-block "protType == 2"
[03:02:24.881]    </control>
[03:02:24.881]  </sequence>
[03:02:24.881]  
[03:02:25.132]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:25.132]  
[03:02:25.140]  <debugvars>
[03:02:25.140]    // Pre-defined
[03:02:25.140]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:25.140]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:25.140]    __dp=0x00000000
[03:02:25.140]    __ap=0x00000000
[03:02:25.140]    __traceout=0x00000000      (Trace Disabled)
[03:02:25.140]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:25.140]    __FlashAddr=0x00000000
[03:02:25.140]    __FlashLen=0x00000000
[03:02:25.140]    __FlashArg=0x00000000
[03:02:25.140]    __FlashOp=0x00000000
[03:02:25.140]    __Result=0x00000000
[03:02:25.140]  </debugvars>
[03:02:25.140]  
[03:02:25.140]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:25.140]    <block atomic="false" info="">
[03:02:25.140]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:25.140]        // -> [isSWJ <= 0x00000001]
[03:02:25.140]      __var hasDormant = __protocol & 0x00020000;
[03:02:25.140]        // -> [hasDormant <= 0x00000000]
[03:02:25.140]      __var protType   = __protocol & 0x0000FFFF;
[03:02:25.140]        // -> [protType <= 0x00000002]
[03:02:25.140]    </block>
[03:02:25.140]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:25.140]      // if-block "protType == 1"
[03:02:25.140]        // =>  FALSE
[03:02:25.143]      // skip if-block "protType == 1"
[03:02:25.143]    </control>
[03:02:25.143]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:25.143]      // if-block "protType == 2"
[03:02:25.143]        // =>  TRUE
[03:02:25.143]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:25.143]        // if-block "isSWJ"
[03:02:25.143]          // =>  TRUE
[03:02:25.143]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:25.143]          // if-block "hasDormant"
[03:02:25.143]            // =>  FALSE
[03:02:25.143]          // skip if-block "hasDormant"
[03:02:25.143]        </control>
[03:02:25.143]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:25.143]          // if-block "!hasDormant"
[03:02:25.143]            // =>  TRUE
[03:02:25.143]          <block atomic="false" info="">
[03:02:25.143]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:26.149]  
[03:02:26.149]  !!! E320 : DAP access error
[03:02:26.149]  
[03:02:26.159]          </block>
[03:02:26.159]          // end if-block "!hasDormant"
[03:02:26.159]        </control>
[03:02:26.159]        // end if-block "isSWJ"
[03:02:26.159]      </control>
[03:02:26.159]      // end if-block "protType == 2"
[03:02:26.159]    </control>
[03:02:26.159]  </sequence>
[03:02:26.159]  
[03:02:26.416]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:26.416]  
[03:02:26.424]  <debugvars>
[03:02:26.424]    // Pre-defined
[03:02:26.424]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:26.424]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:26.424]    __dp=0x00000000
[03:02:26.424]    __ap=0x00000000
[03:02:26.424]    __traceout=0x00000000      (Trace Disabled)
[03:02:26.424]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:26.424]    __FlashAddr=0x00000000
[03:02:26.424]    __FlashLen=0x00000000
[03:02:26.424]    __FlashArg=0x00000000
[03:02:26.424]    __FlashOp=0x00000000
[03:02:26.424]    __Result=0x00000000
[03:02:26.424]  </debugvars>
[03:02:26.424]  
[03:02:26.424]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:26.424]    <block atomic="false" info="">
[03:02:26.424]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:26.424]        // -> [isSWJ <= 0x00000001]
[03:02:26.424]      __var hasDormant = __protocol & 0x00020000;
[03:02:26.424]        // -> [hasDormant <= 0x00000000]
[03:02:26.424]      __var protType   = __protocol & 0x0000FFFF;
[03:02:26.424]        // -> [protType <= 0x00000002]
[03:02:26.424]    </block>
[03:02:26.424]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:26.424]      // if-block "protType == 1"
[03:02:26.424]        // =>  FALSE
[03:02:26.424]      // skip if-block "protType == 1"
[03:02:26.424]    </control>
[03:02:26.424]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:26.428]      // if-block "protType == 2"
[03:02:26.428]        // =>  TRUE
[03:02:26.428]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:26.428]        // if-block "isSWJ"
[03:02:26.428]          // =>  TRUE
[03:02:26.428]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:26.428]          // if-block "hasDormant"
[03:02:26.428]            // =>  FALSE
[03:02:26.428]          // skip if-block "hasDormant"
[03:02:26.428]        </control>
[03:02:26.428]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:26.428]          // if-block "!hasDormant"
[03:02:26.428]            // =>  TRUE
[03:02:26.428]          <block atomic="false" info="">
[03:02:26.428]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:27.435]  
[03:02:27.435]  !!! E320 : DAP access error
[03:02:27.435]  
[03:02:27.435]          </block>
[03:02:27.435]          // end if-block "!hasDormant"
[03:02:27.435]        </control>
[03:02:27.435]        // end if-block "isSWJ"
[03:02:27.435]      </control>
[03:02:27.435]      // end if-block "protType == 2"
[03:02:27.435]    </control>
[03:02:27.435]  </sequence>
[03:02:27.435]  
[03:02:27.686]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:27.686]  
[03:02:27.695]  <debugvars>
[03:02:27.695]    // Pre-defined
[03:02:27.695]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:27.695]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:27.695]    __dp=0x00000000
[03:02:27.695]    __ap=0x00000000
[03:02:27.696]    __traceout=0x00000000      (Trace Disabled)
[03:02:27.696]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:27.696]    __FlashAddr=0x00000000
[03:02:27.696]    __FlashLen=0x00000000
[03:02:27.696]    __FlashArg=0x00000000
[03:02:27.696]    __FlashOp=0x00000000
[03:02:27.696]    __Result=0x00000000
[03:02:27.696]  </debugvars>
[03:02:27.696]  
[03:02:27.696]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:27.696]    <block atomic="false" info="">
[03:02:27.697]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:27.697]        // -> [isSWJ <= 0x00000001]
[03:02:27.697]      __var hasDormant = __protocol & 0x00020000;
[03:02:27.697]        // -> [hasDormant <= 0x00000000]
[03:02:27.697]      __var protType   = __protocol & 0x0000FFFF;
[03:02:27.697]        // -> [protType <= 0x00000002]
[03:02:27.697]    </block>
[03:02:27.697]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:27.698]      // if-block "protType == 1"
[03:02:27.698]        // =>  FALSE
[03:02:27.698]      // skip if-block "protType == 1"
[03:02:27.698]    </control>
[03:02:27.698]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:27.698]      // if-block "protType == 2"
[03:02:27.698]        // =>  TRUE
[03:02:27.698]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:27.698]        // if-block "isSWJ"
[03:02:27.698]          // =>  TRUE
[03:02:27.698]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:27.698]          // if-block "hasDormant"
[03:02:27.698]            // =>  FALSE
[03:02:27.698]          // skip if-block "hasDormant"
[03:02:27.698]        </control>
[03:02:27.698]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:27.698]          // if-block "!hasDormant"
[03:02:27.698]            // =>  TRUE
[03:02:27.698]          <block atomic="false" info="">
[03:02:27.698]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:28.710]  
[03:02:28.710]  !!! E320 : DAP access error
[03:02:28.710]  
[03:02:28.718]          </block>
[03:02:28.718]          // end if-block "!hasDormant"
[03:02:28.718]        </control>
[03:02:28.718]        // end if-block "isSWJ"
[03:02:28.718]      </control>
[03:02:28.718]      // end if-block "protType == 2"
[03:02:28.718]    </control>
[03:02:28.718]  </sequence>
[03:02:28.718]  
[03:02:28.974]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:28.974]  
[03:02:28.983]  <debugvars>
[03:02:28.983]    // Pre-defined
[03:02:28.983]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:28.983]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:28.983]    __dp=0x00000000
[03:02:28.983]    __ap=0x00000000
[03:02:28.983]    __traceout=0x00000000      (Trace Disabled)
[03:02:28.983]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:28.983]    __FlashAddr=0x00000000
[03:02:28.983]    __FlashLen=0x00000000
[03:02:28.983]    __FlashArg=0x00000000
[03:02:28.983]    __FlashOp=0x00000000
[03:02:28.983]    __Result=0x00000000
[03:02:28.983]  </debugvars>
[03:02:28.983]  
[03:02:28.983]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:28.983]    <block atomic="false" info="">
[03:02:28.983]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:28.983]        // -> [isSWJ <= 0x00000001]
[03:02:28.983]      __var hasDormant = __protocol & 0x00020000;
[03:02:28.983]        // -> [hasDormant <= 0x00000000]
[03:02:28.983]      __var protType   = __protocol & 0x0000FFFF;
[03:02:28.983]        // -> [protType <= 0x00000002]
[03:02:28.986]    </block>
[03:02:28.986]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:28.987]      // if-block "protType == 1"
[03:02:28.987]        // =>  FALSE
[03:02:28.987]      // skip if-block "protType == 1"
[03:02:28.987]    </control>
[03:02:28.987]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:28.987]      // if-block "protType == 2"
[03:02:28.987]        // =>  TRUE
[03:02:28.987]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:28.987]        // if-block "isSWJ"
[03:02:28.987]          // =>  TRUE
[03:02:28.987]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:28.987]          // if-block "hasDormant"
[03:02:28.987]            // =>  FALSE
[03:02:28.987]          // skip if-block "hasDormant"
[03:02:28.987]        </control>
[03:02:28.987]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:28.987]          // if-block "!hasDormant"
[03:02:28.987]            // =>  TRUE
[03:02:28.987]          <block atomic="false" info="">
[03:02:28.987]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:29.990]  
[03:02:29.990]  !!! E320 : DAP access error
[03:02:29.990]  
[03:02:29.998]          </block>
[03:02:29.998]          // end if-block "!hasDormant"
[03:02:29.998]        </control>
[03:02:29.998]        // end if-block "isSWJ"
[03:02:29.998]      </control>
[03:02:29.998]      // end if-block "protType == 2"
[03:02:29.998]    </control>
[03:02:29.998]  </sequence>
[03:02:29.998]  
[03:02:30.255]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:30.255]  
[03:02:30.264]  <debugvars>
[03:02:30.264]    // Pre-defined
[03:02:30.264]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:30.264]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:30.264]    __dp=0x00000000
[03:02:30.264]    __ap=0x00000000
[03:02:30.264]    __traceout=0x00000000      (Trace Disabled)
[03:02:30.264]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:30.264]    __FlashAddr=0x00000000
[03:02:30.264]    __FlashLen=0x00000000
[03:02:30.264]    __FlashArg=0x00000000
[03:02:30.264]    __FlashOp=0x00000000
[03:02:30.264]    __Result=0x00000000
[03:02:30.264]  </debugvars>
[03:02:30.266]  
[03:02:30.267]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:30.267]    <block atomic="false" info="">
[03:02:30.267]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:30.267]        // -> [isSWJ <= 0x00000001]
[03:02:30.267]      __var hasDormant = __protocol & 0x00020000;
[03:02:30.267]        // -> [hasDormant <= 0x00000000]
[03:02:30.268]      __var protType   = __protocol & 0x0000FFFF;
[03:02:30.268]        // -> [protType <= 0x00000002]
[03:02:30.268]    </block>
[03:02:30.268]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:30.268]      // if-block "protType == 1"
[03:02:30.268]        // =>  FALSE
[03:02:30.268]      // skip if-block "protType == 1"
[03:02:30.268]    </control>
[03:02:30.268]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:30.268]      // if-block "protType == 2"
[03:02:30.268]        // =>  TRUE
[03:02:30.268]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:30.268]        // if-block "isSWJ"
[03:02:30.268]          // =>  TRUE
[03:02:30.268]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:30.268]          // if-block "hasDormant"
[03:02:30.269]            // =>  FALSE
[03:02:30.269]          // skip if-block "hasDormant"
[03:02:30.269]        </control>
[03:02:30.269]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:30.269]          // if-block "!hasDormant"
[03:02:30.269]            // =>  TRUE
[03:02:30.269]          <block atomic="false" info="">
[03:02:30.269]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:31.271]  
[03:02:31.271]  !!! E320 : DAP access error
[03:02:31.271]  
[03:02:31.279]          </block>
[03:02:31.279]          // end if-block "!hasDormant"
[03:02:31.279]        </control>
[03:02:31.279]        // end if-block "isSWJ"
[03:02:31.279]      </control>
[03:02:31.279]      // end if-block "protType == 2"
[03:02:31.279]    </control>
[03:02:31.279]  </sequence>
[03:02:31.279]  
[03:02:31.538]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:31.538]  
[03:02:31.546]  <debugvars>
[03:02:31.546]    // Pre-defined
[03:02:31.546]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:31.546]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:31.546]    __dp=0x00000000
[03:02:31.546]    __ap=0x00000000
[03:02:31.546]    __traceout=0x00000000      (Trace Disabled)
[03:02:31.546]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:31.546]    __FlashAddr=0x00000000
[03:02:31.546]    __FlashLen=0x00000000
[03:02:31.546]    __FlashArg=0x00000000
[03:02:31.546]    __FlashOp=0x00000000
[03:02:31.546]    __Result=0x00000000
[03:02:31.546]  </debugvars>
[03:02:31.546]  
[03:02:31.546]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:31.546]    <block atomic="false" info="">
[03:02:31.546]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:31.546]        // -> [isSWJ <= 0x00000001]
[03:02:31.546]      __var hasDormant = __protocol & 0x00020000;
[03:02:31.546]        // -> [hasDormant <= 0x00000000]
[03:02:31.546]      __var protType   = __protocol & 0x0000FFFF;
[03:02:31.546]        // -> [protType <= 0x00000002]
[03:02:31.546]    </block>
[03:02:31.546]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:31.546]      // if-block "protType == 1"
[03:02:31.546]        // =>  FALSE
[03:02:31.546]      // skip if-block "protType == 1"
[03:02:31.546]    </control>
[03:02:31.546]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:31.546]      // if-block "protType == 2"
[03:02:31.546]        // =>  TRUE
[03:02:31.546]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:31.546]        // if-block "isSWJ"
[03:02:31.546]          // =>  TRUE
[03:02:31.546]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:31.546]          // if-block "hasDormant"
[03:02:31.546]            // =>  FALSE
[03:02:31.550]          // skip if-block "hasDormant"
[03:02:31.550]        </control>
[03:02:31.550]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:31.550]          // if-block "!hasDormant"
[03:02:31.550]            // =>  TRUE
[03:02:31.550]          <block atomic="false" info="">
[03:02:31.550]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:32.556]  
[03:02:32.556]  !!! E320 : DAP access error
[03:02:32.556]  
[03:02:32.564]          </block>
[03:02:32.564]          // end if-block "!hasDormant"
[03:02:32.564]        </control>
[03:02:32.564]        // end if-block "isSWJ"
[03:02:32.564]      </control>
[03:02:32.564]      // end if-block "protType == 2"
[03:02:32.564]    </control>
[03:02:32.564]  </sequence>
[03:02:32.564]  
[03:02:32.822]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:32.822]  
[03:02:32.831]  <debugvars>
[03:02:32.831]    // Pre-defined
[03:02:32.831]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:32.831]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:32.831]    __dp=0x00000000
[03:02:32.831]    __ap=0x00000000
[03:02:32.831]    __traceout=0x00000000      (Trace Disabled)
[03:02:32.831]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:32.831]    __FlashAddr=0x00000000
[03:02:32.831]    __FlashLen=0x00000000
[03:02:32.831]    __FlashArg=0x00000000
[03:02:32.831]    __FlashOp=0x00000000
[03:02:32.831]    __Result=0x00000000
[03:02:32.831]  </debugvars>
[03:02:32.831]  
[03:02:32.831]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:32.831]    <block atomic="false" info="">
[03:02:32.831]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:32.831]        // -> [isSWJ <= 0x00000001]
[03:02:32.831]      __var hasDormant = __protocol & 0x00020000;
[03:02:32.831]        // -> [hasDormant <= 0x00000000]
[03:02:32.831]      __var protType   = __protocol & 0x0000FFFF;
[03:02:32.831]        // -> [protType <= 0x00000002]
[03:02:32.831]    </block>
[03:02:32.831]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:32.831]      // if-block "protType == 1"
[03:02:32.831]        // =>  FALSE
[03:02:32.834]      // skip if-block "protType == 1"
[03:02:32.834]    </control>
[03:02:32.834]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:32.834]      // if-block "protType == 2"
[03:02:32.834]        // =>  TRUE
[03:02:32.834]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:32.834]        // if-block "isSWJ"
[03:02:32.834]          // =>  TRUE
[03:02:32.834]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:32.834]          // if-block "hasDormant"
[03:02:32.834]            // =>  FALSE
[03:02:32.834]          // skip if-block "hasDormant"
[03:02:32.834]        </control>
[03:02:32.834]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:32.834]          // if-block "!hasDormant"
[03:02:32.834]            // =>  TRUE
[03:02:32.834]          <block atomic="false" info="">
[03:02:32.834]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:33.840]  
[03:02:33.840]  !!! E320 : DAP access error
[03:02:33.840]  
[03:02:33.840]          </block>
[03:02:33.840]          // end if-block "!hasDormant"
[03:02:33.840]        </control>
[03:02:33.840]        // end if-block "isSWJ"
[03:02:33.840]      </control>
[03:02:33.840]      // end if-block "protType == 2"
[03:02:33.840]    </control>
[03:02:33.840]  </sequence>
[03:02:33.840]  
[03:02:34.098]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:34.098]  
[03:02:34.108]  <debugvars>
[03:02:34.108]    // Pre-defined
[03:02:34.108]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:34.108]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:34.108]    __dp=0x00000000
[03:02:34.108]    __ap=0x00000000
[03:02:34.108]    __traceout=0x00000000      (Trace Disabled)
[03:02:34.108]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:34.108]    __FlashAddr=0x00000000
[03:02:34.108]    __FlashLen=0x00000000
[03:02:34.108]    __FlashArg=0x00000000
[03:02:34.108]    __FlashOp=0x00000000
[03:02:34.108]    __Result=0x00000000
[03:02:34.108]  </debugvars>
[03:02:34.108]  
[03:02:34.108]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:34.108]    <block atomic="false" info="">
[03:02:34.108]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:34.108]        // -> [isSWJ <= 0x00000001]
[03:02:34.110]      __var hasDormant = __protocol & 0x00020000;
[03:02:34.110]        // -> [hasDormant <= 0x00000000]
[03:02:34.110]      __var protType   = __protocol & 0x0000FFFF;
[03:02:34.110]        // -> [protType <= 0x00000002]
[03:02:34.110]    </block>
[03:02:34.110]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:34.110]      // if-block "protType == 1"
[03:02:34.110]        // =>  FALSE
[03:02:34.110]      // skip if-block "protType == 1"
[03:02:34.110]    </control>
[03:02:34.110]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:34.110]      // if-block "protType == 2"
[03:02:34.110]        // =>  TRUE
[03:02:34.110]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:34.110]        // if-block "isSWJ"
[03:02:34.110]          // =>  TRUE
[03:02:34.110]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:34.110]          // if-block "hasDormant"
[03:02:34.110]            // =>  FALSE
[03:02:34.110]          // skip if-block "hasDormant"
[03:02:34.110]        </control>
[03:02:34.110]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:34.110]          // if-block "!hasDormant"
[03:02:34.110]            // =>  TRUE
[03:02:34.110]          <block atomic="false" info="">
[03:02:34.110]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:35.120]  
[03:02:35.120]  !!! E320 : DAP access error
[03:02:35.120]  
[03:02:35.120]          </block>
[03:02:35.121]          // end if-block "!hasDormant"
[03:02:35.121]        </control>
[03:02:35.121]        // end if-block "isSWJ"
[03:02:35.121]      </control>
[03:02:35.121]      // end if-block "protType == 2"
[03:02:35.121]    </control>
[03:02:35.121]  </sequence>
[03:02:35.121]  
[03:02:35.378]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:35.378]  
[03:02:35.386]  <debugvars>
[03:02:35.386]    // Pre-defined
[03:02:35.386]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:35.386]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:35.386]    __dp=0x00000000
[03:02:35.386]    __ap=0x00000000
[03:02:35.386]    __traceout=0x00000000      (Trace Disabled)
[03:02:35.386]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:35.386]    __FlashAddr=0x00000000
[03:02:35.386]    __FlashLen=0x00000000
[03:02:35.386]    __FlashArg=0x00000000
[03:02:35.386]    __FlashOp=0x00000000
[03:02:35.387]    __Result=0x00000000
[03:02:35.387]  </debugvars>
[03:02:35.387]  
[03:02:35.387]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:35.387]    <block atomic="false" info="">
[03:02:35.387]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:35.389]        // -> [isSWJ <= 0x00000001]
[03:02:35.389]      __var hasDormant = __protocol & 0x00020000;
[03:02:35.389]        // -> [hasDormant <= 0x00000000]
[03:02:35.389]      __var protType   = __protocol & 0x0000FFFF;
[03:02:35.389]        // -> [protType <= 0x00000002]
[03:02:35.389]    </block>
[03:02:35.389]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:35.389]      // if-block "protType == 1"
[03:02:35.389]        // =>  FALSE
[03:02:35.389]      // skip if-block "protType == 1"
[03:02:35.389]    </control>
[03:02:35.389]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:35.389]      // if-block "protType == 2"
[03:02:35.389]        // =>  TRUE
[03:02:35.389]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:35.389]        // if-block "isSWJ"
[03:02:35.390]          // =>  TRUE
[03:02:35.390]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:35.391]          // if-block "hasDormant"
[03:02:35.391]            // =>  FALSE
[03:02:35.391]          // skip if-block "hasDormant"
[03:02:35.391]        </control>
[03:02:35.391]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:35.391]          // if-block "!hasDormant"
[03:02:35.391]            // =>  TRUE
[03:02:35.391]          <block atomic="false" info="">
[03:02:35.391]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:36.395]  
[03:02:36.395]  !!! E320 : DAP access error
[03:02:36.395]  
[03:02:36.395]          </block>
[03:02:36.395]          // end if-block "!hasDormant"
[03:02:36.397]        </control>
[03:02:36.397]        // end if-block "isSWJ"
[03:02:36.397]      </control>
[03:02:36.397]      // end if-block "protType == 2"
[03:02:36.397]    </control>
[03:02:36.397]  </sequence>
[03:02:36.397]  
[03:02:36.655]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:36.655]  
[03:02:36.663]  <debugvars>
[03:02:36.663]    // Pre-defined
[03:02:36.663]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:36.663]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:36.663]    __dp=0x00000000
[03:02:36.663]    __ap=0x00000000
[03:02:36.663]    __traceout=0x00000000      (Trace Disabled)
[03:02:36.663]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:36.663]    __FlashAddr=0x00000000
[03:02:36.663]    __FlashLen=0x00000000
[03:02:36.663]    __FlashArg=0x00000000
[03:02:36.663]    __FlashOp=0x00000000
[03:02:36.663]    __Result=0x00000000
[03:02:36.663]  </debugvars>
[03:02:36.663]  
[03:02:36.663]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:36.663]    <block atomic="false" info="">
[03:02:36.663]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:36.663]        // -> [isSWJ <= 0x00000001]
[03:02:36.663]      __var hasDormant = __protocol & 0x00020000;
[03:02:36.663]        // -> [hasDormant <= 0x00000000]
[03:02:36.663]      __var protType   = __protocol & 0x0000FFFF;
[03:02:36.663]        // -> [protType <= 0x00000002]
[03:02:36.663]    </block>
[03:02:36.666]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:36.666]      // if-block "protType == 1"
[03:02:36.666]        // =>  FALSE
[03:02:36.666]      // skip if-block "protType == 1"
[03:02:36.666]    </control>
[03:02:36.666]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:36.666]      // if-block "protType == 2"
[03:02:36.666]        // =>  TRUE
[03:02:36.666]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:36.666]        // if-block "isSWJ"
[03:02:36.666]          // =>  TRUE
[03:02:36.666]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:36.666]          // if-block "hasDormant"
[03:02:36.666]            // =>  FALSE
[03:02:36.668]          // skip if-block "hasDormant"
[03:02:36.668]        </control>
[03:02:36.668]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:36.668]          // if-block "!hasDormant"
[03:02:36.668]            // =>  TRUE
[03:02:36.668]          <block atomic="false" info="">
[03:02:36.668]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:37.676]  
[03:02:37.676]  !!! E320 : DAP access error
[03:02:37.676]  
[03:02:37.685]          </block>
[03:02:37.685]          // end if-block "!hasDormant"
[03:02:37.685]        </control>
[03:02:37.685]        // end if-block "isSWJ"
[03:02:37.685]      </control>
[03:02:37.685]      // end if-block "protType == 2"
[03:02:37.685]    </control>
[03:02:37.685]  </sequence>
[03:02:37.685]  
[03:02:37.936]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:37.936]  
[03:02:37.936]  <debugvars>
[03:02:37.936]    // Pre-defined
[03:02:37.936]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:37.936]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:37.936]    __dp=0x00000000
[03:02:37.936]    __ap=0x00000000
[03:02:37.936]    __traceout=0x00000000      (Trace Disabled)
[03:02:37.936]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:37.936]    __FlashAddr=0x00000000
[03:02:37.936]    __FlashLen=0x00000000
[03:02:37.936]    __FlashArg=0x00000000
[03:02:37.936]    __FlashOp=0x00000000
[03:02:37.936]    __Result=0x00000000
[03:02:37.936]  </debugvars>
[03:02:37.936]  
[03:02:37.936]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:37.936]    <block atomic="false" info="">
[03:02:37.936]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:37.936]        // -> [isSWJ <= 0x00000001]
[03:02:37.936]      __var hasDormant = __protocol & 0x00020000;
[03:02:37.936]        // -> [hasDormant <= 0x00000000]
[03:02:37.936]      __var protType   = __protocol & 0x0000FFFF;
[03:02:37.936]        // -> [protType <= 0x00000002]
[03:02:37.936]    </block>
[03:02:37.936]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:37.936]      // if-block "protType == 1"
[03:02:37.936]        // =>  FALSE
[03:02:37.936]      // skip if-block "protType == 1"
[03:02:37.940]    </control>
[03:02:37.940]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:37.940]      // if-block "protType == 2"
[03:02:37.940]        // =>  TRUE
[03:02:37.940]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:37.940]        // if-block "isSWJ"
[03:02:37.940]          // =>  TRUE
[03:02:37.940]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:37.940]          // if-block "hasDormant"
[03:02:37.940]            // =>  FALSE
[03:02:37.940]          // skip if-block "hasDormant"
[03:02:37.940]        </control>
[03:02:37.940]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:37.940]          // if-block "!hasDormant"
[03:02:37.940]            // =>  TRUE
[03:02:37.940]          <block atomic="false" info="">
[03:02:37.940]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:38.940]  
[03:02:38.940]  !!! E320 : DAP access error
[03:02:38.940]  
[03:02:38.949]          </block>
[03:02:38.949]          // end if-block "!hasDormant"
[03:02:38.949]        </control>
[03:02:38.949]        // end if-block "isSWJ"
[03:02:38.949]      </control>
[03:02:38.949]      // end if-block "protType == 2"
[03:02:38.949]    </control>
[03:02:38.949]  </sequence>
[03:02:38.949]  
[03:02:39.200]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:39.200]  
[03:02:39.200]  <debugvars>
[03:02:39.200]    // Pre-defined
[03:02:39.201]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:39.201]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:39.201]    __dp=0x00000000
[03:02:39.201]    __ap=0x00000000
[03:02:39.201]    __traceout=0x00000000      (Trace Disabled)
[03:02:39.201]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:39.201]    __FlashAddr=0x00000000
[03:02:39.201]    __FlashLen=0x00000000
[03:02:39.201]    __FlashArg=0x00000000
[03:02:39.201]    __FlashOp=0x00000000
[03:02:39.201]    __Result=0x00000000
[03:02:39.201]  </debugvars>
[03:02:39.201]  
[03:02:39.201]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:39.201]    <block atomic="false" info="">
[03:02:39.201]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:39.201]        // -> [isSWJ <= 0x00000001]
[03:02:39.201]      __var hasDormant = __protocol & 0x00020000;
[03:02:39.201]        // -> [hasDormant <= 0x00000000]
[03:02:39.201]      __var protType   = __protocol & 0x0000FFFF;
[03:02:39.201]        // -> [protType <= 0x00000002]
[03:02:39.201]    </block>
[03:02:39.201]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:39.201]      // if-block "protType == 1"
[03:02:39.201]        // =>  FALSE
[03:02:39.203]      // skip if-block "protType == 1"
[03:02:39.203]    </control>
[03:02:39.203]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:39.203]      // if-block "protType == 2"
[03:02:39.203]        // =>  TRUE
[03:02:39.203]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:39.203]        // if-block "isSWJ"
[03:02:39.203]          // =>  TRUE
[03:02:39.203]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:39.203]          // if-block "hasDormant"
[03:02:39.203]            // =>  FALSE
[03:02:39.203]          // skip if-block "hasDormant"
[03:02:39.203]        </control>
[03:02:39.203]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:39.203]          // if-block "!hasDormant"
[03:02:39.203]            // =>  TRUE
[03:02:39.203]          <block atomic="false" info="">
[03:02:39.203]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:40.208]  
[03:02:40.208]  !!! E320 : DAP access error
[03:02:40.208]  
[03:02:40.216]          </block>
[03:02:40.216]          // end if-block "!hasDormant"
[03:02:40.216]        </control>
[03:02:40.216]        // end if-block "isSWJ"
[03:02:40.216]      </control>
[03:02:40.217]      // end if-block "protType == 2"
[03:02:40.217]    </control>
[03:02:40.217]  </sequence>
[03:02:40.217]  
[03:02:40.469]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:40.469]  
[03:02:40.469]  <debugvars>
[03:02:40.469]    // Pre-defined
[03:02:40.469]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:40.469]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:40.469]    __dp=0x00000000
[03:02:40.469]    __ap=0x00000000
[03:02:40.469]    __traceout=0x00000000      (Trace Disabled)
[03:02:40.469]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:40.469]    __FlashAddr=0x00000000
[03:02:40.469]    __FlashLen=0x00000000
[03:02:40.469]    __FlashArg=0x00000000
[03:02:40.469]    __FlashOp=0x00000000
[03:02:40.469]    __Result=0x00000000
[03:02:40.469]  </debugvars>
[03:02:40.469]  
[03:02:40.469]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:40.469]    <block atomic="false" info="">
[03:02:40.469]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:40.469]        // -> [isSWJ <= 0x00000001]
[03:02:40.469]      __var hasDormant = __protocol & 0x00020000;
[03:02:40.469]        // -> [hasDormant <= 0x00000000]
[03:02:40.469]      __var protType   = __protocol & 0x0000FFFF;
[03:02:40.472]        // -> [protType <= 0x00000002]
[03:02:40.472]    </block>
[03:02:40.472]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:40.472]      // if-block "protType == 1"
[03:02:40.472]        // =>  FALSE
[03:02:40.472]      // skip if-block "protType == 1"
[03:02:40.472]    </control>
[03:02:40.472]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:40.472]      // if-block "protType == 2"
[03:02:40.472]        // =>  TRUE
[03:02:40.473]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:40.473]        // if-block "isSWJ"
[03:02:40.473]          // =>  TRUE
[03:02:40.473]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:40.473]          // if-block "hasDormant"
[03:02:40.473]            // =>  FALSE
[03:02:40.473]          // skip if-block "hasDormant"
[03:02:40.474]        </control>
[03:02:40.474]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:40.474]          // if-block "!hasDormant"
[03:02:40.474]            // =>  TRUE
[03:02:40.474]          <block atomic="false" info="">
[03:02:40.474]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:41.480]  
[03:02:41.480]  !!! E320 : DAP access error
[03:02:41.480]  
[03:02:41.489]          </block>
[03:02:41.489]          // end if-block "!hasDormant"
[03:02:41.489]        </control>
[03:02:41.489]        // end if-block "isSWJ"
[03:02:41.489]      </control>
[03:02:41.489]      // end if-block "protType == 2"
[03:02:41.489]    </control>
[03:02:41.489]  </sequence>
[03:02:41.489]  
[03:02:41.747]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:41.747]  
[03:02:41.756]  <debugvars>
[03:02:41.756]    // Pre-defined
[03:02:41.756]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:41.756]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:41.756]    __dp=0x00000000
[03:02:41.756]    __ap=0x00000000
[03:02:41.756]    __traceout=0x00000000      (Trace Disabled)
[03:02:41.756]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:41.756]    __FlashAddr=0x00000000
[03:02:41.756]    __FlashLen=0x00000000
[03:02:41.756]    __FlashArg=0x00000000
[03:02:41.756]    __FlashOp=0x00000000
[03:02:41.756]    __Result=0x00000000
[03:02:41.756]  </debugvars>
[03:02:41.756]  
[03:02:41.756]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:41.756]    <block atomic="false" info="">
[03:02:41.756]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:41.756]        // -> [isSWJ <= 0x00000001]
[03:02:41.756]      __var hasDormant = __protocol & 0x00020000;
[03:02:41.756]        // -> [hasDormant <= 0x00000000]
[03:02:41.756]      __var protType   = __protocol & 0x0000FFFF;
[03:02:41.756]        // -> [protType <= 0x00000002]
[03:02:41.756]    </block>
[03:02:41.756]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:41.756]      // if-block "protType == 1"
[03:02:41.756]        // =>  FALSE
[03:02:41.756]      // skip if-block "protType == 1"
[03:02:41.756]    </control>
[03:02:41.756]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:41.756]      // if-block "protType == 2"
[03:02:41.756]        // =>  TRUE
[03:02:41.756]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:41.756]        // if-block "isSWJ"
[03:02:41.756]          // =>  TRUE
[03:02:41.756]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:41.756]          // if-block "hasDormant"
[03:02:41.756]            // =>  FALSE
[03:02:41.760]          // skip if-block "hasDormant"
[03:02:41.760]        </control>
[03:02:41.760]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:41.760]          // if-block "!hasDormant"
[03:02:41.760]            // =>  TRUE
[03:02:41.760]          <block atomic="false" info="">
[03:02:41.760]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:42.771]  
[03:02:42.771]  !!! E320 : DAP access error
[03:02:42.771]  
[03:02:42.780]          </block>
[03:02:42.780]          // end if-block "!hasDormant"
[03:02:42.780]        </control>
[03:02:42.780]        // end if-block "isSWJ"
[03:02:42.780]      </control>
[03:02:42.780]      // end if-block "protType == 2"
[03:02:42.780]    </control>
[03:02:42.780]  </sequence>
[03:02:42.780]  
[03:02:43.042]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:43.042]  
[03:02:43.042]  <debugvars>
[03:02:43.042]    // Pre-defined
[03:02:43.042]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:43.042]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:43.042]    __dp=0x00000000
[03:02:43.042]    __ap=0x00000000
[03:02:43.042]    __traceout=0x00000000      (Trace Disabled)
[03:02:43.042]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:43.042]    __FlashAddr=0x00000000
[03:02:43.042]    __FlashLen=0x00000000
[03:02:43.042]    __FlashArg=0x00000000
[03:02:43.042]    __FlashOp=0x00000000
[03:02:43.042]    __Result=0x00000000
[03:02:43.042]  </debugvars>
[03:02:43.042]  
[03:02:43.042]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:43.042]    <block atomic="false" info="">
[03:02:43.042]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:43.042]        // -> [isSWJ <= 0x00000001]
[03:02:43.042]      __var hasDormant = __protocol & 0x00020000;
[03:02:43.045]        // -> [hasDormant <= 0x00000000]
[03:02:43.045]      __var protType   = __protocol & 0x0000FFFF;
[03:02:43.045]        // -> [protType <= 0x00000002]
[03:02:43.045]    </block>
[03:02:43.045]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:43.045]      // if-block "protType == 1"
[03:02:43.045]        // =>  FALSE
[03:02:43.045]      // skip if-block "protType == 1"
[03:02:43.045]    </control>
[03:02:43.045]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:43.045]      // if-block "protType == 2"
[03:02:43.045]        // =>  TRUE
[03:02:43.045]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:43.045]        // if-block "isSWJ"
[03:02:43.045]          // =>  TRUE
[03:02:43.045]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:43.045]          // if-block "hasDormant"
[03:02:43.045]            // =>  FALSE
[03:02:43.045]          // skip if-block "hasDormant"
[03:02:43.045]        </control>
[03:02:43.045]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:43.045]          // if-block "!hasDormant"
[03:02:43.045]            // =>  TRUE
[03:02:43.045]          <block atomic="false" info="">
[03:02:43.045]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:44.054]  
[03:02:44.054]  !!! E320 : DAP access error
[03:02:44.054]  
[03:02:44.063]          </block>
[03:02:44.063]          // end if-block "!hasDormant"
[03:02:44.063]        </control>
[03:02:44.063]        // end if-block "isSWJ"
[03:02:44.063]      </control>
[03:02:44.063]      // end if-block "protType == 2"
[03:02:44.063]    </control>
[03:02:44.063]  </sequence>
[03:02:44.063]  
[03:02:44.320]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:44.320]  
[03:02:44.328]  <debugvars>
[03:02:44.328]    // Pre-defined
[03:02:44.328]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:44.328]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:44.328]    __dp=0x00000000
[03:02:44.328]    __ap=0x00000000
[03:02:44.328]    __traceout=0x00000000      (Trace Disabled)
[03:02:44.328]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:44.328]    __FlashAddr=0x00000000
[03:02:44.328]    __FlashLen=0x00000000
[03:02:44.328]    __FlashArg=0x00000000
[03:02:44.328]    __FlashOp=0x00000000
[03:02:44.328]    __Result=0x00000000
[03:02:44.328]  </debugvars>
[03:02:44.328]  
[03:02:44.328]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:44.328]    <block atomic="false" info="">
[03:02:44.328]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:44.328]        // -> [isSWJ <= 0x00000001]
[03:02:44.328]      __var hasDormant = __protocol & 0x00020000;
[03:02:44.328]        // -> [hasDormant <= 0x00000000]
[03:02:44.328]      __var protType   = __protocol & 0x0000FFFF;
[03:02:44.328]        // -> [protType <= 0x00000002]
[03:02:44.328]    </block>
[03:02:44.328]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:44.328]      // if-block "protType == 1"
[03:02:44.328]        // =>  FALSE
[03:02:44.328]      // skip if-block "protType == 1"
[03:02:44.328]    </control>
[03:02:44.328]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:44.328]      // if-block "protType == 2"
[03:02:44.328]        // =>  TRUE
[03:02:44.328]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:44.328]        // if-block "isSWJ"
[03:02:44.328]          // =>  TRUE
[03:02:44.328]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:44.328]          // if-block "hasDormant"
[03:02:44.328]            // =>  FALSE
[03:02:44.332]          // skip if-block "hasDormant"
[03:02:44.332]        </control>
[03:02:44.332]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:44.332]          // if-block "!hasDormant"
[03:02:44.332]            // =>  TRUE
[03:02:44.332]          <block atomic="false" info="">
[03:02:44.332]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:45.337]  
[03:02:45.337]  !!! E320 : DAP access error
[03:02:45.337]  
[03:02:45.346]          </block>
[03:02:45.346]          // end if-block "!hasDormant"
[03:02:45.346]        </control>
[03:02:45.346]        // end if-block "isSWJ"
[03:02:45.346]      </control>
[03:02:45.346]      // end if-block "protType == 2"
[03:02:45.346]    </control>
[03:02:45.346]  </sequence>
[03:02:45.346]  
[03:02:45.606]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:45.606]  
[03:02:45.614]  <debugvars>
[03:02:45.614]    // Pre-defined
[03:02:45.614]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:45.614]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:45.614]    __dp=0x00000000
[03:02:45.614]    __ap=0x00000000
[03:02:45.614]    __traceout=0x00000000      (Trace Disabled)
[03:02:45.614]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:45.614]    __FlashAddr=0x00000000
[03:02:45.614]    __FlashLen=0x00000000
[03:02:45.614]    __FlashArg=0x00000000
[03:02:45.614]    __FlashOp=0x00000000
[03:02:45.614]    __Result=0x00000000
[03:02:45.614]  </debugvars>
[03:02:45.614]  
[03:02:45.614]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:45.614]    <block atomic="false" info="">
[03:02:45.614]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:45.614]        // -> [isSWJ <= 0x00000001]
[03:02:45.614]      __var hasDormant = __protocol & 0x00020000;
[03:02:45.614]        // -> [hasDormant <= 0x00000000]
[03:02:45.614]      __var protType   = __protocol & 0x0000FFFF;
[03:02:45.614]        // -> [protType <= 0x00000002]
[03:02:45.614]    </block>
[03:02:45.614]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:45.614]      // if-block "protType == 1"
[03:02:45.614]        // =>  FALSE
[03:02:45.614]      // skip if-block "protType == 1"
[03:02:45.614]    </control>
[03:02:45.614]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:45.614]      // if-block "protType == 2"
[03:02:45.614]        // =>  TRUE
[03:02:45.614]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:45.614]        // if-block "isSWJ"
[03:02:45.614]          // =>  TRUE
[03:02:45.614]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:45.614]          // if-block "hasDormant"
[03:02:45.614]            // =>  FALSE
[03:02:45.618]          // skip if-block "hasDormant"
[03:02:45.618]        </control>
[03:02:45.618]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:45.618]          // if-block "!hasDormant"
[03:02:45.618]            // =>  TRUE
[03:02:45.618]          <block atomic="false" info="">
[03:02:45.618]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:46.626]  
[03:02:46.626]  !!! E320 : DAP access error
[03:02:46.626]  
[03:02:46.634]          </block>
[03:02:46.634]          // end if-block "!hasDormant"
[03:02:46.634]        </control>
[03:02:46.634]        // end if-block "isSWJ"
[03:02:46.634]      </control>
[03:02:46.634]      // end if-block "protType == 2"
[03:02:46.634]    </control>
[03:02:46.634]  </sequence>
[03:02:46.634]  
[03:02:46.886]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:46.886]  
[03:02:46.896]  <debugvars>
[03:02:46.896]    // Pre-defined
[03:02:46.896]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:46.896]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:46.896]    __dp=0x00000000
[03:02:46.896]    __ap=0x00000000
[03:02:46.896]    __traceout=0x00000000      (Trace Disabled)
[03:02:46.896]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:46.896]    __FlashAddr=0x00000000
[03:02:46.896]    __FlashLen=0x00000000
[03:02:46.896]    __FlashArg=0x00000000
[03:02:46.896]    __FlashOp=0x00000000
[03:02:46.896]    __Result=0x00000000
[03:02:46.896]  </debugvars>
[03:02:46.896]  
[03:02:46.896]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:46.896]    <block atomic="false" info="">
[03:02:46.896]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:46.898]        // -> [isSWJ <= 0x00000001]
[03:02:46.898]      __var hasDormant = __protocol & 0x00020000;
[03:02:46.898]        // -> [hasDormant <= 0x00000000]
[03:02:46.898]      __var protType   = __protocol & 0x0000FFFF;
[03:02:46.898]        // -> [protType <= 0x00000002]
[03:02:46.898]    </block>
[03:02:46.898]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:46.898]      // if-block "protType == 1"
[03:02:46.898]        // =>  FALSE
[03:02:46.898]      // skip if-block "protType == 1"
[03:02:46.898]    </control>
[03:02:46.898]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:46.898]      // if-block "protType == 2"
[03:02:46.898]        // =>  TRUE
[03:02:46.898]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:46.898]        // if-block "isSWJ"
[03:02:46.898]          // =>  TRUE
[03:02:46.898]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:46.898]          // if-block "hasDormant"
[03:02:46.898]            // =>  FALSE
[03:02:46.898]          // skip if-block "hasDormant"
[03:02:46.898]        </control>
[03:02:46.898]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:46.898]          // if-block "!hasDormant"
[03:02:46.898]            // =>  TRUE
[03:02:46.898]          <block atomic="false" info="">
[03:02:46.898]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:47.903]  
[03:02:47.903]  !!! E320 : DAP access error
[03:02:47.903]  
[03:02:47.903]          </block>
[03:02:47.903]          // end if-block "!hasDormant"
[03:02:47.903]        </control>
[03:02:47.903]        // end if-block "isSWJ"
[03:02:47.903]      </control>
[03:02:47.903]      // end if-block "protType == 2"
[03:02:47.903]    </control>
[03:02:47.903]  </sequence>
[03:02:47.904]  
[03:02:48.156]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:48.156]  
[03:02:48.164]  <debugvars>
[03:02:48.164]    // Pre-defined
[03:02:48.164]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:48.164]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:48.164]    __dp=0x00000000
[03:02:48.164]    __ap=0x00000000
[03:02:48.164]    __traceout=0x00000000      (Trace Disabled)
[03:02:48.164]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:48.164]    __FlashAddr=0x00000000
[03:02:48.164]    __FlashLen=0x00000000
[03:02:48.164]    __FlashArg=0x00000000
[03:02:48.164]    __FlashOp=0x00000000
[03:02:48.164]    __Result=0x00000000
[03:02:48.164]  </debugvars>
[03:02:48.164]  
[03:02:48.164]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:48.164]    <block atomic="false" info="">
[03:02:48.164]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:48.164]        // -> [isSWJ <= 0x00000001]
[03:02:48.164]      __var hasDormant = __protocol & 0x00020000;
[03:02:48.164]        // -> [hasDormant <= 0x00000000]
[03:02:48.164]      __var protType   = __protocol & 0x0000FFFF;
[03:02:48.164]        // -> [protType <= 0x00000002]
[03:02:48.164]    </block>
[03:02:48.164]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:48.164]      // if-block "protType == 1"
[03:02:48.164]        // =>  FALSE
[03:02:48.164]      // skip if-block "protType == 1"
[03:02:48.164]    </control>
[03:02:48.164]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:48.164]      // if-block "protType == 2"
[03:02:48.164]        // =>  TRUE
[03:02:48.164]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:48.164]        // if-block "isSWJ"
[03:02:48.164]          // =>  TRUE
[03:02:48.168]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:48.168]          // if-block "hasDormant"
[03:02:48.168]            // =>  FALSE
[03:02:48.168]          // skip if-block "hasDormant"
[03:02:48.168]        </control>
[03:02:48.168]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:48.168]          // if-block "!hasDormant"
[03:02:48.168]            // =>  TRUE
[03:02:48.168]          <block atomic="false" info="">
[03:02:48.168]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:49.174]  
[03:02:49.174]  !!! E320 : DAP access error
[03:02:49.174]  
[03:02:49.182]          </block>
[03:02:49.182]          // end if-block "!hasDormant"
[03:02:49.182]        </control>
[03:02:49.182]        // end if-block "isSWJ"
[03:02:49.182]      </control>
[03:02:49.182]      // end if-block "protType == 2"
[03:02:49.182]    </control>
[03:02:49.182]  </sequence>
[03:02:49.182]  
[03:02:49.436]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:49.436]  
[03:02:49.436]  <debugvars>
[03:02:49.436]    // Pre-defined
[03:02:49.436]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:49.436]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:49.436]    __dp=0x00000000
[03:02:49.436]    __ap=0x00000000
[03:02:49.436]    __traceout=0x00000000      (Trace Disabled)
[03:02:49.436]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:49.436]    __FlashAddr=0x00000000
[03:02:49.436]    __FlashLen=0x00000000
[03:02:49.436]    __FlashArg=0x00000000
[03:02:49.436]    __FlashOp=0x00000000
[03:02:49.436]    __Result=0x00000000
[03:02:49.436]  </debugvars>
[03:02:49.436]  
[03:02:49.436]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:49.436]    <block atomic="false" info="">
[03:02:49.436]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:49.436]        // -> [isSWJ <= 0x00000001]
[03:02:49.436]      __var hasDormant = __protocol & 0x00020000;
[03:02:49.436]        // -> [hasDormant <= 0x00000000]
[03:02:49.436]      __var protType   = __protocol & 0x0000FFFF;
[03:02:49.436]        // -> [protType <= 0x00000002]
[03:02:49.436]    </block>
[03:02:49.436]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:49.436]      // if-block "protType == 1"
[03:02:49.436]        // =>  FALSE
[03:02:49.440]      // skip if-block "protType == 1"
[03:02:49.440]    </control>
[03:02:49.440]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:49.440]      // if-block "protType == 2"
[03:02:49.440]        // =>  TRUE
[03:02:49.440]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:49.440]        // if-block "isSWJ"
[03:02:49.440]          // =>  TRUE
[03:02:49.440]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:49.440]          // if-block "hasDormant"
[03:02:49.440]            // =>  FALSE
[03:02:49.440]          // skip if-block "hasDormant"
[03:02:49.440]        </control>
[03:02:49.440]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:49.440]          // if-block "!hasDormant"
[03:02:49.440]            // =>  TRUE
[03:02:49.440]          <block atomic="false" info="">
[03:02:49.440]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:50.443]  
[03:02:50.443]  !!! E320 : DAP access error
[03:02:50.443]  
[03:02:50.452]          </block>
[03:02:50.452]          // end if-block "!hasDormant"
[03:02:50.452]        </control>
[03:02:50.452]        // end if-block "isSWJ"
[03:02:50.452]      </control>
[03:02:50.452]      // end if-block "protType == 2"
[03:02:50.452]    </control>
[03:02:50.453]  </sequence>
[03:02:50.453]  
[03:02:50.703]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:50.703]  
[03:02:50.711]  <debugvars>
[03:02:50.711]    // Pre-defined
[03:02:50.711]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:50.711]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:50.711]    __dp=0x00000000
[03:02:50.711]    __ap=0x00000000
[03:02:50.711]    __traceout=0x00000000      (Trace Disabled)
[03:02:50.711]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:50.711]    __FlashAddr=0x00000000
[03:02:50.711]    __FlashLen=0x00000000
[03:02:50.711]    __FlashArg=0x00000000
[03:02:50.711]    __FlashOp=0x00000000
[03:02:50.711]    __Result=0x00000000
[03:02:50.711]  </debugvars>
[03:02:50.711]  
[03:02:50.711]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:50.711]    <block atomic="false" info="">
[03:02:50.711]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:50.711]        // -> [isSWJ <= 0x00000001]
[03:02:50.711]      __var hasDormant = __protocol & 0x00020000;
[03:02:50.711]        // -> [hasDormant <= 0x00000000]
[03:02:50.711]      __var protType   = __protocol & 0x0000FFFF;
[03:02:50.711]        // -> [protType <= 0x00000002]
[03:02:50.711]    </block>
[03:02:50.711]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:50.711]      // if-block "protType == 1"
[03:02:50.711]        // =>  FALSE
[03:02:50.711]      // skip if-block "protType == 1"
[03:02:50.711]    </control>
[03:02:50.711]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:50.715]      // if-block "protType == 2"
[03:02:50.715]        // =>  TRUE
[03:02:50.715]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:50.715]        // if-block "isSWJ"
[03:02:50.715]          // =>  TRUE
[03:02:50.715]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:50.715]          // if-block "hasDormant"
[03:02:50.715]            // =>  FALSE
[03:02:50.715]          // skip if-block "hasDormant"
[03:02:50.715]        </control>
[03:02:50.715]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:50.715]          // if-block "!hasDormant"
[03:02:50.715]            // =>  TRUE
[03:02:50.715]          <block atomic="false" info="">
[03:02:50.715]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:51.726]  
[03:02:51.726]  !!! E320 : DAP access error
[03:02:51.726]  
[03:02:51.734]          </block>
[03:02:51.734]          // end if-block "!hasDormant"
[03:02:51.734]        </control>
[03:02:51.734]        // end if-block "isSWJ"
[03:02:51.734]      </control>
[03:02:51.734]      // end if-block "protType == 2"
[03:02:51.734]    </control>
[03:02:51.734]  </sequence>
[03:02:51.734]  
[03:02:51.991]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:51.991]  
[03:02:51.999]  <debugvars>
[03:02:51.999]    // Pre-defined
[03:02:51.999]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:51.999]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:51.999]    __dp=0x00000000
[03:02:51.999]    __ap=0x00000000
[03:02:51.999]    __traceout=0x00000000      (Trace Disabled)
[03:02:51.999]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:51.999]    __FlashAddr=0x00000000
[03:02:51.999]    __FlashLen=0x00000000
[03:02:51.999]    __FlashArg=0x00000000
[03:02:51.999]    __FlashOp=0x00000000
[03:02:51.999]    __Result=0x00000000
[03:02:51.999]  </debugvars>
[03:02:51.999]  
[03:02:51.999]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:51.999]    <block atomic="false" info="">
[03:02:51.999]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:51.999]        // -> [isSWJ <= 0x00000001]
[03:02:51.999]      __var hasDormant = __protocol & 0x00020000;
[03:02:51.999]        // -> [hasDormant <= 0x00000000]
[03:02:51.999]      __var protType   = __protocol & 0x0000FFFF;
[03:02:51.999]        // -> [protType <= 0x00000002]
[03:02:51.999]    </block>
[03:02:51.999]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:51.999]      // if-block "protType == 1"
[03:02:51.999]        // =>  FALSE
[03:02:51.999]      // skip if-block "protType == 1"
[03:02:51.999]    </control>
[03:02:51.999]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:51.999]      // if-block "protType == 2"
[03:02:51.999]        // =>  TRUE
[03:02:51.999]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:52.003]        // if-block "isSWJ"
[03:02:52.003]          // =>  TRUE
[03:02:52.003]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:52.003]          // if-block "hasDormant"
[03:02:52.003]            // =>  FALSE
[03:02:52.003]          // skip if-block "hasDormant"
[03:02:52.003]        </control>
[03:02:52.003]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:52.003]          // if-block "!hasDormant"
[03:02:52.003]            // =>  TRUE
[03:02:52.003]          <block atomic="false" info="">
[03:02:52.003]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:53.008]  
[03:02:53.008]  !!! E320 : DAP access error
[03:02:53.008]  
[03:02:53.008]          </block>
[03:02:53.008]          // end if-block "!hasDormant"
[03:02:53.008]        </control>
[03:02:53.008]        // end if-block "isSWJ"
[03:02:53.008]      </control>
[03:02:53.008]      // end if-block "protType == 2"
[03:02:53.008]    </control>
[03:02:53.008]  </sequence>
[03:02:53.008]  
[03:02:53.260]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:53.260]  
[03:02:53.269]  <debugvars>
[03:02:53.269]    // Pre-defined
[03:02:53.269]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:53.269]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:53.269]    __dp=0x00000000
[03:02:53.269]    __ap=0x00000000
[03:02:53.269]    __traceout=0x00000000      (Trace Disabled)
[03:02:53.269]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:53.269]    __FlashAddr=0x00000000
[03:02:53.269]    __FlashLen=0x00000000
[03:02:53.269]    __FlashArg=0x00000000
[03:02:53.269]    __FlashOp=0x00000000
[03:02:53.269]    __Result=0x00000000
[03:02:53.269]  </debugvars>
[03:02:53.269]  
[03:02:53.269]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:53.269]    <block atomic="false" info="">
[03:02:53.269]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:53.269]        // -> [isSWJ <= 0x00000001]
[03:02:53.269]      __var hasDormant = __protocol & 0x00020000;
[03:02:53.269]        // -> [hasDormant <= 0x00000000]
[03:02:53.269]      __var protType   = __protocol & 0x0000FFFF;
[03:02:53.269]        // -> [protType <= 0x00000002]
[03:02:53.269]    </block>
[03:02:53.269]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:53.269]      // if-block "protType == 1"
[03:02:53.269]        // =>  FALSE
[03:02:53.269]      // skip if-block "protType == 1"
[03:02:53.269]    </control>
[03:02:53.269]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:53.269]      // if-block "protType == 2"
[03:02:53.269]        // =>  TRUE
[03:02:53.269]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:53.269]        // if-block "isSWJ"
[03:02:53.269]          // =>  TRUE
[03:02:53.269]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:53.269]          // if-block "hasDormant"
[03:02:53.273]            // =>  FALSE
[03:02:53.273]          // skip if-block "hasDormant"
[03:02:53.273]        </control>
[03:02:53.273]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:53.273]          // if-block "!hasDormant"
[03:02:53.273]            // =>  TRUE
[03:02:53.273]          <block atomic="false" info="">
[03:02:53.273]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:54.273]  
[03:02:54.273]  !!! E320 : DAP access error
[03:02:54.273]  
[03:02:54.273]          </block>
[03:02:54.273]          // end if-block "!hasDormant"
[03:02:54.273]        </control>
[03:02:54.273]        // end if-block "isSWJ"
[03:02:54.273]      </control>
[03:02:54.273]      // end if-block "protType == 2"
[03:02:54.273]    </control>
[03:02:54.273]  </sequence>
[03:02:54.273]  
[03:02:54.525]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:54.525]  
[03:02:54.534]  <debugvars>
[03:02:54.534]    // Pre-defined
[03:02:54.534]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:54.534]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:54.534]    __dp=0x00000000
[03:02:54.534]    __ap=0x00000000
[03:02:54.534]    __traceout=0x00000000      (Trace Disabled)
[03:02:54.534]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:54.534]    __FlashAddr=0x00000000
[03:02:54.534]    __FlashLen=0x00000000
[03:02:54.534]    __FlashArg=0x00000000
[03:02:54.534]    __FlashOp=0x00000000
[03:02:54.534]    __Result=0x00000000
[03:02:54.534]  </debugvars>
[03:02:54.534]  
[03:02:54.534]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:54.534]    <block atomic="false" info="">
[03:02:54.534]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:54.534]        // -> [isSWJ <= 0x00000001]
[03:02:54.534]      __var hasDormant = __protocol & 0x00020000;
[03:02:54.534]        // -> [hasDormant <= 0x00000000]
[03:02:54.534]      __var protType   = __protocol & 0x0000FFFF;
[03:02:54.534]        // -> [protType <= 0x00000002]
[03:02:54.534]    </block>
[03:02:54.537]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:54.537]      // if-block "protType == 1"
[03:02:54.537]        // =>  FALSE
[03:02:54.537]      // skip if-block "protType == 1"
[03:02:54.537]    </control>
[03:02:54.537]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:54.537]      // if-block "protType == 2"
[03:02:54.537]        // =>  TRUE
[03:02:54.537]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:54.537]        // if-block "isSWJ"
[03:02:54.537]          // =>  TRUE
[03:02:54.537]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:54.537]          // if-block "hasDormant"
[03:02:54.537]            // =>  FALSE
[03:02:54.537]          // skip if-block "hasDormant"
[03:02:54.537]        </control>
[03:02:54.537]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:54.537]          // if-block "!hasDormant"
[03:02:54.537]            // =>  TRUE
[03:02:54.537]          <block atomic="false" info="">
[03:02:54.537]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:55.543]  
[03:02:55.543]  !!! E320 : DAP access error
[03:02:55.543]  
[03:02:55.543]          </block>
[03:02:55.543]          // end if-block "!hasDormant"
[03:02:55.543]        </control>
[03:02:55.543]        // end if-block "isSWJ"
[03:02:55.543]      </control>
[03:02:55.543]      // end if-block "protType == 2"
[03:02:55.543]    </control>
[03:02:55.543]  </sequence>
[03:02:55.543]  
[03:02:55.804]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:55.804]  
[03:02:55.813]  <debugvars>
[03:02:55.813]    // Pre-defined
[03:02:55.813]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:55.813]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:55.813]    __dp=0x00000000
[03:02:55.813]    __ap=0x00000000
[03:02:55.813]    __traceout=0x00000000      (Trace Disabled)
[03:02:55.813]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:55.813]    __FlashAddr=0x00000000
[03:02:55.813]    __FlashLen=0x00000000
[03:02:55.813]    __FlashArg=0x00000000
[03:02:55.813]    __FlashOp=0x00000000
[03:02:55.813]    __Result=0x00000000
[03:02:55.813]  </debugvars>
[03:02:55.813]  
[03:02:55.813]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:55.813]    <block atomic="false" info="">
[03:02:55.813]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:55.815]        // -> [isSWJ <= 0x00000001]
[03:02:55.815]      __var hasDormant = __protocol & 0x00020000;
[03:02:55.815]        // -> [hasDormant <= 0x00000000]
[03:02:55.815]      __var protType   = __protocol & 0x0000FFFF;
[03:02:55.815]        // -> [protType <= 0x00000002]
[03:02:55.815]    </block>
[03:02:55.815]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:55.815]      // if-block "protType == 1"
[03:02:55.815]        // =>  FALSE
[03:02:55.815]      // skip if-block "protType == 1"
[03:02:55.815]    </control>
[03:02:55.815]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:55.815]      // if-block "protType == 2"
[03:02:55.816]        // =>  TRUE
[03:02:55.816]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:55.816]        // if-block "isSWJ"
[03:02:55.816]          // =>  TRUE
[03:02:55.816]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:55.816]          // if-block "hasDormant"
[03:02:55.816]            // =>  FALSE
[03:02:55.816]          // skip if-block "hasDormant"
[03:02:55.816]        </control>
[03:02:55.817]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:55.817]          // if-block "!hasDormant"
[03:02:55.817]            // =>  TRUE
[03:02:55.817]          <block atomic="false" info="">
[03:02:55.817]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:56.822]  
[03:02:56.822]  !!! E320 : DAP access error
[03:02:56.822]  
[03:02:56.822]          </block>
[03:02:56.822]          // end if-block "!hasDormant"
[03:02:56.822]        </control>
[03:02:56.822]        // end if-block "isSWJ"
[03:02:56.822]      </control>
[03:02:56.822]      // end if-block "protType == 2"
[03:02:56.822]    </control>
[03:02:56.822]  </sequence>
[03:02:56.822]  
[03:02:57.074]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:57.074]  
[03:02:57.082]  <debugvars>
[03:02:57.082]    // Pre-defined
[03:02:57.082]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:57.082]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:57.082]    __dp=0x00000000
[03:02:57.082]    __ap=0x00000000
[03:02:57.082]    __traceout=0x00000000      (Trace Disabled)
[03:02:57.082]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:57.082]    __FlashAddr=0x00000000
[03:02:57.082]    __FlashLen=0x00000000
[03:02:57.082]    __FlashArg=0x00000000
[03:02:57.082]    __FlashOp=0x00000000
[03:02:57.082]    __Result=0x00000000
[03:02:57.082]  </debugvars>
[03:02:57.082]  
[03:02:57.082]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:57.082]    <block atomic="false" info="">
[03:02:57.082]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:57.082]        // -> [isSWJ <= 0x00000001]
[03:02:57.082]      __var hasDormant = __protocol & 0x00020000;
[03:02:57.082]        // -> [hasDormant <= 0x00000000]
[03:02:57.082]      __var protType   = __protocol & 0x0000FFFF;
[03:02:57.082]        // -> [protType <= 0x00000002]
[03:02:57.082]    </block>
[03:02:57.082]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:57.082]      // if-block "protType == 1"
[03:02:57.082]        // =>  FALSE
[03:02:57.082]      // skip if-block "protType == 1"
[03:02:57.082]    </control>
[03:02:57.082]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:57.082]      // if-block "protType == 2"
[03:02:57.082]        // =>  TRUE
[03:02:57.082]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:57.082]        // if-block "isSWJ"
[03:02:57.082]          // =>  TRUE
[03:02:57.082]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:57.082]          // if-block "hasDormant"
[03:02:57.086]            // =>  FALSE
[03:02:57.086]          // skip if-block "hasDormant"
[03:02:57.086]        </control>
[03:02:57.086]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:57.086]          // if-block "!hasDormant"
[03:02:57.086]            // =>  TRUE
[03:02:57.086]          <block atomic="false" info="">
[03:02:57.086]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:58.088]  
[03:02:58.088]  !!! E320 : DAP access error
[03:02:58.088]  
[03:02:58.088]          </block>
[03:02:58.088]          // end if-block "!hasDormant"
[03:02:58.088]        </control>
[03:02:58.088]        // end if-block "isSWJ"
[03:02:58.088]      </control>
[03:02:58.088]      // end if-block "protType == 2"
[03:02:58.088]    </control>
[03:02:58.088]  </sequence>
[03:02:58.088]  
[03:02:58.342]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:58.342]  
[03:02:58.342]  <debugvars>
[03:02:58.342]    // Pre-defined
[03:02:58.342]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:58.342]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:58.342]    __dp=0x00000000
[03:02:58.342]    __ap=0x00000000
[03:02:58.342]    __traceout=0x00000000      (Trace Disabled)
[03:02:58.342]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:58.342]    __FlashAddr=0x00000000
[03:02:58.342]    __FlashLen=0x00000000
[03:02:58.342]    __FlashArg=0x00000000
[03:02:58.342]    __FlashOp=0x00000000
[03:02:58.342]    __Result=0x00000000
[03:02:58.342]  </debugvars>
[03:02:58.342]  
[03:02:58.342]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:58.342]    <block atomic="false" info="">
[03:02:58.342]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:58.342]        // -> [isSWJ <= 0x00000001]
[03:02:58.342]      __var hasDormant = __protocol & 0x00020000;
[03:02:58.342]        // -> [hasDormant <= 0x00000000]
[03:02:58.342]      __var protType   = __protocol & 0x0000FFFF;
[03:02:58.342]        // -> [protType <= 0x00000002]
[03:02:58.342]    </block>
[03:02:58.342]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:58.342]      // if-block "protType == 1"
[03:02:58.342]        // =>  FALSE
[03:02:58.342]      // skip if-block "protType == 1"
[03:02:58.346]    </control>
[03:02:58.346]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:58.346]      // if-block "protType == 2"
[03:02:58.346]        // =>  TRUE
[03:02:58.346]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:58.346]        // if-block "isSWJ"
[03:02:58.346]          // =>  TRUE
[03:02:58.346]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:58.346]          // if-block "hasDormant"
[03:02:58.346]            // =>  FALSE
[03:02:58.346]          // skip if-block "hasDormant"
[03:02:58.346]        </control>
[03:02:58.346]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:58.346]          // if-block "!hasDormant"
[03:02:58.346]            // =>  TRUE
[03:02:58.346]          <block atomic="false" info="">
[03:02:58.346]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:02:59.349]  
[03:02:59.349]  !!! E320 : DAP access error
[03:02:59.349]  
[03:02:59.357]          </block>
[03:02:59.357]          // end if-block "!hasDormant"
[03:02:59.357]        </control>
[03:02:59.357]        // end if-block "isSWJ"
[03:02:59.357]      </control>
[03:02:59.357]      // end if-block "protType == 2"
[03:02:59.357]    </control>
[03:02:59.357]  </sequence>
[03:02:59.357]  
[03:02:59.616]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:02:59.616]  
[03:02:59.617]  <debugvars>
[03:02:59.617]    // Pre-defined
[03:02:59.617]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:02:59.617]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:02:59.617]    __dp=0x00000000
[03:02:59.617]    __ap=0x00000000
[03:02:59.617]    __traceout=0x00000000      (Trace Disabled)
[03:02:59.617]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:02:59.617]    __FlashAddr=0x00000000
[03:02:59.617]    __FlashLen=0x00000000
[03:02:59.617]    __FlashArg=0x00000000
[03:02:59.617]    __FlashOp=0x00000000
[03:02:59.617]    __Result=0x00000000
[03:02:59.617]  </debugvars>
[03:02:59.617]  
[03:02:59.617]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:02:59.617]    <block atomic="false" info="">
[03:02:59.617]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:02:59.617]        // -> [isSWJ <= 0x00000001]
[03:02:59.617]      __var hasDormant = __protocol & 0x00020000;
[03:02:59.617]        // -> [hasDormant <= 0x00000000]
[03:02:59.617]      __var protType   = __protocol & 0x0000FFFF;
[03:02:59.617]        // -> [protType <= 0x00000002]
[03:02:59.619]    </block>
[03:02:59.619]    <control if="protType == 1" while="" timeout="0" info="">
[03:02:59.619]      // if-block "protType == 1"
[03:02:59.619]        // =>  FALSE
[03:02:59.619]      // skip if-block "protType == 1"
[03:02:59.619]    </control>
[03:02:59.619]    <control if="protType == 2" while="" timeout="0" info="">
[03:02:59.619]      // if-block "protType == 2"
[03:02:59.619]        // =>  TRUE
[03:02:59.619]      <control if="isSWJ" while="" timeout="0" info="">
[03:02:59.619]        // if-block "isSWJ"
[03:02:59.619]          // =>  TRUE
[03:02:59.619]        <control if="hasDormant" while="" timeout="0" info="">
[03:02:59.619]          // if-block "hasDormant"
[03:02:59.619]            // =>  FALSE
[03:02:59.619]          // skip if-block "hasDormant"
[03:02:59.619]        </control>
[03:02:59.619]        <control if="!hasDormant" while="" timeout="0" info="">
[03:02:59.619]          // if-block "!hasDormant"
[03:02:59.619]            // =>  TRUE
[03:02:59.619]          <block atomic="false" info="">
[03:02:59.619]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:00.631]  
[03:03:00.631]  !!! E320 : DAP access error
[03:03:00.631]  
[03:03:00.639]          </block>
[03:03:00.639]          // end if-block "!hasDormant"
[03:03:00.639]        </control>
[03:03:00.639]        // end if-block "isSWJ"
[03:03:00.639]      </control>
[03:03:00.639]      // end if-block "protType == 2"
[03:03:00.639]    </control>
[03:03:00.639]  </sequence>
[03:03:00.639]  
[03:03:00.900]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:00.900]  
[03:03:00.900]  <debugvars>
[03:03:00.900]    // Pre-defined
[03:03:00.900]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:00.900]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:00.900]    __dp=0x00000000
[03:03:00.900]    __ap=0x00000000
[03:03:00.900]    __traceout=0x00000000      (Trace Disabled)
[03:03:00.900]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:00.900]    __FlashAddr=0x00000000
[03:03:00.900]    __FlashLen=0x00000000
[03:03:00.900]    __FlashArg=0x00000000
[03:03:00.900]    __FlashOp=0x00000000
[03:03:00.900]    __Result=0x00000000
[03:03:00.900]  </debugvars>
[03:03:00.900]  
[03:03:00.900]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:00.900]    <block atomic="false" info="">
[03:03:00.900]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:00.900]        // -> [isSWJ <= 0x00000001]
[03:03:00.900]      __var hasDormant = __protocol & 0x00020000;
[03:03:00.900]        // -> [hasDormant <= 0x00000000]
[03:03:00.900]      __var protType   = __protocol & 0x0000FFFF;
[03:03:00.900]        // -> [protType <= 0x00000002]
[03:03:00.900]    </block>
[03:03:00.900]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:00.900]      // if-block "protType == 1"
[03:03:00.900]        // =>  FALSE
[03:03:00.900]      // skip if-block "protType == 1"
[03:03:00.900]    </control>
[03:03:00.900]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:00.900]      // if-block "protType == 2"
[03:03:00.900]        // =>  TRUE
[03:03:00.900]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:00.900]        // if-block "isSWJ"
[03:03:00.900]          // =>  TRUE
[03:03:00.900]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:00.904]          // if-block "hasDormant"
[03:03:00.904]            // =>  FALSE
[03:03:00.904]          // skip if-block "hasDormant"
[03:03:00.904]        </control>
[03:03:00.904]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:00.904]          // if-block "!hasDormant"
[03:03:00.904]            // =>  TRUE
[03:03:00.904]          <block atomic="false" info="">
[03:03:00.904]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:01.911]  
[03:03:01.911]  !!! E320 : DAP access error
[03:03:01.911]  
[03:03:01.920]          </block>
[03:03:01.920]          // end if-block "!hasDormant"
[03:03:01.920]        </control>
[03:03:01.920]        // end if-block "isSWJ"
[03:03:01.920]      </control>
[03:03:01.920]      // end if-block "protType == 2"
[03:03:01.920]    </control>
[03:03:01.920]  </sequence>
[03:03:01.920]  
[03:03:02.181]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:02.181]  
[03:03:02.190]  <debugvars>
[03:03:02.190]    // Pre-defined
[03:03:02.190]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:02.190]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:02.190]    __dp=0x00000000
[03:03:02.190]    __ap=0x00000000
[03:03:02.190]    __traceout=0x00000000      (Trace Disabled)
[03:03:02.190]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:02.190]    __FlashAddr=0x00000000
[03:03:02.190]    __FlashLen=0x00000000
[03:03:02.190]    __FlashArg=0x00000000
[03:03:02.190]    __FlashOp=0x00000000
[03:03:02.190]    __Result=0x00000000
[03:03:02.190]  </debugvars>
[03:03:02.190]  
[03:03:02.190]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:02.190]    <block atomic="false" info="">
[03:03:02.190]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:02.190]        // -> [isSWJ <= 0x00000001]
[03:03:02.190]      __var hasDormant = __protocol & 0x00020000;
[03:03:02.190]        // -> [hasDormant <= 0x00000000]
[03:03:02.190]      __var protType   = __protocol & 0x0000FFFF;
[03:03:02.190]        // -> [protType <= 0x00000002]
[03:03:02.190]    </block>
[03:03:02.190]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:02.190]      // if-block "protType == 1"
[03:03:02.190]        // =>  FALSE
[03:03:02.193]      // skip if-block "protType == 1"
[03:03:02.193]    </control>
[03:03:02.193]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:02.193]      // if-block "protType == 2"
[03:03:02.193]        // =>  TRUE
[03:03:02.193]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:02.193]        // if-block "isSWJ"
[03:03:02.193]          // =>  TRUE
[03:03:02.193]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:02.193]          // if-block "hasDormant"
[03:03:02.193]            // =>  FALSE
[03:03:02.193]          // skip if-block "hasDormant"
[03:03:02.193]        </control>
[03:03:02.193]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:02.193]          // if-block "!hasDormant"
[03:03:02.193]            // =>  TRUE
[03:03:02.193]          <block atomic="false" info="">
[03:03:02.193]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:03.194]  
[03:03:03.194]  !!! E320 : DAP access error
[03:03:03.194]  
[03:03:03.204]          </block>
[03:03:03.204]          // end if-block "!hasDormant"
[03:03:03.204]        </control>
[03:03:03.204]        // end if-block "isSWJ"
[03:03:03.204]      </control>
[03:03:03.204]      // end if-block "protType == 2"
[03:03:03.204]    </control>
[03:03:03.204]  </sequence>
[03:03:03.204]  
[03:03:03.459]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:03.459]  
[03:03:03.468]  <debugvars>
[03:03:03.468]    // Pre-defined
[03:03:03.468]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:03.468]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:03.468]    __dp=0x00000000
[03:03:03.468]    __ap=0x00000000
[03:03:03.468]    __traceout=0x00000000      (Trace Disabled)
[03:03:03.468]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:03.468]    __FlashAddr=0x00000000
[03:03:03.468]    __FlashLen=0x00000000
[03:03:03.468]    __FlashArg=0x00000000
[03:03:03.468]    __FlashOp=0x00000000
[03:03:03.468]    __Result=0x00000000
[03:03:03.468]  </debugvars>
[03:03:03.468]  
[03:03:03.468]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:03.468]    <block atomic="false" info="">
[03:03:03.468]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:03.468]        // -> [isSWJ <= 0x00000001]
[03:03:03.468]      __var hasDormant = __protocol & 0x00020000;
[03:03:03.468]        // -> [hasDormant <= 0x00000000]
[03:03:03.468]      __var protType   = __protocol & 0x0000FFFF;
[03:03:03.468]        // -> [protType <= 0x00000002]
[03:03:03.468]    </block>
[03:03:03.471]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:03.471]      // if-block "protType == 1"
[03:03:03.471]        // =>  FALSE
[03:03:03.471]      // skip if-block "protType == 1"
[03:03:03.471]    </control>
[03:03:03.471]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:03.471]      // if-block "protType == 2"
[03:03:03.471]        // =>  TRUE
[03:03:03.471]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:03.471]        // if-block "isSWJ"
[03:03:03.471]          // =>  TRUE
[03:03:03.471]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:03.471]          // if-block "hasDormant"
[03:03:03.471]            // =>  FALSE
[03:03:03.471]          // skip if-block "hasDormant"
[03:03:03.471]        </control>
[03:03:03.471]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:03.471]          // if-block "!hasDormant"
[03:03:03.471]            // =>  TRUE
[03:03:03.471]          <block atomic="false" info="">
[03:03:03.471]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:04.474]  
[03:03:04.474]  !!! E320 : DAP access error
[03:03:04.474]  
[03:03:04.483]          </block>
[03:03:04.483]          // end if-block "!hasDormant"
[03:03:04.483]        </control>
[03:03:04.483]        // end if-block "isSWJ"
[03:03:04.483]      </control>
[03:03:04.483]      // end if-block "protType == 2"
[03:03:04.483]    </control>
[03:03:04.483]  </sequence>
[03:03:04.483]  
[03:03:04.735]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:04.735]  
[03:03:04.743]  <debugvars>
[03:03:04.743]    // Pre-defined
[03:03:04.743]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:04.743]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:04.743]    __dp=0x00000000
[03:03:04.743]    __ap=0x00000000
[03:03:04.743]    __traceout=0x00000000      (Trace Disabled)
[03:03:04.743]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:04.743]    __FlashAddr=0x00000000
[03:03:04.743]    __FlashLen=0x00000000
[03:03:04.743]    __FlashArg=0x00000000
[03:03:04.743]    __FlashOp=0x00000000
[03:03:04.743]    __Result=0x00000000
[03:03:04.743]  </debugvars>
[03:03:04.743]  
[03:03:04.743]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:04.743]    <block atomic="false" info="">
[03:03:04.743]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:04.743]        // -> [isSWJ <= 0x00000001]
[03:03:04.743]      __var hasDormant = __protocol & 0x00020000;
[03:03:04.746]        // -> [hasDormant <= 0x00000000]
[03:03:04.746]      __var protType   = __protocol & 0x0000FFFF;
[03:03:04.746]        // -> [protType <= 0x00000002]
[03:03:04.746]    </block>
[03:03:04.746]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:04.746]      // if-block "protType == 1"
[03:03:04.746]        // =>  FALSE
[03:03:04.746]      // skip if-block "protType == 1"
[03:03:04.746]    </control>
[03:03:04.746]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:04.746]      // if-block "protType == 2"
[03:03:04.746]        // =>  TRUE
[03:03:04.746]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:04.746]        // if-block "isSWJ"
[03:03:04.746]          // =>  TRUE
[03:03:04.746]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:04.746]          // if-block "hasDormant"
[03:03:04.746]            // =>  FALSE
[03:03:04.746]          // skip if-block "hasDormant"
[03:03:04.746]        </control>
[03:03:04.746]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:04.746]          // if-block "!hasDormant"
[03:03:04.746]            // =>  TRUE
[03:03:04.746]          <block atomic="false" info="">
[03:03:04.746]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:05.747]  
[03:03:05.747]  !!! E320 : DAP access error
[03:03:05.747]  
[03:03:05.756]          </block>
[03:03:05.756]          // end if-block "!hasDormant"
[03:03:05.756]        </control>
[03:03:05.756]        // end if-block "isSWJ"
[03:03:05.756]      </control>
[03:03:05.756]      // end if-block "protType == 2"
[03:03:05.756]    </control>
[03:03:05.756]  </sequence>
[03:03:05.756]  
[03:03:06.009]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:06.009]  
[03:03:06.017]  <debugvars>
[03:03:06.017]    // Pre-defined
[03:03:06.017]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:06.017]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:06.017]    __dp=0x00000000
[03:03:06.017]    __ap=0x00000000
[03:03:06.018]    __traceout=0x00000000      (Trace Disabled)
[03:03:06.018]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:06.018]    __FlashAddr=0x00000000
[03:03:06.018]    __FlashLen=0x00000000
[03:03:06.018]    __FlashArg=0x00000000
[03:03:06.018]    __FlashOp=0x00000000
[03:03:06.018]    __Result=0x00000000
[03:03:06.018]  </debugvars>
[03:03:06.018]  
[03:03:06.018]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:06.018]    <block atomic="false" info="">
[03:03:06.018]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:06.018]        // -> [isSWJ <= 0x00000001]
[03:03:06.020]      __var hasDormant = __protocol & 0x00020000;
[03:03:06.020]        // -> [hasDormant <= 0x00000000]
[03:03:06.020]      __var protType   = __protocol & 0x0000FFFF;
[03:03:06.020]        // -> [protType <= 0x00000002]
[03:03:06.020]    </block>
[03:03:06.020]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:06.020]      // if-block "protType == 1"
[03:03:06.020]        // =>  FALSE
[03:03:06.020]      // skip if-block "protType == 1"
[03:03:06.020]    </control>
[03:03:06.020]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:06.020]      // if-block "protType == 2"
[03:03:06.021]        // =>  TRUE
[03:03:06.021]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:06.021]        // if-block "isSWJ"
[03:03:06.021]          // =>  TRUE
[03:03:06.021]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:06.021]          // if-block "hasDormant"
[03:03:06.021]            // =>  FALSE
[03:03:06.021]          // skip if-block "hasDormant"
[03:03:06.021]        </control>
[03:03:06.022]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:06.022]          // if-block "!hasDormant"
[03:03:06.022]            // =>  TRUE
[03:03:06.022]          <block atomic="false" info="">
[03:03:06.022]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:07.024]  
[03:03:07.024]  !!! E320 : DAP access error
[03:03:07.024]  
[03:03:07.033]          </block>
[03:03:07.033]          // end if-block "!hasDormant"
[03:03:07.033]        </control>
[03:03:07.033]        // end if-block "isSWJ"
[03:03:07.033]      </control>
[03:03:07.033]      // end if-block "protType == 2"
[03:03:07.033]    </control>
[03:03:07.033]  </sequence>
[03:03:07.033]  
[03:03:07.290]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:07.290]  
[03:03:07.300]  <debugvars>
[03:03:07.300]    // Pre-defined
[03:03:07.300]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:07.300]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:07.300]    __dp=0x00000000
[03:03:07.300]    __ap=0x00000000
[03:03:07.300]    __traceout=0x00000000      (Trace Disabled)
[03:03:07.300]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:07.300]    __FlashAddr=0x00000000
[03:03:07.300]    __FlashLen=0x00000000
[03:03:07.300]    __FlashArg=0x00000000
[03:03:07.300]    __FlashOp=0x00000000
[03:03:07.300]    __Result=0x00000000
[03:03:07.300]  </debugvars>
[03:03:07.300]  
[03:03:07.300]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:07.300]    <block atomic="false" info="">
[03:03:07.300]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:07.302]        // -> [isSWJ <= 0x00000001]
[03:03:07.302]      __var hasDormant = __protocol & 0x00020000;
[03:03:07.302]        // -> [hasDormant <= 0x00000000]
[03:03:07.302]      __var protType   = __protocol & 0x0000FFFF;
[03:03:07.302]        // -> [protType <= 0x00000002]
[03:03:07.302]    </block>
[03:03:07.302]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:07.302]      // if-block "protType == 1"
[03:03:07.302]        // =>  FALSE
[03:03:07.302]      // skip if-block "protType == 1"
[03:03:07.302]    </control>
[03:03:07.302]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:07.302]      // if-block "protType == 2"
[03:03:07.302]        // =>  TRUE
[03:03:07.302]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:07.302]        // if-block "isSWJ"
[03:03:07.302]          // =>  TRUE
[03:03:07.302]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:07.302]          // if-block "hasDormant"
[03:03:07.302]            // =>  FALSE
[03:03:07.302]          // skip if-block "hasDormant"
[03:03:07.302]        </control>
[03:03:07.302]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:07.302]          // if-block "!hasDormant"
[03:03:07.302]            // =>  TRUE
[03:03:07.302]          <block atomic="false" info="">
[03:03:07.302]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:08.302]  
[03:03:08.302]  !!! E320 : DAP access error
[03:03:08.302]  
[03:03:08.311]          </block>
[03:03:08.311]          // end if-block "!hasDormant"
[03:03:08.311]        </control>
[03:03:08.311]        // end if-block "isSWJ"
[03:03:08.311]      </control>
[03:03:08.311]      // end if-block "protType == 2"
[03:03:08.311]    </control>
[03:03:08.311]  </sequence>
[03:03:08.311]  
[03:03:08.572]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:08.572]  
[03:03:08.581]  <debugvars>
[03:03:08.581]    // Pre-defined
[03:03:08.581]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:08.581]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:08.581]    __dp=0x00000000
[03:03:08.581]    __ap=0x00000000
[03:03:08.581]    __traceout=0x00000000      (Trace Disabled)
[03:03:08.581]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:08.581]    __FlashAddr=0x00000000
[03:03:08.581]    __FlashLen=0x00000000
[03:03:08.581]    __FlashArg=0x00000000
[03:03:08.581]    __FlashOp=0x00000000
[03:03:08.581]    __Result=0x00000000
[03:03:08.581]  </debugvars>
[03:03:08.581]  
[03:03:08.581]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:08.581]    <block atomic="false" info="">
[03:03:08.581]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:08.581]        // -> [isSWJ <= 0x00000001]
[03:03:08.581]      __var hasDormant = __protocol & 0x00020000;
[03:03:08.581]        // -> [hasDormant <= 0x00000000]
[03:03:08.581]      __var protType   = __protocol & 0x0000FFFF;
[03:03:08.584]        // -> [protType <= 0x00000002]
[03:03:08.584]    </block>
[03:03:08.584]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:08.584]      // if-block "protType == 1"
[03:03:08.584]        // =>  FALSE
[03:03:08.584]      // skip if-block "protType == 1"
[03:03:08.584]    </control>
[03:03:08.584]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:08.584]      // if-block "protType == 2"
[03:03:08.584]        // =>  TRUE
[03:03:08.584]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:08.584]        // if-block "isSWJ"
[03:03:08.584]          // =>  TRUE
[03:03:08.584]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:08.584]          // if-block "hasDormant"
[03:03:08.584]            // =>  FALSE
[03:03:08.584]          // skip if-block "hasDormant"
[03:03:08.584]        </control>
[03:03:08.584]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:08.584]          // if-block "!hasDormant"
[03:03:08.584]            // =>  TRUE
[03:03:08.584]          <block atomic="false" info="">
[03:03:08.584]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:09.591]  
[03:03:09.591]  !!! E320 : DAP access error
[03:03:09.591]  
[03:03:09.600]          </block>
[03:03:09.600]          // end if-block "!hasDormant"
[03:03:09.600]        </control>
[03:03:09.600]        // end if-block "isSWJ"
[03:03:09.600]      </control>
[03:03:09.600]      // end if-block "protType == 2"
[03:03:09.600]    </control>
[03:03:09.600]  </sequence>
[03:03:09.600]  
[03:03:09.855]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:09.855]  
[03:03:09.865]  <debugvars>
[03:03:09.865]    // Pre-defined
[03:03:09.865]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:09.865]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:09.865]    __dp=0x00000000
[03:03:09.865]    __ap=0x00000000
[03:03:09.865]    __traceout=0x00000000      (Trace Disabled)
[03:03:09.865]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:09.865]    __FlashAddr=0x00000000
[03:03:09.865]    __FlashLen=0x00000000
[03:03:09.865]    __FlashArg=0x00000000
[03:03:09.865]    __FlashOp=0x00000000
[03:03:09.865]    __Result=0x00000000
[03:03:09.865]  </debugvars>
[03:03:09.867]  
[03:03:09.867]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:09.867]    <block atomic="false" info="">
[03:03:09.867]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:09.867]        // -> [isSWJ <= 0x00000001]
[03:03:09.867]      __var hasDormant = __protocol & 0x00020000;
[03:03:09.867]        // -> [hasDormant <= 0x00000000]
[03:03:09.867]      __var protType   = __protocol & 0x0000FFFF;
[03:03:09.867]        // -> [protType <= 0x00000002]
[03:03:09.867]    </block>
[03:03:09.867]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:09.867]      // if-block "protType == 1"
[03:03:09.867]        // =>  FALSE
[03:03:09.867]      // skip if-block "protType == 1"
[03:03:09.867]    </control>
[03:03:09.867]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:09.867]      // if-block "protType == 2"
[03:03:09.867]        // =>  TRUE
[03:03:09.867]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:09.867]        // if-block "isSWJ"
[03:03:09.867]          // =>  TRUE
[03:03:09.867]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:09.867]          // if-block "hasDormant"
[03:03:09.867]            // =>  FALSE
[03:03:09.867]          // skip if-block "hasDormant"
[03:03:09.867]        </control>
[03:03:09.871]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:09.871]          // if-block "!hasDormant"
[03:03:09.871]            // =>  TRUE
[03:03:09.871]          <block atomic="false" info="">
[03:03:09.871]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:10.882]  
[03:03:10.882]  !!! E320 : DAP access error
[03:03:10.882]  
[03:03:10.891]          </block>
[03:03:10.891]          // end if-block "!hasDormant"
[03:03:10.891]        </control>
[03:03:10.891]        // end if-block "isSWJ"
[03:03:10.891]      </control>
[03:03:10.891]      // end if-block "protType == 2"
[03:03:10.891]    </control>
[03:03:10.891]  </sequence>
[03:03:10.891]  
[03:03:11.147]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:11.147]  
[03:03:11.156]  <debugvars>
[03:03:11.156]    // Pre-defined
[03:03:11.156]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:11.156]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:11.156]    __dp=0x00000000
[03:03:11.156]    __ap=0x00000000
[03:03:11.156]    __traceout=0x00000000      (Trace Disabled)
[03:03:11.156]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:11.156]    __FlashAddr=0x00000000
[03:03:11.156]    __FlashLen=0x00000000
[03:03:11.156]    __FlashArg=0x00000000
[03:03:11.156]    __FlashOp=0x00000000
[03:03:11.156]    __Result=0x00000000
[03:03:11.156]  </debugvars>
[03:03:11.156]  
[03:03:11.156]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:11.156]    <block atomic="false" info="">
[03:03:11.156]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:11.156]        // -> [isSWJ <= 0x00000001]
[03:03:11.156]      __var hasDormant = __protocol & 0x00020000;
[03:03:11.156]        // -> [hasDormant <= 0x00000000]
[03:03:11.156]      __var protType   = __protocol & 0x0000FFFF;
[03:03:11.156]        // -> [protType <= 0x00000002]
[03:03:11.156]    </block>
[03:03:11.156]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:11.156]      // if-block "protType == 1"
[03:03:11.156]        // =>  FALSE
[03:03:11.156]      // skip if-block "protType == 1"
[03:03:11.159]    </control>
[03:03:11.159]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:11.159]      // if-block "protType == 2"
[03:03:11.159]        // =>  TRUE
[03:03:11.159]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:11.159]        // if-block "isSWJ"
[03:03:11.159]          // =>  TRUE
[03:03:11.159]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:11.159]          // if-block "hasDormant"
[03:03:11.159]            // =>  FALSE
[03:03:11.159]          // skip if-block "hasDormant"
[03:03:11.159]        </control>
[03:03:11.159]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:11.159]          // if-block "!hasDormant"
[03:03:11.159]            // =>  TRUE
[03:03:11.159]          <block atomic="false" info="">
[03:03:11.159]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:12.166]  
[03:03:12.166]  !!! E320 : DAP access error
[03:03:12.166]  
[03:03:12.174]          </block>
[03:03:12.174]          // end if-block "!hasDormant"
[03:03:12.174]        </control>
[03:03:12.174]        // end if-block "isSWJ"
[03:03:12.174]      </control>
[03:03:12.174]      // end if-block "protType == 2"
[03:03:12.174]    </control>
[03:03:12.174]  </sequence>
[03:03:12.174]  
[03:03:12.433]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:12.433]  
[03:03:12.442]  <debugvars>
[03:03:12.442]    // Pre-defined
[03:03:12.442]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:12.442]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:12.442]    __dp=0x00000000
[03:03:12.442]    __ap=0x00000000
[03:03:12.442]    __traceout=0x00000000      (Trace Disabled)
[03:03:12.442]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:12.442]    __FlashAddr=0x00000000
[03:03:12.442]    __FlashLen=0x00000000
[03:03:12.442]    __FlashArg=0x00000000
[03:03:12.442]    __FlashOp=0x00000000
[03:03:12.442]    __Result=0x00000000
[03:03:12.442]  </debugvars>
[03:03:12.442]  
[03:03:12.442]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:12.442]    <block atomic="false" info="">
[03:03:12.442]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:12.442]        // -> [isSWJ <= 0x00000001]
[03:03:12.442]      __var hasDormant = __protocol & 0x00020000;
[03:03:12.442]        // -> [hasDormant <= 0x00000000]
[03:03:12.445]      __var protType   = __protocol & 0x0000FFFF;
[03:03:12.445]        // -> [protType <= 0x00000002]
[03:03:12.445]    </block>
[03:03:12.445]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:12.445]      // if-block "protType == 1"
[03:03:12.445]        // =>  FALSE
[03:03:12.445]      // skip if-block "protType == 1"
[03:03:12.445]    </control>
[03:03:12.445]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:12.445]      // if-block "protType == 2"
[03:03:12.445]        // =>  TRUE
[03:03:12.445]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:12.445]        // if-block "isSWJ"
[03:03:12.445]          // =>  TRUE
[03:03:12.445]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:12.445]          // if-block "hasDormant"
[03:03:12.445]            // =>  FALSE
[03:03:12.445]          // skip if-block "hasDormant"
[03:03:12.445]        </control>
[03:03:12.445]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:12.445]          // if-block "!hasDormant"
[03:03:12.445]            // =>  TRUE
[03:03:12.445]          <block atomic="false" info="">
[03:03:12.445]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:13.445]  
[03:03:13.445]  !!! E320 : DAP access error
[03:03:13.445]  
[03:03:13.454]          </block>
[03:03:13.454]          // end if-block "!hasDormant"
[03:03:13.454]        </control>
[03:03:13.454]        // end if-block "isSWJ"
[03:03:13.454]      </control>
[03:03:13.454]      // end if-block "protType == 2"
[03:03:13.454]    </control>
[03:03:13.454]  </sequence>
[03:03:13.455]  
[03:03:13.711]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:13.711]  
[03:03:13.719]  <debugvars>
[03:03:13.719]    // Pre-defined
[03:03:13.719]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:13.719]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:13.719]    __dp=0x00000000
[03:03:13.720]    __ap=0x00000000
[03:03:13.720]    __traceout=0x00000000      (Trace Disabled)
[03:03:13.720]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:13.720]    __FlashAddr=0x00000000
[03:03:13.720]    __FlashLen=0x00000000
[03:03:13.720]    __FlashArg=0x00000000
[03:03:13.720]    __FlashOp=0x00000000
[03:03:13.720]    __Result=0x00000000
[03:03:13.720]  </debugvars>
[03:03:13.721]  
[03:03:13.721]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:13.721]    <block atomic="false" info="">
[03:03:13.721]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:13.721]        // -> [isSWJ <= 0x00000001]
[03:03:13.721]      __var hasDormant = __protocol & 0x00020000;
[03:03:13.721]        // -> [hasDormant <= 0x00000000]
[03:03:13.721]      __var protType   = __protocol & 0x0000FFFF;
[03:03:13.721]        // -> [protType <= 0x00000002]
[03:03:13.721]    </block>
[03:03:13.721]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:13.721]      // if-block "protType == 1"
[03:03:13.721]        // =>  FALSE
[03:03:13.721]      // skip if-block "protType == 1"
[03:03:13.721]    </control>
[03:03:13.721]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:13.721]      // if-block "protType == 2"
[03:03:13.723]        // =>  TRUE
[03:03:13.723]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:13.723]        // if-block "isSWJ"
[03:03:13.723]          // =>  TRUE
[03:03:13.723]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:13.723]          // if-block "hasDormant"
[03:03:13.723]            // =>  FALSE
[03:03:13.723]          // skip if-block "hasDormant"
[03:03:13.723]        </control>
[03:03:13.723]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:13.723]          // if-block "!hasDormant"
[03:03:13.723]            // =>  TRUE
[03:03:13.723]          <block atomic="false" info="">
[03:03:13.723]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:14.731]  
[03:03:14.731]  !!! E320 : DAP access error
[03:03:14.731]  
[03:03:14.731]          </block>
[03:03:14.731]          // end if-block "!hasDormant"
[03:03:14.731]        </control>
[03:03:14.731]        // end if-block "isSWJ"
[03:03:14.731]      </control>
[03:03:14.731]      // end if-block "protType == 2"
[03:03:14.731]    </control>
[03:03:14.731]  </sequence>
[03:03:14.731]  
[03:03:14.983]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:14.983]  
[03:03:14.992]  <debugvars>
[03:03:14.992]    // Pre-defined
[03:03:14.992]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:14.992]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:14.992]    __dp=0x00000000
[03:03:14.992]    __ap=0x00000000
[03:03:14.992]    __traceout=0x00000000      (Trace Disabled)
[03:03:14.992]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:14.992]    __FlashAddr=0x00000000
[03:03:14.992]    __FlashLen=0x00000000
[03:03:14.992]    __FlashArg=0x00000000
[03:03:14.992]    __FlashOp=0x00000000
[03:03:14.992]    __Result=0x00000000
[03:03:14.992]  </debugvars>
[03:03:14.992]  
[03:03:14.992]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:14.992]    <block atomic="false" info="">
[03:03:14.992]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:14.992]        // -> [isSWJ <= 0x00000001]
[03:03:14.992]      __var hasDormant = __protocol & 0x00020000;
[03:03:14.992]        // -> [hasDormant <= 0x00000000]
[03:03:14.992]      __var protType   = __protocol & 0x0000FFFF;
[03:03:14.992]        // -> [protType <= 0x00000002]
[03:03:14.992]    </block>
[03:03:14.992]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:14.992]      // if-block "protType == 1"
[03:03:14.992]        // =>  FALSE
[03:03:14.992]      // skip if-block "protType == 1"
[03:03:14.992]    </control>
[03:03:14.992]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:14.992]      // if-block "protType == 2"
[03:03:14.992]        // =>  TRUE
[03:03:14.992]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:14.992]        // if-block "isSWJ"
[03:03:14.992]          // =>  TRUE
[03:03:14.996]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:14.996]          // if-block "hasDormant"
[03:03:14.996]            // =>  FALSE
[03:03:14.996]          // skip if-block "hasDormant"
[03:03:14.996]        </control>
[03:03:14.996]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:14.996]          // if-block "!hasDormant"
[03:03:14.996]            // =>  TRUE
[03:03:14.996]          <block atomic="false" info="">
[03:03:14.996]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:16.006]  
[03:03:16.006]  !!! E320 : DAP access error
[03:03:16.006]  
[03:03:16.007]          </block>
[03:03:16.007]          // end if-block "!hasDormant"
[03:03:16.007]        </control>
[03:03:16.007]        // end if-block "isSWJ"
[03:03:16.007]      </control>
[03:03:16.007]      // end if-block "protType == 2"
[03:03:16.007]    </control>
[03:03:16.007]  </sequence>
[03:03:16.007]  
[03:03:16.259]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:16.259]  
[03:03:16.268]  <debugvars>
[03:03:16.268]    // Pre-defined
[03:03:16.268]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:16.268]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:16.268]    __dp=0x00000000
[03:03:16.268]    __ap=0x00000000
[03:03:16.268]    __traceout=0x00000000      (Trace Disabled)
[03:03:16.268]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:16.268]    __FlashAddr=0x00000000
[03:03:16.268]    __FlashLen=0x00000000
[03:03:16.268]    __FlashArg=0x00000000
[03:03:16.268]    __FlashOp=0x00000000
[03:03:16.268]    __Result=0x00000000
[03:03:16.268]  </debugvars>
[03:03:16.268]  
[03:03:16.268]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:16.268]    <block atomic="false" info="">
[03:03:16.268]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:16.268]        // -> [isSWJ <= 0x00000001]
[03:03:16.268]      __var hasDormant = __protocol & 0x00020000;
[03:03:16.268]        // -> [hasDormant <= 0x00000000]
[03:03:16.271]      __var protType   = __protocol & 0x0000FFFF;
[03:03:16.271]        // -> [protType <= 0x00000002]
[03:03:16.271]    </block>
[03:03:16.271]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:16.271]      // if-block "protType == 1"
[03:03:16.271]        // =>  FALSE
[03:03:16.271]      // skip if-block "protType == 1"
[03:03:16.271]    </control>
[03:03:16.271]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:16.271]      // if-block "protType == 2"
[03:03:16.271]        // =>  TRUE
[03:03:16.271]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:16.271]        // if-block "isSWJ"
[03:03:16.271]          // =>  TRUE
[03:03:16.271]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:16.271]          // if-block "hasDormant"
[03:03:16.271]            // =>  FALSE
[03:03:16.271]          // skip if-block "hasDormant"
[03:03:16.271]        </control>
[03:03:16.271]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:16.271]          // if-block "!hasDormant"
[03:03:16.271]            // =>  TRUE
[03:03:16.271]          <block atomic="false" info="">
[03:03:16.271]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:17.276]  
[03:03:17.276]  !!! E320 : DAP access error
[03:03:17.276]  
[03:03:17.276]          </block>
[03:03:17.276]          // end if-block "!hasDormant"
[03:03:17.276]        </control>
[03:03:17.277]        // end if-block "isSWJ"
[03:03:17.277]      </control>
[03:03:17.277]      // end if-block "protType == 2"
[03:03:17.277]    </control>
[03:03:17.277]  </sequence>
[03:03:17.277]  
[03:03:17.534]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:17.534]  
[03:03:17.543]  <debugvars>
[03:03:17.543]    // Pre-defined
[03:03:17.543]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:17.543]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:17.543]    __dp=0x00000000
[03:03:17.543]    __ap=0x00000000
[03:03:17.543]    __traceout=0x00000000      (Trace Disabled)
[03:03:17.543]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:17.543]    __FlashAddr=0x00000000
[03:03:17.543]    __FlashLen=0x00000000
[03:03:17.543]    __FlashArg=0x00000000
[03:03:17.543]    __FlashOp=0x00000000
[03:03:17.543]    __Result=0x00000000
[03:03:17.543]  </debugvars>
[03:03:17.543]  
[03:03:17.543]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:17.543]    <block atomic="false" info="">
[03:03:17.543]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:17.543]        // -> [isSWJ <= 0x00000001]
[03:03:17.543]      __var hasDormant = __protocol & 0x00020000;
[03:03:17.543]        // -> [hasDormant <= 0x00000000]
[03:03:17.543]      __var protType   = __protocol & 0x0000FFFF;
[03:03:17.543]        // -> [protType <= 0x00000002]
[03:03:17.543]    </block>
[03:03:17.543]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:17.543]      // if-block "protType == 1"
[03:03:17.543]        // =>  FALSE
[03:03:17.543]      // skip if-block "protType == 1"
[03:03:17.546]    </control>
[03:03:17.546]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:17.546]      // if-block "protType == 2"
[03:03:17.546]        // =>  TRUE
[03:03:17.546]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:17.546]        // if-block "isSWJ"
[03:03:17.546]          // =>  TRUE
[03:03:17.546]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:17.546]          // if-block "hasDormant"
[03:03:17.546]            // =>  FALSE
[03:03:17.546]          // skip if-block "hasDormant"
[03:03:17.546]        </control>
[03:03:17.546]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:17.546]          // if-block "!hasDormant"
[03:03:17.546]            // =>  TRUE
[03:03:17.546]          <block atomic="false" info="">
[03:03:17.546]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:18.551]  
[03:03:18.551]  !!! E320 : DAP access error
[03:03:18.551]  
[03:03:18.559]          </block>
[03:03:18.559]          // end if-block "!hasDormant"
[03:03:18.559]        </control>
[03:03:18.559]        // end if-block "isSWJ"
[03:03:18.559]      </control>
[03:03:18.559]      // end if-block "protType == 2"
[03:03:18.559]    </control>
[03:03:18.559]  </sequence>
[03:03:18.559]  
[03:03:18.823]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:18.823]  
[03:03:18.824]  <debugvars>
[03:03:18.824]    // Pre-defined
[03:03:18.824]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:18.824]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:18.824]    __dp=0x00000000
[03:03:18.824]    __ap=0x00000000
[03:03:18.824]    __traceout=0x00000000      (Trace Disabled)
[03:03:18.824]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:18.824]    __FlashAddr=0x00000000
[03:03:18.824]    __FlashLen=0x00000000
[03:03:18.824]    __FlashArg=0x00000000
[03:03:18.824]    __FlashOp=0x00000000
[03:03:18.824]    __Result=0x00000000
[03:03:18.824]  </debugvars>
[03:03:18.824]  
[03:03:18.824]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:18.824]    <block atomic="false" info="">
[03:03:18.824]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:18.824]        // -> [isSWJ <= 0x00000001]
[03:03:18.824]      __var hasDormant = __protocol & 0x00020000;
[03:03:18.827]        // -> [hasDormant <= 0x00000000]
[03:03:18.827]      __var protType   = __protocol & 0x0000FFFF;
[03:03:18.827]        // -> [protType <= 0x00000002]
[03:03:18.827]    </block>
[03:03:18.827]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:18.827]      // if-block "protType == 1"
[03:03:18.827]        // =>  FALSE
[03:03:18.827]      // skip if-block "protType == 1"
[03:03:18.827]    </control>
[03:03:18.827]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:18.827]      // if-block "protType == 2"
[03:03:18.827]        // =>  TRUE
[03:03:18.827]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:18.827]        // if-block "isSWJ"
[03:03:18.827]          // =>  TRUE
[03:03:18.827]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:18.827]          // if-block "hasDormant"
[03:03:18.827]            // =>  FALSE
[03:03:18.827]          // skip if-block "hasDormant"
[03:03:18.827]        </control>
[03:03:18.827]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:18.827]          // if-block "!hasDormant"
[03:03:18.827]            // =>  TRUE
[03:03:18.827]          <block atomic="false" info="">
[03:03:18.827]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:19.838]  
[03:03:19.838]  !!! E320 : DAP access error
[03:03:19.838]  
[03:03:19.846]          </block>
[03:03:19.846]          // end if-block "!hasDormant"
[03:03:19.846]        </control>
[03:03:19.846]        // end if-block "isSWJ"
[03:03:19.846]      </control>
[03:03:19.846]      // end if-block "protType == 2"
[03:03:19.846]    </control>
[03:03:19.846]  </sequence>
[03:03:19.846]  
[03:03:20.102]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:20.102]  
[03:03:20.102]  <debugvars>
[03:03:20.102]    // Pre-defined
[03:03:20.102]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:20.102]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:20.102]    __dp=0x00000000
[03:03:20.102]    __ap=0x00000000
[03:03:20.102]    __traceout=0x00000000      (Trace Disabled)
[03:03:20.102]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:20.102]    __FlashAddr=0x00000000
[03:03:20.102]    __FlashLen=0x00000000
[03:03:20.102]    __FlashArg=0x00000000
[03:03:20.106]    __FlashOp=0x00000000
[03:03:20.106]    __Result=0x00000000
[03:03:20.106]  </debugvars>
[03:03:20.106]  
[03:03:20.106]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:20.106]    <block atomic="false" info="">
[03:03:20.106]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:20.106]        // -> [isSWJ <= 0x00000001]
[03:03:20.106]      __var hasDormant = __protocol & 0x00020000;
[03:03:20.106]        // -> [hasDormant <= 0x00000000]
[03:03:20.106]      __var protType   = __protocol & 0x0000FFFF;
[03:03:20.106]        // -> [protType <= 0x00000002]
[03:03:20.106]    </block>
[03:03:20.106]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:20.106]      // if-block "protType == 1"
[03:03:20.106]        // =>  FALSE
[03:03:20.106]      // skip if-block "protType == 1"
[03:03:20.106]    </control>
[03:03:20.106]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:20.106]      // if-block "protType == 2"
[03:03:20.106]        // =>  TRUE
[03:03:20.106]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:20.106]        // if-block "isSWJ"
[03:03:20.106]          // =>  TRUE
[03:03:20.106]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:20.106]          // if-block "hasDormant"
[03:03:20.106]            // =>  FALSE
[03:03:20.106]          // skip if-block "hasDormant"
[03:03:20.106]        </control>
[03:03:20.106]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:20.106]          // if-block "!hasDormant"
[03:03:20.106]            // =>  TRUE
[03:03:20.106]          <block atomic="false" info="">
[03:03:20.106]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:21.110]  
[03:03:21.110]  !!! E320 : DAP access error
[03:03:21.110]  
[03:03:21.118]          </block>
[03:03:21.118]          // end if-block "!hasDormant"
[03:03:21.118]        </control>
[03:03:21.118]        // end if-block "isSWJ"
[03:03:21.118]      </control>
[03:03:21.118]      // end if-block "protType == 2"
[03:03:21.118]    </control>
[03:03:21.118]  </sequence>
[03:03:21.118]  
[03:03:21.375]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:21.375]  
[03:03:21.375]  <debugvars>
[03:03:21.375]    // Pre-defined
[03:03:21.375]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:21.375]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:21.375]    __dp=0x00000000
[03:03:21.375]    __ap=0x00000000
[03:03:21.375]    __traceout=0x00000000      (Trace Disabled)
[03:03:21.375]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:21.375]    __FlashAddr=0x00000000
[03:03:21.375]    __FlashLen=0x00000000
[03:03:21.375]    __FlashArg=0x00000000
[03:03:21.375]    __FlashOp=0x00000000
[03:03:21.375]    __Result=0x00000000
[03:03:21.375]  </debugvars>
[03:03:21.375]  
[03:03:21.375]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:21.375]    <block atomic="false" info="">
[03:03:21.375]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:21.375]        // -> [isSWJ <= 0x00000001]
[03:03:21.375]      __var hasDormant = __protocol & 0x00020000;
[03:03:21.375]        // -> [hasDormant <= 0x00000000]
[03:03:21.375]      __var protType   = __protocol & 0x0000FFFF;
[03:03:21.375]        // -> [protType <= 0x00000002]
[03:03:21.375]    </block>
[03:03:21.375]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:21.375]      // if-block "protType == 1"
[03:03:21.375]        // =>  FALSE
[03:03:21.375]      // skip if-block "protType == 1"
[03:03:21.375]    </control>
[03:03:21.375]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:21.379]      // if-block "protType == 2"
[03:03:21.379]        // =>  TRUE
[03:03:21.379]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:21.379]        // if-block "isSWJ"
[03:03:21.379]          // =>  TRUE
[03:03:21.379]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:21.379]          // if-block "hasDormant"
[03:03:21.379]            // =>  FALSE
[03:03:21.379]          // skip if-block "hasDormant"
[03:03:21.379]        </control>
[03:03:21.379]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:21.379]          // if-block "!hasDormant"
[03:03:21.379]            // =>  TRUE
[03:03:21.379]          <block atomic="false" info="">
[03:03:21.379]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:22.384]  
[03:03:22.384]  !!! E320 : DAP access error
[03:03:22.384]  
[03:03:22.393]          </block>
[03:03:22.393]          // end if-block "!hasDormant"
[03:03:22.393]        </control>
[03:03:22.393]        // end if-block "isSWJ"
[03:03:22.393]      </control>
[03:03:22.393]      // end if-block "protType == 2"
[03:03:22.393]    </control>
[03:03:22.393]  </sequence>
[03:03:22.393]  
[03:03:22.655]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:22.655]  
[03:03:22.664]  <debugvars>
[03:03:22.664]    // Pre-defined
[03:03:22.664]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:22.664]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:22.664]    __dp=0x00000000
[03:03:22.665]    __ap=0x00000000
[03:03:22.665]    __traceout=0x00000000      (Trace Disabled)
[03:03:22.665]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:22.665]    __FlashAddr=0x00000000
[03:03:22.665]    __FlashLen=0x00000000
[03:03:22.665]    __FlashArg=0x00000000
[03:03:22.665]    __FlashOp=0x00000000
[03:03:22.665]    __Result=0x00000000
[03:03:22.665]  </debugvars>
[03:03:22.665]  
[03:03:22.665]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:22.666]    <block atomic="false" info="">
[03:03:22.666]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:22.666]        // -> [isSWJ <= 0x00000001]
[03:03:22.666]      __var hasDormant = __protocol & 0x00020000;
[03:03:22.666]        // -> [hasDormant <= 0x00000000]
[03:03:22.666]      __var protType   = __protocol & 0x0000FFFF;
[03:03:22.666]        // -> [protType <= 0x00000002]
[03:03:22.666]    </block>
[03:03:22.666]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:22.666]      // if-block "protType == 1"
[03:03:22.667]        // =>  FALSE
[03:03:22.667]      // skip if-block "protType == 1"
[03:03:22.667]    </control>
[03:03:22.667]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:22.667]      // if-block "protType == 2"
[03:03:22.668]        // =>  TRUE
[03:03:22.668]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:22.668]        // if-block "isSWJ"
[03:03:22.668]          // =>  TRUE
[03:03:22.668]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:22.668]          // if-block "hasDormant"
[03:03:22.668]            // =>  FALSE
[03:03:22.668]          // skip if-block "hasDormant"
[03:03:22.668]        </control>
[03:03:22.668]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:22.668]          // if-block "!hasDormant"
[03:03:22.668]            // =>  TRUE
[03:03:22.668]          <block atomic="false" info="">
[03:03:22.668]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:23.677]  
[03:03:23.677]  !!! E320 : DAP access error
[03:03:23.677]  
[03:03:23.686]          </block>
[03:03:23.686]          // end if-block "!hasDormant"
[03:03:23.686]        </control>
[03:03:23.686]        // end if-block "isSWJ"
[03:03:23.686]      </control>
[03:03:23.686]      // end if-block "protType == 2"
[03:03:23.686]    </control>
[03:03:23.686]  </sequence>
[03:03:23.686]  
[03:03:23.937]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:23.937]  
[03:03:23.945]  <debugvars>
[03:03:23.945]    // Pre-defined
[03:03:23.945]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:23.945]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:23.945]    __dp=0x00000000
[03:03:23.945]    __ap=0x00000000
[03:03:23.945]    __traceout=0x00000000      (Trace Disabled)
[03:03:23.945]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:23.945]    __FlashAddr=0x00000000
[03:03:23.945]    __FlashLen=0x00000000
[03:03:23.945]    __FlashArg=0x00000000
[03:03:23.945]    __FlashOp=0x00000000
[03:03:23.945]    __Result=0x00000000
[03:03:23.945]  </debugvars>
[03:03:23.945]  
[03:03:23.945]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:23.945]    <block atomic="false" info="">
[03:03:23.945]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:23.945]        // -> [isSWJ <= 0x00000001]
[03:03:23.945]      __var hasDormant = __protocol & 0x00020000;
[03:03:23.945]        // -> [hasDormant <= 0x00000000]
[03:03:23.945]      __var protType   = __protocol & 0x0000FFFF;
[03:03:23.945]        // -> [protType <= 0x00000002]
[03:03:23.945]    </block>
[03:03:23.945]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:23.945]      // if-block "protType == 1"
[03:03:23.945]        // =>  FALSE
[03:03:23.945]      // skip if-block "protType == 1"
[03:03:23.945]    </control>
[03:03:23.945]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:23.945]      // if-block "protType == 2"
[03:03:23.945]        // =>  TRUE
[03:03:23.945]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:23.949]        // if-block "isSWJ"
[03:03:23.949]          // =>  TRUE
[03:03:23.949]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:23.949]          // if-block "hasDormant"
[03:03:23.949]            // =>  FALSE
[03:03:23.949]          // skip if-block "hasDormant"
[03:03:23.950]        </control>
[03:03:23.950]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:23.950]          // if-block "!hasDormant"
[03:03:23.950]            // =>  TRUE
[03:03:23.950]          <block atomic="false" info="">
[03:03:23.951]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:24.958]  
[03:03:24.958]  !!! E320 : DAP access error
[03:03:24.958]  
[03:03:24.967]          </block>
[03:03:24.967]          // end if-block "!hasDormant"
[03:03:24.967]        </control>
[03:03:24.967]        // end if-block "isSWJ"
[03:03:24.967]      </control>
[03:03:24.967]      // end if-block "protType == 2"
[03:03:24.967]    </control>
[03:03:24.967]  </sequence>
[03:03:24.967]  
[03:03:25.219]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:25.219]  
[03:03:25.227]  <debugvars>
[03:03:25.227]    // Pre-defined
[03:03:25.227]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:25.227]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:25.227]    __dp=0x00000000
[03:03:25.227]    __ap=0x00000000
[03:03:25.227]    __traceout=0x00000000      (Trace Disabled)
[03:03:25.227]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:25.227]    __FlashAddr=0x00000000
[03:03:25.227]    __FlashLen=0x00000000
[03:03:25.227]    __FlashArg=0x00000000
[03:03:25.227]    __FlashOp=0x00000000
[03:03:25.227]    __Result=0x00000000
[03:03:25.227]  </debugvars>
[03:03:25.227]  
[03:03:25.227]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:25.227]    <block atomic="false" info="">
[03:03:25.227]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:25.227]        // -> [isSWJ <= 0x00000001]
[03:03:25.227]      __var hasDormant = __protocol & 0x00020000;
[03:03:25.227]        // -> [hasDormant <= 0x00000000]
[03:03:25.227]      __var protType   = __protocol & 0x0000FFFF;
[03:03:25.227]        // -> [protType <= 0x00000002]
[03:03:25.227]    </block>
[03:03:25.227]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:25.227]      // if-block "protType == 1"
[03:03:25.227]        // =>  FALSE
[03:03:25.227]      // skip if-block "protType == 1"
[03:03:25.227]    </control>
[03:03:25.227]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:25.231]      // if-block "protType == 2"
[03:03:25.231]        // =>  TRUE
[03:03:25.231]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:25.231]        // if-block "isSWJ"
[03:03:25.231]          // =>  TRUE
[03:03:25.231]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:25.231]          // if-block "hasDormant"
[03:03:25.231]            // =>  FALSE
[03:03:25.231]          // skip if-block "hasDormant"
[03:03:25.231]        </control>
[03:03:25.231]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:25.231]          // if-block "!hasDormant"
[03:03:25.231]            // =>  TRUE
[03:03:25.231]          <block atomic="false" info="">
[03:03:25.231]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:26.231]  
[03:03:26.231]  !!! E320 : DAP access error
[03:03:26.231]  
[03:03:26.240]          </block>
[03:03:26.240]          // end if-block "!hasDormant"
[03:03:26.240]        </control>
[03:03:26.240]        // end if-block "isSWJ"
[03:03:26.240]      </control>
[03:03:26.240]      // end if-block "protType == 2"
[03:03:26.240]    </control>
[03:03:26.240]  </sequence>
[03:03:26.240]  
[03:03:26.501]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:26.501]  
[03:03:26.511]  <debugvars>
[03:03:26.511]    // Pre-defined
[03:03:26.511]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:26.511]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:26.511]    __dp=0x00000000
[03:03:26.511]    __ap=0x00000000
[03:03:26.511]    __traceout=0x00000000      (Trace Disabled)
[03:03:26.511]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:26.511]    __FlashAddr=0x00000000
[03:03:26.511]    __FlashLen=0x00000000
[03:03:26.511]    __FlashArg=0x00000000
[03:03:26.511]    __FlashOp=0x00000000
[03:03:26.511]    __Result=0x00000000
[03:03:26.511]  </debugvars>
[03:03:26.511]  
[03:03:26.511]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:26.511]    <block atomic="false" info="">
[03:03:26.513]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:26.513]        // -> [isSWJ <= 0x00000001]
[03:03:26.513]      __var hasDormant = __protocol & 0x00020000;
[03:03:26.513]        // -> [hasDormant <= 0x00000000]
[03:03:26.513]      __var protType   = __protocol & 0x0000FFFF;
[03:03:26.513]        // -> [protType <= 0x00000002]
[03:03:26.513]    </block>
[03:03:26.513]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:26.513]      // if-block "protType == 1"
[03:03:26.513]        // =>  FALSE
[03:03:26.513]      // skip if-block "protType == 1"
[03:03:26.513]    </control>
[03:03:26.513]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:26.513]      // if-block "protType == 2"
[03:03:26.513]        // =>  TRUE
[03:03:26.513]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:26.513]        // if-block "isSWJ"
[03:03:26.513]          // =>  TRUE
[03:03:26.513]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:26.513]          // if-block "hasDormant"
[03:03:26.513]            // =>  FALSE
[03:03:26.513]          // skip if-block "hasDormant"
[03:03:26.513]        </control>
[03:03:26.513]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:26.513]          // if-block "!hasDormant"
[03:03:26.513]            // =>  TRUE
[03:03:26.513]          <block atomic="false" info="">
[03:03:26.513]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:27.518]  
[03:03:27.518]  !!! E320 : DAP access error
[03:03:27.518]  
[03:03:27.527]          </block>
[03:03:27.527]          // end if-block "!hasDormant"
[03:03:27.527]        </control>
[03:03:27.527]        // end if-block "isSWJ"
[03:03:27.527]      </control>
[03:03:27.527]      // end if-block "protType == 2"
[03:03:27.527]    </control>
[03:03:27.527]  </sequence>
[03:03:27.527]  
[03:03:27.789]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:27.789]  
[03:03:27.800]  <debugvars>
[03:03:27.800]    // Pre-defined
[03:03:27.800]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:27.800]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:27.800]    __dp=0x00000000
[03:03:27.800]    __ap=0x00000000
[03:03:27.800]    __traceout=0x00000000      (Trace Disabled)
[03:03:27.800]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:27.800]    __FlashAddr=0x00000000
[03:03:27.800]    __FlashLen=0x00000000
[03:03:27.800]    __FlashArg=0x00000000
[03:03:27.800]    __FlashOp=0x00000000
[03:03:27.800]    __Result=0x00000000
[03:03:27.800]  </debugvars>
[03:03:27.800]  
[03:03:27.800]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:27.800]    <block atomic="false" info="">
[03:03:27.800]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:27.800]        // -> [isSWJ <= 0x00000001]
[03:03:27.802]      __var hasDormant = __protocol & 0x00020000;
[03:03:27.802]        // -> [hasDormant <= 0x00000000]
[03:03:27.802]      __var protType   = __protocol & 0x0000FFFF;
[03:03:27.802]        // -> [protType <= 0x00000002]
[03:03:27.802]    </block>
[03:03:27.802]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:27.802]      // if-block "protType == 1"
[03:03:27.802]        // =>  FALSE
[03:03:27.802]      // skip if-block "protType == 1"
[03:03:27.802]    </control>
[03:03:27.802]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:27.802]      // if-block "protType == 2"
[03:03:27.802]        // =>  TRUE
[03:03:27.802]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:27.802]        // if-block "isSWJ"
[03:03:27.802]          // =>  TRUE
[03:03:27.802]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:27.802]          // if-block "hasDormant"
[03:03:27.802]            // =>  FALSE
[03:03:27.802]          // skip if-block "hasDormant"
[03:03:27.802]        </control>
[03:03:27.802]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:27.802]          // if-block "!hasDormant"
[03:03:27.802]            // =>  TRUE
[03:03:27.802]          <block atomic="false" info="">
[03:03:27.802]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:28.810]  
[03:03:28.810]  !!! E320 : DAP access error
[03:03:28.810]  
[03:03:28.819]          </block>
[03:03:28.819]          // end if-block "!hasDormant"
[03:03:28.819]        </control>
[03:03:28.819]        // end if-block "isSWJ"
[03:03:28.819]      </control>
[03:03:28.819]      // end if-block "protType == 2"
[03:03:28.819]    </control>
[03:03:28.819]  </sequence>
[03:03:28.819]  
[03:03:29.076]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:29.076]  
[03:03:29.084]  <debugvars>
[03:03:29.084]    // Pre-defined
[03:03:29.084]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:29.084]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:29.084]    __dp=0x00000000
[03:03:29.084]    __ap=0x00000000
[03:03:29.084]    __traceout=0x00000000      (Trace Disabled)
[03:03:29.084]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:29.084]    __FlashAddr=0x00000000
[03:03:29.084]    __FlashLen=0x00000000
[03:03:29.084]    __FlashArg=0x00000000
[03:03:29.084]    __FlashOp=0x00000000
[03:03:29.084]    __Result=0x00000000
[03:03:29.084]  </debugvars>
[03:03:29.084]  
[03:03:29.084]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:29.084]    <block atomic="false" info="">
[03:03:29.084]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:29.084]        // -> [isSWJ <= 0x00000001]
[03:03:29.084]      __var hasDormant = __protocol & 0x00020000;
[03:03:29.084]        // -> [hasDormant <= 0x00000000]
[03:03:29.084]      __var protType   = __protocol & 0x0000FFFF;
[03:03:29.084]        // -> [protType <= 0x00000002]
[03:03:29.084]    </block>
[03:03:29.084]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:29.084]      // if-block "protType == 1"
[03:03:29.084]        // =>  FALSE
[03:03:29.084]      // skip if-block "protType == 1"
[03:03:29.084]    </control>
[03:03:29.084]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:29.084]      // if-block "protType == 2"
[03:03:29.084]        // =>  TRUE
[03:03:29.088]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:29.088]        // if-block "isSWJ"
[03:03:29.088]          // =>  TRUE
[03:03:29.088]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:29.088]          // if-block "hasDormant"
[03:03:29.088]            // =>  FALSE
[03:03:29.088]          // skip if-block "hasDormant"
[03:03:29.090]        </control>
[03:03:29.090]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:29.090]          // if-block "!hasDormant"
[03:03:29.090]            // =>  TRUE
[03:03:29.090]          <block atomic="false" info="">
[03:03:29.090]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:30.098]  
[03:03:30.098]  !!! E320 : DAP access error
[03:03:30.098]  
[03:03:30.098]          </block>
[03:03:30.098]          // end if-block "!hasDormant"
[03:03:30.098]        </control>
[03:03:30.098]        // end if-block "isSWJ"
[03:03:30.098]      </control>
[03:03:30.098]      // end if-block "protType == 2"
[03:03:30.098]    </control>
[03:03:30.098]  </sequence>
[03:03:30.098]  
[03:03:30.358]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:30.358]  
[03:03:30.367]  <debugvars>
[03:03:30.367]    // Pre-defined
[03:03:30.367]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:30.367]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:30.367]    __dp=0x00000000
[03:03:30.367]    __ap=0x00000000
[03:03:30.367]    __traceout=0x00000000      (Trace Disabled)
[03:03:30.367]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:30.367]    __FlashAddr=0x00000000
[03:03:30.367]    __FlashLen=0x00000000
[03:03:30.367]    __FlashArg=0x00000000
[03:03:30.367]    __FlashOp=0x00000000
[03:03:30.367]    __Result=0x00000000
[03:03:30.367]  </debugvars>
[03:03:30.367]  
[03:03:30.367]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:30.367]    <block atomic="false" info="">
[03:03:30.367]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:30.367]        // -> [isSWJ <= 0x00000001]
[03:03:30.367]      __var hasDormant = __protocol & 0x00020000;
[03:03:30.367]        // -> [hasDormant <= 0x00000000]
[03:03:30.370]      __var protType   = __protocol & 0x0000FFFF;
[03:03:30.370]        // -> [protType <= 0x00000002]
[03:03:30.370]    </block>
[03:03:30.370]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:30.370]      // if-block "protType == 1"
[03:03:30.371]        // =>  FALSE
[03:03:30.371]      // skip if-block "protType == 1"
[03:03:30.371]    </control>
[03:03:30.371]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:30.371]      // if-block "protType == 2"
[03:03:30.371]        // =>  TRUE
[03:03:30.371]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:30.371]        // if-block "isSWJ"
[03:03:30.371]          // =>  TRUE
[03:03:30.371]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:30.371]          // if-block "hasDormant"
[03:03:30.371]            // =>  FALSE
[03:03:30.371]          // skip if-block "hasDormant"
[03:03:30.371]        </control>
[03:03:30.371]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:30.371]          // if-block "!hasDormant"
[03:03:30.371]            // =>  TRUE
[03:03:30.371]          <block atomic="false" info="">
[03:03:30.371]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:31.379]  
[03:03:31.379]  !!! E320 : DAP access error
[03:03:31.379]  
[03:03:31.388]          </block>
[03:03:31.388]          // end if-block "!hasDormant"
[03:03:31.388]        </control>
[03:03:31.388]        // end if-block "isSWJ"
[03:03:31.388]      </control>
[03:03:31.388]      // end if-block "protType == 2"
[03:03:31.388]    </control>
[03:03:31.388]  </sequence>
[03:03:31.388]  
[03:03:31.641]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:31.641]  
[03:03:31.650]  <debugvars>
[03:03:31.650]    // Pre-defined
[03:03:31.650]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:31.650]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:31.650]    __dp=0x00000000
[03:03:31.650]    __ap=0x00000000
[03:03:31.650]    __traceout=0x00000000      (Trace Disabled)
[03:03:31.650]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:31.650]    __FlashAddr=0x00000000
[03:03:31.650]    __FlashLen=0x00000000
[03:03:31.650]    __FlashArg=0x00000000
[03:03:31.651]    __FlashOp=0x00000000
[03:03:31.651]    __Result=0x00000000
[03:03:31.651]  </debugvars>
[03:03:31.651]  
[03:03:31.651]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:31.651]    <block atomic="false" info="">
[03:03:31.651]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:31.651]        // -> [isSWJ <= 0x00000001]
[03:03:31.651]      __var hasDormant = __protocol & 0x00020000;
[03:03:31.651]        // -> [hasDormant <= 0x00000000]
[03:03:31.651]      __var protType   = __protocol & 0x0000FFFF;
[03:03:31.651]        // -> [protType <= 0x00000002]
[03:03:31.651]    </block>
[03:03:31.651]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:31.653]      // if-block "protType == 1"
[03:03:31.653]        // =>  FALSE
[03:03:31.653]      // skip if-block "protType == 1"
[03:03:31.653]    </control>
[03:03:31.653]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:31.653]      // if-block "protType == 2"
[03:03:31.653]        // =>  TRUE
[03:03:31.653]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:31.653]        // if-block "isSWJ"
[03:03:31.653]          // =>  TRUE
[03:03:31.653]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:31.653]          // if-block "hasDormant"
[03:03:31.653]            // =>  FALSE
[03:03:31.655]          // skip if-block "hasDormant"
[03:03:31.655]        </control>
[03:03:31.655]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:31.655]          // if-block "!hasDormant"
[03:03:31.655]            // =>  TRUE
[03:03:31.655]          <block atomic="false" info="">
[03:03:31.655]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:32.660]  
[03:03:32.660]  !!! E320 : DAP access error
[03:03:32.660]  
[03:03:32.670]          </block>
[03:03:32.670]          // end if-block "!hasDormant"
[03:03:32.670]        </control>
[03:03:32.670]        // end if-block "isSWJ"
[03:03:32.670]      </control>
[03:03:32.670]      // end if-block "protType == 2"
[03:03:32.670]    </control>
[03:03:32.670]  </sequence>
[03:03:32.670]  
[03:03:32.925]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:32.925]  
[03:03:32.934]  <debugvars>
[03:03:32.934]    // Pre-defined
[03:03:32.934]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:32.934]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:32.934]    __dp=0x00000000
[03:03:32.934]    __ap=0x00000000
[03:03:32.934]    __traceout=0x00000000      (Trace Disabled)
[03:03:32.934]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:32.935]    __FlashAddr=0x00000000
[03:03:32.935]    __FlashLen=0x00000000
[03:03:32.935]    __FlashArg=0x00000000
[03:03:32.935]    __FlashOp=0x00000000
[03:03:32.935]    __Result=0x00000000
[03:03:32.935]  </debugvars>
[03:03:32.935]  
[03:03:32.935]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:32.935]    <block atomic="false" info="">
[03:03:32.935]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:32.936]        // -> [isSWJ <= 0x00000001]
[03:03:32.936]      __var hasDormant = __protocol & 0x00020000;
[03:03:32.936]        // -> [hasDormant <= 0x00000000]
[03:03:32.936]      __var protType   = __protocol & 0x0000FFFF;
[03:03:32.936]        // -> [protType <= 0x00000002]
[03:03:32.937]    </block>
[03:03:32.937]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:32.938]      // if-block "protType == 1"
[03:03:32.938]        // =>  FALSE
[03:03:32.938]      // skip if-block "protType == 1"
[03:03:32.938]    </control>
[03:03:32.938]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:32.938]      // if-block "protType == 2"
[03:03:32.938]        // =>  TRUE
[03:03:32.938]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:32.938]        // if-block "isSWJ"
[03:03:32.938]          // =>  TRUE
[03:03:32.938]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:32.938]          // if-block "hasDormant"
[03:03:32.938]            // =>  FALSE
[03:03:32.938]          // skip if-block "hasDormant"
[03:03:32.939]        </control>
[03:03:32.939]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:32.939]          // if-block "!hasDormant"
[03:03:32.939]            // =>  TRUE
[03:03:32.939]          <block atomic="false" info="">
[03:03:32.939]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:33.948]  
[03:03:33.948]  !!! E320 : DAP access error
[03:03:33.948]  
[03:03:33.957]          </block>
[03:03:33.957]          // end if-block "!hasDormant"
[03:03:33.957]        </control>
[03:03:33.957]        // end if-block "isSWJ"
[03:03:33.957]      </control>
[03:03:33.957]      // end if-block "protType == 2"
[03:03:33.957]    </control>
[03:03:33.957]  </sequence>
[03:03:33.957]  
[03:03:34.215]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:34.215]  
[03:03:34.224]  <debugvars>
[03:03:34.224]    // Pre-defined
[03:03:34.224]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:34.224]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:34.224]    __dp=0x00000000
[03:03:34.224]    __ap=0x00000000
[03:03:34.224]    __traceout=0x00000000      (Trace Disabled)
[03:03:34.224]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:34.224]    __FlashAddr=0x00000000
[03:03:34.224]    __FlashLen=0x00000000
[03:03:34.224]    __FlashArg=0x00000000
[03:03:34.224]    __FlashOp=0x00000000
[03:03:34.224]    __Result=0x00000000
[03:03:34.224]  </debugvars>
[03:03:34.224]  
[03:03:34.224]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:34.224]    <block atomic="false" info="">
[03:03:34.224]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:34.224]        // -> [isSWJ <= 0x00000001]
[03:03:34.224]      __var hasDormant = __protocol & 0x00020000;
[03:03:34.224]        // -> [hasDormant <= 0x00000000]
[03:03:34.224]      __var protType   = __protocol & 0x0000FFFF;
[03:03:34.224]        // -> [protType <= 0x00000002]
[03:03:34.224]    </block>
[03:03:34.224]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:34.224]      // if-block "protType == 1"
[03:03:34.224]        // =>  FALSE
[03:03:34.224]      // skip if-block "protType == 1"
[03:03:34.224]    </control>
[03:03:34.227]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:34.227]      // if-block "protType == 2"
[03:03:34.227]        // =>  TRUE
[03:03:34.227]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:34.227]        // if-block "isSWJ"
[03:03:34.228]          // =>  TRUE
[03:03:34.228]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:34.228]          // if-block "hasDormant"
[03:03:34.228]            // =>  FALSE
[03:03:34.228]          // skip if-block "hasDormant"
[03:03:34.228]        </control>
[03:03:34.228]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:34.228]          // if-block "!hasDormant"
[03:03:34.228]            // =>  TRUE
[03:03:34.228]          <block atomic="false" info="">
[03:03:34.228]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:35.239]  
[03:03:35.239]  !!! E320 : DAP access error
[03:03:35.239]  
[03:03:35.247]          </block>
[03:03:35.247]          // end if-block "!hasDormant"
[03:03:35.247]        </control>
[03:03:35.247]        // end if-block "isSWJ"
[03:03:35.247]      </control>
[03:03:35.248]      // end if-block "protType == 2"
[03:03:35.248]    </control>
[03:03:35.248]  </sequence>
[03:03:35.248]  
[03:03:35.500]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:35.500]  
[03:03:35.508]  <debugvars>
[03:03:35.508]    // Pre-defined
[03:03:35.508]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:35.508]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:35.508]    __dp=0x00000000
[03:03:35.508]    __ap=0x00000000
[03:03:35.508]    __traceout=0x00000000      (Trace Disabled)
[03:03:35.508]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:35.508]    __FlashAddr=0x00000000
[03:03:35.508]    __FlashLen=0x00000000
[03:03:35.508]    __FlashArg=0x00000000
[03:03:35.508]    __FlashOp=0x00000000
[03:03:35.508]    __Result=0x00000000
[03:03:35.508]  </debugvars>
[03:03:35.508]  
[03:03:35.508]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:35.508]    <block atomic="false" info="">
[03:03:35.508]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:35.508]        // -> [isSWJ <= 0x00000001]
[03:03:35.508]      __var hasDormant = __protocol & 0x00020000;
[03:03:35.508]        // -> [hasDormant <= 0x00000000]
[03:03:35.508]      __var protType   = __protocol & 0x0000FFFF;
[03:03:35.508]        // -> [protType <= 0x00000002]
[03:03:35.508]    </block>
[03:03:35.508]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:35.508]      // if-block "protType == 1"
[03:03:35.512]        // =>  FALSE
[03:03:35.512]      // skip if-block "protType == 1"
[03:03:35.512]    </control>
[03:03:35.512]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:35.512]      // if-block "protType == 2"
[03:03:35.512]        // =>  TRUE
[03:03:35.512]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:35.512]        // if-block "isSWJ"
[03:03:35.512]          // =>  TRUE
[03:03:35.512]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:35.512]          // if-block "hasDormant"
[03:03:35.512]            // =>  FALSE
[03:03:35.512]          // skip if-block "hasDormant"
[03:03:35.512]        </control>
[03:03:35.512]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:35.512]          // if-block "!hasDormant"
[03:03:35.512]            // =>  TRUE
[03:03:35.512]          <block atomic="false" info="">
[03:03:35.512]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:36.516]  
[03:03:36.516]  !!! E320 : DAP access error
[03:03:36.516]  
[03:03:36.516]          </block>
[03:03:36.516]          // end if-block "!hasDormant"
[03:03:36.516]        </control>
[03:03:36.516]        // end if-block "isSWJ"
[03:03:36.516]      </control>
[03:03:36.516]      // end if-block "protType == 2"
[03:03:36.516]    </control>
[03:03:36.516]  </sequence>
[03:03:36.516]  
[03:03:36.781]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:36.781]  
[03:03:36.789]  <debugvars>
[03:03:36.789]    // Pre-defined
[03:03:36.789]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:36.789]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:36.789]    __dp=0x00000000
[03:03:36.789]    __ap=0x00000000
[03:03:36.789]    __traceout=0x00000000      (Trace Disabled)
[03:03:36.789]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:36.789]    __FlashAddr=0x00000000
[03:03:36.789]    __FlashLen=0x00000000
[03:03:36.789]    __FlashArg=0x00000000
[03:03:36.789]    __FlashOp=0x00000000
[03:03:36.789]    __Result=0x00000000
[03:03:36.789]  </debugvars>
[03:03:36.789]  
[03:03:36.789]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:36.789]    <block atomic="false" info="">
[03:03:36.789]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:36.789]        // -> [isSWJ <= 0x00000001]
[03:03:36.789]      __var hasDormant = __protocol & 0x00020000;
[03:03:36.789]        // -> [hasDormant <= 0x00000000]
[03:03:36.789]      __var protType   = __protocol & 0x0000FFFF;
[03:03:36.789]        // -> [protType <= 0x00000002]
[03:03:36.789]    </block>
[03:03:36.789]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:36.789]      // if-block "protType == 1"
[03:03:36.789]        // =>  FALSE
[03:03:36.793]      // skip if-block "protType == 1"
[03:03:36.793]    </control>
[03:03:36.793]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:36.793]      // if-block "protType == 2"
[03:03:36.793]        // =>  TRUE
[03:03:36.793]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:36.793]        // if-block "isSWJ"
[03:03:36.793]          // =>  TRUE
[03:03:36.793]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:36.793]          // if-block "hasDormant"
[03:03:36.793]            // =>  FALSE
[03:03:36.793]          // skip if-block "hasDormant"
[03:03:36.793]        </control>
[03:03:36.793]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:36.793]          // if-block "!hasDormant"
[03:03:36.793]            // =>  TRUE
[03:03:36.793]          <block atomic="false" info="">
[03:03:36.793]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:37.800]  
[03:03:37.800]  !!! E320 : DAP access error
[03:03:37.800]  
[03:03:37.800]          </block>
[03:03:37.800]          // end if-block "!hasDormant"
[03:03:37.800]        </control>
[03:03:37.800]        // end if-block "isSWJ"
[03:03:37.800]      </control>
[03:03:37.800]      // end if-block "protType == 2"
[03:03:37.800]    </control>
[03:03:37.800]  </sequence>
[03:03:37.800]  
[03:03:38.057]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:38.057]  
[03:03:38.057]  <debugvars>
[03:03:38.057]    // Pre-defined
[03:03:38.057]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:38.057]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:38.057]    __dp=0x00000000
[03:03:38.057]    __ap=0x00000000
[03:03:38.057]    __traceout=0x00000000      (Trace Disabled)
[03:03:38.057]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:38.057]    __FlashAddr=0x00000000
[03:03:38.057]    __FlashLen=0x00000000
[03:03:38.057]    __FlashArg=0x00000000
[03:03:38.057]    __FlashOp=0x00000000
[03:03:38.057]    __Result=0x00000000
[03:03:38.057]  </debugvars>
[03:03:38.057]  
[03:03:38.057]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:38.057]    <block atomic="false" info="">
[03:03:38.057]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:38.057]        // -> [isSWJ <= 0x00000001]
[03:03:38.057]      __var hasDormant = __protocol & 0x00020000;
[03:03:38.057]        // -> [hasDormant <= 0x00000000]
[03:03:38.057]      __var protType   = __protocol & 0x0000FFFF;
[03:03:38.057]        // -> [protType <= 0x00000002]
[03:03:38.057]    </block>
[03:03:38.057]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:38.057]      // if-block "protType == 1"
[03:03:38.057]        // =>  FALSE
[03:03:38.057]      // skip if-block "protType == 1"
[03:03:38.057]    </control>
[03:03:38.057]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:38.057]      // if-block "protType == 2"
[03:03:38.057]        // =>  TRUE
[03:03:38.057]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:38.061]        // if-block "isSWJ"
[03:03:38.061]          // =>  TRUE
[03:03:38.061]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:38.061]          // if-block "hasDormant"
[03:03:38.061]            // =>  FALSE
[03:03:38.061]          // skip if-block "hasDormant"
[03:03:38.061]        </control>
[03:03:38.061]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:38.061]          // if-block "!hasDormant"
[03:03:38.061]            // =>  TRUE
[03:03:38.061]          <block atomic="false" info="">
[03:03:38.061]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:39.071]  
[03:03:39.071]  !!! E320 : DAP access error
[03:03:39.071]  
[03:03:39.071]          </block>
[03:03:39.071]          // end if-block "!hasDormant"
[03:03:39.071]        </control>
[03:03:39.071]        // end if-block "isSWJ"
[03:03:39.071]      </control>
[03:03:39.071]      // end if-block "protType == 2"
[03:03:39.071]    </control>
[03:03:39.071]  </sequence>
[03:03:39.071]  
[03:03:39.328]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:39.328]  
[03:03:39.337]  <debugvars>
[03:03:39.337]    // Pre-defined
[03:03:39.337]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:39.337]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:39.337]    __dp=0x00000000
[03:03:39.337]    __ap=0x00000000
[03:03:39.337]    __traceout=0x00000000      (Trace Disabled)
[03:03:39.337]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:39.337]    __FlashAddr=0x00000000
[03:03:39.337]    __FlashLen=0x00000000
[03:03:39.337]    __FlashArg=0x00000000
[03:03:39.337]    __FlashOp=0x00000000
[03:03:39.337]    __Result=0x00000000
[03:03:39.337]  </debugvars>
[03:03:39.337]  
[03:03:39.337]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:39.337]    <block atomic="false" info="">
[03:03:39.337]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:39.337]        // -> [isSWJ <= 0x00000001]
[03:03:39.337]      __var hasDormant = __protocol & 0x00020000;
[03:03:39.337]        // -> [hasDormant <= 0x00000000]
[03:03:39.337]      __var protType   = __protocol & 0x0000FFFF;
[03:03:39.337]        // -> [protType <= 0x00000002]
[03:03:39.337]    </block>
[03:03:39.337]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:39.337]      // if-block "protType == 1"
[03:03:39.337]        // =>  FALSE
[03:03:39.337]      // skip if-block "protType == 1"
[03:03:39.340]    </control>
[03:03:39.340]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:39.340]      // if-block "protType == 2"
[03:03:39.340]        // =>  TRUE
[03:03:39.340]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:39.340]        // if-block "isSWJ"
[03:03:39.340]          // =>  TRUE
[03:03:39.340]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:39.340]          // if-block "hasDormant"
[03:03:39.340]            // =>  FALSE
[03:03:39.340]          // skip if-block "hasDormant"
[03:03:39.340]        </control>
[03:03:39.340]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:39.340]          // if-block "!hasDormant"
[03:03:39.340]            // =>  TRUE
[03:03:39.340]          <block atomic="false" info="">
[03:03:39.340]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:40.351]  
[03:03:40.351]  !!! E320 : DAP access error
[03:03:40.351]  
[03:03:40.359]          </block>
[03:03:40.359]          // end if-block "!hasDormant"
[03:03:40.359]        </control>
[03:03:40.359]        // end if-block "isSWJ"
[03:03:40.359]      </control>
[03:03:40.359]      // end if-block "protType == 2"
[03:03:40.359]    </control>
[03:03:40.359]  </sequence>
[03:03:40.359]  
[03:03:40.617]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:40.617]  
[03:03:40.617]  <debugvars>
[03:03:40.617]    // Pre-defined
[03:03:40.617]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:40.617]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:40.617]    __dp=0x00000000
[03:03:40.617]    __ap=0x00000000
[03:03:40.617]    __traceout=0x00000000      (Trace Disabled)
[03:03:40.617]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:40.617]    __FlashAddr=0x00000000
[03:03:40.617]    __FlashLen=0x00000000
[03:03:40.617]    __FlashArg=0x00000000
[03:03:40.617]    __FlashOp=0x00000000
[03:03:40.617]    __Result=0x00000000
[03:03:40.617]  </debugvars>
[03:03:40.617]  
[03:03:40.617]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:40.617]    <block atomic="false" info="">
[03:03:40.617]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:40.617]        // -> [isSWJ <= 0x00000001]
[03:03:40.617]      __var hasDormant = __protocol & 0x00020000;
[03:03:40.617]        // -> [hasDormant <= 0x00000000]
[03:03:40.617]      __var protType   = __protocol & 0x0000FFFF;
[03:03:40.617]        // -> [protType <= 0x00000002]
[03:03:40.617]    </block>
[03:03:40.617]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:40.617]      // if-block "protType == 1"
[03:03:40.617]        // =>  FALSE
[03:03:40.617]      // skip if-block "protType == 1"
[03:03:40.617]    </control>
[03:03:40.617]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:40.621]      // if-block "protType == 2"
[03:03:40.621]        // =>  TRUE
[03:03:40.621]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:40.621]        // if-block "isSWJ"
[03:03:40.621]          // =>  TRUE
[03:03:40.621]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:40.621]          // if-block "hasDormant"
[03:03:40.621]            // =>  FALSE
[03:03:40.621]          // skip if-block "hasDormant"
[03:03:40.621]        </control>
[03:03:40.621]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:40.621]          // if-block "!hasDormant"
[03:03:40.621]            // =>  TRUE
[03:03:40.621]          <block atomic="false" info="">
[03:03:40.621]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:41.624]  
[03:03:41.624]  !!! E320 : DAP access error
[03:03:41.624]  
[03:03:41.624]          </block>
[03:03:41.624]          // end if-block "!hasDormant"
[03:03:41.624]        </control>
[03:03:41.625]        // end if-block "isSWJ"
[03:03:41.625]      </control>
[03:03:41.625]      // end if-block "protType == 2"
[03:03:41.625]    </control>
[03:03:41.625]  </sequence>
[03:03:41.625]  
[03:03:41.884]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:41.884]  
[03:03:41.884]  <debugvars>
[03:03:41.884]    // Pre-defined
[03:03:41.884]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:41.884]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:41.884]    __dp=0x00000000
[03:03:41.884]    __ap=0x00000000
[03:03:41.884]    __traceout=0x00000000      (Trace Disabled)
[03:03:41.884]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:41.884]    __FlashAddr=0x00000000
[03:03:41.884]    __FlashLen=0x00000000
[03:03:41.884]    __FlashArg=0x00000000
[03:03:41.884]    __FlashOp=0x00000000
[03:03:41.884]    __Result=0x00000000
[03:03:41.884]  </debugvars>
[03:03:41.884]  
[03:03:41.884]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:41.884]    <block atomic="false" info="">
[03:03:41.884]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:41.884]        // -> [isSWJ <= 0x00000001]
[03:03:41.884]      __var hasDormant = __protocol & 0x00020000;
[03:03:41.884]        // -> [hasDormant <= 0x00000000]
[03:03:41.884]      __var protType   = __protocol & 0x0000FFFF;
[03:03:41.884]        // -> [protType <= 0x00000002]
[03:03:41.884]    </block>
[03:03:41.884]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:41.884]      // if-block "protType == 1"
[03:03:41.884]        // =>  FALSE
[03:03:41.884]      // skip if-block "protType == 1"
[03:03:41.884]    </control>
[03:03:41.884]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:41.884]      // if-block "protType == 2"
[03:03:41.888]        // =>  TRUE
[03:03:41.888]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:41.888]        // if-block "isSWJ"
[03:03:41.888]          // =>  TRUE
[03:03:41.888]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:41.888]          // if-block "hasDormant"
[03:03:41.888]            // =>  FALSE
[03:03:41.888]          // skip if-block "hasDormant"
[03:03:41.888]        </control>
[03:03:41.888]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:41.888]          // if-block "!hasDormant"
[03:03:41.888]            // =>  TRUE
[03:03:41.888]          <block atomic="false" info="">
[03:03:41.888]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:42.889]  
[03:03:42.889]  !!! E320 : DAP access error
[03:03:42.889]  
[03:03:42.898]          </block>
[03:03:42.898]          // end if-block "!hasDormant"
[03:03:42.898]        </control>
[03:03:42.898]        // end if-block "isSWJ"
[03:03:42.898]      </control>
[03:03:42.898]      // end if-block "protType == 2"
[03:03:42.898]    </control>
[03:03:42.898]  </sequence>
[03:03:42.898]  
[03:03:43.154]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:43.154]  
[03:03:43.154]  <debugvars>
[03:03:43.154]    // Pre-defined
[03:03:43.154]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:43.154]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:43.154]    __dp=0x00000000
[03:03:43.154]    __ap=0x00000000
[03:03:43.154]    __traceout=0x00000000      (Trace Disabled)
[03:03:43.154]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:43.154]    __FlashAddr=0x00000000
[03:03:43.154]    __FlashLen=0x00000000
[03:03:43.154]    __FlashArg=0x00000000
[03:03:43.154]    __FlashOp=0x00000000
[03:03:43.154]    __Result=0x00000000
[03:03:43.154]  </debugvars>
[03:03:43.154]  
[03:03:43.154]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:43.154]    <block atomic="false" info="">
[03:03:43.154]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:43.154]        // -> [isSWJ <= 0x00000001]
[03:03:43.154]      __var hasDormant = __protocol & 0x00020000;
[03:03:43.154]        // -> [hasDormant <= 0x00000000]
[03:03:43.154]      __var protType   = __protocol & 0x0000FFFF;
[03:03:43.154]        // -> [protType <= 0x00000002]
[03:03:43.154]    </block>
[03:03:43.154]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:43.154]      // if-block "protType == 1"
[03:03:43.154]        // =>  FALSE
[03:03:43.154]      // skip if-block "protType == 1"
[03:03:43.154]    </control>
[03:03:43.154]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:43.158]      // if-block "protType == 2"
[03:03:43.158]        // =>  TRUE
[03:03:43.158]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:43.158]        // if-block "isSWJ"
[03:03:43.158]          // =>  TRUE
[03:03:43.158]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:43.158]          // if-block "hasDormant"
[03:03:43.158]            // =>  FALSE
[03:03:43.158]          // skip if-block "hasDormant"
[03:03:43.158]        </control>
[03:03:43.158]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:43.158]          // if-block "!hasDormant"
[03:03:43.158]            // =>  TRUE
[03:03:43.158]          <block atomic="false" info="">
[03:03:43.158]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:44.162]  
[03:03:44.162]  !!! E320 : DAP access error
[03:03:44.162]  
[03:03:44.171]          </block>
[03:03:44.171]          // end if-block "!hasDormant"
[03:03:44.171]        </control>
[03:03:44.171]        // end if-block "isSWJ"
[03:03:44.171]      </control>
[03:03:44.171]      // end if-block "protType == 2"
[03:03:44.171]    </control>
[03:03:44.171]  </sequence>
[03:03:44.171]  
[03:03:44.427]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:44.427]  
[03:03:44.435]  <debugvars>
[03:03:44.435]    // Pre-defined
[03:03:44.435]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:44.435]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:44.435]    __dp=0x00000000
[03:03:44.435]    __ap=0x00000000
[03:03:44.435]    __traceout=0x00000000      (Trace Disabled)
[03:03:44.435]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:44.435]    __FlashAddr=0x00000000
[03:03:44.435]    __FlashLen=0x00000000
[03:03:44.435]    __FlashArg=0x00000000
[03:03:44.435]    __FlashOp=0x00000000
[03:03:44.435]    __Result=0x00000000
[03:03:44.435]  </debugvars>
[03:03:44.435]  
[03:03:44.435]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:44.435]    <block atomic="false" info="">
[03:03:44.435]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:44.435]        // -> [isSWJ <= 0x00000001]
[03:03:44.435]      __var hasDormant = __protocol & 0x00020000;
[03:03:44.435]        // -> [hasDormant <= 0x00000000]
[03:03:44.435]      __var protType   = __protocol & 0x0000FFFF;
[03:03:44.435]        // -> [protType <= 0x00000002]
[03:03:44.435]    </block>
[03:03:44.435]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:44.435]      // if-block "protType == 1"
[03:03:44.435]        // =>  FALSE
[03:03:44.435]      // skip if-block "protType == 1"
[03:03:44.435]    </control>
[03:03:44.435]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:44.435]      // if-block "protType == 2"
[03:03:44.435]        // =>  TRUE
[03:03:44.439]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:44.439]        // if-block "isSWJ"
[03:03:44.439]          // =>  TRUE
[03:03:44.439]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:44.439]          // if-block "hasDormant"
[03:03:44.439]            // =>  FALSE
[03:03:44.439]          // skip if-block "hasDormant"
[03:03:44.439]        </control>
[03:03:44.439]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:44.439]          // if-block "!hasDormant"
[03:03:44.439]            // =>  TRUE
[03:03:44.439]          <block atomic="false" info="">
[03:03:44.439]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:45.447]  
[03:03:45.447]  !!! E320 : DAP access error
[03:03:45.447]  
[03:03:45.456]          </block>
[03:03:45.456]          // end if-block "!hasDormant"
[03:03:45.456]        </control>
[03:03:45.456]        // end if-block "isSWJ"
[03:03:45.456]      </control>
[03:03:45.456]      // end if-block "protType == 2"
[03:03:45.456]    </control>
[03:03:45.456]  </sequence>
[03:03:45.456]  
[03:03:45.712]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:45.712]  
[03:03:45.720]  <debugvars>
[03:03:45.720]    // Pre-defined
[03:03:45.720]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:45.720]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:45.720]    __dp=0x00000000
[03:03:45.720]    __ap=0x00000000
[03:03:45.720]    __traceout=0x00000000      (Trace Disabled)
[03:03:45.720]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:45.720]    __FlashAddr=0x00000000
[03:03:45.720]    __FlashLen=0x00000000
[03:03:45.720]    __FlashArg=0x00000000
[03:03:45.720]    __FlashOp=0x00000000
[03:03:45.720]    __Result=0x00000000
[03:03:45.720]  </debugvars>
[03:03:45.720]  
[03:03:45.720]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:45.720]    <block atomic="false" info="">
[03:03:45.720]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:45.720]        // -> [isSWJ <= 0x00000001]
[03:03:45.720]      __var hasDormant = __protocol & 0x00020000;
[03:03:45.720]        // -> [hasDormant <= 0x00000000]
[03:03:45.720]      __var protType   = __protocol & 0x0000FFFF;
[03:03:45.720]        // -> [protType <= 0x00000002]
[03:03:45.720]    </block>
[03:03:45.720]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:45.720]      // if-block "protType == 1"
[03:03:45.720]        // =>  FALSE
[03:03:45.720]      // skip if-block "protType == 1"
[03:03:45.720]    </control>
[03:03:45.720]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:45.720]      // if-block "protType == 2"
[03:03:45.720]        // =>  TRUE
[03:03:45.720]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:45.724]        // if-block "isSWJ"
[03:03:45.724]          // =>  TRUE
[03:03:45.724]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:45.724]          // if-block "hasDormant"
[03:03:45.724]            // =>  FALSE
[03:03:45.724]          // skip if-block "hasDormant"
[03:03:45.724]        </control>
[03:03:45.724]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:45.724]          // if-block "!hasDormant"
[03:03:45.724]            // =>  TRUE
[03:03:45.724]          <block atomic="false" info="">
[03:03:45.724]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:46.732]  
[03:03:46.732]  !!! E320 : DAP access error
[03:03:46.732]  
[03:03:46.740]          </block>
[03:03:46.740]          // end if-block "!hasDormant"
[03:03:46.740]        </control>
[03:03:46.740]        // end if-block "isSWJ"
[03:03:46.740]      </control>
[03:03:46.740]      // end if-block "protType == 2"
[03:03:46.740]    </control>
[03:03:46.740]  </sequence>
[03:03:46.740]  
[03:03:46.997]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:46.997]  
[03:03:46.997]  <debugvars>
[03:03:46.997]    // Pre-defined
[03:03:46.997]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:46.997]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:46.997]    __dp=0x00000000
[03:03:46.997]    __ap=0x00000000
[03:03:46.997]    __traceout=0x00000000      (Trace Disabled)
[03:03:46.997]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:46.997]    __FlashAddr=0x00000000
[03:03:46.997]    __FlashLen=0x00000000
[03:03:46.997]    __FlashArg=0x00000000
[03:03:46.997]    __FlashOp=0x00000000
[03:03:46.997]    __Result=0x00000000
[03:03:46.997]  </debugvars>
[03:03:46.997]  
[03:03:46.997]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:46.997]    <block atomic="false" info="">
[03:03:46.997]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:46.997]        // -> [isSWJ <= 0x00000001]
[03:03:46.997]      __var hasDormant = __protocol & 0x00020000;
[03:03:46.997]        // -> [hasDormant <= 0x00000000]
[03:03:46.997]      __var protType   = __protocol & 0x0000FFFF;
[03:03:46.997]        // -> [protType <= 0x00000002]
[03:03:46.997]    </block>
[03:03:46.997]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:46.997]      // if-block "protType == 1"
[03:03:46.997]        // =>  FALSE
[03:03:46.997]      // skip if-block "protType == 1"
[03:03:46.997]    </control>
[03:03:47.001]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:47.001]      // if-block "protType == 2"
[03:03:47.001]        // =>  TRUE
[03:03:47.001]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:47.001]        // if-block "isSWJ"
[03:03:47.001]          // =>  TRUE
[03:03:47.001]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:47.001]          // if-block "hasDormant"
[03:03:47.001]            // =>  FALSE
[03:03:47.001]          // skip if-block "hasDormant"
[03:03:47.001]        </control>
[03:03:47.001]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:47.001]          // if-block "!hasDormant"
[03:03:47.001]            // =>  TRUE
[03:03:47.001]          <block atomic="false" info="">
[03:03:47.001]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:48.009]  
[03:03:48.009]  !!! E320 : DAP access error
[03:03:48.009]  
[03:03:48.018]          </block>
[03:03:48.018]          // end if-block "!hasDormant"
[03:03:48.018]        </control>
[03:03:48.018]        // end if-block "isSWJ"
[03:03:48.018]      </control>
[03:03:48.018]      // end if-block "protType == 2"
[03:03:48.018]    </control>
[03:03:48.018]  </sequence>
[03:03:48.018]  
[03:03:48.276]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:48.276]  
[03:03:48.285]  <debugvars>
[03:03:48.285]    // Pre-defined
[03:03:48.285]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:48.285]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:48.285]    __dp=0x00000000
[03:03:48.285]    __ap=0x00000000
[03:03:48.285]    __traceout=0x00000000      (Trace Disabled)
[03:03:48.285]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:48.285]    __FlashAddr=0x00000000
[03:03:48.285]    __FlashLen=0x00000000
[03:03:48.285]    __FlashArg=0x00000000
[03:03:48.285]    __FlashOp=0x00000000
[03:03:48.285]    __Result=0x00000000
[03:03:48.285]  </debugvars>
[03:03:48.285]  
[03:03:48.285]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:48.285]    <block atomic="false" info="">
[03:03:48.285]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:48.285]        // -> [isSWJ <= 0x00000001]
[03:03:48.285]      __var hasDormant = __protocol & 0x00020000;
[03:03:48.285]        // -> [hasDormant <= 0x00000000]
[03:03:48.285]      __var protType   = __protocol & 0x0000FFFF;
[03:03:48.285]        // -> [protType <= 0x00000002]
[03:03:48.287]    </block>
[03:03:48.287]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:48.287]      // if-block "protType == 1"
[03:03:48.287]        // =>  FALSE
[03:03:48.287]      // skip if-block "protType == 1"
[03:03:48.287]    </control>
[03:03:48.287]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:48.287]      // if-block "protType == 2"
[03:03:48.287]        // =>  TRUE
[03:03:48.287]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:48.287]        // if-block "isSWJ"
[03:03:48.289]          // =>  TRUE
[03:03:48.289]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:48.289]          // if-block "hasDormant"
[03:03:48.289]            // =>  FALSE
[03:03:48.289]          // skip if-block "hasDormant"
[03:03:48.289]        </control>
[03:03:48.289]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:48.289]          // if-block "!hasDormant"
[03:03:48.289]            // =>  TRUE
[03:03:48.289]          <block atomic="false" info="">
[03:03:48.289]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:49.291]  
[03:03:49.291]  !!! E320 : DAP access error
[03:03:49.291]  
[03:03:49.299]          </block>
[03:03:49.299]          // end if-block "!hasDormant"
[03:03:49.299]        </control>
[03:03:49.299]        // end if-block "isSWJ"
[03:03:49.299]      </control>
[03:03:49.299]      // end if-block "protType == 2"
[03:03:49.299]    </control>
[03:03:49.299]  </sequence>
[03:03:49.299]  
[03:03:49.563]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:49.563]  
[03:03:49.572]  <debugvars>
[03:03:49.572]    // Pre-defined
[03:03:49.572]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:49.572]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:49.572]    __dp=0x00000000
[03:03:49.572]    __ap=0x00000000
[03:03:49.572]    __traceout=0x00000000      (Trace Disabled)
[03:03:49.572]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:49.572]    __FlashAddr=0x00000000
[03:03:49.572]    __FlashLen=0x00000000
[03:03:49.572]    __FlashArg=0x00000000
[03:03:49.572]    __FlashOp=0x00000000
[03:03:49.572]    __Result=0x00000000
[03:03:49.572]  </debugvars>
[03:03:49.572]  
[03:03:49.572]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:49.572]    <block atomic="false" info="">
[03:03:49.572]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:49.572]        // -> [isSWJ <= 0x00000001]
[03:03:49.572]      __var hasDormant = __protocol & 0x00020000;
[03:03:49.572]        // -> [hasDormant <= 0x00000000]
[03:03:49.572]      __var protType   = __protocol & 0x0000FFFF;
[03:03:49.572]        // -> [protType <= 0x00000002]
[03:03:49.575]    </block>
[03:03:49.575]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:49.575]      // if-block "protType == 1"
[03:03:49.575]        // =>  FALSE
[03:03:49.575]      // skip if-block "protType == 1"
[03:03:49.575]    </control>
[03:03:49.575]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:49.575]      // if-block "protType == 2"
[03:03:49.575]        // =>  TRUE
[03:03:49.575]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:49.575]        // if-block "isSWJ"
[03:03:49.575]          // =>  TRUE
[03:03:49.575]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:49.575]          // if-block "hasDormant"
[03:03:49.575]            // =>  FALSE
[03:03:49.575]          // skip if-block "hasDormant"
[03:03:49.575]        </control>
[03:03:49.575]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:49.575]          // if-block "!hasDormant"
[03:03:49.575]            // =>  TRUE
[03:03:49.575]          <block atomic="false" info="">
[03:03:49.575]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:50.586]  
[03:03:50.586]  !!! E320 : DAP access error
[03:03:50.586]  
[03:03:50.595]          </block>
[03:03:50.595]          // end if-block "!hasDormant"
[03:03:50.595]        </control>
[03:03:50.595]        // end if-block "isSWJ"
[03:03:50.595]      </control>
[03:03:50.595]      // end if-block "protType == 2"
[03:03:50.595]    </control>
[03:03:50.595]  </sequence>
[03:03:50.595]  
[03:03:50.854]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:50.854]  
[03:03:50.862]  <debugvars>
[03:03:50.862]    // Pre-defined
[03:03:50.862]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:50.862]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:50.862]    __dp=0x00000000
[03:03:50.862]    __ap=0x00000000
[03:03:50.862]    __traceout=0x00000000      (Trace Disabled)
[03:03:50.862]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:50.862]    __FlashAddr=0x00000000
[03:03:50.862]    __FlashLen=0x00000000
[03:03:50.862]    __FlashArg=0x00000000
[03:03:50.862]    __FlashOp=0x00000000
[03:03:50.862]    __Result=0x00000000
[03:03:50.862]  </debugvars>
[03:03:50.862]  
[03:03:50.862]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:50.862]    <block atomic="false" info="">
[03:03:50.862]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:50.862]        // -> [isSWJ <= 0x00000001]
[03:03:50.862]      __var hasDormant = __protocol & 0x00020000;
[03:03:50.862]        // -> [hasDormant <= 0x00000000]
[03:03:50.862]      __var protType   = __protocol & 0x0000FFFF;
[03:03:50.862]        // -> [protType <= 0x00000002]
[03:03:50.862]    </block>
[03:03:50.862]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:50.862]      // if-block "protType == 1"
[03:03:50.862]        // =>  FALSE
[03:03:50.862]      // skip if-block "protType == 1"
[03:03:50.862]    </control>
[03:03:50.862]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:50.862]      // if-block "protType == 2"
[03:03:50.862]        // =>  TRUE
[03:03:50.862]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:50.862]        // if-block "isSWJ"
[03:03:50.866]          // =>  TRUE
[03:03:50.866]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:50.866]          // if-block "hasDormant"
[03:03:50.866]            // =>  FALSE
[03:03:50.866]          // skip if-block "hasDormant"
[03:03:50.866]        </control>
[03:03:50.866]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:50.866]          // if-block "!hasDormant"
[03:03:50.866]            // =>  TRUE
[03:03:50.866]          <block atomic="false" info="">
[03:03:50.866]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:51.869]  
[03:03:51.869]  !!! E320 : DAP access error
[03:03:51.869]  
[03:03:51.869]          </block>
[03:03:51.869]          // end if-block "!hasDormant"
[03:03:51.869]        </control>
[03:03:51.869]        // end if-block "isSWJ"
[03:03:51.869]      </control>
[03:03:51.869]      // end if-block "protType == 2"
[03:03:51.869]    </control>
[03:03:51.869]  </sequence>
[03:03:51.869]  
[03:03:52.128]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:52.128]  
[03:03:52.136]  <debugvars>
[03:03:52.136]    // Pre-defined
[03:03:52.136]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:52.136]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:52.136]    __dp=0x00000000
[03:03:52.136]    __ap=0x00000000
[03:03:52.136]    __traceout=0x00000000      (Trace Disabled)
[03:03:52.136]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:52.136]    __FlashAddr=0x00000000
[03:03:52.136]    __FlashLen=0x00000000
[03:03:52.136]    __FlashArg=0x00000000
[03:03:52.136]    __FlashOp=0x00000000
[03:03:52.136]    __Result=0x00000000
[03:03:52.136]  </debugvars>
[03:03:52.136]  
[03:03:52.136]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:52.136]    <block atomic="false" info="">
[03:03:52.136]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:52.136]        // -> [isSWJ <= 0x00000001]
[03:03:52.136]      __var hasDormant = __protocol & 0x00020000;
[03:03:52.136]        // -> [hasDormant <= 0x00000000]
[03:03:52.136]      __var protType   = __protocol & 0x0000FFFF;
[03:03:52.136]        // -> [protType <= 0x00000002]
[03:03:52.136]    </block>
[03:03:52.136]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:52.136]      // if-block "protType == 1"
[03:03:52.136]        // =>  FALSE
[03:03:52.136]      // skip if-block "protType == 1"
[03:03:52.136]    </control>
[03:03:52.136]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:52.136]      // if-block "protType == 2"
[03:03:52.140]        // =>  TRUE
[03:03:52.140]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:52.140]        // if-block "isSWJ"
[03:03:52.140]          // =>  TRUE
[03:03:52.140]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:52.140]          // if-block "hasDormant"
[03:03:52.140]            // =>  FALSE
[03:03:52.140]          // skip if-block "hasDormant"
[03:03:52.140]        </control>
[03:03:52.140]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:52.140]          // if-block "!hasDormant"
[03:03:52.140]            // =>  TRUE
[03:03:52.140]          <block atomic="false" info="">
[03:03:52.140]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:53.144]  
[03:03:53.144]  !!! E320 : DAP access error
[03:03:53.144]  
[03:03:53.144]          </block>
[03:03:53.144]          // end if-block "!hasDormant"
[03:03:53.144]        </control>
[03:03:53.144]        // end if-block "isSWJ"
[03:03:53.144]      </control>
[03:03:53.144]      // end if-block "protType == 2"
[03:03:53.144]    </control>
[03:03:53.144]  </sequence>
[03:03:53.144]  
[03:03:53.397]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:53.397]  
[03:03:53.397]  <debugvars>
[03:03:53.397]    // Pre-defined
[03:03:53.397]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:53.397]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:53.397]    __dp=0x00000000
[03:03:53.397]    __ap=0x00000000
[03:03:53.397]    __traceout=0x00000000      (Trace Disabled)
[03:03:53.397]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:53.397]    __FlashAddr=0x00000000
[03:03:53.397]    __FlashLen=0x00000000
[03:03:53.397]    __FlashArg=0x00000000
[03:03:53.397]    __FlashOp=0x00000000
[03:03:53.397]    __Result=0x00000000
[03:03:53.397]  </debugvars>
[03:03:53.397]  
[03:03:53.397]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:53.397]    <block atomic="false" info="">
[03:03:53.397]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:53.397]        // -> [isSWJ <= 0x00000001]
[03:03:53.397]      __var hasDormant = __protocol & 0x00020000;
[03:03:53.397]        // -> [hasDormant <= 0x00000000]
[03:03:53.397]      __var protType   = __protocol & 0x0000FFFF;
[03:03:53.397]        // -> [protType <= 0x00000002]
[03:03:53.397]    </block>
[03:03:53.397]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:53.397]      // if-block "protType == 1"
[03:03:53.397]        // =>  FALSE
[03:03:53.397]      // skip if-block "protType == 1"
[03:03:53.397]    </control>
[03:03:53.397]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:53.397]      // if-block "protType == 2"
[03:03:53.397]        // =>  TRUE
[03:03:53.401]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:53.401]        // if-block "isSWJ"
[03:03:53.401]          // =>  TRUE
[03:03:53.401]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:53.401]          // if-block "hasDormant"
[03:03:53.401]            // =>  FALSE
[03:03:53.401]          // skip if-block "hasDormant"
[03:03:53.401]        </control>
[03:03:53.401]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:53.401]          // if-block "!hasDormant"
[03:03:53.401]            // =>  TRUE
[03:03:53.401]          <block atomic="false" info="">
[03:03:53.401]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:54.407]  
[03:03:54.407]  !!! E320 : DAP access error
[03:03:54.407]  
[03:03:54.416]          </block>
[03:03:54.416]          // end if-block "!hasDormant"
[03:03:54.416]        </control>
[03:03:54.416]        // end if-block "isSWJ"
[03:03:54.416]      </control>
[03:03:54.416]      // end if-block "protType == 2"
[03:03:54.416]    </control>
[03:03:54.416]  </sequence>
[03:03:54.416]  
[03:03:54.673]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:54.673]  
[03:03:54.682]  <debugvars>
[03:03:54.682]    // Pre-defined
[03:03:54.682]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:54.682]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:54.682]    __dp=0x00000000
[03:03:54.682]    __ap=0x00000000
[03:03:54.682]    __traceout=0x00000000      (Trace Disabled)
[03:03:54.682]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:54.682]    __FlashAddr=0x00000000
[03:03:54.682]    __FlashLen=0x00000000
[03:03:54.682]    __FlashArg=0x00000000
[03:03:54.682]    __FlashOp=0x00000000
[03:03:54.682]    __Result=0x00000000
[03:03:54.682]  </debugvars>
[03:03:54.682]  
[03:03:54.682]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:54.682]    <block atomic="false" info="">
[03:03:54.682]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:54.682]        // -> [isSWJ <= 0x00000001]
[03:03:54.682]      __var hasDormant = __protocol & 0x00020000;
[03:03:54.682]        // -> [hasDormant <= 0x00000000]
[03:03:54.682]      __var protType   = __protocol & 0x0000FFFF;
[03:03:54.685]        // -> [protType <= 0x00000002]
[03:03:54.685]    </block>
[03:03:54.685]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:54.685]      // if-block "protType == 1"
[03:03:54.685]        // =>  FALSE
[03:03:54.685]      // skip if-block "protType == 1"
[03:03:54.685]    </control>
[03:03:54.685]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:54.685]      // if-block "protType == 2"
[03:03:54.685]        // =>  TRUE
[03:03:54.685]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:54.685]        // if-block "isSWJ"
[03:03:54.685]          // =>  TRUE
[03:03:54.685]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:54.685]          // if-block "hasDormant"
[03:03:54.685]            // =>  FALSE
[03:03:54.685]          // skip if-block "hasDormant"
[03:03:54.685]        </control>
[03:03:54.685]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:54.685]          // if-block "!hasDormant"
[03:03:54.685]            // =>  TRUE
[03:03:54.685]          <block atomic="false" info="">
[03:03:54.685]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:55.689]  
[03:03:55.689]  !!! E320 : DAP access error
[03:03:55.689]  
[03:03:55.698]          </block>
[03:03:55.698]          // end if-block "!hasDormant"
[03:03:55.698]        </control>
[03:03:55.698]        // end if-block "isSWJ"
[03:03:55.698]      </control>
[03:03:55.698]      // end if-block "protType == 2"
[03:03:55.698]    </control>
[03:03:55.698]  </sequence>
[03:03:55.698]  
[03:03:55.954]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:55.954]  
[03:03:55.963]  <debugvars>
[03:03:55.963]    // Pre-defined
[03:03:55.963]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:55.963]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:55.963]    __dp=0x00000000
[03:03:55.963]    __ap=0x00000000
[03:03:55.963]    __traceout=0x00000000      (Trace Disabled)
[03:03:55.963]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:55.963]    __FlashAddr=0x00000000
[03:03:55.963]    __FlashLen=0x00000000
[03:03:55.963]    __FlashArg=0x00000000
[03:03:55.963]    __FlashOp=0x00000000
[03:03:55.963]    __Result=0x00000000
[03:03:55.963]  </debugvars>
[03:03:55.963]  
[03:03:55.963]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:55.963]    <block atomic="false" info="">
[03:03:55.963]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:55.963]        // -> [isSWJ <= 0x00000001]
[03:03:55.963]      __var hasDormant = __protocol & 0x00020000;
[03:03:55.963]        // -> [hasDormant <= 0x00000000]
[03:03:55.963]      __var protType   = __protocol & 0x0000FFFF;
[03:03:55.966]        // -> [protType <= 0x00000002]
[03:03:55.966]    </block>
[03:03:55.966]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:55.966]      // if-block "protType == 1"
[03:03:55.966]        // =>  FALSE
[03:03:55.966]      // skip if-block "protType == 1"
[03:03:55.966]    </control>
[03:03:55.966]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:55.966]      // if-block "protType == 2"
[03:03:55.966]        // =>  TRUE
[03:03:55.966]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:55.966]        // if-block "isSWJ"
[03:03:55.966]          // =>  TRUE
[03:03:55.966]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:55.966]          // if-block "hasDormant"
[03:03:55.966]            // =>  FALSE
[03:03:55.966]          // skip if-block "hasDormant"
[03:03:55.966]        </control>
[03:03:55.966]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:55.966]          // if-block "!hasDormant"
[03:03:55.966]            // =>  TRUE
[03:03:55.966]          <block atomic="false" info="">
[03:03:55.966]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:56.974]  
[03:03:56.974]  !!! E320 : DAP access error
[03:03:56.974]  
[03:03:56.974]          </block>
[03:03:56.974]          // end if-block "!hasDormant"
[03:03:56.974]        </control>
[03:03:56.974]        // end if-block "isSWJ"
[03:03:56.974]      </control>
[03:03:56.974]      // end if-block "protType == 2"
[03:03:56.974]    </control>
[03:03:56.974]  </sequence>
[03:03:56.974]  
[03:03:57.236]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:57.236]  
[03:03:57.244]  <debugvars>
[03:03:57.244]    // Pre-defined
[03:03:57.244]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:57.244]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:57.244]    __dp=0x00000000
[03:03:57.244]    __ap=0x00000000
[03:03:57.244]    __traceout=0x00000000      (Trace Disabled)
[03:03:57.244]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:57.244]    __FlashAddr=0x00000000
[03:03:57.244]    __FlashLen=0x00000000
[03:03:57.244]    __FlashArg=0x00000000
[03:03:57.244]    __FlashOp=0x00000000
[03:03:57.244]    __Result=0x00000000
[03:03:57.244]  </debugvars>
[03:03:57.244]  
[03:03:57.244]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:57.244]    <block atomic="false" info="">
[03:03:57.244]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:57.246]        // -> [isSWJ <= 0x00000001]
[03:03:57.246]      __var hasDormant = __protocol & 0x00020000;
[03:03:57.246]        // -> [hasDormant <= 0x00000000]
[03:03:57.246]      __var protType   = __protocol & 0x0000FFFF;
[03:03:57.246]        // -> [protType <= 0x00000002]
[03:03:57.246]    </block>
[03:03:57.246]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:57.246]      // if-block "protType == 1"
[03:03:57.246]        // =>  FALSE
[03:03:57.246]      // skip if-block "protType == 1"
[03:03:57.248]    </control>
[03:03:57.248]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:57.248]      // if-block "protType == 2"
[03:03:57.248]        // =>  TRUE
[03:03:57.248]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:57.248]        // if-block "isSWJ"
[03:03:57.248]          // =>  TRUE
[03:03:57.248]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:57.248]          // if-block "hasDormant"
[03:03:57.248]            // =>  FALSE
[03:03:57.249]          // skip if-block "hasDormant"
[03:03:57.249]        </control>
[03:03:57.249]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:57.249]          // if-block "!hasDormant"
[03:03:57.249]            // =>  TRUE
[03:03:57.249]          <block atomic="false" info="">
[03:03:57.249]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:58.249]  
[03:03:58.249]  !!! E320 : DAP access error
[03:03:58.249]  
[03:03:58.249]          </block>
[03:03:58.249]          // end if-block "!hasDormant"
[03:03:58.249]        </control>
[03:03:58.249]        // end if-block "isSWJ"
[03:03:58.249]      </control>
[03:03:58.249]      // end if-block "protType == 2"
[03:03:58.249]    </control>
[03:03:58.249]  </sequence>
[03:03:58.249]  
[03:03:58.508]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:58.508]  
[03:03:58.516]  <debugvars>
[03:03:58.516]    // Pre-defined
[03:03:58.516]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:58.516]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:58.516]    __dp=0x00000000
[03:03:58.516]    __ap=0x00000000
[03:03:58.516]    __traceout=0x00000000      (Trace Disabled)
[03:03:58.516]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:58.516]    __FlashAddr=0x00000000
[03:03:58.516]    __FlashLen=0x00000000
[03:03:58.516]    __FlashArg=0x00000000
[03:03:58.516]    __FlashOp=0x00000000
[03:03:58.516]    __Result=0x00000000
[03:03:58.516]  </debugvars>
[03:03:58.516]  
[03:03:58.516]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:58.516]    <block atomic="false" info="">
[03:03:58.516]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:58.516]        // -> [isSWJ <= 0x00000001]
[03:03:58.516]      __var hasDormant = __protocol & 0x00020000;
[03:03:58.516]        // -> [hasDormant <= 0x00000000]
[03:03:58.516]      __var protType   = __protocol & 0x0000FFFF;
[03:03:58.516]        // -> [protType <= 0x00000002]
[03:03:58.516]    </block>
[03:03:58.516]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:58.516]      // if-block "protType == 1"
[03:03:58.516]        // =>  FALSE
[03:03:58.516]      // skip if-block "protType == 1"
[03:03:58.516]    </control>
[03:03:58.516]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:58.516]      // if-block "protType == 2"
[03:03:58.516]        // =>  TRUE
[03:03:58.520]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:58.520]        // if-block "isSWJ"
[03:03:58.520]          // =>  TRUE
[03:03:58.520]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:58.520]          // if-block "hasDormant"
[03:03:58.520]            // =>  FALSE
[03:03:58.520]          // skip if-block "hasDormant"
[03:03:58.520]        </control>
[03:03:58.520]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:58.520]          // if-block "!hasDormant"
[03:03:58.520]            // =>  TRUE
[03:03:58.520]          <block atomic="false" info="">
[03:03:58.520]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:03:59.525]  
[03:03:59.525]  !!! E320 : DAP access error
[03:03:59.525]  
[03:03:59.525]          </block>
[03:03:59.525]          // end if-block "!hasDormant"
[03:03:59.525]        </control>
[03:03:59.525]        // end if-block "isSWJ"
[03:03:59.525]      </control>
[03:03:59.525]      // end if-block "protType == 2"
[03:03:59.525]    </control>
[03:03:59.525]  </sequence>
[03:03:59.525]  
[03:03:59.777]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:03:59.777]  
[03:03:59.777]  <debugvars>
[03:03:59.777]    // Pre-defined
[03:03:59.777]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:03:59.777]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:03:59.777]    __dp=0x00000000
[03:03:59.777]    __ap=0x00000000
[03:03:59.777]    __traceout=0x00000000      (Trace Disabled)
[03:03:59.777]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:03:59.777]    __FlashAddr=0x00000000
[03:03:59.777]    __FlashLen=0x00000000
[03:03:59.777]    __FlashArg=0x00000000
[03:03:59.777]    __FlashOp=0x00000000
[03:03:59.777]    __Result=0x00000000
[03:03:59.777]  </debugvars>
[03:03:59.777]  
[03:03:59.777]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:03:59.777]    <block atomic="false" info="">
[03:03:59.777]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:03:59.777]        // -> [isSWJ <= 0x00000001]
[03:03:59.777]      __var hasDormant = __protocol & 0x00020000;
[03:03:59.777]        // -> [hasDormant <= 0x00000000]
[03:03:59.777]      __var protType   = __protocol & 0x0000FFFF;
[03:03:59.777]        // -> [protType <= 0x00000002]
[03:03:59.777]    </block>
[03:03:59.777]    <control if="protType == 1" while="" timeout="0" info="">
[03:03:59.777]      // if-block "protType == 1"
[03:03:59.777]        // =>  FALSE
[03:03:59.777]      // skip if-block "protType == 1"
[03:03:59.777]    </control>
[03:03:59.777]    <control if="protType == 2" while="" timeout="0" info="">
[03:03:59.777]      // if-block "protType == 2"
[03:03:59.781]        // =>  TRUE
[03:03:59.781]      <control if="isSWJ" while="" timeout="0" info="">
[03:03:59.781]        // if-block "isSWJ"
[03:03:59.781]          // =>  TRUE
[03:03:59.781]        <control if="hasDormant" while="" timeout="0" info="">
[03:03:59.781]          // if-block "hasDormant"
[03:03:59.781]            // =>  FALSE
[03:03:59.781]          // skip if-block "hasDormant"
[03:03:59.781]        </control>
[03:03:59.781]        <control if="!hasDormant" while="" timeout="0" info="">
[03:03:59.781]          // if-block "!hasDormant"
[03:03:59.781]            // =>  TRUE
[03:03:59.781]          <block atomic="false" info="">
[03:03:59.781]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:00.790]  
[03:04:00.790]  !!! E320 : DAP access error
[03:04:00.790]  
[03:04:00.798]          </block>
[03:04:00.798]          // end if-block "!hasDormant"
[03:04:00.798]        </control>
[03:04:00.798]        // end if-block "isSWJ"
[03:04:00.798]      </control>
[03:04:00.798]      // end if-block "protType == 2"
[03:04:00.798]    </control>
[03:04:00.798]  </sequence>
[03:04:00.798]  
[03:04:01.058]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:01.058]  
[03:04:01.058]  <debugvars>
[03:04:01.058]    // Pre-defined
[03:04:01.058]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:01.058]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:01.059]    __dp=0x00000000
[03:04:01.059]    __ap=0x00000000
[03:04:01.059]    __traceout=0x00000000      (Trace Disabled)
[03:04:01.059]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:01.059]    __FlashAddr=0x00000000
[03:04:01.059]    __FlashLen=0x00000000
[03:04:01.059]    __FlashArg=0x00000000
[03:04:01.059]    __FlashOp=0x00000000
[03:04:01.059]    __Result=0x00000000
[03:04:01.059]  </debugvars>
[03:04:01.059]  
[03:04:01.059]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:01.059]    <block atomic="false" info="">
[03:04:01.059]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:01.059]        // -> [isSWJ <= 0x00000001]
[03:04:01.059]      __var hasDormant = __protocol & 0x00020000;
[03:04:01.059]        // -> [hasDormant <= 0x00000000]
[03:04:01.059]      __var protType   = __protocol & 0x0000FFFF;
[03:04:01.059]        // -> [protType <= 0x00000002]
[03:04:01.059]    </block>
[03:04:01.059]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:01.059]      // if-block "protType == 1"
[03:04:01.059]        // =>  FALSE
[03:04:01.062]      // skip if-block "protType == 1"
[03:04:01.062]    </control>
[03:04:01.062]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:01.062]      // if-block "protType == 2"
[03:04:01.062]        // =>  TRUE
[03:04:01.062]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:01.062]        // if-block "isSWJ"
[03:04:01.062]          // =>  TRUE
[03:04:01.062]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:01.062]          // if-block "hasDormant"
[03:04:01.062]            // =>  FALSE
[03:04:01.062]          // skip if-block "hasDormant"
[03:04:01.062]        </control>
[03:04:01.062]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:01.062]          // if-block "!hasDormant"
[03:04:01.062]            // =>  TRUE
[03:04:01.062]          <block atomic="false" info="">
[03:04:01.062]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:02.069]  
[03:04:02.069]  !!! E320 : DAP access error
[03:04:02.069]  
[03:04:02.077]          </block>
[03:04:02.077]          // end if-block "!hasDormant"
[03:04:02.077]        </control>
[03:04:02.077]        // end if-block "isSWJ"
[03:04:02.077]      </control>
[03:04:02.077]      // end if-block "protType == 2"
[03:04:02.077]    </control>
[03:04:02.077]  </sequence>
[03:04:02.077]  
[03:04:02.329]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:02.329]  
[03:04:02.329]  <debugvars>
[03:04:02.329]    // Pre-defined
[03:04:02.329]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:02.329]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:02.329]    __dp=0x00000000
[03:04:02.329]    __ap=0x00000000
[03:04:02.329]    __traceout=0x00000000      (Trace Disabled)
[03:04:02.329]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:02.329]    __FlashAddr=0x00000000
[03:04:02.329]    __FlashLen=0x00000000
[03:04:02.329]    __FlashArg=0x00000000
[03:04:02.329]    __FlashOp=0x00000000
[03:04:02.329]    __Result=0x00000000
[03:04:02.329]  </debugvars>
[03:04:02.329]  
[03:04:02.329]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:02.329]    <block atomic="false" info="">
[03:04:02.329]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:02.329]        // -> [isSWJ <= 0x00000001]
[03:04:02.329]      __var hasDormant = __protocol & 0x00020000;
[03:04:02.329]        // -> [hasDormant <= 0x00000000]
[03:04:02.329]      __var protType   = __protocol & 0x0000FFFF;
[03:04:02.329]        // -> [protType <= 0x00000002]
[03:04:02.333]    </block>
[03:04:02.333]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:02.333]      // if-block "protType == 1"
[03:04:02.333]        // =>  FALSE
[03:04:02.333]      // skip if-block "protType == 1"
[03:04:02.333]    </control>
[03:04:02.333]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:02.333]      // if-block "protType == 2"
[03:04:02.333]        // =>  TRUE
[03:04:02.333]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:02.333]        // if-block "isSWJ"
[03:04:02.333]          // =>  TRUE
[03:04:02.333]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:02.333]          // if-block "hasDormant"
[03:04:02.333]            // =>  FALSE
[03:04:02.333]          // skip if-block "hasDormant"
[03:04:02.333]        </control>
[03:04:02.333]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:02.333]          // if-block "!hasDormant"
[03:04:02.333]            // =>  TRUE
[03:04:02.333]          <block atomic="false" info="">
[03:04:02.333]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:03.345]  
[03:04:03.345]  !!! E320 : DAP access error
[03:04:03.345]  
[03:04:03.354]          </block>
[03:04:03.354]          // end if-block "!hasDormant"
[03:04:03.354]        </control>
[03:04:03.354]        // end if-block "isSWJ"
[03:04:03.354]      </control>
[03:04:03.354]      // end if-block "protType == 2"
[03:04:03.354]    </control>
[03:04:03.354]  </sequence>
[03:04:03.354]  
[03:04:03.612]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:03.612]  
[03:04:03.612]  <debugvars>
[03:04:03.612]    // Pre-defined
[03:04:03.612]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:03.612]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:03.612]    __dp=0x00000000
[03:04:03.612]    __ap=0x00000000
[03:04:03.612]    __traceout=0x00000000      (Trace Disabled)
[03:04:03.612]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:03.612]    __FlashAddr=0x00000000
[03:04:03.612]    __FlashLen=0x00000000
[03:04:03.612]    __FlashArg=0x00000000
[03:04:03.612]    __FlashOp=0x00000000
[03:04:03.612]    __Result=0x00000000
[03:04:03.612]  </debugvars>
[03:04:03.612]  
[03:04:03.612]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:03.612]    <block atomic="false" info="">
[03:04:03.612]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:03.612]        // -> [isSWJ <= 0x00000001]
[03:04:03.612]      __var hasDormant = __protocol & 0x00020000;
[03:04:03.612]        // -> [hasDormant <= 0x00000000]
[03:04:03.612]      __var protType   = __protocol & 0x0000FFFF;
[03:04:03.616]        // -> [protType <= 0x00000002]
[03:04:03.616]    </block>
[03:04:03.616]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:03.616]      // if-block "protType == 1"
[03:04:03.616]        // =>  FALSE
[03:04:03.616]      // skip if-block "protType == 1"
[03:04:03.616]    </control>
[03:04:03.616]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:03.616]      // if-block "protType == 2"
[03:04:03.616]        // =>  TRUE
[03:04:03.616]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:03.616]        // if-block "isSWJ"
[03:04:03.616]          // =>  TRUE
[03:04:03.616]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:03.616]          // if-block "hasDormant"
[03:04:03.616]            // =>  FALSE
[03:04:03.616]          // skip if-block "hasDormant"
[03:04:03.616]        </control>
[03:04:03.616]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:03.616]          // if-block "!hasDormant"
[03:04:03.616]            // =>  TRUE
[03:04:03.616]          <block atomic="false" info="">
[03:04:03.616]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:04.619]  
[03:04:04.619]  !!! E320 : DAP access error
[03:04:04.619]  
[03:04:04.628]          </block>
[03:04:04.628]          // end if-block "!hasDormant"
[03:04:04.628]        </control>
[03:04:04.628]        // end if-block "isSWJ"
[03:04:04.628]      </control>
[03:04:04.628]      // end if-block "protType == 2"
[03:04:04.628]    </control>
[03:04:04.628]  </sequence>
[03:04:04.628]  
[03:04:04.889]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:04.889]  
[03:04:04.899]  <debugvars>
[03:04:04.899]    // Pre-defined
[03:04:04.899]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:04.899]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:04.899]    __dp=0x00000000
[03:04:04.899]    __ap=0x00000000
[03:04:04.899]    __traceout=0x00000000      (Trace Disabled)
[03:04:04.899]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:04.899]    __FlashAddr=0x00000000
[03:04:04.899]    __FlashLen=0x00000000
[03:04:04.899]    __FlashArg=0x00000000
[03:04:04.899]    __FlashOp=0x00000000
[03:04:04.899]    __Result=0x00000000
[03:04:04.899]  </debugvars>
[03:04:04.899]  
[03:04:04.899]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:04.901]    <block atomic="false" info="">
[03:04:04.901]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:04.901]        // -> [isSWJ <= 0x00000001]
[03:04:04.901]      __var hasDormant = __protocol & 0x00020000;
[03:04:04.901]        // -> [hasDormant <= 0x00000000]
[03:04:04.901]      __var protType   = __protocol & 0x0000FFFF;
[03:04:04.901]        // -> [protType <= 0x00000002]
[03:04:04.901]    </block>
[03:04:04.901]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:04.901]      // if-block "protType == 1"
[03:04:04.901]        // =>  FALSE
[03:04:04.901]      // skip if-block "protType == 1"
[03:04:04.901]    </control>
[03:04:04.901]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:04.902]      // if-block "protType == 2"
[03:04:04.902]        // =>  TRUE
[03:04:04.902]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:04.902]        // if-block "isSWJ"
[03:04:04.902]          // =>  TRUE
[03:04:04.902]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:04.902]          // if-block "hasDormant"
[03:04:04.902]            // =>  FALSE
[03:04:04.902]          // skip if-block "hasDormant"
[03:04:04.902]        </control>
[03:04:04.903]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:04.903]          // if-block "!hasDormant"
[03:04:04.903]            // =>  TRUE
[03:04:04.903]          <block atomic="false" info="">
[03:04:04.903]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:05.913]  
[03:04:05.913]  !!! E320 : DAP access error
[03:04:05.913]  
[03:04:05.922]          </block>
[03:04:05.922]          // end if-block "!hasDormant"
[03:04:05.922]        </control>
[03:04:05.922]        // end if-block "isSWJ"
[03:04:05.922]      </control>
[03:04:05.922]      // end if-block "protType == 2"
[03:04:05.922]    </control>
[03:04:05.922]  </sequence>
[03:04:05.922]  
[03:04:06.179]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:06.179]  
[03:04:06.187]  <debugvars>
[03:04:06.187]    // Pre-defined
[03:04:06.187]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:06.187]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:06.187]    __dp=0x00000000
[03:04:06.187]    __ap=0x00000000
[03:04:06.187]    __traceout=0x00000000      (Trace Disabled)
[03:04:06.187]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:06.187]    __FlashAddr=0x00000000
[03:04:06.187]    __FlashLen=0x00000000
[03:04:06.187]    __FlashArg=0x00000000
[03:04:06.187]    __FlashOp=0x00000000
[03:04:06.187]    __Result=0x00000000
[03:04:06.187]  </debugvars>
[03:04:06.187]  
[03:04:06.187]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:06.187]    <block atomic="false" info="">
[03:04:06.187]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:06.187]        // -> [isSWJ <= 0x00000001]
[03:04:06.187]      __var hasDormant = __protocol & 0x00020000;
[03:04:06.187]        // -> [hasDormant <= 0x00000000]
[03:04:06.187]      __var protType   = __protocol & 0x0000FFFF;
[03:04:06.187]        // -> [protType <= 0x00000002]
[03:04:06.187]    </block>
[03:04:06.187]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:06.187]      // if-block "protType == 1"
[03:04:06.187]        // =>  FALSE
[03:04:06.187]      // skip if-block "protType == 1"
[03:04:06.187]    </control>
[03:04:06.191]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:06.191]      // if-block "protType == 2"
[03:04:06.191]        // =>  TRUE
[03:04:06.191]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:06.191]        // if-block "isSWJ"
[03:04:06.191]          // =>  TRUE
[03:04:06.191]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:06.191]          // if-block "hasDormant"
[03:04:06.191]            // =>  FALSE
[03:04:06.191]          // skip if-block "hasDormant"
[03:04:06.191]        </control>
[03:04:06.191]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:06.191]          // if-block "!hasDormant"
[03:04:06.191]            // =>  TRUE
[03:04:06.191]          <block atomic="false" info="">
[03:04:06.191]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:07.199]  
[03:04:07.199]  !!! E320 : DAP access error
[03:04:07.199]  
[03:04:07.208]          </block>
[03:04:07.208]          // end if-block "!hasDormant"
[03:04:07.208]        </control>
[03:04:07.208]        // end if-block "isSWJ"
[03:04:07.208]      </control>
[03:04:07.208]      // end if-block "protType == 2"
[03:04:07.208]    </control>
[03:04:07.208]  </sequence>
[03:04:07.208]  
[03:04:07.462]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:07.462]  
[03:04:07.470]  <debugvars>
[03:04:07.470]    // Pre-defined
[03:04:07.470]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:07.470]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:07.470]    __dp=0x00000000
[03:04:07.470]    __ap=0x00000000
[03:04:07.470]    __traceout=0x00000000      (Trace Disabled)
[03:04:07.470]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:07.470]    __FlashAddr=0x00000000
[03:04:07.470]    __FlashLen=0x00000000
[03:04:07.470]    __FlashArg=0x00000000
[03:04:07.470]    __FlashOp=0x00000000
[03:04:07.470]    __Result=0x00000000
[03:04:07.470]  </debugvars>
[03:04:07.470]  
[03:04:07.470]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:07.470]    <block atomic="false" info="">
[03:04:07.470]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:07.470]        // -> [isSWJ <= 0x00000001]
[03:04:07.470]      __var hasDormant = __protocol & 0x00020000;
[03:04:07.470]        // -> [hasDormant <= 0x00000000]
[03:04:07.470]      __var protType   = __protocol & 0x0000FFFF;
[03:04:07.470]        // -> [protType <= 0x00000002]
[03:04:07.470]    </block>
[03:04:07.470]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:07.470]      // if-block "protType == 1"
[03:04:07.470]        // =>  FALSE
[03:04:07.470]      // skip if-block "protType == 1"
[03:04:07.470]    </control>
[03:04:07.470]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:07.474]      // if-block "protType == 2"
[03:04:07.474]        // =>  TRUE
[03:04:07.474]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:07.474]        // if-block "isSWJ"
[03:04:07.474]          // =>  TRUE
[03:04:07.474]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:07.474]          // if-block "hasDormant"
[03:04:07.474]            // =>  FALSE
[03:04:07.474]          // skip if-block "hasDormant"
[03:04:07.474]        </control>
[03:04:07.474]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:07.474]          // if-block "!hasDormant"
[03:04:07.474]            // =>  TRUE
[03:04:07.474]          <block atomic="false" info="">
[03:04:07.474]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:08.476]  
[03:04:08.476]  !!! E320 : DAP access error
[03:04:08.476]  
[03:04:08.485]          </block>
[03:04:08.485]          // end if-block "!hasDormant"
[03:04:08.485]        </control>
[03:04:08.485]        // end if-block "isSWJ"
[03:04:08.485]      </control>
[03:04:08.485]      // end if-block "protType == 2"
[03:04:08.485]    </control>
[03:04:08.485]  </sequence>
[03:04:08.485]  
[03:04:08.741]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:08.741]  
[03:04:08.750]  <debugvars>
[03:04:08.750]    // Pre-defined
[03:04:08.750]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:08.750]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:08.750]    __dp=0x00000000
[03:04:08.750]    __ap=0x00000000
[03:04:08.750]    __traceout=0x00000000      (Trace Disabled)
[03:04:08.750]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:08.750]    __FlashAddr=0x00000000
[03:04:08.750]    __FlashLen=0x00000000
[03:04:08.750]    __FlashArg=0x00000000
[03:04:08.750]    __FlashOp=0x00000000
[03:04:08.750]    __Result=0x00000000
[03:04:08.750]  </debugvars>
[03:04:08.750]  
[03:04:08.750]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:08.750]    <block atomic="false" info="">
[03:04:08.750]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:08.750]        // -> [isSWJ <= 0x00000001]
[03:04:08.750]      __var hasDormant = __protocol & 0x00020000;
[03:04:08.750]        // -> [hasDormant <= 0x00000000]
[03:04:08.750]      __var protType   = __protocol & 0x0000FFFF;
[03:04:08.753]        // -> [protType <= 0x00000002]
[03:04:08.753]    </block>
[03:04:08.753]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:08.753]      // if-block "protType == 1"
[03:04:08.753]        // =>  FALSE
[03:04:08.753]      // skip if-block "protType == 1"
[03:04:08.753]    </control>
[03:04:08.753]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:08.753]      // if-block "protType == 2"
[03:04:08.753]        // =>  TRUE
[03:04:08.753]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:08.753]        // if-block "isSWJ"
[03:04:08.753]          // =>  TRUE
[03:04:08.753]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:08.753]          // if-block "hasDormant"
[03:04:08.753]            // =>  FALSE
[03:04:08.753]          // skip if-block "hasDormant"
[03:04:08.753]        </control>
[03:04:08.753]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:08.753]          // if-block "!hasDormant"
[03:04:08.753]            // =>  TRUE
[03:04:08.753]          <block atomic="false" info="">
[03:04:08.753]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:09.761]  
[03:04:09.761]  !!! E320 : DAP access error
[03:04:09.761]  
[03:04:09.761]          </block>
[03:04:09.761]          // end if-block "!hasDormant"
[03:04:09.761]        </control>
[03:04:09.761]        // end if-block "isSWJ"
[03:04:09.761]      </control>
[03:04:09.761]      // end if-block "protType == 2"
[03:04:09.761]    </control>
[03:04:09.761]  </sequence>
[03:04:09.761]  
[03:04:10.014]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:10.014]  
[03:04:10.014]  <debugvars>
[03:04:10.014]    // Pre-defined
[03:04:10.014]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:10.014]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:10.014]    __dp=0x00000000
[03:04:10.014]    __ap=0x00000000
[03:04:10.014]    __traceout=0x00000000      (Trace Disabled)
[03:04:10.014]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:10.014]    __FlashAddr=0x00000000
[03:04:10.014]    __FlashLen=0x00000000
[03:04:10.014]    __FlashArg=0x00000000
[03:04:10.014]    __FlashOp=0x00000000
[03:04:10.014]    __Result=0x00000000
[03:04:10.014]  </debugvars>
[03:04:10.014]  
[03:04:10.014]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:10.014]    <block atomic="false" info="">
[03:04:10.014]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:10.014]        // -> [isSWJ <= 0x00000001]
[03:04:10.014]      __var hasDormant = __protocol & 0x00020000;
[03:04:10.014]        // -> [hasDormant <= 0x00000000]
[03:04:10.014]      __var protType   = __protocol & 0x0000FFFF;
[03:04:10.014]        // -> [protType <= 0x00000002]
[03:04:10.014]    </block>
[03:04:10.014]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:10.014]      // if-block "protType == 1"
[03:04:10.014]        // =>  FALSE
[03:04:10.014]      // skip if-block "protType == 1"
[03:04:10.014]    </control>
[03:04:10.018]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:10.018]      // if-block "protType == 2"
[03:04:10.018]        // =>  TRUE
[03:04:10.018]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:10.018]        // if-block "isSWJ"
[03:04:10.018]          // =>  TRUE
[03:04:10.018]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:10.018]          // if-block "hasDormant"
[03:04:10.018]            // =>  FALSE
[03:04:10.018]          // skip if-block "hasDormant"
[03:04:10.018]        </control>
[03:04:10.018]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:10.018]          // if-block "!hasDormant"
[03:04:10.018]            // =>  TRUE
[03:04:10.018]          <block atomic="false" info="">
[03:04:10.018]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:11.025]  
[03:04:11.025]  !!! E320 : DAP access error
[03:04:11.025]  
[03:04:11.033]          </block>
[03:04:11.033]          // end if-block "!hasDormant"
[03:04:11.033]        </control>
[03:04:11.033]        // end if-block "isSWJ"
[03:04:11.033]      </control>
[03:04:11.033]      // end if-block "protType == 2"
[03:04:11.033]    </control>
[03:04:11.033]  </sequence>
[03:04:11.033]  
[03:04:11.290]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:11.290]  
[03:04:11.300]  <debugvars>
[03:04:11.300]    // Pre-defined
[03:04:11.300]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:11.300]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:11.300]    __dp=0x00000000
[03:04:11.300]    __ap=0x00000000
[03:04:11.300]    __traceout=0x00000000      (Trace Disabled)
[03:04:11.300]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:11.300]    __FlashAddr=0x00000000
[03:04:11.300]    __FlashLen=0x00000000
[03:04:11.300]    __FlashArg=0x00000000
[03:04:11.300]    __FlashOp=0x00000000
[03:04:11.300]    __Result=0x00000000
[03:04:11.300]  </debugvars>
[03:04:11.300]  
[03:04:11.300]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:11.300]    <block atomic="false" info="">
[03:04:11.300]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:11.300]        // -> [isSWJ <= 0x00000001]
[03:04:11.300]      __var hasDormant = __protocol & 0x00020000;
[03:04:11.300]        // -> [hasDormant <= 0x00000000]
[03:04:11.300]      __var protType   = __protocol & 0x0000FFFF;
[03:04:11.303]        // -> [protType <= 0x00000002]
[03:04:11.303]    </block>
[03:04:11.303]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:11.303]      // if-block "protType == 1"
[03:04:11.303]        // =>  FALSE
[03:04:11.303]      // skip if-block "protType == 1"
[03:04:11.303]    </control>
[03:04:11.303]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:11.303]      // if-block "protType == 2"
[03:04:11.303]        // =>  TRUE
[03:04:11.303]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:11.303]        // if-block "isSWJ"
[03:04:11.303]          // =>  TRUE
[03:04:11.303]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:11.303]          // if-block "hasDormant"
[03:04:11.303]            // =>  FALSE
[03:04:11.303]          // skip if-block "hasDormant"
[03:04:11.303]        </control>
[03:04:11.303]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:11.303]          // if-block "!hasDormant"
[03:04:11.303]            // =>  TRUE
[03:04:11.303]          <block atomic="false" info="">
[03:04:11.303]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:12.305]  
[03:04:12.305]  !!! E320 : DAP access error
[03:04:12.305]  
[03:04:12.314]          </block>
[03:04:12.314]          // end if-block "!hasDormant"
[03:04:12.314]        </control>
[03:04:12.314]        // end if-block "isSWJ"
[03:04:12.314]      </control>
[03:04:12.314]      // end if-block "protType == 2"
[03:04:12.314]    </control>
[03:04:12.314]  </sequence>
[03:04:12.314]  
[03:04:12.564]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:12.564]  
[03:04:12.573]  <debugvars>
[03:04:12.573]    // Pre-defined
[03:04:12.573]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:12.573]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:12.573]    __dp=0x00000000
[03:04:12.573]    __ap=0x00000000
[03:04:12.573]    __traceout=0x00000000      (Trace Disabled)
[03:04:12.573]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:12.573]    __FlashAddr=0x00000000
[03:04:12.573]    __FlashLen=0x00000000
[03:04:12.573]    __FlashArg=0x00000000
[03:04:12.573]    __FlashOp=0x00000000
[03:04:12.573]    __Result=0x00000000
[03:04:12.573]  </debugvars>
[03:04:12.573]  
[03:04:12.573]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:12.573]    <block atomic="false" info="">
[03:04:12.573]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:12.573]        // -> [isSWJ <= 0x00000001]
[03:04:12.573]      __var hasDormant = __protocol & 0x00020000;
[03:04:12.573]        // -> [hasDormant <= 0x00000000]
[03:04:12.573]      __var protType   = __protocol & 0x0000FFFF;
[03:04:12.573]        // -> [protType <= 0x00000002]
[03:04:12.573]    </block>
[03:04:12.573]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:12.573]      // if-block "protType == 1"
[03:04:12.576]        // =>  FALSE
[03:04:12.576]      // skip if-block "protType == 1"
[03:04:12.576]    </control>
[03:04:12.576]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:12.576]      // if-block "protType == 2"
[03:04:12.576]        // =>  TRUE
[03:04:12.576]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:12.576]        // if-block "isSWJ"
[03:04:12.576]          // =>  TRUE
[03:04:12.576]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:12.576]          // if-block "hasDormant"
[03:04:12.576]            // =>  FALSE
[03:04:12.576]          // skip if-block "hasDormant"
[03:04:12.576]        </control>
[03:04:12.576]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:12.576]          // if-block "!hasDormant"
[03:04:12.576]            // =>  TRUE
[03:04:12.576]          <block atomic="false" info="">
[03:04:12.576]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:13.580]  
[03:04:13.580]  !!! E320 : DAP access error
[03:04:13.580]  
[03:04:13.589]          </block>
[03:04:13.589]          // end if-block "!hasDormant"
[03:04:13.589]        </control>
[03:04:13.589]        // end if-block "isSWJ"
[03:04:13.589]      </control>
[03:04:13.589]      // end if-block "protType == 2"
[03:04:13.589]    </control>
[03:04:13.589]  </sequence>
[03:04:13.589]  
[03:04:13.844]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:13.844]  
[03:04:13.844]  <debugvars>
[03:04:13.844]    // Pre-defined
[03:04:13.844]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:13.844]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:13.844]    __dp=0x00000000
[03:04:13.844]    __ap=0x00000000
[03:04:13.844]    __traceout=0x00000000      (Trace Disabled)
[03:04:13.844]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:13.844]    __FlashAddr=0x00000000
[03:04:13.844]    __FlashLen=0x00000000
[03:04:13.844]    __FlashArg=0x00000000
[03:04:13.844]    __FlashOp=0x00000000
[03:04:13.844]    __Result=0x00000000
[03:04:13.844]  </debugvars>
[03:04:13.844]  
[03:04:13.844]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:13.844]    <block atomic="false" info="">
[03:04:13.847]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:13.847]        // -> [isSWJ <= 0x00000001]
[03:04:13.847]      __var hasDormant = __protocol & 0x00020000;
[03:04:13.847]        // -> [hasDormant <= 0x00000000]
[03:04:13.847]      __var protType   = __protocol & 0x0000FFFF;
[03:04:13.847]        // -> [protType <= 0x00000002]
[03:04:13.847]    </block>
[03:04:13.847]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:13.848]      // if-block "protType == 1"
[03:04:13.848]        // =>  FALSE
[03:04:13.848]      // skip if-block "protType == 1"
[03:04:13.848]    </control>
[03:04:13.848]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:13.848]      // if-block "protType == 2"
[03:04:13.848]        // =>  TRUE
[03:04:13.848]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:13.848]        // if-block "isSWJ"
[03:04:13.848]          // =>  TRUE
[03:04:13.848]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:13.849]          // if-block "hasDormant"
[03:04:13.849]            // =>  FALSE
[03:04:13.849]          // skip if-block "hasDormant"
[03:04:13.849]        </control>
[03:04:13.849]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:13.849]          // if-block "!hasDormant"
[03:04:13.849]            // =>  TRUE
[03:04:13.849]          <block atomic="false" info="">
[03:04:13.849]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:14.859]  
[03:04:14.859]  !!! E320 : DAP access error
[03:04:14.859]  
[03:04:14.868]          </block>
[03:04:14.868]          // end if-block "!hasDormant"
[03:04:14.868]        </control>
[03:04:14.868]        // end if-block "isSWJ"
[03:04:14.868]      </control>
[03:04:14.868]      // end if-block "protType == 2"
[03:04:14.868]    </control>
[03:04:14.868]  </sequence>
[03:04:14.868]  
[03:04:15.125]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:15.125]  
[03:04:15.134]  <debugvars>
[03:04:15.134]    // Pre-defined
[03:04:15.134]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:15.134]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:15.134]    __dp=0x00000000
[03:04:15.134]    __ap=0x00000000
[03:04:15.134]    __traceout=0x00000000      (Trace Disabled)
[03:04:15.134]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:15.134]    __FlashAddr=0x00000000
[03:04:15.134]    __FlashLen=0x00000000
[03:04:15.134]    __FlashArg=0x00000000
[03:04:15.134]    __FlashOp=0x00000000
[03:04:15.134]    __Result=0x00000000
[03:04:15.134]  </debugvars>
[03:04:15.134]  
[03:04:15.134]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:15.134]    <block atomic="false" info="">
[03:04:15.134]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:15.134]        // -> [isSWJ <= 0x00000001]
[03:04:15.134]      __var hasDormant = __protocol & 0x00020000;
[03:04:15.134]        // -> [hasDormant <= 0x00000000]
[03:04:15.134]      __var protType   = __protocol & 0x0000FFFF;
[03:04:15.134]        // -> [protType <= 0x00000002]
[03:04:15.134]    </block>
[03:04:15.134]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:15.134]      // if-block "protType == 1"
[03:04:15.134]        // =>  FALSE
[03:04:15.134]      // skip if-block "protType == 1"
[03:04:15.134]    </control>
[03:04:15.137]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:15.137]      // if-block "protType == 2"
[03:04:15.137]        // =>  TRUE
[03:04:15.137]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:15.137]        // if-block "isSWJ"
[03:04:15.137]          // =>  TRUE
[03:04:15.137]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:15.137]          // if-block "hasDormant"
[03:04:15.137]            // =>  FALSE
[03:04:15.137]          // skip if-block "hasDormant"
[03:04:15.137]        </control>
[03:04:15.137]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:15.137]          // if-block "!hasDormant"
[03:04:15.137]            // =>  TRUE
[03:04:15.137]          <block atomic="false" info="">
[03:04:15.137]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:16.139]  
[03:04:16.139]  !!! E320 : DAP access error
[03:04:16.139]  
[03:04:16.149]          </block>
[03:04:16.149]          // end if-block "!hasDormant"
[03:04:16.149]        </control>
[03:04:16.149]        // end if-block "isSWJ"
[03:04:16.149]      </control>
[03:04:16.149]      // end if-block "protType == 2"
[03:04:16.149]    </control>
[03:04:16.149]  </sequence>
[03:04:16.149]  
[03:04:16.406]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:16.406]  
[03:04:16.414]  <debugvars>
[03:04:16.414]    // Pre-defined
[03:04:16.414]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:16.414]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:16.414]    __dp=0x00000000
[03:04:16.414]    __ap=0x00000000
[03:04:16.414]    __traceout=0x00000000      (Trace Disabled)
[03:04:16.414]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:16.414]    __FlashAddr=0x00000000
[03:04:16.414]    __FlashLen=0x00000000
[03:04:16.414]    __FlashArg=0x00000000
[03:04:16.414]    __FlashOp=0x00000000
[03:04:16.416]    __Result=0x00000000
[03:04:16.416]  </debugvars>
[03:04:16.416]  
[03:04:16.416]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:16.416]    <block atomic="false" info="">
[03:04:16.416]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:16.416]        // -> [isSWJ <= 0x00000001]
[03:04:16.416]      __var hasDormant = __protocol & 0x00020000;
[03:04:16.416]        // -> [hasDormant <= 0x00000000]
[03:04:16.416]      __var protType   = __protocol & 0x0000FFFF;
[03:04:16.416]        // -> [protType <= 0x00000002]
[03:04:16.416]    </block>
[03:04:16.416]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:16.416]      // if-block "protType == 1"
[03:04:16.417]        // =>  FALSE
[03:04:16.417]      // skip if-block "protType == 1"
[03:04:16.417]    </control>
[03:04:16.417]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:16.417]      // if-block "protType == 2"
[03:04:16.418]        // =>  TRUE
[03:04:16.418]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:16.418]        // if-block "isSWJ"
[03:04:16.418]          // =>  TRUE
[03:04:16.418]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:16.418]          // if-block "hasDormant"
[03:04:16.418]            // =>  FALSE
[03:04:16.418]          // skip if-block "hasDormant"
[03:04:16.418]        </control>
[03:04:16.418]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:16.418]          // if-block "!hasDormant"
[03:04:16.418]            // =>  TRUE
[03:04:16.418]          <block atomic="false" info="">
[03:04:16.418]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:17.422]  
[03:04:17.422]  !!! E320 : DAP access error
[03:04:17.422]  
[03:04:17.422]          </block>
[03:04:17.422]          // end if-block "!hasDormant"
[03:04:17.422]        </control>
[03:04:17.422]        // end if-block "isSWJ"
[03:04:17.422]      </control>
[03:04:17.422]      // end if-block "protType == 2"
[03:04:17.422]    </control>
[03:04:17.422]  </sequence>
[03:04:17.422]  
[03:04:17.674]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:17.674]  
[03:04:17.685]  <debugvars>
[03:04:17.685]    // Pre-defined
[03:04:17.685]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:17.685]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:17.685]    __dp=0x00000000
[03:04:17.685]    __ap=0x00000000
[03:04:17.685]    __traceout=0x00000000      (Trace Disabled)
[03:04:17.685]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:17.685]    __FlashAddr=0x00000000
[03:04:17.685]    __FlashLen=0x00000000
[03:04:17.685]    __FlashArg=0x00000000
[03:04:17.685]    __FlashOp=0x00000000
[03:04:17.685]    __Result=0x00000000
[03:04:17.685]  </debugvars>
[03:04:17.685]  
[03:04:17.685]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:17.687]    <block atomic="false" info="">
[03:04:17.687]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:17.687]        // -> [isSWJ <= 0x00000001]
[03:04:17.687]      __var hasDormant = __protocol & 0x00020000;
[03:04:17.687]        // -> [hasDormant <= 0x00000000]
[03:04:17.687]      __var protType   = __protocol & 0x0000FFFF;
[03:04:17.687]        // -> [protType <= 0x00000002]
[03:04:17.687]    </block>
[03:04:17.687]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:17.687]      // if-block "protType == 1"
[03:04:17.687]        // =>  FALSE
[03:04:17.687]      // skip if-block "protType == 1"
[03:04:17.687]    </control>
[03:04:17.687]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:17.687]      // if-block "protType == 2"
[03:04:17.687]        // =>  TRUE
[03:04:17.687]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:17.687]        // if-block "isSWJ"
[03:04:17.687]          // =>  TRUE
[03:04:17.687]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:17.687]          // if-block "hasDormant"
[03:04:17.687]            // =>  FALSE
[03:04:17.687]          // skip if-block "hasDormant"
[03:04:17.687]        </control>
[03:04:17.687]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:17.687]          // if-block "!hasDormant"
[03:04:17.687]            // =>  TRUE
[03:04:17.687]          <block atomic="false" info="">
[03:04:17.687]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:18.699]  
[03:04:18.699]  !!! E320 : DAP access error
[03:04:18.699]  
[03:04:18.699]          </block>
[03:04:18.699]          // end if-block "!hasDormant"
[03:04:18.699]        </control>
[03:04:18.699]        // end if-block "isSWJ"
[03:04:18.700]      </control>
[03:04:18.700]      // end if-block "protType == 2"
[03:04:18.700]    </control>
[03:04:18.700]  </sequence>
[03:04:18.700]  
[03:04:18.958]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:18.958]  
[03:04:18.966]  <debugvars>
[03:04:18.966]    // Pre-defined
[03:04:18.966]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:18.966]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:18.966]    __dp=0x00000000
[03:04:18.966]    __ap=0x00000000
[03:04:18.966]    __traceout=0x00000000      (Trace Disabled)
[03:04:18.966]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:18.966]    __FlashAddr=0x00000000
[03:04:18.966]    __FlashLen=0x00000000
[03:04:18.966]    __FlashArg=0x00000000
[03:04:18.966]    __FlashOp=0x00000000
[03:04:18.966]    __Result=0x00000000
[03:04:18.966]  </debugvars>
[03:04:18.966]  
[03:04:18.966]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:18.966]    <block atomic="false" info="">
[03:04:18.966]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:18.966]        // -> [isSWJ <= 0x00000001]
[03:04:18.966]      __var hasDormant = __protocol & 0x00020000;
[03:04:18.966]        // -> [hasDormant <= 0x00000000]
[03:04:18.966]      __var protType   = __protocol & 0x0000FFFF;
[03:04:18.966]        // -> [protType <= 0x00000002]
[03:04:18.966]    </block>
[03:04:18.966]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:18.966]      // if-block "protType == 1"
[03:04:18.966]        // =>  FALSE
[03:04:18.966]      // skip if-block "protType == 1"
[03:04:18.966]    </control>
[03:04:18.966]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:18.966]      // if-block "protType == 2"
[03:04:18.970]        // =>  TRUE
[03:04:18.970]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:18.970]        // if-block "isSWJ"
[03:04:18.970]          // =>  TRUE
[03:04:18.970]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:18.970]          // if-block "hasDormant"
[03:04:18.970]            // =>  FALSE
[03:04:18.970]          // skip if-block "hasDormant"
[03:04:18.970]        </control>
[03:04:18.970]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:18.970]          // if-block "!hasDormant"
[03:04:18.970]            // =>  TRUE
[03:04:18.970]          <block atomic="false" info="">
[03:04:18.970]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:19.982]  
[03:04:19.982]  !!! E320 : DAP access error
[03:04:19.982]  
[03:04:19.982]          </block>
[03:04:19.982]          // end if-block "!hasDormant"
[03:04:19.982]        </control>
[03:04:19.982]        // end if-block "isSWJ"
[03:04:19.982]      </control>
[03:04:19.982]      // end if-block "protType == 2"
[03:04:19.982]    </control>
[03:04:19.982]  </sequence>
[03:04:19.982]  
[03:04:20.235]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:20.235]  
[03:04:20.244]  <debugvars>
[03:04:20.244]    // Pre-defined
[03:04:20.244]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:20.244]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:20.244]    __dp=0x00000000
[03:04:20.244]    __ap=0x00000000
[03:04:20.244]    __traceout=0x00000000      (Trace Disabled)
[03:04:20.244]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:20.244]    __FlashAddr=0x00000000
[03:04:20.244]    __FlashLen=0x00000000
[03:04:20.244]    __FlashArg=0x00000000
[03:04:20.244]    __FlashOp=0x00000000
[03:04:20.244]    __Result=0x00000000
[03:04:20.244]  </debugvars>
[03:04:20.244]  
[03:04:20.244]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:20.244]    <block atomic="false" info="">
[03:04:20.244]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:20.244]        // -> [isSWJ <= 0x00000001]
[03:04:20.244]      __var hasDormant = __protocol & 0x00020000;
[03:04:20.244]        // -> [hasDormant <= 0x00000000]
[03:04:20.244]      __var protType   = __protocol & 0x0000FFFF;
[03:04:20.244]        // -> [protType <= 0x00000002]
[03:04:20.244]    </block>
[03:04:20.244]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:20.244]      // if-block "protType == 1"
[03:04:20.244]        // =>  FALSE
[03:04:20.244]      // skip if-block "protType == 1"
[03:04:20.244]    </control>
[03:04:20.247]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:20.247]      // if-block "protType == 2"
[03:04:20.247]        // =>  TRUE
[03:04:20.247]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:20.247]        // if-block "isSWJ"
[03:04:20.247]          // =>  TRUE
[03:04:20.247]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:20.247]          // if-block "hasDormant"
[03:04:20.247]            // =>  FALSE
[03:04:20.247]          // skip if-block "hasDormant"
[03:04:20.247]        </control>
[03:04:20.247]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:20.247]          // if-block "!hasDormant"
[03:04:20.247]            // =>  TRUE
[03:04:20.247]          <block atomic="false" info="">
[03:04:20.247]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:21.252]  
[03:04:21.252]  !!! E320 : DAP access error
[03:04:21.252]  
[03:04:21.262]          </block>
[03:04:21.262]          // end if-block "!hasDormant"
[03:04:21.262]        </control>
[03:04:21.262]        // end if-block "isSWJ"
[03:04:21.262]      </control>
[03:04:21.262]      // end if-block "protType == 2"
[03:04:21.262]    </control>
[03:04:21.262]  </sequence>
[03:04:21.262]  
[03:04:21.513]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:21.513]  
[03:04:21.514]  <debugvars>
[03:04:21.514]    // Pre-defined
[03:04:21.514]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:21.514]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:21.514]    __dp=0x00000000
[03:04:21.514]    __ap=0x00000000
[03:04:21.514]    __traceout=0x00000000      (Trace Disabled)
[03:04:21.514]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:21.514]    __FlashAddr=0x00000000
[03:04:21.514]    __FlashLen=0x00000000
[03:04:21.515]    __FlashArg=0x00000000
[03:04:21.515]    __FlashOp=0x00000000
[03:04:21.515]    __Result=0x00000000
[03:04:21.516]  </debugvars>
[03:04:21.516]  
[03:04:21.516]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:21.516]    <block atomic="false" info="">
[03:04:21.516]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:21.516]        // -> [isSWJ <= 0x00000001]
[03:04:21.516]      __var hasDormant = __protocol & 0x00020000;
[03:04:21.516]        // -> [hasDormant <= 0x00000000]
[03:04:21.516]      __var protType   = __protocol & 0x0000FFFF;
[03:04:21.516]        // -> [protType <= 0x00000002]
[03:04:21.516]    </block>
[03:04:21.516]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:21.516]      // if-block "protType == 1"
[03:04:21.516]        // =>  FALSE
[03:04:21.516]      // skip if-block "protType == 1"
[03:04:21.517]    </control>
[03:04:21.517]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:21.517]      // if-block "protType == 2"
[03:04:21.518]        // =>  TRUE
[03:04:21.518]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:21.518]        // if-block "isSWJ"
[03:04:21.518]          // =>  TRUE
[03:04:21.518]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:21.518]          // if-block "hasDormant"
[03:04:21.518]            // =>  FALSE
[03:04:21.518]          // skip if-block "hasDormant"
[03:04:21.518]        </control>
[03:04:21.518]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:21.518]          // if-block "!hasDormant"
[03:04:21.518]            // =>  TRUE
[03:04:21.518]          <block atomic="false" info="">
[03:04:21.518]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:22.525]  
[03:04:22.525]  !!! E320 : DAP access error
[03:04:22.525]  
[03:04:22.534]          </block>
[03:04:22.534]          // end if-block "!hasDormant"
[03:04:22.534]        </control>
[03:04:22.534]        // end if-block "isSWJ"
[03:04:22.534]      </control>
[03:04:22.534]      // end if-block "protType == 2"
[03:04:22.534]    </control>
[03:04:22.534]  </sequence>
[03:04:22.534]  
[03:04:22.795]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:22.795]  
[03:04:22.795]  <debugvars>
[03:04:22.795]    // Pre-defined
[03:04:22.795]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:22.795]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:22.797]    __dp=0x00000000
[03:04:22.797]    __ap=0x00000000
[03:04:22.797]    __traceout=0x00000000      (Trace Disabled)
[03:04:22.797]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:22.797]    __FlashAddr=0x00000000
[03:04:22.797]    __FlashLen=0x00000000
[03:04:22.797]    __FlashArg=0x00000000
[03:04:22.797]    __FlashOp=0x00000000
[03:04:22.797]    __Result=0x00000000
[03:04:22.797]  </debugvars>
[03:04:22.797]  
[03:04:22.797]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:22.797]    <block atomic="false" info="">
[03:04:22.798]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:22.798]        // -> [isSWJ <= 0x00000001]
[03:04:22.798]      __var hasDormant = __protocol & 0x00020000;
[03:04:22.798]        // -> [hasDormant <= 0x00000000]
[03:04:22.798]      __var protType   = __protocol & 0x0000FFFF;
[03:04:22.798]        // -> [protType <= 0x00000002]
[03:04:22.799]    </block>
[03:04:22.799]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:22.799]      // if-block "protType == 1"
[03:04:22.799]        // =>  FALSE
[03:04:22.799]      // skip if-block "protType == 1"
[03:04:22.799]    </control>
[03:04:22.799]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:22.799]      // if-block "protType == 2"
[03:04:22.799]        // =>  TRUE
[03:04:22.799]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:22.799]        // if-block "isSWJ"
[03:04:22.799]          // =>  TRUE
[03:04:22.799]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:22.799]          // if-block "hasDormant"
[03:04:22.799]            // =>  FALSE
[03:04:22.799]          // skip if-block "hasDormant"
[03:04:22.799]        </control>
[03:04:22.799]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:22.799]          // if-block "!hasDormant"
[03:04:22.799]            // =>  TRUE
[03:04:22.799]          <block atomic="false" info="">
[03:04:22.799]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:23.800]  
[03:04:23.800]  !!! E320 : DAP access error
[03:04:23.800]  
[03:04:23.808]          </block>
[03:04:23.808]          // end if-block "!hasDormant"
[03:04:23.808]        </control>
[03:04:23.808]        // end if-block "isSWJ"
[03:04:23.808]      </control>
[03:04:23.808]      // end if-block "protType == 2"
[03:04:23.808]    </control>
[03:04:23.808]  </sequence>
[03:04:23.808]  
[03:04:24.068]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:24.068]  
[03:04:24.068]  <debugvars>
[03:04:24.068]    // Pre-defined
[03:04:24.068]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:24.068]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:24.068]    __dp=0x00000000
[03:04:24.069]    __ap=0x00000000
[03:04:24.069]    __traceout=0x00000000      (Trace Disabled)
[03:04:24.069]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:24.069]    __FlashAddr=0x00000000
[03:04:24.069]    __FlashLen=0x00000000
[03:04:24.069]    __FlashArg=0x00000000
[03:04:24.069]    __FlashOp=0x00000000
[03:04:24.069]    __Result=0x00000000
[03:04:24.069]  </debugvars>
[03:04:24.069]  
[03:04:24.069]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:24.069]    <block atomic="false" info="">
[03:04:24.069]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:24.069]        // -> [isSWJ <= 0x00000001]
[03:04:24.069]      __var hasDormant = __protocol & 0x00020000;
[03:04:24.069]        // -> [hasDormant <= 0x00000000]
[03:04:24.069]      __var protType   = __protocol & 0x0000FFFF;
[03:04:24.069]        // -> [protType <= 0x00000002]
[03:04:24.069]    </block>
[03:04:24.069]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:24.069]      // if-block "protType == 1"
[03:04:24.069]        // =>  FALSE
[03:04:24.069]      // skip if-block "protType == 1"
[03:04:24.069]    </control>
[03:04:24.069]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:24.069]      // if-block "protType == 2"
[03:04:24.069]        // =>  TRUE
[03:04:24.069]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:24.069]        // if-block "isSWJ"
[03:04:24.072]          // =>  TRUE
[03:04:24.072]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:24.072]          // if-block "hasDormant"
[03:04:24.072]            // =>  FALSE
[03:04:24.072]          // skip if-block "hasDormant"
[03:04:24.072]        </control>
[03:04:24.072]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:24.072]          // if-block "!hasDormant"
[03:04:24.072]            // =>  TRUE
[03:04:24.072]          <block atomic="false" info="">
[03:04:24.072]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:25.073]  
[03:04:25.073]  !!! E320 : DAP access error
[03:04:25.073]  
[03:04:25.082]          </block>
[03:04:25.082]          // end if-block "!hasDormant"
[03:04:25.082]        </control>
[03:04:25.082]        // end if-block "isSWJ"
[03:04:25.082]      </control>
[03:04:25.082]      // end if-block "protType == 2"
[03:04:25.082]    </control>
[03:04:25.082]  </sequence>
[03:04:25.082]  
[03:04:25.342]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:25.342]  
[03:04:25.351]  <debugvars>
[03:04:25.351]    // Pre-defined
[03:04:25.351]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:25.351]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:25.351]    __dp=0x00000000
[03:04:25.351]    __ap=0x00000000
[03:04:25.351]    __traceout=0x00000000      (Trace Disabled)
[03:04:25.351]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:25.351]    __FlashAddr=0x00000000
[03:04:25.351]    __FlashLen=0x00000000
[03:04:25.351]    __FlashArg=0x00000000
[03:04:25.351]    __FlashOp=0x00000000
[03:04:25.351]    __Result=0x00000000
[03:04:25.351]  </debugvars>
[03:04:25.351]  
[03:04:25.351]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:25.351]    <block atomic="false" info="">
[03:04:25.351]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:25.351]        // -> [isSWJ <= 0x00000001]
[03:04:25.351]      __var hasDormant = __protocol & 0x00020000;
[03:04:25.351]        // -> [hasDormant <= 0x00000000]
[03:04:25.351]      __var protType   = __protocol & 0x0000FFFF;
[03:04:25.351]        // -> [protType <= 0x00000002]
[03:04:25.351]    </block>
[03:04:25.351]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:25.351]      // if-block "protType == 1"
[03:04:25.351]        // =>  FALSE
[03:04:25.351]      // skip if-block "protType == 1"
[03:04:25.351]    </control>
[03:04:25.354]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:25.354]      // if-block "protType == 2"
[03:04:25.354]        // =>  TRUE
[03:04:25.354]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:25.354]        // if-block "isSWJ"
[03:04:25.354]          // =>  TRUE
[03:04:25.354]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:25.354]          // if-block "hasDormant"
[03:04:25.355]            // =>  FALSE
[03:04:25.355]          // skip if-block "hasDormant"
[03:04:25.355]        </control>
[03:04:25.355]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:25.355]          // if-block "!hasDormant"
[03:04:25.355]            // =>  TRUE
[03:04:25.355]          <block atomic="false" info="">
[03:04:25.355]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:26.356]  
[03:04:26.356]  !!! E320 : DAP access error
[03:04:26.356]  
[03:04:26.364]          </block>
[03:04:26.364]          // end if-block "!hasDormant"
[03:04:26.364]        </control>
[03:04:26.364]        // end if-block "isSWJ"
[03:04:26.364]      </control>
[03:04:26.364]      // end if-block "protType == 2"
[03:04:26.364]    </control>
[03:04:26.364]  </sequence>
[03:04:26.364]  
[03:04:26.615]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:26.616]  
[03:04:26.624]  <debugvars>
[03:04:26.624]    // Pre-defined
[03:04:26.624]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:26.624]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:26.624]    __dp=0x00000000
[03:04:26.624]    __ap=0x00000000
[03:04:26.624]    __traceout=0x00000000      (Trace Disabled)
[03:04:26.624]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:26.624]    __FlashAddr=0x00000000
[03:04:26.624]    __FlashLen=0x00000000
[03:04:26.625]    __FlashArg=0x00000000
[03:04:26.625]    __FlashOp=0x00000000
[03:04:26.625]    __Result=0x00000000
[03:04:26.625]  </debugvars>
[03:04:26.625]  
[03:04:26.625]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:26.625]    <block atomic="false" info="">
[03:04:26.625]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:26.625]        // -> [isSWJ <= 0x00000001]
[03:04:26.625]      __var hasDormant = __protocol & 0x00020000;
[03:04:26.625]        // -> [hasDormant <= 0x00000000]
[03:04:26.626]      __var protType   = __protocol & 0x0000FFFF;
[03:04:26.626]        // -> [protType <= 0x00000002]
[03:04:26.626]    </block>
[03:04:26.626]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:26.626]      // if-block "protType == 1"
[03:04:26.626]        // =>  FALSE
[03:04:26.626]      // skip if-block "protType == 1"
[03:04:26.626]    </control>
[03:04:26.626]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:26.626]      // if-block "protType == 2"
[03:04:26.627]        // =>  TRUE
[03:04:26.627]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:26.627]        // if-block "isSWJ"
[03:04:26.627]          // =>  TRUE
[03:04:26.627]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:26.627]          // if-block "hasDormant"
[03:04:26.627]            // =>  FALSE
[03:04:26.627]          // skip if-block "hasDormant"
[03:04:26.627]        </control>
[03:04:26.627]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:26.627]          // if-block "!hasDormant"
[03:04:26.627]            // =>  TRUE
[03:04:26.627]          <block atomic="false" info="">
[03:04:26.629]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:27.638]  
[03:04:27.638]  !!! E320 : DAP access error
[03:04:27.638]  
[03:04:27.646]          </block>
[03:04:27.646]          // end if-block "!hasDormant"
[03:04:27.646]        </control>
[03:04:27.646]        // end if-block "isSWJ"
[03:04:27.646]      </control>
[03:04:27.646]      // end if-block "protType == 2"
[03:04:27.646]    </control>
[03:04:27.646]  </sequence>
[03:04:27.646]  
[03:04:27.905]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:27.905]  
[03:04:27.913]  <debugvars>
[03:04:27.913]    // Pre-defined
[03:04:27.913]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:27.913]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:27.913]    __dp=0x00000000
[03:04:27.913]    __ap=0x00000000
[03:04:27.913]    __traceout=0x00000000      (Trace Disabled)
[03:04:27.913]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:27.913]    __FlashAddr=0x00000000
[03:04:27.913]    __FlashLen=0x00000000
[03:04:27.913]    __FlashArg=0x00000000
[03:04:27.913]    __FlashOp=0x00000000
[03:04:27.913]    __Result=0x00000000
[03:04:27.913]  </debugvars>
[03:04:27.913]  
[03:04:27.913]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:27.913]    <block atomic="false" info="">
[03:04:27.913]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:27.913]        // -> [isSWJ <= 0x00000001]
[03:04:27.913]      __var hasDormant = __protocol & 0x00020000;
[03:04:27.913]        // -> [hasDormant <= 0x00000000]
[03:04:27.913]      __var protType   = __protocol & 0x0000FFFF;
[03:04:27.913]        // -> [protType <= 0x00000002]
[03:04:27.913]    </block>
[03:04:27.913]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:27.913]      // if-block "protType == 1"
[03:04:27.913]        // =>  FALSE
[03:04:27.913]      // skip if-block "protType == 1"
[03:04:27.913]    </control>
[03:04:27.913]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:27.913]      // if-block "protType == 2"
[03:04:27.913]        // =>  TRUE
[03:04:27.913]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:27.913]        // if-block "isSWJ"
[03:04:27.913]          // =>  TRUE
[03:04:27.913]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:27.913]          // if-block "hasDormant"
[03:04:27.913]            // =>  FALSE
[03:04:27.917]          // skip if-block "hasDormant"
[03:04:27.917]        </control>
[03:04:27.917]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:27.917]          // if-block "!hasDormant"
[03:04:27.917]            // =>  TRUE
[03:04:27.917]          <block atomic="false" info="">
[03:04:27.917]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:28.918]  
[03:04:28.918]  !!! E320 : DAP access error
[03:04:28.918]  
[03:04:28.927]          </block>
[03:04:28.927]          // end if-block "!hasDormant"
[03:04:28.927]        </control>
[03:04:28.927]        // end if-block "isSWJ"
[03:04:28.927]      </control>
[03:04:28.927]      // end if-block "protType == 2"
[03:04:28.927]    </control>
[03:04:28.927]  </sequence>
[03:04:28.927]  
[03:04:29.187]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:29.187]  
[03:04:29.195]  <debugvars>
[03:04:29.195]    // Pre-defined
[03:04:29.195]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:29.195]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:29.195]    __dp=0x00000000
[03:04:29.195]    __ap=0x00000000
[03:04:29.195]    __traceout=0x00000000      (Trace Disabled)
[03:04:29.195]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:29.195]    __FlashAddr=0x00000000
[03:04:29.195]    __FlashLen=0x00000000
[03:04:29.197]    __FlashArg=0x00000000
[03:04:29.197]    __FlashOp=0x00000000
[03:04:29.197]    __Result=0x00000000
[03:04:29.197]  </debugvars>
[03:04:29.197]  
[03:04:29.197]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:29.197]    <block atomic="false" info="">
[03:04:29.197]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:29.197]        // -> [isSWJ <= 0x00000001]
[03:04:29.197]      __var hasDormant = __protocol & 0x00020000;
[03:04:29.197]        // -> [hasDormant <= 0x00000000]
[03:04:29.198]      __var protType   = __protocol & 0x0000FFFF;
[03:04:29.198]        // -> [protType <= 0x00000002]
[03:04:29.198]    </block>
[03:04:29.198]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:29.198]      // if-block "protType == 1"
[03:04:29.198]        // =>  FALSE
[03:04:29.198]      // skip if-block "protType == 1"
[03:04:29.198]    </control>
[03:04:29.198]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:29.198]      // if-block "protType == 2"
[03:04:29.198]        // =>  TRUE
[03:04:29.198]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:29.200]        // if-block "isSWJ"
[03:04:29.200]          // =>  TRUE
[03:04:29.200]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:29.200]          // if-block "hasDormant"
[03:04:29.200]            // =>  FALSE
[03:04:29.200]          // skip if-block "hasDormant"
[03:04:29.200]        </control>
[03:04:29.200]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:29.200]          // if-block "!hasDormant"
[03:04:29.200]            // =>  TRUE
[03:04:29.201]          <block atomic="false" info="">
[03:04:29.201]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:30.209]  
[03:04:30.209]  !!! E320 : DAP access error
[03:04:30.209]  
[03:04:30.218]          </block>
[03:04:30.218]          // end if-block "!hasDormant"
[03:04:30.218]        </control>
[03:04:30.218]        // end if-block "isSWJ"
[03:04:30.218]      </control>
[03:04:30.218]      // end if-block "protType == 2"
[03:04:30.218]    </control>
[03:04:30.218]  </sequence>
[03:04:30.218]  
[03:04:30.475]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:30.475]  
[03:04:30.483]  <debugvars>
[03:04:30.483]    // Pre-defined
[03:04:30.483]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:30.483]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:30.483]    __dp=0x00000000
[03:04:30.483]    __ap=0x00000000
[03:04:30.483]    __traceout=0x00000000      (Trace Disabled)
[03:04:30.483]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:30.483]    __FlashAddr=0x00000000
[03:04:30.483]    __FlashLen=0x00000000
[03:04:30.483]    __FlashArg=0x00000000
[03:04:30.483]    __FlashOp=0x00000000
[03:04:30.483]    __Result=0x00000000
[03:04:30.483]  </debugvars>
[03:04:30.483]  
[03:04:30.483]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:30.483]    <block atomic="false" info="">
[03:04:30.483]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:30.483]        // -> [isSWJ <= 0x00000001]
[03:04:30.483]      __var hasDormant = __protocol & 0x00020000;
[03:04:30.483]        // -> [hasDormant <= 0x00000000]
[03:04:30.483]      __var protType   = __protocol & 0x0000FFFF;
[03:04:30.483]        // -> [protType <= 0x00000002]
[03:04:30.483]    </block>
[03:04:30.483]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:30.483]      // if-block "protType == 1"
[03:04:30.483]        // =>  FALSE
[03:04:30.483]      // skip if-block "protType == 1"
[03:04:30.483]    </control>
[03:04:30.483]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:30.487]      // if-block "protType == 2"
[03:04:30.487]        // =>  TRUE
[03:04:30.487]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:30.487]        // if-block "isSWJ"
[03:04:30.487]          // =>  TRUE
[03:04:30.487]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:30.487]          // if-block "hasDormant"
[03:04:30.487]            // =>  FALSE
[03:04:30.487]          // skip if-block "hasDormant"
[03:04:30.487]        </control>
[03:04:30.487]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:30.488]          // if-block "!hasDormant"
[03:04:30.488]            // =>  TRUE
[03:04:30.488]          <block atomic="false" info="">
[03:04:30.488]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:31.490]  
[03:04:31.490]  !!! E320 : DAP access error
[03:04:31.490]  
[03:04:31.499]          </block>
[03:04:31.499]          // end if-block "!hasDormant"
[03:04:31.499]        </control>
[03:04:31.499]        // end if-block "isSWJ"
[03:04:31.499]      </control>
[03:04:31.499]      // end if-block "protType == 2"
[03:04:31.499]    </control>
[03:04:31.499]  </sequence>
[03:04:31.499]  
[03:04:31.755]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:31.755]  
[03:04:31.763]  <debugvars>
[03:04:31.763]    // Pre-defined
[03:04:31.763]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:31.763]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:31.763]    __dp=0x00000000
[03:04:31.763]    __ap=0x00000000
[03:04:31.763]    __traceout=0x00000000      (Trace Disabled)
[03:04:31.763]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:31.763]    __FlashAddr=0x00000000
[03:04:31.763]    __FlashLen=0x00000000
[03:04:31.763]    __FlashArg=0x00000000
[03:04:31.763]    __FlashOp=0x00000000
[03:04:31.763]    __Result=0x00000000
[03:04:31.763]  </debugvars>
[03:04:31.763]  
[03:04:31.763]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:31.763]    <block atomic="false" info="">
[03:04:31.763]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:31.763]        // -> [isSWJ <= 0x00000001]
[03:04:31.763]      __var hasDormant = __protocol & 0x00020000;
[03:04:31.763]        // -> [hasDormant <= 0x00000000]
[03:04:31.763]      __var protType   = __protocol & 0x0000FFFF;
[03:04:31.763]        // -> [protType <= 0x00000002]
[03:04:31.763]    </block>
[03:04:31.763]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:31.763]      // if-block "protType == 1"
[03:04:31.763]        // =>  FALSE
[03:04:31.763]      // skip if-block "protType == 1"
[03:04:31.763]    </control>
[03:04:31.763]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:31.763]      // if-block "protType == 2"
[03:04:31.763]        // =>  TRUE
[03:04:31.763]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:31.763]        // if-block "isSWJ"
[03:04:31.763]          // =>  TRUE
[03:04:31.763]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:31.767]          // if-block "hasDormant"
[03:04:31.767]            // =>  FALSE
[03:04:31.767]          // skip if-block "hasDormant"
[03:04:31.767]        </control>
[03:04:31.767]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:31.767]          // if-block "!hasDormant"
[03:04:31.767]            // =>  TRUE
[03:04:31.767]          <block atomic="false" info="">
[03:04:31.767]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:32.776]  
[03:04:32.776]  !!! E320 : DAP access error
[03:04:32.776]  
[03:04:32.784]          </block>
[03:04:32.784]          // end if-block "!hasDormant"
[03:04:32.784]        </control>
[03:04:32.784]        // end if-block "isSWJ"
[03:04:32.784]      </control>
[03:04:32.784]      // end if-block "protType == 2"
[03:04:32.784]    </control>
[03:04:32.784]  </sequence>
[03:04:32.784]  
[03:04:33.041]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:33.041]  
[03:04:33.049]  <debugvars>
[03:04:33.049]    // Pre-defined
[03:04:33.049]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:33.049]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:33.049]    __dp=0x00000000
[03:04:33.049]    __ap=0x00000000
[03:04:33.049]    __traceout=0x00000000      (Trace Disabled)
[03:04:33.049]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:33.049]    __FlashAddr=0x00000000
[03:04:33.049]    __FlashLen=0x00000000
[03:04:33.049]    __FlashArg=0x00000000
[03:04:33.049]    __FlashOp=0x00000000
[03:04:33.049]    __Result=0x00000000
[03:04:33.049]  </debugvars>
[03:04:33.049]  
[03:04:33.049]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:33.049]    <block atomic="false" info="">
[03:04:33.049]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:33.049]        // -> [isSWJ <= 0x00000001]
[03:04:33.049]      __var hasDormant = __protocol & 0x00020000;
[03:04:33.049]        // -> [hasDormant <= 0x00000000]
[03:04:33.049]      __var protType   = __protocol & 0x0000FFFF;
[03:04:33.049]        // -> [protType <= 0x00000002]
[03:04:33.049]    </block>
[03:04:33.049]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:33.049]      // if-block "protType == 1"
[03:04:33.049]        // =>  FALSE
[03:04:33.049]      // skip if-block "protType == 1"
[03:04:33.049]    </control>
[03:04:33.049]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:33.049]      // if-block "protType == 2"
[03:04:33.053]        // =>  TRUE
[03:04:33.053]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:33.053]        // if-block "isSWJ"
[03:04:33.053]          // =>  TRUE
[03:04:33.053]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:33.053]          // if-block "hasDormant"
[03:04:33.053]            // =>  FALSE
[03:04:33.053]          // skip if-block "hasDormant"
[03:04:33.053]        </control>
[03:04:33.053]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:33.053]          // if-block "!hasDormant"
[03:04:33.053]            // =>  TRUE
[03:04:33.053]          <block atomic="false" info="">
[03:04:33.053]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:34.064]  
[03:04:34.064]  !!! E320 : DAP access error
[03:04:34.064]  
[03:04:34.073]          </block>
[03:04:34.073]          // end if-block "!hasDormant"
[03:04:34.073]        </control>
[03:04:34.073]        // end if-block "isSWJ"
[03:04:34.073]      </control>
[03:04:34.073]      // end if-block "protType == 2"
[03:04:34.073]    </control>
[03:04:34.073]  </sequence>
[03:04:34.073]  
[03:04:34.334]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:34.334]  
[03:04:34.343]  <debugvars>
[03:04:34.343]    // Pre-defined
[03:04:34.343]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:34.343]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:34.343]    __dp=0x00000000
[03:04:34.343]    __ap=0x00000000
[03:04:34.343]    __traceout=0x00000000      (Trace Disabled)
[03:04:34.343]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:34.343]    __FlashAddr=0x00000000
[03:04:34.343]    __FlashLen=0x00000000
[03:04:34.343]    __FlashArg=0x00000000
[03:04:34.343]    __FlashOp=0x00000000
[03:04:34.343]    __Result=0x00000000
[03:04:34.343]  </debugvars>
[03:04:34.343]  
[03:04:34.343]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:34.343]    <block atomic="false" info="">
[03:04:34.343]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:34.343]        // -> [isSWJ <= 0x00000001]
[03:04:34.343]      __var hasDormant = __protocol & 0x00020000;
[03:04:34.343]        // -> [hasDormant <= 0x00000000]
[03:04:34.343]      __var protType   = __protocol & 0x0000FFFF;
[03:04:34.343]        // -> [protType <= 0x00000002]
[03:04:34.343]    </block>
[03:04:34.343]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:34.343]      // if-block "protType == 1"
[03:04:34.343]        // =>  FALSE
[03:04:34.343]      // skip if-block "protType == 1"
[03:04:34.343]    </control>
[03:04:34.346]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:34.346]      // if-block "protType == 2"
[03:04:34.346]        // =>  TRUE
[03:04:34.346]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:34.346]        // if-block "isSWJ"
[03:04:34.346]          // =>  TRUE
[03:04:34.346]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:34.348]          // if-block "hasDormant"
[03:04:34.348]            // =>  FALSE
[03:04:34.348]          // skip if-block "hasDormant"
[03:04:34.348]        </control>
[03:04:34.348]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:34.348]          // if-block "!hasDormant"
[03:04:34.348]            // =>  TRUE
[03:04:34.348]          <block atomic="false" info="">
[03:04:34.348]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:35.355]  
[03:04:35.355]  !!! E320 : DAP access error
[03:04:35.355]  
[03:04:35.363]          </block>
[03:04:35.363]          // end if-block "!hasDormant"
[03:04:35.363]        </control>
[03:04:35.363]        // end if-block "isSWJ"
[03:04:35.363]      </control>
[03:04:35.363]      // end if-block "protType == 2"
[03:04:35.363]    </control>
[03:04:35.363]  </sequence>
[03:04:35.363]  
[03:04:35.623]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:35.623]  
[03:04:35.631]  <debugvars>
[03:04:35.631]    // Pre-defined
[03:04:35.631]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:35.631]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:35.631]    __dp=0x00000000
[03:04:35.631]    __ap=0x00000000
[03:04:35.631]    __traceout=0x00000000      (Trace Disabled)
[03:04:35.631]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:35.631]    __FlashAddr=0x00000000
[03:04:35.631]    __FlashLen=0x00000000
[03:04:35.631]    __FlashArg=0x00000000
[03:04:35.631]    __FlashOp=0x00000000
[03:04:35.631]    __Result=0x00000000
[03:04:35.631]  </debugvars>
[03:04:35.631]  
[03:04:35.631]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:35.631]    <block atomic="false" info="">
[03:04:35.631]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:35.631]        // -> [isSWJ <= 0x00000001]
[03:04:35.631]      __var hasDormant = __protocol & 0x00020000;
[03:04:35.631]        // -> [hasDormant <= 0x00000000]
[03:04:35.634]      __var protType   = __protocol & 0x0000FFFF;
[03:04:35.634]        // -> [protType <= 0x00000002]
[03:04:35.634]    </block>
[03:04:35.634]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:35.634]      // if-block "protType == 1"
[03:04:35.634]        // =>  FALSE
[03:04:35.634]      // skip if-block "protType == 1"
[03:04:35.634]    </control>
[03:04:35.634]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:35.634]      // if-block "protType == 2"
[03:04:35.634]        // =>  TRUE
[03:04:35.635]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:35.635]        // if-block "isSWJ"
[03:04:35.635]          // =>  TRUE
[03:04:35.635]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:35.635]          // if-block "hasDormant"
[03:04:35.635]            // =>  FALSE
[03:04:35.635]          // skip if-block "hasDormant"
[03:04:35.635]        </control>
[03:04:35.635]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:35.635]          // if-block "!hasDormant"
[03:04:35.635]            // =>  TRUE
[03:04:35.635]          <block atomic="false" info="">
[03:04:35.635]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:36.641]  
[03:04:36.641]  !!! E320 : DAP access error
[03:04:36.641]  
[03:04:36.650]          </block>
[03:04:36.650]          // end if-block "!hasDormant"
[03:04:36.650]        </control>
[03:04:36.650]        // end if-block "isSWJ"
[03:04:36.650]      </control>
[03:04:36.650]      // end if-block "protType == 2"
[03:04:36.650]    </control>
[03:04:36.650]  </sequence>
[03:04:36.650]  
[03:04:36.911]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:36.911]  
[03:04:36.920]  <debugvars>
[03:04:36.920]    // Pre-defined
[03:04:36.920]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:36.920]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:36.920]    __dp=0x00000000
[03:04:36.920]    __ap=0x00000000
[03:04:36.920]    __traceout=0x00000000      (Trace Disabled)
[03:04:36.920]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:36.920]    __FlashAddr=0x00000000
[03:04:36.920]    __FlashLen=0x00000000
[03:04:36.920]    __FlashArg=0x00000000
[03:04:36.920]    __FlashOp=0x00000000
[03:04:36.920]    __Result=0x00000000
[03:04:36.920]  </debugvars>
[03:04:36.920]  
[03:04:36.920]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:36.920]    <block atomic="false" info="">
[03:04:36.920]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:36.920]        // -> [isSWJ <= 0x00000001]
[03:04:36.920]      __var hasDormant = __protocol & 0x00020000;
[03:04:36.920]        // -> [hasDormant <= 0x00000000]
[03:04:36.920]      __var protType   = __protocol & 0x0000FFFF;
[03:04:36.923]        // -> [protType <= 0x00000002]
[03:04:36.923]    </block>
[03:04:36.923]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:36.923]      // if-block "protType == 1"
[03:04:36.923]        // =>  FALSE
[03:04:36.923]      // skip if-block "protType == 1"
[03:04:36.923]    </control>
[03:04:36.923]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:36.923]      // if-block "protType == 2"
[03:04:36.923]        // =>  TRUE
[03:04:36.923]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:36.923]        // if-block "isSWJ"
[03:04:36.923]          // =>  TRUE
[03:04:36.923]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:36.923]          // if-block "hasDormant"
[03:04:36.923]            // =>  FALSE
[03:04:36.923]          // skip if-block "hasDormant"
[03:04:36.923]        </control>
[03:04:36.923]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:36.923]          // if-block "!hasDormant"
[03:04:36.923]            // =>  TRUE
[03:04:36.923]          <block atomic="false" info="">
[03:04:36.923]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:37.925]  
[03:04:37.925]  !!! E320 : DAP access error
[03:04:37.925]  
[03:04:37.933]          </block>
[03:04:37.933]          // end if-block "!hasDormant"
[03:04:37.933]        </control>
[03:04:37.933]        // end if-block "isSWJ"
[03:04:37.933]      </control>
[03:04:37.933]      // end if-block "protType == 2"
[03:04:37.933]    </control>
[03:04:37.933]  </sequence>
[03:04:37.933]  
[03:04:38.196]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:38.196]  
[03:04:38.204]  <debugvars>
[03:04:38.204]    // Pre-defined
[03:04:38.204]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:38.204]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:38.204]    __dp=0x00000000
[03:04:38.204]    __ap=0x00000000
[03:04:38.204]    __traceout=0x00000000      (Trace Disabled)
[03:04:38.204]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:38.204]    __FlashAddr=0x00000000
[03:04:38.204]    __FlashLen=0x00000000
[03:04:38.204]    __FlashArg=0x00000000
[03:04:38.204]    __FlashOp=0x00000000
[03:04:38.204]    __Result=0x00000000
[03:04:38.204]  </debugvars>
[03:04:38.204]  
[03:04:38.204]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:38.204]    <block atomic="false" info="">
[03:04:38.204]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:38.204]        // -> [isSWJ <= 0x00000001]
[03:04:38.204]      __var hasDormant = __protocol & 0x00020000;
[03:04:38.204]        // -> [hasDormant <= 0x00000000]
[03:04:38.204]      __var protType   = __protocol & 0x0000FFFF;
[03:04:38.204]        // -> [protType <= 0x00000002]
[03:04:38.204]    </block>
[03:04:38.204]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:38.204]      // if-block "protType == 1"
[03:04:38.204]        // =>  FALSE
[03:04:38.204]      // skip if-block "protType == 1"
[03:04:38.204]    </control>
[03:04:38.204]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:38.204]      // if-block "protType == 2"
[03:04:38.204]        // =>  TRUE
[03:04:38.204]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:38.204]        // if-block "isSWJ"
[03:04:38.208]          // =>  TRUE
[03:04:38.208]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:38.208]          // if-block "hasDormant"
[03:04:38.208]            // =>  FALSE
[03:04:38.208]          // skip if-block "hasDormant"
[03:04:38.208]        </control>
[03:04:38.208]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:38.208]          // if-block "!hasDormant"
[03:04:38.208]            // =>  TRUE
[03:04:38.208]          <block atomic="false" info="">
[03:04:38.208]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:39.217]  
[03:04:39.217]  !!! E320 : DAP access error
[03:04:39.217]  
[03:04:39.217]          </block>
[03:04:39.217]          // end if-block "!hasDormant"
[03:04:39.217]        </control>
[03:04:39.217]        // end if-block "isSWJ"
[03:04:39.217]      </control>
[03:04:39.217]      // end if-block "protType == 2"
[03:04:39.217]    </control>
[03:04:39.217]  </sequence>
[03:04:39.217]  
[03:04:39.476]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:39.476]  
[03:04:39.485]  <debugvars>
[03:04:39.485]    // Pre-defined
[03:04:39.485]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:39.485]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:39.485]    __dp=0x00000000
[03:04:39.485]    __ap=0x00000000
[03:04:39.485]    __traceout=0x00000000      (Trace Disabled)
[03:04:39.485]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:39.485]    __FlashAddr=0x00000000
[03:04:39.485]    __FlashLen=0x00000000
[03:04:39.485]    __FlashArg=0x00000000
[03:04:39.485]    __FlashOp=0x00000000
[03:04:39.485]    __Result=0x00000000
[03:04:39.485]  </debugvars>
[03:04:39.485]  
[03:04:39.485]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:39.485]    <block atomic="false" info="">
[03:04:39.485]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:39.485]        // -> [isSWJ <= 0x00000001]
[03:04:39.485]      __var hasDormant = __protocol & 0x00020000;
[03:04:39.487]        // -> [hasDormant <= 0x00000000]
[03:04:39.487]      __var protType   = __protocol & 0x0000FFFF;
[03:04:39.487]        // -> [protType <= 0x00000002]
[03:04:39.487]    </block>
[03:04:39.487]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:39.487]      // if-block "protType == 1"
[03:04:39.487]        // =>  FALSE
[03:04:39.487]      // skip if-block "protType == 1"
[03:04:39.487]    </control>
[03:04:39.487]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:39.487]      // if-block "protType == 2"
[03:04:39.487]        // =>  TRUE
[03:04:39.487]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:39.487]        // if-block "isSWJ"
[03:04:39.487]          // =>  TRUE
[03:04:39.487]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:39.487]          // if-block "hasDormant"
[03:04:39.487]            // =>  FALSE
[03:04:39.487]          // skip if-block "hasDormant"
[03:04:39.487]        </control>
[03:04:39.487]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:39.487]          // if-block "!hasDormant"
[03:04:39.487]            // =>  TRUE
[03:04:39.487]          <block atomic="false" info="">
[03:04:39.487]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:40.488]  
[03:04:40.488]  !!! E320 : DAP access error
[03:04:40.488]  
[03:04:40.488]          </block>
[03:04:40.488]          // end if-block "!hasDormant"
[03:04:40.488]        </control>
[03:04:40.490]        // end if-block "isSWJ"
[03:04:40.490]      </control>
[03:04:40.490]      // end if-block "protType == 2"
[03:04:40.490]    </control>
[03:04:40.490]  </sequence>
[03:04:40.490]  
[03:04:40.742]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:40.742]  
[03:04:40.751]  <debugvars>
[03:04:40.751]    // Pre-defined
[03:04:40.751]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:40.751]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:40.751]    __dp=0x00000000
[03:04:40.751]    __ap=0x00000000
[03:04:40.751]    __traceout=0x00000000      (Trace Disabled)
[03:04:40.751]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:40.751]    __FlashAddr=0x00000000
[03:04:40.751]    __FlashLen=0x00000000
[03:04:40.751]    __FlashArg=0x00000000
[03:04:40.751]    __FlashOp=0x00000000
[03:04:40.751]    __Result=0x00000000
[03:04:40.751]  </debugvars>
[03:04:40.751]  
[03:04:40.751]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:40.751]    <block atomic="false" info="">
[03:04:40.751]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:40.751]        // -> [isSWJ <= 0x00000001]
[03:04:40.751]      __var hasDormant = __protocol & 0x00020000;
[03:04:40.751]        // -> [hasDormant <= 0x00000000]
[03:04:40.751]      __var protType   = __protocol & 0x0000FFFF;
[03:04:40.751]        // -> [protType <= 0x00000002]
[03:04:40.751]    </block>
[03:04:40.751]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:40.751]      // if-block "protType == 1"
[03:04:40.751]        // =>  FALSE
[03:04:40.751]      // skip if-block "protType == 1"
[03:04:40.751]    </control>
[03:04:40.751]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:40.751]      // if-block "protType == 2"
[03:04:40.751]        // =>  TRUE
[03:04:40.751]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:40.751]        // if-block "isSWJ"
[03:04:40.751]          // =>  TRUE
[03:04:40.751]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:40.755]          // if-block "hasDormant"
[03:04:40.755]            // =>  FALSE
[03:04:40.755]          // skip if-block "hasDormant"
[03:04:40.755]        </control>
[03:04:40.755]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:40.755]          // if-block "!hasDormant"
[03:04:40.755]            // =>  TRUE
[03:04:40.755]          <block atomic="false" info="">
[03:04:40.755]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:41.762]  
[03:04:41.762]  !!! E320 : DAP access error
[03:04:41.762]  
[03:04:41.770]          </block>
[03:04:41.770]          // end if-block "!hasDormant"
[03:04:41.770]        </control>
[03:04:41.770]        // end if-block "isSWJ"
[03:04:41.770]      </control>
[03:04:41.770]      // end if-block "protType == 2"
[03:04:41.770]    </control>
[03:04:41.770]  </sequence>
[03:04:41.770]  
[03:04:42.030]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:42.030]  
[03:04:42.039]  <debugvars>
[03:04:42.039]    // Pre-defined
[03:04:42.039]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:42.039]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:42.039]    __dp=0x00000000
[03:04:42.039]    __ap=0x00000000
[03:04:42.039]    __traceout=0x00000000      (Trace Disabled)
[03:04:42.039]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:42.039]    __FlashAddr=0x00000000
[03:04:42.039]    __FlashLen=0x00000000
[03:04:42.039]    __FlashArg=0x00000000
[03:04:42.039]    __FlashOp=0x00000000
[03:04:42.039]    __Result=0x00000000
[03:04:42.039]  </debugvars>
[03:04:42.039]  
[03:04:42.039]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:42.039]    <block atomic="false" info="">
[03:04:42.039]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:42.039]        // -> [isSWJ <= 0x00000001]
[03:04:42.039]      __var hasDormant = __protocol & 0x00020000;
[03:04:42.039]        // -> [hasDormant <= 0x00000000]
[03:04:42.039]      __var protType   = __protocol & 0x0000FFFF;
[03:04:42.042]        // -> [protType <= 0x00000002]
[03:04:42.042]    </block>
[03:04:42.042]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:42.042]      // if-block "protType == 1"
[03:04:42.042]        // =>  FALSE
[03:04:42.042]      // skip if-block "protType == 1"
[03:04:42.042]    </control>
[03:04:42.042]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:42.042]      // if-block "protType == 2"
[03:04:42.042]        // =>  TRUE
[03:04:42.042]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:42.042]        // if-block "isSWJ"
[03:04:42.042]          // =>  TRUE
[03:04:42.042]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:42.042]          // if-block "hasDormant"
[03:04:42.042]            // =>  FALSE
[03:04:42.042]          // skip if-block "hasDormant"
[03:04:42.042]        </control>
[03:04:42.042]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:42.042]          // if-block "!hasDormant"
[03:04:42.042]            // =>  TRUE
[03:04:42.042]          <block atomic="false" info="">
[03:04:42.042]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:43.053]  
[03:04:43.053]  !!! E320 : DAP access error
[03:04:43.053]  
[03:04:43.061]          </block>
[03:04:43.061]          // end if-block "!hasDormant"
[03:04:43.061]        </control>
[03:04:43.061]        // end if-block "isSWJ"
[03:04:43.061]      </control>
[03:04:43.061]      // end if-block "protType == 2"
[03:04:43.061]    </control>
[03:04:43.061]  </sequence>
[03:04:43.061]  
[03:04:43.315]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:43.315]  
[03:04:43.315]  <debugvars>
[03:04:43.315]    // Pre-defined
[03:04:43.315]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:43.315]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:43.315]    __dp=0x00000000
[03:04:43.315]    __ap=0x00000000
[03:04:43.315]    __traceout=0x00000000      (Trace Disabled)
[03:04:43.315]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:43.315]    __FlashAddr=0x00000000
[03:04:43.315]    __FlashLen=0x00000000
[03:04:43.315]    __FlashArg=0x00000000
[03:04:43.315]    __FlashOp=0x00000000
[03:04:43.315]    __Result=0x00000000
[03:04:43.315]  </debugvars>
[03:04:43.315]  
[03:04:43.315]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:43.315]    <block atomic="false" info="">
[03:04:43.315]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:43.315]        // -> [isSWJ <= 0x00000001]
[03:04:43.315]      __var hasDormant = __protocol & 0x00020000;
[03:04:43.315]        // -> [hasDormant <= 0x00000000]
[03:04:43.315]      __var protType   = __protocol & 0x0000FFFF;
[03:04:43.319]        // -> [protType <= 0x00000002]
[03:04:43.319]    </block>
[03:04:43.319]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:43.319]      // if-block "protType == 1"
[03:04:43.319]        // =>  FALSE
[03:04:43.319]      // skip if-block "protType == 1"
[03:04:43.319]    </control>
[03:04:43.319]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:43.319]      // if-block "protType == 2"
[03:04:43.319]        // =>  TRUE
[03:04:43.319]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:43.319]        // if-block "isSWJ"
[03:04:43.319]          // =>  TRUE
[03:04:43.319]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:43.319]          // if-block "hasDormant"
[03:04:43.319]            // =>  FALSE
[03:04:43.319]          // skip if-block "hasDormant"
[03:04:43.319]        </control>
[03:04:43.319]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:43.319]          // if-block "!hasDormant"
[03:04:43.319]            // =>  TRUE
[03:04:43.319]          <block atomic="false" info="">
[03:04:43.319]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:44.326]  
[03:04:44.326]  !!! E320 : DAP access error
[03:04:44.326]  
[03:04:44.336]          </block>
[03:04:44.336]          // end if-block "!hasDormant"
[03:04:44.336]        </control>
[03:04:44.336]        // end if-block "isSWJ"
[03:04:44.336]      </control>
[03:04:44.336]      // end if-block "protType == 2"
[03:04:44.336]    </control>
[03:04:44.336]  </sequence>
[03:04:44.336]  
[03:04:44.592]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:44.592]  
[03:04:44.592]  <debugvars>
[03:04:44.592]    // Pre-defined
[03:04:44.592]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:44.592]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:44.592]    __dp=0x00000000
[03:04:44.592]    __ap=0x00000000
[03:04:44.592]    __traceout=0x00000000      (Trace Disabled)
[03:04:44.592]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:44.592]    __FlashAddr=0x00000000
[03:04:44.592]    __FlashLen=0x00000000
[03:04:44.592]    __FlashArg=0x00000000
[03:04:44.592]    __FlashOp=0x00000000
[03:04:44.592]    __Result=0x00000000
[03:04:44.592]  </debugvars>
[03:04:44.592]  
[03:04:44.592]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:44.592]    <block atomic="false" info="">
[03:04:44.592]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:44.592]        // -> [isSWJ <= 0x00000001]
[03:04:44.592]      __var hasDormant = __protocol & 0x00020000;
[03:04:44.592]        // -> [hasDormant <= 0x00000000]
[03:04:44.592]      __var protType   = __protocol & 0x0000FFFF;
[03:04:44.592]        // -> [protType <= 0x00000002]
[03:04:44.592]    </block>
[03:04:44.592]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:44.592]      // if-block "protType == 1"
[03:04:44.592]        // =>  FALSE
[03:04:44.592]      // skip if-block "protType == 1"
[03:04:44.592]    </control>
[03:04:44.592]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:44.592]      // if-block "protType == 2"
[03:04:44.596]        // =>  TRUE
[03:04:44.596]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:44.596]        // if-block "isSWJ"
[03:04:44.596]          // =>  TRUE
[03:04:44.596]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:44.596]          // if-block "hasDormant"
[03:04:44.596]            // =>  FALSE
[03:04:44.596]          // skip if-block "hasDormant"
[03:04:44.596]        </control>
[03:04:44.596]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:44.596]          // if-block "!hasDormant"
[03:04:44.596]            // =>  TRUE
[03:04:44.596]          <block atomic="false" info="">
[03:04:44.596]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:45.605]  
[03:04:45.605]  !!! E320 : DAP access error
[03:04:45.605]  
[03:04:45.613]          </block>
[03:04:45.613]          // end if-block "!hasDormant"
[03:04:45.613]        </control>
[03:04:45.613]        // end if-block "isSWJ"
[03:04:45.613]      </control>
[03:04:45.613]      // end if-block "protType == 2"
[03:04:45.613]    </control>
[03:04:45.613]  </sequence>
[03:04:45.613]  
[03:04:45.875]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:45.875]  
[03:04:45.875]  <debugvars>
[03:04:45.875]    // Pre-defined
[03:04:45.875]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:45.875]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:45.875]    __dp=0x00000000
[03:04:45.875]    __ap=0x00000000
[03:04:45.875]    __traceout=0x00000000      (Trace Disabled)
[03:04:45.875]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:45.875]    __FlashAddr=0x00000000
[03:04:45.875]    __FlashLen=0x00000000
[03:04:45.875]    __FlashArg=0x00000000
[03:04:45.875]    __FlashOp=0x00000000
[03:04:45.875]    __Result=0x00000000
[03:04:45.875]  </debugvars>
[03:04:45.875]  
[03:04:45.875]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:45.875]    <block atomic="false" info="">
[03:04:45.875]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:45.877]        // -> [isSWJ <= 0x00000001]
[03:04:45.877]      __var hasDormant = __protocol & 0x00020000;
[03:04:45.877]        // -> [hasDormant <= 0x00000000]
[03:04:45.877]      __var protType   = __protocol & 0x0000FFFF;
[03:04:45.877]        // -> [protType <= 0x00000002]
[03:04:45.877]    </block>
[03:04:45.877]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:45.877]      // if-block "protType == 1"
[03:04:45.877]        // =>  FALSE
[03:04:45.877]      // skip if-block "protType == 1"
[03:04:45.877]    </control>
[03:04:45.878]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:45.878]      // if-block "protType == 2"
[03:04:45.878]        // =>  TRUE
[03:04:45.878]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:45.878]        // if-block "isSWJ"
[03:04:45.878]          // =>  TRUE
[03:04:45.878]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:45.878]          // if-block "hasDormant"
[03:04:45.878]            // =>  FALSE
[03:04:45.878]          // skip if-block "hasDormant"
[03:04:45.879]        </control>
[03:04:45.879]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:45.879]          // if-block "!hasDormant"
[03:04:45.879]            // =>  TRUE
[03:04:45.879]          <block atomic="false" info="">
[03:04:45.879]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:46.883]  
[03:04:46.883]  !!! E320 : DAP access error
[03:04:46.883]  
[03:04:46.892]          </block>
[03:04:46.892]          // end if-block "!hasDormant"
[03:04:46.892]        </control>
[03:04:46.892]        // end if-block "isSWJ"
[03:04:46.892]      </control>
[03:04:46.892]      // end if-block "protType == 2"
[03:04:46.892]    </control>
[03:04:46.892]  </sequence>
[03:04:46.892]  
[03:04:47.151]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:47.151]  
[03:04:47.159]  <debugvars>
[03:04:47.159]    // Pre-defined
[03:04:47.159]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:47.159]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:47.159]    __dp=0x00000000
[03:04:47.159]    __ap=0x00000000
[03:04:47.159]    __traceout=0x00000000      (Trace Disabled)
[03:04:47.159]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:47.159]    __FlashAddr=0x00000000
[03:04:47.159]    __FlashLen=0x00000000
[03:04:47.159]    __FlashArg=0x00000000
[03:04:47.159]    __FlashOp=0x00000000
[03:04:47.159]    __Result=0x00000000
[03:04:47.159]  </debugvars>
[03:04:47.159]  
[03:04:47.159]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:47.159]    <block atomic="false" info="">
[03:04:47.159]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:47.159]        // -> [isSWJ <= 0x00000001]
[03:04:47.159]      __var hasDormant = __protocol & 0x00020000;
[03:04:47.159]        // -> [hasDormant <= 0x00000000]
[03:04:47.159]      __var protType   = __protocol & 0x0000FFFF;
[03:04:47.159]        // -> [protType <= 0x00000002]
[03:04:47.159]    </block>
[03:04:47.159]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:47.159]      // if-block "protType == 1"
[03:04:47.159]        // =>  FALSE
[03:04:47.159]      // skip if-block "protType == 1"
[03:04:47.159]    </control>
[03:04:47.159]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:47.159]      // if-block "protType == 2"
[03:04:47.159]        // =>  TRUE
[03:04:47.159]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:47.163]        // if-block "isSWJ"
[03:04:47.163]          // =>  TRUE
[03:04:47.163]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:47.163]          // if-block "hasDormant"
[03:04:47.163]            // =>  FALSE
[03:04:47.163]          // skip if-block "hasDormant"
[03:04:47.163]        </control>
[03:04:47.163]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:47.163]          // if-block "!hasDormant"
[03:04:47.163]            // =>  TRUE
[03:04:47.163]          <block atomic="false" info="">
[03:04:47.163]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:48.166]  
[03:04:48.166]  !!! E320 : DAP access error
[03:04:48.166]  
[03:04:48.175]          </block>
[03:04:48.175]          // end if-block "!hasDormant"
[03:04:48.175]        </control>
[03:04:48.175]        // end if-block "isSWJ"
[03:04:48.175]      </control>
[03:04:48.175]      // end if-block "protType == 2"
[03:04:48.175]    </control>
[03:04:48.175]  </sequence>
[03:04:48.175]  
[03:04:48.437]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:48.437]  
[03:04:48.444]  <debugvars>
[03:04:48.444]    // Pre-defined
[03:04:48.444]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:48.444]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:48.444]    __dp=0x00000000
[03:04:48.444]    __ap=0x00000000
[03:04:48.444]    __traceout=0x00000000      (Trace Disabled)
[03:04:48.444]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:48.444]    __FlashAddr=0x00000000
[03:04:48.444]    __FlashLen=0x00000000
[03:04:48.444]    __FlashArg=0x00000000
[03:04:48.444]    __FlashOp=0x00000000
[03:04:48.444]    __Result=0x00000000
[03:04:48.444]  </debugvars>
[03:04:48.444]  
[03:04:48.444]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:48.444]    <block atomic="false" info="">
[03:04:48.444]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:48.447]        // -> [isSWJ <= 0x00000001]
[03:04:48.447]      __var hasDormant = __protocol & 0x00020000;
[03:04:48.447]        // -> [hasDormant <= 0x00000000]
[03:04:48.447]      __var protType   = __protocol & 0x0000FFFF;
[03:04:48.447]        // -> [protType <= 0x00000002]
[03:04:48.447]    </block>
[03:04:48.447]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:48.447]      // if-block "protType == 1"
[03:04:48.447]        // =>  FALSE
[03:04:48.447]      // skip if-block "protType == 1"
[03:04:48.447]    </control>
[03:04:48.448]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:48.448]      // if-block "protType == 2"
[03:04:48.448]        // =>  TRUE
[03:04:48.448]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:48.448]        // if-block "isSWJ"
[03:04:48.448]          // =>  TRUE
[03:04:48.448]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:48.448]          // if-block "hasDormant"
[03:04:48.448]            // =>  FALSE
[03:04:48.449]          // skip if-block "hasDormant"
[03:04:48.449]        </control>
[03:04:48.449]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:48.449]          // if-block "!hasDormant"
[03:04:48.449]            // =>  TRUE
[03:04:48.449]          <block atomic="false" info="">
[03:04:48.449]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:49.449]  
[03:04:49.449]  !!! E320 : DAP access error
[03:04:49.449]  
[03:04:49.457]          </block>
[03:04:49.457]          // end if-block "!hasDormant"
[03:04:49.457]        </control>
[03:04:49.457]        // end if-block "isSWJ"
[03:04:49.457]      </control>
[03:04:49.457]      // end if-block "protType == 2"
[03:04:49.457]    </control>
[03:04:49.457]  </sequence>
[03:04:49.457]  
[03:04:49.714]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:49.714]  
[03:04:49.723]  <debugvars>
[03:04:49.723]    // Pre-defined
[03:04:49.723]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:49.723]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:49.723]    __dp=0x00000000
[03:04:49.723]    __ap=0x00000000
[03:04:49.723]    __traceout=0x00000000      (Trace Disabled)
[03:04:49.723]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:49.723]    __FlashAddr=0x00000000
[03:04:49.723]    __FlashLen=0x00000000
[03:04:49.723]    __FlashArg=0x00000000
[03:04:49.723]    __FlashOp=0x00000000
[03:04:49.723]    __Result=0x00000000
[03:04:49.723]  </debugvars>
[03:04:49.723]  
[03:04:49.723]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:49.723]    <block atomic="false" info="">
[03:04:49.723]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:49.723]        // -> [isSWJ <= 0x00000001]
[03:04:49.723]      __var hasDormant = __protocol & 0x00020000;
[03:04:49.723]        // -> [hasDormant <= 0x00000000]
[03:04:49.723]      __var protType   = __protocol & 0x0000FFFF;
[03:04:49.723]        // -> [protType <= 0x00000002]
[03:04:49.723]    </block>
[03:04:49.723]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:49.723]      // if-block "protType == 1"
[03:04:49.723]        // =>  FALSE
[03:04:49.723]      // skip if-block "protType == 1"
[03:04:49.726]    </control>
[03:04:49.726]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:49.726]      // if-block "protType == 2"
[03:04:49.726]        // =>  TRUE
[03:04:49.726]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:49.726]        // if-block "isSWJ"
[03:04:49.726]          // =>  TRUE
[03:04:49.726]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:49.726]          // if-block "hasDormant"
[03:04:49.726]            // =>  FALSE
[03:04:49.726]          // skip if-block "hasDormant"
[03:04:49.726]        </control>
[03:04:49.726]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:49.726]          // if-block "!hasDormant"
[03:04:49.726]            // =>  TRUE
[03:04:49.726]          <block atomic="false" info="">
[03:04:49.726]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:50.737]  
[03:04:50.737]  !!! E320 : DAP access error
[03:04:50.737]  
[03:04:50.747]          </block>
[03:04:50.747]          // end if-block "!hasDormant"
[03:04:50.747]        </control>
[03:04:50.747]        // end if-block "isSWJ"
[03:04:50.747]      </control>
[03:04:50.747]      // end if-block "protType == 2"
[03:04:50.747]    </control>
[03:04:50.747]  </sequence>
[03:04:50.747]  
[03:04:50.998]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:50.998]  
[03:04:51.006]  <debugvars>
[03:04:51.006]    // Pre-defined
[03:04:51.006]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:51.006]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:51.006]    __dp=0x00000000
[03:04:51.006]    __ap=0x00000000
[03:04:51.006]    __traceout=0x00000000      (Trace Disabled)
[03:04:51.006]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:51.006]    __FlashAddr=0x00000000
[03:04:51.006]    __FlashLen=0x00000000
[03:04:51.006]    __FlashArg=0x00000000
[03:04:51.006]    __FlashOp=0x00000000
[03:04:51.008]    __Result=0x00000000
[03:04:51.008]  </debugvars>
[03:04:51.008]  
[03:04:51.008]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:51.008]    <block atomic="false" info="">
[03:04:51.008]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:51.008]        // -> [isSWJ <= 0x00000001]
[03:04:51.009]      __var hasDormant = __protocol & 0x00020000;
[03:04:51.009]        // -> [hasDormant <= 0x00000000]
[03:04:51.009]      __var protType   = __protocol & 0x0000FFFF;
[03:04:51.009]        // -> [protType <= 0x00000002]
[03:04:51.009]    </block>
[03:04:51.009]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:51.009]      // if-block "protType == 1"
[03:04:51.009]        // =>  FALSE
[03:04:51.009]      // skip if-block "protType == 1"
[03:04:51.009]    </control>
[03:04:51.009]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:51.009]      // if-block "protType == 2"
[03:04:51.009]        // =>  TRUE
[03:04:51.009]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:51.010]        // if-block "isSWJ"
[03:04:51.010]          // =>  TRUE
[03:04:51.010]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:51.010]          // if-block "hasDormant"
[03:04:51.011]            // =>  FALSE
[03:04:51.011]          // skip if-block "hasDormant"
[03:04:51.011]        </control>
[03:04:51.011]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:51.011]          // if-block "!hasDormant"
[03:04:51.011]            // =>  TRUE
[03:04:51.011]          <block atomic="false" info="">
[03:04:51.011]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:52.012]  
[03:04:52.012]  !!! E320 : DAP access error
[03:04:52.012]  
[03:04:52.020]          </block>
[03:04:52.020]          // end if-block "!hasDormant"
[03:04:52.020]        </control>
[03:04:52.020]        // end if-block "isSWJ"
[03:04:52.020]      </control>
[03:04:52.021]      // end if-block "protType == 2"
[03:04:52.021]    </control>
[03:04:52.021]  </sequence>
[03:04:52.021]  
[03:04:52.281]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:52.281]  
[03:04:52.290]  <debugvars>
[03:04:52.290]    // Pre-defined
[03:04:52.290]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:52.290]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:52.290]    __dp=0x00000000
[03:04:52.290]    __ap=0x00000000
[03:04:52.290]    __traceout=0x00000000      (Trace Disabled)
[03:04:52.290]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:52.290]    __FlashAddr=0x00000000
[03:04:52.290]    __FlashLen=0x00000000
[03:04:52.290]    __FlashArg=0x00000000
[03:04:52.290]    __FlashOp=0x00000000
[03:04:52.290]    __Result=0x00000000
[03:04:52.290]  </debugvars>
[03:04:52.290]  
[03:04:52.290]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:52.290]    <block atomic="false" info="">
[03:04:52.290]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:52.290]        // -> [isSWJ <= 0x00000001]
[03:04:52.290]      __var hasDormant = __protocol & 0x00020000;
[03:04:52.290]        // -> [hasDormant <= 0x00000000]
[03:04:52.290]      __var protType   = __protocol & 0x0000FFFF;
[03:04:52.290]        // -> [protType <= 0x00000002]
[03:04:52.290]    </block>
[03:04:52.290]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:52.293]      // if-block "protType == 1"
[03:04:52.293]        // =>  FALSE
[03:04:52.293]      // skip if-block "protType == 1"
[03:04:52.293]    </control>
[03:04:52.293]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:52.293]      // if-block "protType == 2"
[03:04:52.293]        // =>  TRUE
[03:04:52.293]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:52.293]        // if-block "isSWJ"
[03:04:52.293]          // =>  TRUE
[03:04:52.293]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:52.293]          // if-block "hasDormant"
[03:04:52.293]            // =>  FALSE
[03:04:52.293]          // skip if-block "hasDormant"
[03:04:52.293]        </control>
[03:04:52.293]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:52.293]          // if-block "!hasDormant"
[03:04:52.293]            // =>  TRUE
[03:04:52.293]          <block atomic="false" info="">
[03:04:52.293]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:53.302]  
[03:04:53.302]  !!! E320 : DAP access error
[03:04:53.302]  
[03:04:53.311]          </block>
[03:04:53.311]          // end if-block "!hasDormant"
[03:04:53.311]        </control>
[03:04:53.311]        // end if-block "isSWJ"
[03:04:53.311]      </control>
[03:04:53.311]      // end if-block "protType == 2"
[03:04:53.311]    </control>
[03:04:53.311]  </sequence>
[03:04:53.311]  
[03:04:53.567]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:53.567]  
[03:04:53.575]  <debugvars>
[03:04:53.575]    // Pre-defined
[03:04:53.575]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:53.575]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:53.575]    __dp=0x00000000
[03:04:53.575]    __ap=0x00000000
[03:04:53.575]    __traceout=0x00000000      (Trace Disabled)
[03:04:53.575]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:53.575]    __FlashAddr=0x00000000
[03:04:53.575]    __FlashLen=0x00000000
[03:04:53.575]    __FlashArg=0x00000000
[03:04:53.575]    __FlashOp=0x00000000
[03:04:53.575]    __Result=0x00000000
[03:04:53.575]  </debugvars>
[03:04:53.575]  
[03:04:53.575]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:53.575]    <block atomic="false" info="">
[03:04:53.575]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:53.575]        // -> [isSWJ <= 0x00000001]
[03:04:53.575]      __var hasDormant = __protocol & 0x00020000;
[03:04:53.575]        // -> [hasDormant <= 0x00000000]
[03:04:53.575]      __var protType   = __protocol & 0x0000FFFF;
[03:04:53.575]        // -> [protType <= 0x00000002]
[03:04:53.575]    </block>
[03:04:53.575]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:53.575]      // if-block "protType == 1"
[03:04:53.575]        // =>  FALSE
[03:04:53.575]      // skip if-block "protType == 1"
[03:04:53.575]    </control>
[03:04:53.575]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:53.575]      // if-block "protType == 2"
[03:04:53.579]        // =>  TRUE
[03:04:53.579]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:53.579]        // if-block "isSWJ"
[03:04:53.579]          // =>  TRUE
[03:04:53.579]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:53.579]          // if-block "hasDormant"
[03:04:53.579]            // =>  FALSE
[03:04:53.579]          // skip if-block "hasDormant"
[03:04:53.579]        </control>
[03:04:53.579]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:53.579]          // if-block "!hasDormant"
[03:04:53.579]            // =>  TRUE
[03:04:53.579]          <block atomic="false" info="">
[03:04:53.579]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:54.580]  
[03:04:54.580]  !!! E320 : DAP access error
[03:04:54.580]  
[03:04:54.588]          </block>
[03:04:54.588]          // end if-block "!hasDormant"
[03:04:54.589]        </control>
[03:04:54.589]        // end if-block "isSWJ"
[03:04:54.589]      </control>
[03:04:54.589]      // end if-block "protType == 2"
[03:04:54.589]    </control>
[03:04:54.589]  </sequence>
[03:04:54.589]  
[03:04:54.843]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:54.843]  
[03:04:54.851]  <debugvars>
[03:04:54.851]    // Pre-defined
[03:04:54.851]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:54.851]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:54.851]    __dp=0x00000000
[03:04:54.851]    __ap=0x00000000
[03:04:54.851]    __traceout=0x00000000      (Trace Disabled)
[03:04:54.851]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:54.851]    __FlashAddr=0x00000000
[03:04:54.851]    __FlashLen=0x00000000
[03:04:54.851]    __FlashArg=0x00000000
[03:04:54.851]    __FlashOp=0x00000000
[03:04:54.851]    __Result=0x00000000
[03:04:54.851]  </debugvars>
[03:04:54.851]  
[03:04:54.851]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:54.851]    <block atomic="false" info="">
[03:04:54.851]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:54.851]        // -> [isSWJ <= 0x00000001]
[03:04:54.851]      __var hasDormant = __protocol & 0x00020000;
[03:04:54.851]        // -> [hasDormant <= 0x00000000]
[03:04:54.851]      __var protType   = __protocol & 0x0000FFFF;
[03:04:54.851]        // -> [protType <= 0x00000002]
[03:04:54.851]    </block>
[03:04:54.851]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:54.851]      // if-block "protType == 1"
[03:04:54.851]        // =>  FALSE
[03:04:54.851]      // skip if-block "protType == 1"
[03:04:54.851]    </control>
[03:04:54.851]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:54.855]      // if-block "protType == 2"
[03:04:54.855]        // =>  TRUE
[03:04:54.855]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:54.855]        // if-block "isSWJ"
[03:04:54.855]          // =>  TRUE
[03:04:54.855]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:54.855]          // if-block "hasDormant"
[03:04:54.855]            // =>  FALSE
[03:04:54.856]          // skip if-block "hasDormant"
[03:04:54.856]        </control>
[03:04:54.856]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:54.856]          // if-block "!hasDormant"
[03:04:54.856]            // =>  TRUE
[03:04:54.856]          <block atomic="false" info="">
[03:04:54.856]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:55.859]  
[03:04:55.859]  !!! E320 : DAP access error
[03:04:55.859]  
[03:04:55.867]          </block>
[03:04:55.867]          // end if-block "!hasDormant"
[03:04:55.867]        </control>
[03:04:55.867]        // end if-block "isSWJ"
[03:04:55.867]      </control>
[03:04:55.867]      // end if-block "protType == 2"
[03:04:55.867]    </control>
[03:04:55.867]  </sequence>
[03:04:55.867]  
[03:04:56.124]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:56.124]  
[03:04:56.132]  <debugvars>
[03:04:56.132]    // Pre-defined
[03:04:56.132]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:56.132]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:56.132]    __dp=0x00000000
[03:04:56.132]    __ap=0x00000000
[03:04:56.132]    __traceout=0x00000000      (Trace Disabled)
[03:04:56.132]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:56.132]    __FlashAddr=0x00000000
[03:04:56.132]    __FlashLen=0x00000000
[03:04:56.132]    __FlashArg=0x00000000
[03:04:56.132]    __FlashOp=0x00000000
[03:04:56.132]    __Result=0x00000000
[03:04:56.132]  </debugvars>
[03:04:56.132]  
[03:04:56.132]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:56.132]    <block atomic="false" info="">
[03:04:56.132]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:56.132]        // -> [isSWJ <= 0x00000001]
[03:04:56.132]      __var hasDormant = __protocol & 0x00020000;
[03:04:56.132]        // -> [hasDormant <= 0x00000000]
[03:04:56.132]      __var protType   = __protocol & 0x0000FFFF;
[03:04:56.132]        // -> [protType <= 0x00000002]
[03:04:56.132]    </block>
[03:04:56.132]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:56.132]      // if-block "protType == 1"
[03:04:56.135]        // =>  FALSE
[03:04:56.135]      // skip if-block "protType == 1"
[03:04:56.135]    </control>
[03:04:56.135]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:56.135]      // if-block "protType == 2"
[03:04:56.135]        // =>  TRUE
[03:04:56.135]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:56.135]        // if-block "isSWJ"
[03:04:56.136]          // =>  TRUE
[03:04:56.136]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:56.136]          // if-block "hasDormant"
[03:04:56.136]            // =>  FALSE
[03:04:56.136]          // skip if-block "hasDormant"
[03:04:56.136]        </control>
[03:04:56.136]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:56.137]          // if-block "!hasDormant"
[03:04:56.137]            // =>  TRUE
[03:04:56.137]          <block atomic="false" info="">
[03:04:56.137]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:57.141]  
[03:04:57.141]  !!! E320 : DAP access error
[03:04:57.141]  
[03:04:57.141]          </block>
[03:04:57.141]          // end if-block "!hasDormant"
[03:04:57.141]        </control>
[03:04:57.141]        // end if-block "isSWJ"
[03:04:57.141]      </control>
[03:04:57.141]      // end if-block "protType == 2"
[03:04:57.141]    </control>
[03:04:57.141]  </sequence>
[03:04:57.141]  
[03:04:57.395]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:57.395]  
[03:04:57.405]  <debugvars>
[03:04:57.405]    // Pre-defined
[03:04:57.405]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:57.405]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:57.405]    __dp=0x00000000
[03:04:57.405]    __ap=0x00000000
[03:04:57.405]    __traceout=0x00000000      (Trace Disabled)
[03:04:57.405]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:57.406]    __FlashAddr=0x00000000
[03:04:57.406]    __FlashLen=0x00000000
[03:04:57.406]    __FlashArg=0x00000000
[03:04:57.406]    __FlashOp=0x00000000
[03:04:57.406]    __Result=0x00000000
[03:04:57.406]  </debugvars>
[03:04:57.406]  
[03:04:57.406]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:57.406]    <block atomic="false" info="">
[03:04:57.406]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:57.406]        // -> [isSWJ <= 0x00000001]
[03:04:57.407]      __var hasDormant = __protocol & 0x00020000;
[03:04:57.407]        // -> [hasDormant <= 0x00000000]
[03:04:57.407]      __var protType   = __protocol & 0x0000FFFF;
[03:04:57.407]        // -> [protType <= 0x00000002]
[03:04:57.407]    </block>
[03:04:57.407]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:57.407]      // if-block "protType == 1"
[03:04:57.407]        // =>  FALSE
[03:04:57.407]      // skip if-block "protType == 1"
[03:04:57.407]    </control>
[03:04:57.407]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:57.407]      // if-block "protType == 2"
[03:04:57.407]        // =>  TRUE
[03:04:57.407]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:57.407]        // if-block "isSWJ"
[03:04:57.409]          // =>  TRUE
[03:04:57.409]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:57.409]          // if-block "hasDormant"
[03:04:57.409]            // =>  FALSE
[03:04:57.409]          // skip if-block "hasDormant"
[03:04:57.409]        </control>
[03:04:57.409]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:57.409]          // if-block "!hasDormant"
[03:04:57.410]            // =>  TRUE
[03:04:57.410]          <block atomic="false" info="">
[03:04:57.410]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:58.419]  
[03:04:58.419]  !!! E320 : DAP access error
[03:04:58.419]  
[03:04:58.427]          </block>
[03:04:58.427]          // end if-block "!hasDormant"
[03:04:58.427]        </control>
[03:04:58.427]        // end if-block "isSWJ"
[03:04:58.427]      </control>
[03:04:58.427]      // end if-block "protType == 2"
[03:04:58.427]    </control>
[03:04:58.427]  </sequence>
[03:04:58.427]  
[03:04:58.686]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:58.686]  
[03:04:58.687]  <debugvars>
[03:04:58.687]    // Pre-defined
[03:04:58.687]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:58.687]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:58.687]    __dp=0x00000000
[03:04:58.687]    __ap=0x00000000
[03:04:58.687]    __traceout=0x00000000      (Trace Disabled)
[03:04:58.687]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:58.687]    __FlashAddr=0x00000000
[03:04:58.687]    __FlashLen=0x00000000
[03:04:58.687]    __FlashArg=0x00000000
[03:04:58.687]    __FlashOp=0x00000000
[03:04:58.687]    __Result=0x00000000
[03:04:58.687]  </debugvars>
[03:04:58.687]  
[03:04:58.687]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:58.687]    <block atomic="false" info="">
[03:04:58.687]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:58.688]        // -> [isSWJ <= 0x00000001]
[03:04:58.688]      __var hasDormant = __protocol & 0x00020000;
[03:04:58.688]        // -> [hasDormant <= 0x00000000]
[03:04:58.688]      __var protType   = __protocol & 0x0000FFFF;
[03:04:58.688]        // -> [protType <= 0x00000002]
[03:04:58.688]    </block>
[03:04:58.688]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:58.688]      // if-block "protType == 1"
[03:04:58.688]        // =>  FALSE
[03:04:58.688]      // skip if-block "protType == 1"
[03:04:58.688]    </control>
[03:04:58.690]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:58.690]      // if-block "protType == 2"
[03:04:58.690]        // =>  TRUE
[03:04:58.690]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:58.690]        // if-block "isSWJ"
[03:04:58.690]          // =>  TRUE
[03:04:58.690]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:58.690]          // if-block "hasDormant"
[03:04:58.690]            // =>  FALSE
[03:04:58.690]          // skip if-block "hasDormant"
[03:04:58.690]        </control>
[03:04:58.691]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:58.691]          // if-block "!hasDormant"
[03:04:58.691]            // =>  TRUE
[03:04:58.691]          <block atomic="false" info="">
[03:04:58.691]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:04:59.692]  
[03:04:59.692]  !!! E320 : DAP access error
[03:04:59.692]  
[03:04:59.692]          </block>
[03:04:59.692]          // end if-block "!hasDormant"
[03:04:59.693]        </control>
[03:04:59.693]        // end if-block "isSWJ"
[03:04:59.693]      </control>
[03:04:59.694]      // end if-block "protType == 2"
[03:04:59.694]    </control>
[03:04:59.694]  </sequence>
[03:04:59.694]  
[03:04:59.954]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:04:59.954]  
[03:04:59.963]  <debugvars>
[03:04:59.963]    // Pre-defined
[03:04:59.963]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:04:59.963]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:04:59.963]    __dp=0x00000000
[03:04:59.963]    __ap=0x00000000
[03:04:59.963]    __traceout=0x00000000      (Trace Disabled)
[03:04:59.963]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:04:59.963]    __FlashAddr=0x00000000
[03:04:59.963]    __FlashLen=0x00000000
[03:04:59.963]    __FlashArg=0x00000000
[03:04:59.964]    __FlashOp=0x00000000
[03:04:59.964]    __Result=0x00000000
[03:04:59.964]  </debugvars>
[03:04:59.964]  
[03:04:59.964]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:04:59.964]    <block atomic="false" info="">
[03:04:59.964]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:04:59.964]        // -> [isSWJ <= 0x00000001]
[03:04:59.964]      __var hasDormant = __protocol & 0x00020000;
[03:04:59.964]        // -> [hasDormant <= 0x00000000]
[03:04:59.964]      __var protType   = __protocol & 0x0000FFFF;
[03:04:59.964]        // -> [protType <= 0x00000002]
[03:04:59.965]    </block>
[03:04:59.966]    <control if="protType == 1" while="" timeout="0" info="">
[03:04:59.966]      // if-block "protType == 1"
[03:04:59.966]        // =>  FALSE
[03:04:59.966]      // skip if-block "protType == 1"
[03:04:59.966]    </control>
[03:04:59.966]    <control if="protType == 2" while="" timeout="0" info="">
[03:04:59.966]      // if-block "protType == 2"
[03:04:59.966]        // =>  TRUE
[03:04:59.966]      <control if="isSWJ" while="" timeout="0" info="">
[03:04:59.967]        // if-block "isSWJ"
[03:04:59.967]          // =>  TRUE
[03:04:59.967]        <control if="hasDormant" while="" timeout="0" info="">
[03:04:59.967]          // if-block "hasDormant"
[03:04:59.967]            // =>  FALSE
[03:04:59.967]          // skip if-block "hasDormant"
[03:04:59.967]        </control>
[03:04:59.967]        <control if="!hasDormant" while="" timeout="0" info="">
[03:04:59.967]          // if-block "!hasDormant"
[03:04:59.967]            // =>  TRUE
[03:04:59.967]          <block atomic="false" info="">
[03:04:59.967]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:00.969]  
[03:05:00.969]  !!! E320 : DAP access error
[03:05:00.969]  
[03:05:00.969]          </block>
[03:05:00.969]          // end if-block "!hasDormant"
[03:05:00.969]        </control>
[03:05:00.969]        // end if-block "isSWJ"
[03:05:00.969]      </control>
[03:05:00.969]      // end if-block "protType == 2"
[03:05:00.969]    </control>
[03:05:00.969]  </sequence>
[03:05:00.969]  
[03:05:01.229]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:01.229]  
[03:05:01.238]  <debugvars>
[03:05:01.238]    // Pre-defined
[03:05:01.238]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:01.238]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:01.238]    __dp=0x00000000
[03:05:01.238]    __ap=0x00000000
[03:05:01.238]    __traceout=0x00000000      (Trace Disabled)
[03:05:01.238]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:01.238]    __FlashAddr=0x00000000
[03:05:01.238]    __FlashLen=0x00000000
[03:05:01.238]    __FlashArg=0x00000000
[03:05:01.238]    __FlashOp=0x00000000
[03:05:01.238]    __Result=0x00000000
[03:05:01.238]  </debugvars>
[03:05:01.238]  
[03:05:01.238]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:01.238]    <block atomic="false" info="">
[03:05:01.238]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:01.238]        // -> [isSWJ <= 0x00000001]
[03:05:01.238]      __var hasDormant = __protocol & 0x00020000;
[03:05:01.241]        // -> [hasDormant <= 0x00000000]
[03:05:01.241]      __var protType   = __protocol & 0x0000FFFF;
[03:05:01.241]        // -> [protType <= 0x00000002]
[03:05:01.241]    </block>
[03:05:01.241]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:01.241]      // if-block "protType == 1"
[03:05:01.241]        // =>  FALSE
[03:05:01.241]      // skip if-block "protType == 1"
[03:05:01.241]    </control>
[03:05:01.241]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:01.241]      // if-block "protType == 2"
[03:05:01.241]        // =>  TRUE
[03:05:01.241]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:01.241]        // if-block "isSWJ"
[03:05:01.241]          // =>  TRUE
[03:05:01.241]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:01.241]          // if-block "hasDormant"
[03:05:01.241]            // =>  FALSE
[03:05:01.241]          // skip if-block "hasDormant"
[03:05:01.241]        </control>
[03:05:01.241]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:01.241]          // if-block "!hasDormant"
[03:05:01.241]            // =>  TRUE
[03:05:01.241]          <block atomic="false" info="">
[03:05:01.241]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:02.242]  
[03:05:02.242]  !!! E320 : DAP access error
[03:05:02.242]  
[03:05:02.242]          </block>
[03:05:02.242]          // end if-block "!hasDormant"
[03:05:02.242]        </control>
[03:05:02.242]        // end if-block "isSWJ"
[03:05:02.242]      </control>
[03:05:02.242]      // end if-block "protType == 2"
[03:05:02.242]    </control>
[03:05:02.242]  </sequence>
[03:05:02.242]  
[03:05:02.495]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:02.495]  
[03:05:02.503]  <debugvars>
[03:05:02.503]    // Pre-defined
[03:05:02.503]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:02.503]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:02.503]    __dp=0x00000000
[03:05:02.503]    __ap=0x00000000
[03:05:02.503]    __traceout=0x00000000      (Trace Disabled)
[03:05:02.503]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:02.503]    __FlashAddr=0x00000000
[03:05:02.503]    __FlashLen=0x00000000
[03:05:02.503]    __FlashArg=0x00000000
[03:05:02.503]    __FlashOp=0x00000000
[03:05:02.503]    __Result=0x00000000
[03:05:02.503]  </debugvars>
[03:05:02.503]  
[03:05:02.503]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:02.503]    <block atomic="false" info="">
[03:05:02.503]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:02.503]        // -> [isSWJ <= 0x00000001]
[03:05:02.503]      __var hasDormant = __protocol & 0x00020000;
[03:05:02.503]        // -> [hasDormant <= 0x00000000]
[03:05:02.503]      __var protType   = __protocol & 0x0000FFFF;
[03:05:02.503]        // -> [protType <= 0x00000002]
[03:05:02.503]    </block>
[03:05:02.503]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:02.503]      // if-block "protType == 1"
[03:05:02.503]        // =>  FALSE
[03:05:02.503]      // skip if-block "protType == 1"
[03:05:02.503]    </control>
[03:05:02.503]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:02.503]      // if-block "protType == 2"
[03:05:02.503]        // =>  TRUE
[03:05:02.503]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:02.503]        // if-block "isSWJ"
[03:05:02.507]          // =>  TRUE
[03:05:02.507]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:02.507]          // if-block "hasDormant"
[03:05:02.507]            // =>  FALSE
[03:05:02.507]          // skip if-block "hasDormant"
[03:05:02.507]        </control>
[03:05:02.507]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:02.507]          // if-block "!hasDormant"
[03:05:02.507]            // =>  TRUE
[03:05:02.507]          <block atomic="false" info="">
[03:05:02.507]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:03.517]  
[03:05:03.517]  !!! E320 : DAP access error
[03:05:03.517]  
[03:05:03.525]          </block>
[03:05:03.525]          // end if-block "!hasDormant"
[03:05:03.525]        </control>
[03:05:03.525]        // end if-block "isSWJ"
[03:05:03.525]      </control>
[03:05:03.525]      // end if-block "protType == 2"
[03:05:03.525]    </control>
[03:05:03.525]  </sequence>
[03:05:03.525]  
[03:05:03.786]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:03.786]  
[03:05:03.786]  <debugvars>
[03:05:03.786]    // Pre-defined
[03:05:03.786]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:03.786]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:03.786]    __dp=0x00000000
[03:05:03.786]    __ap=0x00000000
[03:05:03.786]    __traceout=0x00000000      (Trace Disabled)
[03:05:03.786]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:03.786]    __FlashAddr=0x00000000
[03:05:03.786]    __FlashLen=0x00000000
[03:05:03.786]    __FlashArg=0x00000000
[03:05:03.786]    __FlashOp=0x00000000
[03:05:03.786]    __Result=0x00000000
[03:05:03.786]  </debugvars>
[03:05:03.786]  
[03:05:03.786]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:03.786]    <block atomic="false" info="">
[03:05:03.786]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:03.786]        // -> [isSWJ <= 0x00000001]
[03:05:03.786]      __var hasDormant = __protocol & 0x00020000;
[03:05:03.786]        // -> [hasDormant <= 0x00000000]
[03:05:03.786]      __var protType   = __protocol & 0x0000FFFF;
[03:05:03.786]        // -> [protType <= 0x00000002]
[03:05:03.786]    </block>
[03:05:03.786]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:03.786]      // if-block "protType == 1"
[03:05:03.786]        // =>  FALSE
[03:05:03.786]      // skip if-block "protType == 1"
[03:05:03.786]    </control>
[03:05:03.786]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:03.790]      // if-block "protType == 2"
[03:05:03.790]        // =>  TRUE
[03:05:03.790]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:03.790]        // if-block "isSWJ"
[03:05:03.790]          // =>  TRUE
[03:05:03.790]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:03.790]          // if-block "hasDormant"
[03:05:03.790]            // =>  FALSE
[03:05:03.790]          // skip if-block "hasDormant"
[03:05:03.790]        </control>
[03:05:03.790]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:03.790]          // if-block "!hasDormant"
[03:05:03.790]            // =>  TRUE
[03:05:03.790]          <block atomic="false" info="">
[03:05:03.790]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:04.790]  
[03:05:04.790]  !!! E320 : DAP access error
[03:05:04.790]  
[03:05:04.798]          </block>
[03:05:04.798]          // end if-block "!hasDormant"
[03:05:04.798]        </control>
[03:05:04.798]        // end if-block "isSWJ"
[03:05:04.798]      </control>
[03:05:04.798]      // end if-block "protType == 2"
[03:05:04.798]    </control>
[03:05:04.798]  </sequence>
[03:05:04.798]  
[03:05:05.061]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:05.061]  
[03:05:05.061]  <debugvars>
[03:05:05.061]    // Pre-defined
[03:05:05.061]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:05.062]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:05.062]    __dp=0x00000000
[03:05:05.062]    __ap=0x00000000
[03:05:05.062]    __traceout=0x00000000      (Trace Disabled)
[03:05:05.062]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:05.062]    __FlashAddr=0x00000000
[03:05:05.062]    __FlashLen=0x00000000
[03:05:05.062]    __FlashArg=0x00000000
[03:05:05.062]    __FlashOp=0x00000000
[03:05:05.062]    __Result=0x00000000
[03:05:05.062]  </debugvars>
[03:05:05.062]  
[03:05:05.063]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:05.063]    <block atomic="false" info="">
[03:05:05.063]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:05.063]        // -> [isSWJ <= 0x00000001]
[03:05:05.063]      __var hasDormant = __protocol & 0x00020000;
[03:05:05.063]        // -> [hasDormant <= 0x00000000]
[03:05:05.064]      __var protType   = __protocol & 0x0000FFFF;
[03:05:05.064]        // -> [protType <= 0x00000002]
[03:05:05.064]    </block>
[03:05:05.064]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:05.064]      // if-block "protType == 1"
[03:05:05.064]        // =>  FALSE
[03:05:05.064]      // skip if-block "protType == 1"
[03:05:05.064]    </control>
[03:05:05.064]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:05.064]      // if-block "protType == 2"
[03:05:05.065]        // =>  TRUE
[03:05:05.065]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:05.065]        // if-block "isSWJ"
[03:05:05.065]          // =>  TRUE
[03:05:05.065]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:05.066]          // if-block "hasDormant"
[03:05:05.066]            // =>  FALSE
[03:05:05.066]          // skip if-block "hasDormant"
[03:05:05.066]        </control>
[03:05:05.066]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:05.066]          // if-block "!hasDormant"
[03:05:05.066]            // =>  TRUE
[03:05:05.066]          <block atomic="false" info="">
[03:05:05.066]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:06.074]  
[03:05:06.074]  !!! E320 : DAP access error
[03:05:06.074]  
[03:05:06.082]          </block>
[03:05:06.082]          // end if-block "!hasDormant"
[03:05:06.082]        </control>
[03:05:06.082]        // end if-block "isSWJ"
[03:05:06.082]      </control>
[03:05:06.082]      // end if-block "protType == 2"
[03:05:06.082]    </control>
[03:05:06.082]  </sequence>
[03:05:06.082]  
[03:05:06.339]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:06.339]  
[03:05:06.339]  <debugvars>
[03:05:06.339]    // Pre-defined
[03:05:06.339]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:06.339]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:06.339]    __dp=0x00000000
[03:05:06.339]    __ap=0x00000000
[03:05:06.339]    __traceout=0x00000000      (Trace Disabled)
[03:05:06.339]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:06.339]    __FlashAddr=0x00000000
[03:05:06.339]    __FlashLen=0x00000000
[03:05:06.339]    __FlashArg=0x00000000
[03:05:06.339]    __FlashOp=0x00000000
[03:05:06.339]    __Result=0x00000000
[03:05:06.339]  </debugvars>
[03:05:06.339]  
[03:05:06.339]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:06.339]    <block atomic="false" info="">
[03:05:06.339]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:06.339]        // -> [isSWJ <= 0x00000001]
[03:05:06.339]      __var hasDormant = __protocol & 0x00020000;
[03:05:06.339]        // -> [hasDormant <= 0x00000000]
[03:05:06.339]      __var protType   = __protocol & 0x0000FFFF;
[03:05:06.339]        // -> [protType <= 0x00000002]
[03:05:06.343]    </block>
[03:05:06.343]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:06.343]      // if-block "protType == 1"
[03:05:06.343]        // =>  FALSE
[03:05:06.343]      // skip if-block "protType == 1"
[03:05:06.343]    </control>
[03:05:06.343]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:06.343]      // if-block "protType == 2"
[03:05:06.343]        // =>  TRUE
[03:05:06.343]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:06.343]        // if-block "isSWJ"
[03:05:06.343]          // =>  TRUE
[03:05:06.343]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:06.343]          // if-block "hasDormant"
[03:05:06.343]            // =>  FALSE
[03:05:06.343]          // skip if-block "hasDormant"
[03:05:06.343]        </control>
[03:05:06.343]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:06.343]          // if-block "!hasDormant"
[03:05:06.343]            // =>  TRUE
[03:05:06.343]          <block atomic="false" info="">
[03:05:06.343]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:07.345]  
[03:05:07.345]  !!! E320 : DAP access error
[03:05:07.345]  
[03:05:07.354]          </block>
[03:05:07.354]          // end if-block "!hasDormant"
[03:05:07.354]        </control>
[03:05:07.354]        // end if-block "isSWJ"
[03:05:07.354]      </control>
[03:05:07.354]      // end if-block "protType == 2"
[03:05:07.354]    </control>
[03:05:07.354]  </sequence>
[03:05:07.354]  
[03:05:07.604]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:07.604]  
[03:05:07.613]  <debugvars>
[03:05:07.613]    // Pre-defined
[03:05:07.613]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:07.613]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:07.613]    __dp=0x00000000
[03:05:07.613]    __ap=0x00000000
[03:05:07.613]    __traceout=0x00000000      (Trace Disabled)
[03:05:07.613]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:07.613]    __FlashAddr=0x00000000
[03:05:07.613]    __FlashLen=0x00000000
[03:05:07.613]    __FlashArg=0x00000000
[03:05:07.613]    __FlashOp=0x00000000
[03:05:07.613]    __Result=0x00000000
[03:05:07.613]  </debugvars>
[03:05:07.613]  
[03:05:07.613]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:07.613]    <block atomic="false" info="">
[03:05:07.613]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:07.613]        // -> [isSWJ <= 0x00000001]
[03:05:07.613]      __var hasDormant = __protocol & 0x00020000;
[03:05:07.613]        // -> [hasDormant <= 0x00000000]
[03:05:07.613]      __var protType   = __protocol & 0x0000FFFF;
[03:05:07.613]        // -> [protType <= 0x00000002]
[03:05:07.613]    </block>
[03:05:07.613]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:07.613]      // if-block "protType == 1"
[03:05:07.613]        // =>  FALSE
[03:05:07.616]      // skip if-block "protType == 1"
[03:05:07.616]    </control>
[03:05:07.616]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:07.616]      // if-block "protType == 2"
[03:05:07.616]        // =>  TRUE
[03:05:07.616]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:07.616]        // if-block "isSWJ"
[03:05:07.616]          // =>  TRUE
[03:05:07.616]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:07.618]          // if-block "hasDormant"
[03:05:07.618]            // =>  FALSE
[03:05:07.618]          // skip if-block "hasDormant"
[03:05:07.618]        </control>
[03:05:07.618]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:07.618]          // if-block "!hasDormant"
[03:05:07.618]            // =>  TRUE
[03:05:07.618]          <block atomic="false" info="">
[03:05:07.618]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:08.620]  
[03:05:08.620]  !!! E320 : DAP access error
[03:05:08.620]  
[03:05:08.628]          </block>
[03:05:08.628]          // end if-block "!hasDormant"
[03:05:08.628]        </control>
[03:05:08.628]        // end if-block "isSWJ"
[03:05:08.628]      </control>
[03:05:08.628]      // end if-block "protType == 2"
[03:05:08.628]    </control>
[03:05:08.628]  </sequence>
[03:05:08.628]  
[03:05:08.882]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:08.882]  
[03:05:08.882]  <debugvars>
[03:05:08.882]    // Pre-defined
[03:05:08.882]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:08.882]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:08.882]    __dp=0x00000000
[03:05:08.882]    __ap=0x00000000
[03:05:08.882]    __traceout=0x00000000      (Trace Disabled)
[03:05:08.882]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:08.882]    __FlashAddr=0x00000000
[03:05:08.882]    __FlashLen=0x00000000
[03:05:08.882]    __FlashArg=0x00000000
[03:05:08.882]    __FlashOp=0x00000000
[03:05:08.882]    __Result=0x00000000
[03:05:08.882]  </debugvars>
[03:05:08.882]  
[03:05:08.882]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:08.882]    <block atomic="false" info="">
[03:05:08.882]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:08.882]        // -> [isSWJ <= 0x00000001]
[03:05:08.882]      __var hasDormant = __protocol & 0x00020000;
[03:05:08.882]        // -> [hasDormant <= 0x00000000]
[03:05:08.882]      __var protType   = __protocol & 0x0000FFFF;
[03:05:08.882]        // -> [protType <= 0x00000002]
[03:05:08.882]    </block>
[03:05:08.882]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:08.882]      // if-block "protType == 1"
[03:05:08.882]        // =>  FALSE
[03:05:08.882]      // skip if-block "protType == 1"
[03:05:08.882]    </control>
[03:05:08.886]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:08.886]      // if-block "protType == 2"
[03:05:08.886]        // =>  TRUE
[03:05:08.886]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:08.886]        // if-block "isSWJ"
[03:05:08.886]          // =>  TRUE
[03:05:08.886]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:08.886]          // if-block "hasDormant"
[03:05:08.886]            // =>  FALSE
[03:05:08.886]          // skip if-block "hasDormant"
[03:05:08.886]        </control>
[03:05:08.886]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:08.886]          // if-block "!hasDormant"
[03:05:08.886]            // =>  TRUE
[03:05:08.886]          <block atomic="false" info="">
[03:05:08.886]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:09.894]  
[03:05:09.894]  !!! E320 : DAP access error
[03:05:09.894]  
[03:05:09.903]          </block>
[03:05:09.903]          // end if-block "!hasDormant"
[03:05:09.903]        </control>
[03:05:09.903]        // end if-block "isSWJ"
[03:05:09.903]      </control>
[03:05:09.903]      // end if-block "protType == 2"
[03:05:09.903]    </control>
[03:05:09.903]  </sequence>
[03:05:09.903]  
[03:05:10.158]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:10.158]  
[03:05:10.158]  <debugvars>
[03:05:10.158]    // Pre-defined
[03:05:10.158]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:10.158]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:10.158]    __dp=0x00000000
[03:05:10.160]    __ap=0x00000000
[03:05:10.160]    __traceout=0x00000000      (Trace Disabled)
[03:05:10.160]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:10.160]    __FlashAddr=0x00000000
[03:05:10.160]    __FlashLen=0x00000000
[03:05:10.160]    __FlashArg=0x00000000
[03:05:10.160]    __FlashOp=0x00000000
[03:05:10.160]    __Result=0x00000000
[03:05:10.160]  </debugvars>
[03:05:10.160]  
[03:05:10.160]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:10.160]    <block atomic="false" info="">
[03:05:10.160]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:10.160]        // -> [isSWJ <= 0x00000001]
[03:05:10.160]      __var hasDormant = __protocol & 0x00020000;
[03:05:10.162]        // -> [hasDormant <= 0x00000000]
[03:05:10.162]      __var protType   = __protocol & 0x0000FFFF;
[03:05:10.162]        // -> [protType <= 0x00000002]
[03:05:10.162]    </block>
[03:05:10.162]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:10.162]      // if-block "protType == 1"
[03:05:10.162]        // =>  FALSE
[03:05:10.162]      // skip if-block "protType == 1"
[03:05:10.162]    </control>
[03:05:10.162]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:10.162]      // if-block "protType == 2"
[03:05:10.162]        // =>  TRUE
[03:05:10.164]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:10.164]        // if-block "isSWJ"
[03:05:10.164]          // =>  TRUE
[03:05:10.164]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:10.164]          // if-block "hasDormant"
[03:05:10.164]            // =>  FALSE
[03:05:10.164]          // skip if-block "hasDormant"
[03:05:10.164]        </control>
[03:05:10.164]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:10.164]          // if-block "!hasDormant"
[03:05:10.165]            // =>  TRUE
[03:05:10.165]          <block atomic="false" info="">
[03:05:10.165]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:11.172]  
[03:05:11.172]  !!! E320 : DAP access error
[03:05:11.172]  
[03:05:11.180]          </block>
[03:05:11.180]          // end if-block "!hasDormant"
[03:05:11.180]        </control>
[03:05:11.180]        // end if-block "isSWJ"
[03:05:11.180]      </control>
[03:05:11.180]      // end if-block "protType == 2"
[03:05:11.180]    </control>
[03:05:11.180]  </sequence>
[03:05:11.180]  
[03:05:11.437]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:11.437]  
[03:05:11.445]  <debugvars>
[03:05:11.445]    // Pre-defined
[03:05:11.445]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:11.445]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:11.445]    __dp=0x00000000
[03:05:11.446]    __ap=0x00000000
[03:05:11.446]    __traceout=0x00000000      (Trace Disabled)
[03:05:11.446]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:11.446]    __FlashAddr=0x00000000
[03:05:11.446]    __FlashLen=0x00000000
[03:05:11.446]    __FlashArg=0x00000000
[03:05:11.446]    __FlashOp=0x00000000
[03:05:11.446]    __Result=0x00000000
[03:05:11.446]  </debugvars>
[03:05:11.446]  
[03:05:11.446]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:11.446]    <block atomic="false" info="">
[03:05:11.448]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:11.448]        // -> [isSWJ <= 0x00000001]
[03:05:11.448]      __var hasDormant = __protocol & 0x00020000;
[03:05:11.448]        // -> [hasDormant <= 0x00000000]
[03:05:11.448]      __var protType   = __protocol & 0x0000FFFF;
[03:05:11.448]        // -> [protType <= 0x00000002]
[03:05:11.448]    </block>
[03:05:11.448]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:11.448]      // if-block "protType == 1"
[03:05:11.448]        // =>  FALSE
[03:05:11.448]      // skip if-block "protType == 1"
[03:05:11.448]    </control>
[03:05:11.448]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:11.448]      // if-block "protType == 2"
[03:05:11.449]        // =>  TRUE
[03:05:11.449]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:11.449]        // if-block "isSWJ"
[03:05:11.449]          // =>  TRUE
[03:05:11.449]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:11.449]          // if-block "hasDormant"
[03:05:11.449]            // =>  FALSE
[03:05:11.450]          // skip if-block "hasDormant"
[03:05:11.450]        </control>
[03:05:11.450]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:11.450]          // if-block "!hasDormant"
[03:05:11.450]            // =>  TRUE
[03:05:11.450]          <block atomic="false" info="">
[03:05:11.450]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:12.463]  
[03:05:12.463]  !!! E320 : DAP access error
[03:05:12.463]  
[03:05:12.472]          </block>
[03:05:12.472]          // end if-block "!hasDormant"
[03:05:12.472]        </control>
[03:05:12.472]        // end if-block "isSWJ"
[03:05:12.472]      </control>
[03:05:12.472]      // end if-block "protType == 2"
[03:05:12.472]    </control>
[03:05:12.472]  </sequence>
[03:05:12.472]  
[03:05:12.732]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:12.732]  
[03:05:12.741]  <debugvars>
[03:05:12.741]    // Pre-defined
[03:05:12.741]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:12.741]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:12.741]    __dp=0x00000000
[03:05:12.741]    __ap=0x00000000
[03:05:12.741]    __traceout=0x00000000      (Trace Disabled)
[03:05:12.741]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:12.741]    __FlashAddr=0x00000000
[03:05:12.741]    __FlashLen=0x00000000
[03:05:12.741]    __FlashArg=0x00000000
[03:05:12.741]    __FlashOp=0x00000000
[03:05:12.741]    __Result=0x00000000
[03:05:12.741]  </debugvars>
[03:05:12.741]  
[03:05:12.741]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:12.741]    <block atomic="false" info="">
[03:05:12.741]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:12.741]        // -> [isSWJ <= 0x00000001]
[03:05:12.741]      __var hasDormant = __protocol & 0x00020000;
[03:05:12.744]        // -> [hasDormant <= 0x00000000]
[03:05:12.744]      __var protType   = __protocol & 0x0000FFFF;
[03:05:12.744]        // -> [protType <= 0x00000002]
[03:05:12.744]    </block>
[03:05:12.744]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:12.744]      // if-block "protType == 1"
[03:05:12.744]        // =>  FALSE
[03:05:12.744]      // skip if-block "protType == 1"
[03:05:12.744]    </control>
[03:05:12.744]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:12.744]      // if-block "protType == 2"
[03:05:12.744]        // =>  TRUE
[03:05:12.744]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:12.744]        // if-block "isSWJ"
[03:05:12.744]          // =>  TRUE
[03:05:12.744]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:12.744]          // if-block "hasDormant"
[03:05:12.744]            // =>  FALSE
[03:05:12.744]          // skip if-block "hasDormant"
[03:05:12.744]        </control>
[03:05:12.744]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:12.744]          // if-block "!hasDormant"
[03:05:12.744]            // =>  TRUE
[03:05:12.744]          <block atomic="false" info="">
[03:05:12.744]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:13.758]  
[03:05:13.758]  !!! E320 : DAP access error
[03:05:13.758]  
[03:05:13.766]          </block>
[03:05:13.766]          // end if-block "!hasDormant"
[03:05:13.766]        </control>
[03:05:13.766]        // end if-block "isSWJ"
[03:05:13.766]      </control>
[03:05:13.766]      // end if-block "protType == 2"
[03:05:13.766]    </control>
[03:05:13.767]  </sequence>
[03:05:13.767]  
[03:05:14.025]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:14.025]  
[03:05:14.034]  <debugvars>
[03:05:14.034]    // Pre-defined
[03:05:14.034]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:14.034]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:14.034]    __dp=0x00000000
[03:05:14.034]    __ap=0x00000000
[03:05:14.034]    __traceout=0x00000000      (Trace Disabled)
[03:05:14.034]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:14.034]    __FlashAddr=0x00000000
[03:05:14.034]    __FlashLen=0x00000000
[03:05:14.034]    __FlashArg=0x00000000
[03:05:14.034]    __FlashOp=0x00000000
[03:05:14.034]    __Result=0x00000000
[03:05:14.034]  </debugvars>
[03:05:14.034]  
[03:05:14.034]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:14.034]    <block atomic="false" info="">
[03:05:14.034]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:14.034]        // -> [isSWJ <= 0x00000001]
[03:05:14.034]      __var hasDormant = __protocol & 0x00020000;
[03:05:14.034]        // -> [hasDormant <= 0x00000000]
[03:05:14.034]      __var protType   = __protocol & 0x0000FFFF;
[03:05:14.034]        // -> [protType <= 0x00000002]
[03:05:14.034]    </block>
[03:05:14.034]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:14.034]      // if-block "protType == 1"
[03:05:14.034]        // =>  FALSE
[03:05:14.034]      // skip if-block "protType == 1"
[03:05:14.037]    </control>
[03:05:14.037]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:14.037]      // if-block "protType == 2"
[03:05:14.037]        // =>  TRUE
[03:05:14.037]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:14.037]        // if-block "isSWJ"
[03:05:14.037]          // =>  TRUE
[03:05:14.037]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:14.037]          // if-block "hasDormant"
[03:05:14.037]            // =>  FALSE
[03:05:14.037]          // skip if-block "hasDormant"
[03:05:14.037]        </control>
[03:05:14.037]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:14.037]          // if-block "!hasDormant"
[03:05:14.037]            // =>  TRUE
[03:05:14.037]          <block atomic="false" info="">
[03:05:14.037]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:15.040]  
[03:05:15.040]  !!! E320 : DAP access error
[03:05:15.040]  
[03:05:15.040]          </block>
[03:05:15.040]          // end if-block "!hasDormant"
[03:05:15.040]        </control>
[03:05:15.040]        // end if-block "isSWJ"
[03:05:15.040]      </control>
[03:05:15.040]      // end if-block "protType == 2"
[03:05:15.040]    </control>
[03:05:15.040]  </sequence>
[03:05:15.040]  
[03:05:15.295]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:15.295]  
[03:05:15.304]  <debugvars>
[03:05:15.304]    // Pre-defined
[03:05:15.304]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:15.304]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:15.304]    __dp=0x00000000
[03:05:15.304]    __ap=0x00000000
[03:05:15.304]    __traceout=0x00000000      (Trace Disabled)
[03:05:15.304]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:15.304]    __FlashAddr=0x00000000
[03:05:15.304]    __FlashLen=0x00000000
[03:05:15.304]    __FlashArg=0x00000000
[03:05:15.304]    __FlashOp=0x00000000
[03:05:15.304]    __Result=0x00000000
[03:05:15.304]  </debugvars>
[03:05:15.304]  
[03:05:15.304]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:15.304]    <block atomic="false" info="">
[03:05:15.306]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:15.306]        // -> [isSWJ <= 0x00000001]
[03:05:15.306]      __var hasDormant = __protocol & 0x00020000;
[03:05:15.306]        // -> [hasDormant <= 0x00000000]
[03:05:15.306]      __var protType   = __protocol & 0x0000FFFF;
[03:05:15.306]        // -> [protType <= 0x00000002]
[03:05:15.306]    </block>
[03:05:15.306]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:15.306]      // if-block "protType == 1"
[03:05:15.306]        // =>  FALSE
[03:05:15.306]      // skip if-block "protType == 1"
[03:05:15.306]    </control>
[03:05:15.307]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:15.307]      // if-block "protType == 2"
[03:05:15.308]        // =>  TRUE
[03:05:15.308]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:15.308]        // if-block "isSWJ"
[03:05:15.308]          // =>  TRUE
[03:05:15.308]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:15.308]          // if-block "hasDormant"
[03:05:15.308]            // =>  FALSE
[03:05:15.308]          // skip if-block "hasDormant"
[03:05:15.308]        </control>
[03:05:15.308]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:15.308]          // if-block "!hasDormant"
[03:05:15.308]            // =>  TRUE
[03:05:15.308]          <block atomic="false" info="">
[03:05:15.308]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:16.310]  
[03:05:16.310]  !!! E320 : DAP access error
[03:05:16.310]  
[03:05:16.320]          </block>
[03:05:16.320]          // end if-block "!hasDormant"
[03:05:16.320]        </control>
[03:05:16.320]        // end if-block "isSWJ"
[03:05:16.320]      </control>
[03:05:16.320]      // end if-block "protType == 2"
[03:05:16.320]    </control>
[03:05:16.320]  </sequence>
[03:05:16.320]  
[03:05:16.577]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:16.577]  
[03:05:16.585]  <debugvars>
[03:05:16.585]    // Pre-defined
[03:05:16.585]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:16.585]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:16.585]    __dp=0x00000000
[03:05:16.585]    __ap=0x00000000
[03:05:16.585]    __traceout=0x00000000      (Trace Disabled)
[03:05:16.585]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:16.585]    __FlashAddr=0x00000000
[03:05:16.585]    __FlashLen=0x00000000
[03:05:16.585]    __FlashArg=0x00000000
[03:05:16.585]    __FlashOp=0x00000000
[03:05:16.585]    __Result=0x00000000
[03:05:16.585]  </debugvars>
[03:05:16.585]  
[03:05:16.585]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:16.585]    <block atomic="false" info="">
[03:05:16.585]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:16.585]        // -> [isSWJ <= 0x00000001]
[03:05:16.585]      __var hasDormant = __protocol & 0x00020000;
[03:05:16.585]        // -> [hasDormant <= 0x00000000]
[03:05:16.585]      __var protType   = __protocol & 0x0000FFFF;
[03:05:16.585]        // -> [protType <= 0x00000002]
[03:05:16.585]    </block>
[03:05:16.585]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:16.585]      // if-block "protType == 1"
[03:05:16.585]        // =>  FALSE
[03:05:16.585]      // skip if-block "protType == 1"
[03:05:16.585]    </control>
[03:05:16.585]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:16.585]      // if-block "protType == 2"
[03:05:16.585]        // =>  TRUE
[03:05:16.585]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:16.589]        // if-block "isSWJ"
[03:05:16.589]          // =>  TRUE
[03:05:16.589]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:16.589]          // if-block "hasDormant"
[03:05:16.589]            // =>  FALSE
[03:05:16.589]          // skip if-block "hasDormant"
[03:05:16.589]        </control>
[03:05:16.589]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:16.589]          // if-block "!hasDormant"
[03:05:16.589]            // =>  TRUE
[03:05:16.589]          <block atomic="false" info="">
[03:05:16.589]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:17.601]  
[03:05:17.601]  !!! E320 : DAP access error
[03:05:17.601]  
[03:05:17.610]          </block>
[03:05:17.610]          // end if-block "!hasDormant"
[03:05:17.610]        </control>
[03:05:17.610]        // end if-block "isSWJ"
[03:05:17.610]      </control>
[03:05:17.610]      // end if-block "protType == 2"
[03:05:17.610]    </control>
[03:05:17.610]  </sequence>
[03:05:17.610]  
[03:05:17.866]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:17.866]  
[03:05:17.874]  <debugvars>
[03:05:17.874]    // Pre-defined
[03:05:17.874]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:17.874]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:17.874]    __dp=0x00000000
[03:05:17.874]    __ap=0x00000000
[03:05:17.874]    __traceout=0x00000000      (Trace Disabled)
[03:05:17.874]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:17.874]    __FlashAddr=0x00000000
[03:05:17.874]    __FlashLen=0x00000000
[03:05:17.874]    __FlashArg=0x00000000
[03:05:17.874]    __FlashOp=0x00000000
[03:05:17.874]    __Result=0x00000000
[03:05:17.874]  </debugvars>
[03:05:17.874]  
[03:05:17.874]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:17.874]    <block atomic="false" info="">
[03:05:17.874]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:17.874]        // -> [isSWJ <= 0x00000001]
[03:05:17.874]      __var hasDormant = __protocol & 0x00020000;
[03:05:17.874]        // -> [hasDormant <= 0x00000000]
[03:05:17.874]      __var protType   = __protocol & 0x0000FFFF;
[03:05:17.874]        // -> [protType <= 0x00000002]
[03:05:17.874]    </block>
[03:05:17.874]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:17.874]      // if-block "protType == 1"
[03:05:17.874]        // =>  FALSE
[03:05:17.874]      // skip if-block "protType == 1"
[03:05:17.874]    </control>
[03:05:17.874]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:17.874]      // if-block "protType == 2"
[03:05:17.874]        // =>  TRUE
[03:05:17.874]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:17.878]        // if-block "isSWJ"
[03:05:17.878]          // =>  TRUE
[03:05:17.878]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:17.878]          // if-block "hasDormant"
[03:05:17.878]            // =>  FALSE
[03:05:17.878]          // skip if-block "hasDormant"
[03:05:17.878]        </control>
[03:05:17.878]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:17.878]          // if-block "!hasDormant"
[03:05:17.878]            // =>  TRUE
[03:05:17.878]          <block atomic="false" info="">
[03:05:17.878]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:18.886]  
[03:05:18.886]  !!! E320 : DAP access error
[03:05:18.886]  
[03:05:18.886]          </block>
[03:05:18.886]          // end if-block "!hasDormant"
[03:05:18.886]        </control>
[03:05:18.886]        // end if-block "isSWJ"
[03:05:18.886]      </control>
[03:05:18.886]      // end if-block "protType == 2"
[03:05:18.886]    </control>
[03:05:18.886]  </sequence>
[03:05:18.886]  
[03:05:19.145]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:19.145]  
[03:05:19.154]  <debugvars>
[03:05:19.154]    // Pre-defined
[03:05:19.154]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:19.154]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:19.154]    __dp=0x00000000
[03:05:19.154]    __ap=0x00000000
[03:05:19.154]    __traceout=0x00000000      (Trace Disabled)
[03:05:19.154]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:19.154]    __FlashAddr=0x00000000
[03:05:19.154]    __FlashLen=0x00000000
[03:05:19.154]    __FlashArg=0x00000000
[03:05:19.154]    __FlashOp=0x00000000
[03:05:19.154]    __Result=0x00000000
[03:05:19.154]  </debugvars>
[03:05:19.154]  
[03:05:19.154]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:19.154]    <block atomic="false" info="">
[03:05:19.154]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:19.154]        // -> [isSWJ <= 0x00000001]
[03:05:19.154]      __var hasDormant = __protocol & 0x00020000;
[03:05:19.154]        // -> [hasDormant <= 0x00000000]
[03:05:19.154]      __var protType   = __protocol & 0x0000FFFF;
[03:05:19.154]        // -> [protType <= 0x00000002]
[03:05:19.154]    </block>
[03:05:19.154]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:19.154]      // if-block "protType == 1"
[03:05:19.154]        // =>  FALSE
[03:05:19.154]      // skip if-block "protType == 1"
[03:05:19.154]    </control>
[03:05:19.154]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:19.154]      // if-block "protType == 2"
[03:05:19.154]        // =>  TRUE
[03:05:19.158]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:19.158]        // if-block "isSWJ"
[03:05:19.158]          // =>  TRUE
[03:05:19.158]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:19.158]          // if-block "hasDormant"
[03:05:19.158]            // =>  FALSE
[03:05:19.158]          // skip if-block "hasDormant"
[03:05:19.158]        </control>
[03:05:19.158]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:19.159]          // if-block "!hasDormant"
[03:05:19.159]            // =>  TRUE
[03:05:19.159]          <block atomic="false" info="">
[03:05:19.159]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:20.167]  
[03:05:20.167]  !!! E320 : DAP access error
[03:05:20.167]  
[03:05:20.176]          </block>
[03:05:20.176]          // end if-block "!hasDormant"
[03:05:20.176]        </control>
[03:05:20.176]        // end if-block "isSWJ"
[03:05:20.176]      </control>
[03:05:20.176]      // end if-block "protType == 2"
[03:05:20.176]    </control>
[03:05:20.176]  </sequence>
[03:05:20.176]  
[03:05:20.432]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:20.432]  
[03:05:20.441]  <debugvars>
[03:05:20.441]    // Pre-defined
[03:05:20.441]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:20.441]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:20.441]    __dp=0x00000000
[03:05:20.441]    __ap=0x00000000
[03:05:20.441]    __traceout=0x00000000      (Trace Disabled)
[03:05:20.441]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:20.441]    __FlashAddr=0x00000000
[03:05:20.441]    __FlashLen=0x00000000
[03:05:20.441]    __FlashArg=0x00000000
[03:05:20.441]    __FlashOp=0x00000000
[03:05:20.441]    __Result=0x00000000
[03:05:20.441]  </debugvars>
[03:05:20.441]  
[03:05:20.441]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:20.441]    <block atomic="false" info="">
[03:05:20.441]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:20.441]        // -> [isSWJ <= 0x00000001]
[03:05:20.441]      __var hasDormant = __protocol & 0x00020000;
[03:05:20.444]        // -> [hasDormant <= 0x00000000]
[03:05:20.444]      __var protType   = __protocol & 0x0000FFFF;
[03:05:20.444]        // -> [protType <= 0x00000002]
[03:05:20.444]    </block>
[03:05:20.444]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:20.444]      // if-block "protType == 1"
[03:05:20.444]        // =>  FALSE
[03:05:20.444]      // skip if-block "protType == 1"
[03:05:20.444]    </control>
[03:05:20.444]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:20.444]      // if-block "protType == 2"
[03:05:20.444]        // =>  TRUE
[03:05:20.444]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:20.444]        // if-block "isSWJ"
[03:05:20.444]          // =>  TRUE
[03:05:20.444]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:20.444]          // if-block "hasDormant"
[03:05:20.444]            // =>  FALSE
[03:05:20.444]          // skip if-block "hasDormant"
[03:05:20.444]        </control>
[03:05:20.444]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:20.444]          // if-block "!hasDormant"
[03:05:20.444]            // =>  TRUE
[03:05:20.444]          <block atomic="false" info="">
[03:05:20.444]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:21.452]  
[03:05:21.452]  !!! E320 : DAP access error
[03:05:21.452]  
[03:05:21.452]          </block>
[03:05:21.452]          // end if-block "!hasDormant"
[03:05:21.452]        </control>
[03:05:21.452]        // end if-block "isSWJ"
[03:05:21.452]      </control>
[03:05:21.452]      // end if-block "protType == 2"
[03:05:21.452]    </control>
[03:05:21.452]  </sequence>
[03:05:21.452]  
[03:05:21.705]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:21.705]  
[03:05:21.713]  <debugvars>
[03:05:21.713]    // Pre-defined
[03:05:21.713]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:21.713]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:21.714]    __dp=0x00000000
[03:05:21.714]    __ap=0x00000000
[03:05:21.714]    __traceout=0x00000000      (Trace Disabled)
[03:05:21.714]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:21.714]    __FlashAddr=0x00000000
[03:05:21.714]    __FlashLen=0x00000000
[03:05:21.714]    __FlashArg=0x00000000
[03:05:21.714]    __FlashOp=0x00000000
[03:05:21.714]    __Result=0x00000000
[03:05:21.714]  </debugvars>
[03:05:21.714]  
[03:05:21.714]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:21.715]    <block atomic="false" info="">
[03:05:21.715]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:21.715]        // -> [isSWJ <= 0x00000001]
[03:05:21.715]      __var hasDormant = __protocol & 0x00020000;
[03:05:21.715]        // -> [hasDormant <= 0x00000000]
[03:05:21.715]      __var protType   = __protocol & 0x0000FFFF;
[03:05:21.716]        // -> [protType <= 0x00000002]
[03:05:21.716]    </block>
[03:05:21.717]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:21.717]      // if-block "protType == 1"
[03:05:21.717]        // =>  FALSE
[03:05:21.717]      // skip if-block "protType == 1"
[03:05:21.717]    </control>
[03:05:21.717]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:21.717]      // if-block "protType == 2"
[03:05:21.717]        // =>  TRUE
[03:05:21.717]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:21.717]        // if-block "isSWJ"
[03:05:21.717]          // =>  TRUE
[03:05:21.717]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:21.717]          // if-block "hasDormant"
[03:05:21.717]            // =>  FALSE
[03:05:21.717]          // skip if-block "hasDormant"
[03:05:21.717]        </control>
[03:05:21.717]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:21.717]          // if-block "!hasDormant"
[03:05:21.719]            // =>  TRUE
[03:05:21.719]          <block atomic="false" info="">
[03:05:21.719]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:22.722]  
[03:05:22.722]  !!! E320 : DAP access error
[03:05:22.722]  
[03:05:22.722]          </block>
[03:05:22.722]          // end if-block "!hasDormant"
[03:05:22.722]        </control>
[03:05:22.722]        // end if-block "isSWJ"
[03:05:22.722]      </control>
[03:05:22.722]      // end if-block "protType == 2"
[03:05:22.722]    </control>
[03:05:22.724]  </sequence>
[03:05:22.724]  
[03:05:22.979]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:22.979]  
[03:05:22.987]  <debugvars>
[03:05:22.987]    // Pre-defined
[03:05:22.987]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:22.987]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:22.987]    __dp=0x00000000
[03:05:22.987]    __ap=0x00000000
[03:05:22.987]    __traceout=0x00000000      (Trace Disabled)
[03:05:22.988]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:22.988]    __FlashAddr=0x00000000
[03:05:22.988]    __FlashLen=0x00000000
[03:05:22.988]    __FlashArg=0x00000000
[03:05:22.988]    __FlashOp=0x00000000
[03:05:22.988]    __Result=0x00000000
[03:05:22.988]  </debugvars>
[03:05:22.988]  
[03:05:22.988]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:22.988]    <block atomic="false" info="">
[03:05:22.990]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:22.990]        // -> [isSWJ <= 0x00000001]
[03:05:22.990]      __var hasDormant = __protocol & 0x00020000;
[03:05:22.990]        // -> [hasDormant <= 0x00000000]
[03:05:22.990]      __var protType   = __protocol & 0x0000FFFF;
[03:05:22.990]        // -> [protType <= 0x00000002]
[03:05:22.990]    </block>
[03:05:22.990]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:22.990]      // if-block "protType == 1"
[03:05:22.991]        // =>  FALSE
[03:05:22.991]      // skip if-block "protType == 1"
[03:05:22.991]    </control>
[03:05:22.991]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:22.991]      // if-block "protType == 2"
[03:05:22.991]        // =>  TRUE
[03:05:22.992]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:22.992]        // if-block "isSWJ"
[03:05:22.992]          // =>  TRUE
[03:05:22.992]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:22.992]          // if-block "hasDormant"
[03:05:22.992]            // =>  FALSE
[03:05:22.992]          // skip if-block "hasDormant"
[03:05:22.992]        </control>
[03:05:22.992]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:22.992]          // if-block "!hasDormant"
[03:05:22.992]            // =>  TRUE
[03:05:22.992]          <block atomic="false" info="">
[03:05:22.992]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:23.995]  
[03:05:23.995]  !!! E320 : DAP access error
[03:05:23.995]  
[03:05:23.995]          </block>
[03:05:23.995]          // end if-block "!hasDormant"
[03:05:23.995]        </control>
[03:05:23.995]        // end if-block "isSWJ"
[03:05:23.995]      </control>
[03:05:23.995]      // end if-block "protType == 2"
[03:05:23.995]    </control>
[03:05:23.995]  </sequence>
[03:05:23.995]  
[03:05:24.250]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:24.250]  
[03:05:24.259]  <debugvars>
[03:05:24.259]    // Pre-defined
[03:05:24.259]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:24.259]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:24.259]    __dp=0x00000000
[03:05:24.259]    __ap=0x00000000
[03:05:24.259]    __traceout=0x00000000      (Trace Disabled)
[03:05:24.259]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:24.259]    __FlashAddr=0x00000000
[03:05:24.259]    __FlashLen=0x00000000
[03:05:24.259]    __FlashArg=0x00000000
[03:05:24.259]    __FlashOp=0x00000000
[03:05:24.259]    __Result=0x00000000
[03:05:24.259]  </debugvars>
[03:05:24.259]  
[03:05:24.259]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:24.259]    <block atomic="false" info="">
[03:05:24.259]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:24.259]        // -> [isSWJ <= 0x00000001]
[03:05:24.259]      __var hasDormant = __protocol & 0x00020000;
[03:05:24.259]        // -> [hasDormant <= 0x00000000]
[03:05:24.259]      __var protType   = __protocol & 0x0000FFFF;
[03:05:24.262]        // -> [protType <= 0x00000002]
[03:05:24.262]    </block>
[03:05:24.262]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:24.262]      // if-block "protType == 1"
[03:05:24.263]        // =>  FALSE
[03:05:24.263]      // skip if-block "protType == 1"
[03:05:24.263]    </control>
[03:05:24.263]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:24.263]      // if-block "protType == 2"
[03:05:24.263]        // =>  TRUE
[03:05:24.263]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:24.263]        // if-block "isSWJ"
[03:05:24.263]          // =>  TRUE
[03:05:24.263]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:24.263]          // if-block "hasDormant"
[03:05:24.264]            // =>  FALSE
[03:05:24.264]          // skip if-block "hasDormant"
[03:05:24.264]        </control>
[03:05:24.264]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:24.264]          // if-block "!hasDormant"
[03:05:24.264]            // =>  TRUE
[03:05:24.264]          <block atomic="false" info="">
[03:05:24.264]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:25.276]  
[03:05:25.276]  !!! E320 : DAP access error
[03:05:25.276]  
[03:05:25.285]          </block>
[03:05:25.285]          // end if-block "!hasDormant"
[03:05:25.285]        </control>
[03:05:25.285]        // end if-block "isSWJ"
[03:05:25.285]      </control>
[03:05:25.285]      // end if-block "protType == 2"
[03:05:25.285]    </control>
[03:05:25.285]  </sequence>
[03:05:25.285]  
[03:05:25.536]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:25.536]  
[03:05:25.536]  <debugvars>
[03:05:25.536]    // Pre-defined
[03:05:25.536]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:25.536]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:25.536]    __dp=0x00000000
[03:05:25.536]    __ap=0x00000000
[03:05:25.536]    __traceout=0x00000000      (Trace Disabled)
[03:05:25.536]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:25.536]    __FlashAddr=0x00000000
[03:05:25.536]    __FlashLen=0x00000000
[03:05:25.536]    __FlashArg=0x00000000
[03:05:25.536]    __FlashOp=0x00000000
[03:05:25.536]    __Result=0x00000000
[03:05:25.536]  </debugvars>
[03:05:25.536]  
[03:05:25.536]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:25.536]    <block atomic="false" info="">
[03:05:25.536]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:25.536]        // -> [isSWJ <= 0x00000001]
[03:05:25.536]      __var hasDormant = __protocol & 0x00020000;
[03:05:25.536]        // -> [hasDormant <= 0x00000000]
[03:05:25.536]      __var protType   = __protocol & 0x0000FFFF;
[03:05:25.536]        // -> [protType <= 0x00000002]
[03:05:25.536]    </block>
[03:05:25.540]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:25.540]      // if-block "protType == 1"
[03:05:25.540]        // =>  FALSE
[03:05:25.540]      // skip if-block "protType == 1"
[03:05:25.540]    </control>
[03:05:25.540]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:25.540]      // if-block "protType == 2"
[03:05:25.540]        // =>  TRUE
[03:05:25.540]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:25.540]        // if-block "isSWJ"
[03:05:25.540]          // =>  TRUE
[03:05:25.540]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:25.540]          // if-block "hasDormant"
[03:05:25.540]            // =>  FALSE
[03:05:25.541]          // skip if-block "hasDormant"
[03:05:25.542]        </control>
[03:05:25.542]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:25.542]          // if-block "!hasDormant"
[03:05:25.542]            // =>  TRUE
[03:05:25.542]          <block atomic="false" info="">
[03:05:25.542]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:26.553]  
[03:05:26.553]  !!! E320 : DAP access error
[03:05:26.553]  
[03:05:26.561]          </block>
[03:05:26.561]          // end if-block "!hasDormant"
[03:05:26.561]        </control>
[03:05:26.561]        // end if-block "isSWJ"
[03:05:26.561]      </control>
[03:05:26.561]      // end if-block "protType == 2"
[03:05:26.561]    </control>
[03:05:26.561]  </sequence>
[03:05:26.561]  
[03:05:26.817]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:26.817]  
[03:05:26.818]  <debugvars>
[03:05:26.818]    // Pre-defined
[03:05:26.818]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:26.818]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:26.818]    __dp=0x00000000
[03:05:26.818]    __ap=0x00000000
[03:05:26.818]    __traceout=0x00000000      (Trace Disabled)
[03:05:26.819]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:26.819]    __FlashAddr=0x00000000
[03:05:26.819]    __FlashLen=0x00000000
[03:05:26.819]    __FlashArg=0x00000000
[03:05:26.819]    __FlashOp=0x00000000
[03:05:26.819]    __Result=0x00000000
[03:05:26.819]  </debugvars>
[03:05:26.819]  
[03:05:26.819]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:26.819]    <block atomic="false" info="">
[03:05:26.819]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:26.819]        // -> [isSWJ <= 0x00000001]
[03:05:26.819]      __var hasDormant = __protocol & 0x00020000;
[03:05:26.819]        // -> [hasDormant <= 0x00000000]
[03:05:26.819]      __var protType   = __protocol & 0x0000FFFF;
[03:05:26.819]        // -> [protType <= 0x00000002]
[03:05:26.819]    </block>
[03:05:26.819]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:26.819]      // if-block "protType == 1"
[03:05:26.819]        // =>  FALSE
[03:05:26.819]      // skip if-block "protType == 1"
[03:05:26.819]    </control>
[03:05:26.819]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:26.819]      // if-block "protType == 2"
[03:05:26.819]        // =>  TRUE
[03:05:26.819]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:26.819]        // if-block "isSWJ"
[03:05:26.822]          // =>  TRUE
[03:05:26.822]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:26.822]          // if-block "hasDormant"
[03:05:26.822]            // =>  FALSE
[03:05:26.822]          // skip if-block "hasDormant"
[03:05:26.822]        </control>
[03:05:26.822]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:26.822]          // if-block "!hasDormant"
[03:05:26.822]            // =>  TRUE
[03:05:26.822]          <block atomic="false" info="">
[03:05:26.822]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:27.825]  
[03:05:27.825]  !!! E320 : DAP access error
[03:05:27.825]  
[03:05:27.833]          </block>
[03:05:27.833]          // end if-block "!hasDormant"
[03:05:27.833]        </control>
[03:05:27.833]        // end if-block "isSWJ"
[03:05:27.833]      </control>
[03:05:27.833]      // end if-block "protType == 2"
[03:05:27.833]    </control>
[03:05:27.834]  </sequence>
[03:05:27.834]  
[03:05:28.093]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:28.093]  
[03:05:28.101]  <debugvars>
[03:05:28.101]    // Pre-defined
[03:05:28.101]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:28.101]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:28.101]    __dp=0x00000000
[03:05:28.101]    __ap=0x00000000
[03:05:28.101]    __traceout=0x00000000      (Trace Disabled)
[03:05:28.101]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:28.101]    __FlashAddr=0x00000000
[03:05:28.101]    __FlashLen=0x00000000
[03:05:28.101]    __FlashArg=0x00000000
[03:05:28.101]    __FlashOp=0x00000000
[03:05:28.101]    __Result=0x00000000
[03:05:28.101]  </debugvars>
[03:05:28.101]  
[03:05:28.101]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:28.101]    <block atomic="false" info="">
[03:05:28.101]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:28.101]        // -> [isSWJ <= 0x00000001]
[03:05:28.101]      __var hasDormant = __protocol & 0x00020000;
[03:05:28.103]        // -> [hasDormant <= 0x00000000]
[03:05:28.103]      __var protType   = __protocol & 0x0000FFFF;
[03:05:28.103]        // -> [protType <= 0x00000002]
[03:05:28.103]    </block>
[03:05:28.103]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:28.103]      // if-block "protType == 1"
[03:05:28.103]        // =>  FALSE
[03:05:28.103]      // skip if-block "protType == 1"
[03:05:28.103]    </control>
[03:05:28.103]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:28.103]      // if-block "protType == 2"
[03:05:28.103]        // =>  TRUE
[03:05:28.104]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:28.104]        // if-block "isSWJ"
[03:05:28.104]          // =>  TRUE
[03:05:28.104]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:28.104]          // if-block "hasDormant"
[03:05:28.104]            // =>  FALSE
[03:05:28.104]          // skip if-block "hasDormant"
[03:05:28.104]        </control>
[03:05:28.104]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:28.104]          // if-block "!hasDormant"
[03:05:28.105]            // =>  TRUE
[03:05:28.105]          <block atomic="false" info="">
[03:05:28.105]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:29.113]  
[03:05:29.113]  !!! E320 : DAP access error
[03:05:29.113]  
[03:05:29.115]          </block>
[03:05:29.115]          // end if-block "!hasDormant"
[03:05:29.115]        </control>
[03:05:29.115]        // end if-block "isSWJ"
[03:05:29.115]      </control>
[03:05:29.115]      // end if-block "protType == 2"
[03:05:29.115]    </control>
[03:05:29.115]  </sequence>
[03:05:29.115]  
[03:05:29.369]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:29.369]  
[03:05:29.378]  <debugvars>
[03:05:29.378]    // Pre-defined
[03:05:29.378]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:29.378]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:29.378]    __dp=0x00000000
[03:05:29.378]    __ap=0x00000000
[03:05:29.378]    __traceout=0x00000000      (Trace Disabled)
[03:05:29.378]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:29.378]    __FlashAddr=0x00000000
[03:05:29.378]    __FlashLen=0x00000000
[03:05:29.378]    __FlashArg=0x00000000
[03:05:29.378]    __FlashOp=0x00000000
[03:05:29.378]    __Result=0x00000000
[03:05:29.378]  </debugvars>
[03:05:29.378]  
[03:05:29.378]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:29.378]    <block atomic="false" info="">
[03:05:29.378]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:29.378]        // -> [isSWJ <= 0x00000001]
[03:05:29.378]      __var hasDormant = __protocol & 0x00020000;
[03:05:29.378]        // -> [hasDormant <= 0x00000000]
[03:05:29.378]      __var protType   = __protocol & 0x0000FFFF;
[03:05:29.378]        // -> [protType <= 0x00000002]
[03:05:29.378]    </block>
[03:05:29.378]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:29.381]      // if-block "protType == 1"
[03:05:29.381]        // =>  FALSE
[03:05:29.381]      // skip if-block "protType == 1"
[03:05:29.381]    </control>
[03:05:29.381]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:29.381]      // if-block "protType == 2"
[03:05:29.381]        // =>  TRUE
[03:05:29.381]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:29.381]        // if-block "isSWJ"
[03:05:29.381]          // =>  TRUE
[03:05:29.381]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:29.381]          // if-block "hasDormant"
[03:05:29.383]            // =>  FALSE
[03:05:29.383]          // skip if-block "hasDormant"
[03:05:29.383]        </control>
[03:05:29.383]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:29.383]          // if-block "!hasDormant"
[03:05:29.383]            // =>  TRUE
[03:05:29.383]          <block atomic="false" info="">
[03:05:29.383]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:30.392]  
[03:05:30.392]  !!! E320 : DAP access error
[03:05:30.392]  
[03:05:30.401]          </block>
[03:05:30.401]          // end if-block "!hasDormant"
[03:05:30.401]        </control>
[03:05:30.401]        // end if-block "isSWJ"
[03:05:30.401]      </control>
[03:05:30.401]      // end if-block "protType == 2"
[03:05:30.401]    </control>
[03:05:30.401]  </sequence>
[03:05:30.401]  
[03:05:30.659]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:30.659]  
[03:05:30.668]  <debugvars>
[03:05:30.668]    // Pre-defined
[03:05:30.668]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:30.668]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:30.668]    __dp=0x00000000
[03:05:30.668]    __ap=0x00000000
[03:05:30.668]    __traceout=0x00000000      (Trace Disabled)
[03:05:30.668]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:30.668]    __FlashAddr=0x00000000
[03:05:30.668]    __FlashLen=0x00000000
[03:05:30.668]    __FlashArg=0x00000000
[03:05:30.668]    __FlashOp=0x00000000
[03:05:30.668]    __Result=0x00000000
[03:05:30.668]  </debugvars>
[03:05:30.668]  
[03:05:30.668]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:30.668]    <block atomic="false" info="">
[03:05:30.668]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:30.670]        // -> [isSWJ <= 0x00000001]
[03:05:30.670]      __var hasDormant = __protocol & 0x00020000;
[03:05:30.670]        // -> [hasDormant <= 0x00000000]
[03:05:30.670]      __var protType   = __protocol & 0x0000FFFF;
[03:05:30.670]        // -> [protType <= 0x00000002]
[03:05:30.670]    </block>
[03:05:30.670]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:30.670]      // if-block "protType == 1"
[03:05:30.671]        // =>  FALSE
[03:05:30.671]      // skip if-block "protType == 1"
[03:05:30.671]    </control>
[03:05:30.671]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:30.671]      // if-block "protType == 2"
[03:05:30.672]        // =>  TRUE
[03:05:30.672]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:30.672]        // if-block "isSWJ"
[03:05:30.672]          // =>  TRUE
[03:05:30.672]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:30.672]          // if-block "hasDormant"
[03:05:30.672]            // =>  FALSE
[03:05:30.672]          // skip if-block "hasDormant"
[03:05:30.672]        </control>
[03:05:30.672]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:30.672]          // if-block "!hasDormant"
[03:05:30.672]            // =>  TRUE
[03:05:30.672]          <block atomic="false" info="">
[03:05:30.672]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:31.678]  
[03:05:31.678]  !!! E320 : DAP access error
[03:05:31.678]  
[03:05:31.686]          </block>
[03:05:31.686]          // end if-block "!hasDormant"
[03:05:31.686]        </control>
[03:05:31.686]        // end if-block "isSWJ"
[03:05:31.686]      </control>
[03:05:31.686]      // end if-block "protType == 2"
[03:05:31.686]    </control>
[03:05:31.686]  </sequence>
[03:05:31.686]  
[03:05:31.940]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:31.940]  
[03:05:31.948]  <debugvars>
[03:05:31.948]    // Pre-defined
[03:05:31.948]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:31.948]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:31.948]    __dp=0x00000000
[03:05:31.948]    __ap=0x00000000
[03:05:31.948]    __traceout=0x00000000      (Trace Disabled)
[03:05:31.948]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:31.948]    __FlashAddr=0x00000000
[03:05:31.948]    __FlashLen=0x00000000
[03:05:31.948]    __FlashArg=0x00000000
[03:05:31.948]    __FlashOp=0x00000000
[03:05:31.948]    __Result=0x00000000
[03:05:31.948]  </debugvars>
[03:05:31.948]  
[03:05:31.948]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:31.948]    <block atomic="false" info="">
[03:05:31.948]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:31.948]        // -> [isSWJ <= 0x00000001]
[03:05:31.948]      __var hasDormant = __protocol & 0x00020000;
[03:05:31.948]        // -> [hasDormant <= 0x00000000]
[03:05:31.948]      __var protType   = __protocol & 0x0000FFFF;
[03:05:31.948]        // -> [protType <= 0x00000002]
[03:05:31.948]    </block>
[03:05:31.948]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:31.948]      // if-block "protType == 1"
[03:05:31.948]        // =>  FALSE
[03:05:31.948]      // skip if-block "protType == 1"
[03:05:31.948]    </control>
[03:05:31.948]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:31.948]      // if-block "protType == 2"
[03:05:31.948]        // =>  TRUE
[03:05:31.948]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:31.948]        // if-block "isSWJ"
[03:05:31.948]          // =>  TRUE
[03:05:31.952]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:31.952]          // if-block "hasDormant"
[03:05:31.952]            // =>  FALSE
[03:05:31.952]          // skip if-block "hasDormant"
[03:05:31.952]        </control>
[03:05:31.952]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:31.952]          // if-block "!hasDormant"
[03:05:31.952]            // =>  TRUE
[03:05:31.952]          <block atomic="false" info="">
[03:05:31.952]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:32.964]  
[03:05:32.964]  !!! E320 : DAP access error
[03:05:32.964]  
[03:05:32.972]          </block>
[03:05:32.972]          // end if-block "!hasDormant"
[03:05:32.972]        </control>
[03:05:32.972]        // end if-block "isSWJ"
[03:05:32.972]      </control>
[03:05:32.972]      // end if-block "protType == 2"
[03:05:32.972]    </control>
[03:05:32.972]  </sequence>
[03:05:32.972]  
[03:05:33.230]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:33.230]  
[03:05:33.240]  <debugvars>
[03:05:33.240]    // Pre-defined
[03:05:33.240]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:33.240]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:33.240]    __dp=0x00000000
[03:05:33.240]    __ap=0x00000000
[03:05:33.240]    __traceout=0x00000000      (Trace Disabled)
[03:05:33.240]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:33.240]    __FlashAddr=0x00000000
[03:05:33.240]    __FlashLen=0x00000000
[03:05:33.240]    __FlashArg=0x00000000
[03:05:33.240]    __FlashOp=0x00000000
[03:05:33.240]    __Result=0x00000000
[03:05:33.242]  </debugvars>
[03:05:33.242]  
[03:05:33.242]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:33.242]    <block atomic="false" info="">
[03:05:33.242]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:33.242]        // -> [isSWJ <= 0x00000001]
[03:05:33.242]      __var hasDormant = __protocol & 0x00020000;
[03:05:33.242]        // -> [hasDormant <= 0x00000000]
[03:05:33.242]      __var protType   = __protocol & 0x0000FFFF;
[03:05:33.242]        // -> [protType <= 0x00000002]
[03:05:33.242]    </block>
[03:05:33.242]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:33.242]      // if-block "protType == 1"
[03:05:33.242]        // =>  FALSE
[03:05:33.242]      // skip if-block "protType == 1"
[03:05:33.242]    </control>
[03:05:33.245]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:33.245]      // if-block "protType == 2"
[03:05:33.245]        // =>  TRUE
[03:05:33.245]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:33.245]        // if-block "isSWJ"
[03:05:33.245]          // =>  TRUE
[03:05:33.245]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:33.245]          // if-block "hasDormant"
[03:05:33.245]            // =>  FALSE
[03:05:33.245]          // skip if-block "hasDormant"
[03:05:33.245]        </control>
[03:05:33.245]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:33.245]          // if-block "!hasDormant"
[03:05:33.245]            // =>  TRUE
[03:05:33.245]          <block atomic="false" info="">
[03:05:33.245]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:34.252]  
[03:05:34.252]  !!! E320 : DAP access error
[03:05:34.252]  
[03:05:34.261]          </block>
[03:05:34.261]          // end if-block "!hasDormant"
[03:05:34.261]        </control>
[03:05:34.261]        // end if-block "isSWJ"
[03:05:34.261]      </control>
[03:05:34.261]      // end if-block "protType == 2"
[03:05:34.261]    </control>
[03:05:34.261]  </sequence>
[03:05:34.261]  
[03:05:34.519]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:34.519]  
[03:05:34.527]  <debugvars>
[03:05:34.527]    // Pre-defined
[03:05:34.527]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:34.527]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:34.527]    __dp=0x00000000
[03:05:34.527]    __ap=0x00000000
[03:05:34.527]    __traceout=0x00000000      (Trace Disabled)
[03:05:34.527]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:34.527]    __FlashAddr=0x00000000
[03:05:34.527]    __FlashLen=0x00000000
[03:05:34.527]    __FlashArg=0x00000000
[03:05:34.527]    __FlashOp=0x00000000
[03:05:34.527]    __Result=0x00000000
[03:05:34.527]  </debugvars>
[03:05:34.527]  
[03:05:34.527]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:34.527]    <block atomic="false" info="">
[03:05:34.527]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:34.527]        // -> [isSWJ <= 0x00000001]
[03:05:34.527]      __var hasDormant = __protocol & 0x00020000;
[03:05:34.527]        // -> [hasDormant <= 0x00000000]
[03:05:34.527]      __var protType   = __protocol & 0x0000FFFF;
[03:05:34.527]        // -> [protType <= 0x00000002]
[03:05:34.527]    </block>
[03:05:34.527]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:34.527]      // if-block "protType == 1"
[03:05:34.527]        // =>  FALSE
[03:05:34.527]      // skip if-block "protType == 1"
[03:05:34.527]    </control>
[03:05:34.527]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:34.527]      // if-block "protType == 2"
[03:05:34.527]        // =>  TRUE
[03:05:34.531]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:34.531]        // if-block "isSWJ"
[03:05:34.531]          // =>  TRUE
[03:05:34.531]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:34.531]          // if-block "hasDormant"
[03:05:34.531]            // =>  FALSE
[03:05:34.531]          // skip if-block "hasDormant"
[03:05:34.531]        </control>
[03:05:34.531]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:34.531]          // if-block "!hasDormant"
[03:05:34.531]            // =>  TRUE
[03:05:34.531]          <block atomic="false" info="">
[03:05:34.531]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:35.535]  
[03:05:35.535]  !!! E320 : DAP access error
[03:05:35.535]  
[03:05:35.544]          </block>
[03:05:35.544]          // end if-block "!hasDormant"
[03:05:35.544]        </control>
[03:05:35.544]        // end if-block "isSWJ"
[03:05:35.544]      </control>
[03:05:35.544]      // end if-block "protType == 2"
[03:05:35.544]    </control>
[03:05:35.544]  </sequence>
[03:05:35.544]  
[03:05:35.800]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:35.800]  
[03:05:35.809]  <debugvars>
[03:05:35.809]    // Pre-defined
[03:05:35.809]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:35.809]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:35.809]    __dp=0x00000000
[03:05:35.809]    __ap=0x00000000
[03:05:35.809]    __traceout=0x00000000      (Trace Disabled)
[03:05:35.809]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:35.809]    __FlashAddr=0x00000000
[03:05:35.809]    __FlashLen=0x00000000
[03:05:35.809]    __FlashArg=0x00000000
[03:05:35.809]    __FlashOp=0x00000000
[03:05:35.809]    __Result=0x00000000
[03:05:35.809]  </debugvars>
[03:05:35.809]  
[03:05:35.809]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:35.809]    <block atomic="false" info="">
[03:05:35.809]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:35.809]        // -> [isSWJ <= 0x00000001]
[03:05:35.809]      __var hasDormant = __protocol & 0x00020000;
[03:05:35.809]        // -> [hasDormant <= 0x00000000]
[03:05:35.809]      __var protType   = __protocol & 0x0000FFFF;
[03:05:35.809]        // -> [protType <= 0x00000002]
[03:05:35.809]    </block>
[03:05:35.809]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:35.812]      // if-block "protType == 1"
[03:05:35.812]        // =>  FALSE
[03:05:35.812]      // skip if-block "protType == 1"
[03:05:35.812]    </control>
[03:05:35.812]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:35.812]      // if-block "protType == 2"
[03:05:35.812]        // =>  TRUE
[03:05:35.812]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:35.812]        // if-block "isSWJ"
[03:05:35.812]          // =>  TRUE
[03:05:35.812]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:35.812]          // if-block "hasDormant"
[03:05:35.812]            // =>  FALSE
[03:05:35.812]          // skip if-block "hasDormant"
[03:05:35.812]        </control>
[03:05:35.812]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:35.812]          // if-block "!hasDormant"
[03:05:35.812]            // =>  TRUE
[03:05:35.812]          <block atomic="false" info="">
[03:05:35.812]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:36.822]  
[03:05:36.822]  !!! E320 : DAP access error
[03:05:36.822]  
[03:05:36.831]          </block>
[03:05:36.831]          // end if-block "!hasDormant"
[03:05:36.831]        </control>
[03:05:36.831]        // end if-block "isSWJ"
[03:05:36.831]      </control>
[03:05:36.831]      // end if-block "protType == 2"
[03:05:36.831]    </control>
[03:05:36.831]  </sequence>
[03:05:36.831]  
[03:05:37.085]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:37.085]  
[03:05:37.094]  <debugvars>
[03:05:37.094]    // Pre-defined
[03:05:37.094]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:37.094]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:37.094]    __dp=0x00000000
[03:05:37.094]    __ap=0x00000000
[03:05:37.094]    __traceout=0x00000000      (Trace Disabled)
[03:05:37.094]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:37.094]    __FlashAddr=0x00000000
[03:05:37.094]    __FlashLen=0x00000000
[03:05:37.094]    __FlashArg=0x00000000
[03:05:37.094]    __FlashOp=0x00000000
[03:05:37.094]    __Result=0x00000000
[03:05:37.094]  </debugvars>
[03:05:37.094]  
[03:05:37.094]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:37.094]    <block atomic="false" info="">
[03:05:37.094]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:37.094]        // -> [isSWJ <= 0x00000001]
[03:05:37.094]      __var hasDormant = __protocol & 0x00020000;
[03:05:37.094]        // -> [hasDormant <= 0x00000000]
[03:05:37.094]      __var protType   = __protocol & 0x0000FFFF;
[03:05:37.094]        // -> [protType <= 0x00000002]
[03:05:37.094]    </block>
[03:05:37.094]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:37.094]      // if-block "protType == 1"
[03:05:37.094]        // =>  FALSE
[03:05:37.097]      // skip if-block "protType == 1"
[03:05:37.097]    </control>
[03:05:37.097]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:37.097]      // if-block "protType == 2"
[03:05:37.097]        // =>  TRUE
[03:05:37.097]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:37.097]        // if-block "isSWJ"
[03:05:37.097]          // =>  TRUE
[03:05:37.097]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:37.097]          // if-block "hasDormant"
[03:05:37.097]            // =>  FALSE
[03:05:37.097]          // skip if-block "hasDormant"
[03:05:37.097]        </control>
[03:05:37.097]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:37.097]          // if-block "!hasDormant"
[03:05:37.097]            // =>  TRUE
[03:05:37.097]          <block atomic="false" info="">
[03:05:37.097]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:38.100]  
[03:05:38.100]  !!! E320 : DAP access error
[03:05:38.100]  
[03:05:38.100]          </block>
[03:05:38.100]          // end if-block "!hasDormant"
[03:05:38.100]        </control>
[03:05:38.100]        // end if-block "isSWJ"
[03:05:38.100]      </control>
[03:05:38.102]      // end if-block "protType == 2"
[03:05:38.102]    </control>
[03:05:38.102]  </sequence>
[03:05:38.102]  
[03:05:38.358]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:38.358]  
[03:05:38.366]  <debugvars>
[03:05:38.366]    // Pre-defined
[03:05:38.366]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:38.366]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:38.366]    __dp=0x00000000
[03:05:38.366]    __ap=0x00000000
[03:05:38.366]    __traceout=0x00000000      (Trace Disabled)
[03:05:38.366]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:38.366]    __FlashAddr=0x00000000
[03:05:38.366]    __FlashLen=0x00000000
[03:05:38.366]    __FlashArg=0x00000000
[03:05:38.366]    __FlashOp=0x00000000
[03:05:38.366]    __Result=0x00000000
[03:05:38.366]  </debugvars>
[03:05:38.366]  
[03:05:38.366]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:38.366]    <block atomic="false" info="">
[03:05:38.366]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:38.366]        // -> [isSWJ <= 0x00000001]
[03:05:38.366]      __var hasDormant = __protocol & 0x00020000;
[03:05:38.366]        // -> [hasDormant <= 0x00000000]
[03:05:38.366]      __var protType   = __protocol & 0x0000FFFF;
[03:05:38.366]        // -> [protType <= 0x00000002]
[03:05:38.366]    </block>
[03:05:38.366]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:38.366]      // if-block "protType == 1"
[03:05:38.366]        // =>  FALSE
[03:05:38.366]      // skip if-block "protType == 1"
[03:05:38.366]    </control>
[03:05:38.366]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:38.366]      // if-block "protType == 2"
[03:05:38.366]        // =>  TRUE
[03:05:38.366]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:38.366]        // if-block "isSWJ"
[03:05:38.366]          // =>  TRUE
[03:05:38.366]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:38.366]          // if-block "hasDormant"
[03:05:38.366]            // =>  FALSE
[03:05:38.366]          // skip if-block "hasDormant"
[03:05:38.366]        </control>
[03:05:38.366]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:38.366]          // if-block "!hasDormant"
[03:05:38.366]            // =>  TRUE
[03:05:38.366]          <block atomic="false" info="">
[03:05:38.370]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:39.374]  
[03:05:39.374]  !!! E320 : DAP access error
[03:05:39.374]  
[03:05:39.374]          </block>
[03:05:39.374]          // end if-block "!hasDormant"
[03:05:39.374]        </control>
[03:05:39.374]        // end if-block "isSWJ"
[03:05:39.374]      </control>
[03:05:39.374]      // end if-block "protType == 2"
[03:05:39.374]    </control>
[03:05:39.374]  </sequence>
[03:05:39.374]  
[03:05:39.627]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:39.627]  
[03:05:39.627]  <debugvars>
[03:05:39.627]    // Pre-defined
[03:05:39.627]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:39.627]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:39.627]    __dp=0x00000000
[03:05:39.627]    __ap=0x00000000
[03:05:39.627]    __traceout=0x00000000      (Trace Disabled)
[03:05:39.627]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:39.627]    __FlashAddr=0x00000000
[03:05:39.627]    __FlashLen=0x00000000
[03:05:39.629]    __FlashArg=0x00000000
[03:05:39.629]    __FlashOp=0x00000000
[03:05:39.629]    __Result=0x00000000
[03:05:39.629]  </debugvars>
[03:05:39.629]  
[03:05:39.629]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:39.629]    <block atomic="false" info="">
[03:05:39.629]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:39.629]        // -> [isSWJ <= 0x00000001]
[03:05:39.629]      __var hasDormant = __protocol & 0x00020000;
[03:05:39.629]        // -> [hasDormant <= 0x00000000]
[03:05:39.629]      __var protType   = __protocol & 0x0000FFFF;
[03:05:39.629]        // -> [protType <= 0x00000002]
[03:05:39.629]    </block>
[03:05:39.629]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:39.629]      // if-block "protType == 1"
[03:05:39.629]        // =>  FALSE
[03:05:39.629]      // skip if-block "protType == 1"
[03:05:39.631]    </control>
[03:05:39.631]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:39.631]      // if-block "protType == 2"
[03:05:39.631]        // =>  TRUE
[03:05:39.631]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:39.631]        // if-block "isSWJ"
[03:05:39.631]          // =>  TRUE
[03:05:39.631]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:39.631]          // if-block "hasDormant"
[03:05:39.631]            // =>  FALSE
[03:05:39.632]          // skip if-block "hasDormant"
[03:05:39.632]        </control>
[03:05:39.632]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:39.632]          // if-block "!hasDormant"
[03:05:39.632]            // =>  TRUE
[03:05:39.632]          <block atomic="false" info="">
[03:05:39.632]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:40.640]  
[03:05:40.640]  !!! E320 : DAP access error
[03:05:40.640]  
[03:05:40.640]          </block>
[03:05:40.640]          // end if-block "!hasDormant"
[03:05:40.640]        </control>
[03:05:40.640]        // end if-block "isSWJ"
[03:05:40.640]      </control>
[03:05:40.640]      // end if-block "protType == 2"
[03:05:40.640]    </control>
[03:05:40.640]  </sequence>
[03:05:40.640]  
[03:05:40.892]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:40.892]  
[03:05:40.892]  <debugvars>
[03:05:40.892]    // Pre-defined
[03:05:40.892]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:40.892]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:40.892]    __dp=0x00000000
[03:05:40.892]    __ap=0x00000000
[03:05:40.892]    __traceout=0x00000000      (Trace Disabled)
[03:05:40.892]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:40.892]    __FlashAddr=0x00000000
[03:05:40.892]    __FlashLen=0x00000000
[03:05:40.892]    __FlashArg=0x00000000
[03:05:40.892]    __FlashOp=0x00000000
[03:05:40.892]    __Result=0x00000000
[03:05:40.892]  </debugvars>
[03:05:40.892]  
[03:05:40.892]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:40.892]    <block atomic="false" info="">
[03:05:40.892]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:40.892]        // -> [isSWJ <= 0x00000001]
[03:05:40.892]      __var hasDormant = __protocol & 0x00020000;
[03:05:40.892]        // -> [hasDormant <= 0x00000000]
[03:05:40.892]      __var protType   = __protocol & 0x0000FFFF;
[03:05:40.892]        // -> [protType <= 0x00000002]
[03:05:40.892]    </block>
[03:05:40.892]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:40.892]      // if-block "protType == 1"
[03:05:40.892]        // =>  FALSE
[03:05:40.892]      // skip if-block "protType == 1"
[03:05:40.892]    </control>
[03:05:40.892]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:40.892]      // if-block "protType == 2"
[03:05:40.892]        // =>  TRUE
[03:05:40.892]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:40.892]        // if-block "isSWJ"
[03:05:40.896]          // =>  TRUE
[03:05:40.896]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:40.896]          // if-block "hasDormant"
[03:05:40.896]            // =>  FALSE
[03:05:40.896]          // skip if-block "hasDormant"
[03:05:40.896]        </control>
[03:05:40.896]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:40.896]          // if-block "!hasDormant"
[03:05:40.896]            // =>  TRUE
[03:05:40.896]          <block atomic="false" info="">
[03:05:40.896]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:41.904]  
[03:05:41.904]  !!! E320 : DAP access error
[03:05:41.904]  
[03:05:41.904]          </block>
[03:05:41.904]          // end if-block "!hasDormant"
[03:05:41.904]        </control>
[03:05:41.904]        // end if-block "isSWJ"
[03:05:41.904]      </control>
[03:05:41.904]      // end if-block "protType == 2"
[03:05:41.904]    </control>
[03:05:41.904]  </sequence>
[03:05:41.904]  
[03:05:42.157]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:42.157]  
[03:05:42.157]  <debugvars>
[03:05:42.158]    // Pre-defined
[03:05:42.158]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:42.158]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:42.158]    __dp=0x00000000
[03:05:42.158]    __ap=0x00000000
[03:05:42.158]    __traceout=0x00000000      (Trace Disabled)
[03:05:42.158]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:42.158]    __FlashAddr=0x00000000
[03:05:42.158]    __FlashLen=0x00000000
[03:05:42.158]    __FlashArg=0x00000000
[03:05:42.159]    __FlashOp=0x00000000
[03:05:42.159]    __Result=0x00000000
[03:05:42.159]  </debugvars>
[03:05:42.159]  
[03:05:42.160]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:42.160]    <block atomic="false" info="">
[03:05:42.160]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:42.160]        // -> [isSWJ <= 0x00000001]
[03:05:42.160]      __var hasDormant = __protocol & 0x00020000;
[03:05:42.160]        // -> [hasDormant <= 0x00000000]
[03:05:42.160]      __var protType   = __protocol & 0x0000FFFF;
[03:05:42.160]        // -> [protType <= 0x00000002]
[03:05:42.160]    </block>
[03:05:42.160]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:42.160]      // if-block "protType == 1"
[03:05:42.160]        // =>  FALSE
[03:05:42.160]      // skip if-block "protType == 1"
[03:05:42.161]    </control>
[03:05:42.161]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:42.161]      // if-block "protType == 2"
[03:05:42.161]        // =>  TRUE
[03:05:42.161]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:42.161]        // if-block "isSWJ"
[03:05:42.161]          // =>  TRUE
[03:05:42.161]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:42.161]          // if-block "hasDormant"
[03:05:42.161]            // =>  FALSE
[03:05:42.161]          // skip if-block "hasDormant"
[03:05:42.161]        </control>
[03:05:42.161]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:42.161]          // if-block "!hasDormant"
[03:05:42.161]            // =>  TRUE
[03:05:42.161]          <block atomic="false" info="">
[03:05:42.161]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:43.171]  
[03:05:43.171]  !!! E320 : DAP access error
[03:05:43.171]  
[03:05:43.171]          </block>
[03:05:43.171]          // end if-block "!hasDormant"
[03:05:43.171]        </control>
[03:05:43.171]        // end if-block "isSWJ"
[03:05:43.171]      </control>
[03:05:43.171]      // end if-block "protType == 2"
[03:05:43.171]    </control>
[03:05:43.171]  </sequence>
[03:05:43.171]  
[03:05:43.424]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:43.424]  
[03:05:43.432]  <debugvars>
[03:05:43.432]    // Pre-defined
[03:05:43.432]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:43.432]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:43.432]    __dp=0x00000000
[03:05:43.432]    __ap=0x00000000
[03:05:43.432]    __traceout=0x00000000      (Trace Disabled)
[03:05:43.432]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:43.432]    __FlashAddr=0x00000000
[03:05:43.432]    __FlashLen=0x00000000
[03:05:43.432]    __FlashArg=0x00000000
[03:05:43.432]    __FlashOp=0x00000000
[03:05:43.432]    __Result=0x00000000
[03:05:43.432]  </debugvars>
[03:05:43.432]  
[03:05:43.432]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:43.432]    <block atomic="false" info="">
[03:05:43.432]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:43.432]        // -> [isSWJ <= 0x00000001]
[03:05:43.432]      __var hasDormant = __protocol & 0x00020000;
[03:05:43.432]        // -> [hasDormant <= 0x00000000]
[03:05:43.432]      __var protType   = __protocol & 0x0000FFFF;
[03:05:43.432]        // -> [protType <= 0x00000002]
[03:05:43.432]    </block>
[03:05:43.432]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:43.432]      // if-block "protType == 1"
[03:05:43.432]        // =>  FALSE
[03:05:43.432]      // skip if-block "protType == 1"
[03:05:43.432]    </control>
[03:05:43.436]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:43.436]      // if-block "protType == 2"
[03:05:43.436]        // =>  TRUE
[03:05:43.436]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:43.436]        // if-block "isSWJ"
[03:05:43.436]          // =>  TRUE
[03:05:43.436]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:43.436]          // if-block "hasDormant"
[03:05:43.436]            // =>  FALSE
[03:05:43.436]          // skip if-block "hasDormant"
[03:05:43.436]        </control>
[03:05:43.436]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:43.436]          // if-block "!hasDormant"
[03:05:43.436]            // =>  TRUE
[03:05:43.436]          <block atomic="false" info="">
[03:05:43.436]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:44.440]  
[03:05:44.440]  !!! E320 : DAP access error
[03:05:44.440]  
[03:05:44.449]          </block>
[03:05:44.449]          // end if-block "!hasDormant"
[03:05:44.449]        </control>
[03:05:44.449]        // end if-block "isSWJ"
[03:05:44.449]      </control>
[03:05:44.449]      // end if-block "protType == 2"
[03:05:44.449]    </control>
[03:05:44.449]  </sequence>
[03:05:44.449]  
[03:05:44.704]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:44.704]  
[03:05:44.714]  <debugvars>
[03:05:44.714]    // Pre-defined
[03:05:44.714]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:44.714]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:44.714]    __dp=0x00000000
[03:05:44.714]    __ap=0x00000000
[03:05:44.714]    __traceout=0x00000000      (Trace Disabled)
[03:05:44.714]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:44.714]    __FlashAddr=0x00000000
[03:05:44.714]    __FlashLen=0x00000000
[03:05:44.714]    __FlashArg=0x00000000
[03:05:44.714]    __FlashOp=0x00000000
[03:05:44.714]    __Result=0x00000000
[03:05:44.714]  </debugvars>
[03:05:44.714]  
[03:05:44.714]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:44.714]    <block atomic="false" info="">
[03:05:44.714]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:44.714]        // -> [isSWJ <= 0x00000001]
[03:05:44.714]      __var hasDormant = __protocol & 0x00020000;
[03:05:44.714]        // -> [hasDormant <= 0x00000000]
[03:05:44.714]      __var protType   = __protocol & 0x0000FFFF;
[03:05:44.714]        // -> [protType <= 0x00000002]
[03:05:44.714]    </block>
[03:05:44.714]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:44.714]      // if-block "protType == 1"
[03:05:44.714]        // =>  FALSE
[03:05:44.714]      // skip if-block "protType == 1"
[03:05:44.717]    </control>
[03:05:44.717]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:44.717]      // if-block "protType == 2"
[03:05:44.717]        // =>  TRUE
[03:05:44.717]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:44.717]        // if-block "isSWJ"
[03:05:44.717]          // =>  TRUE
[03:05:44.717]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:44.717]          // if-block "hasDormant"
[03:05:44.717]            // =>  FALSE
[03:05:44.717]          // skip if-block "hasDormant"
[03:05:44.717]        </control>
[03:05:44.717]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:44.717]          // if-block "!hasDormant"
[03:05:44.717]            // =>  TRUE
[03:05:44.717]          <block atomic="false" info="">
[03:05:44.717]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:45.726]  
[03:05:45.726]  !!! E320 : DAP access error
[03:05:45.726]  
[03:05:45.735]          </block>
[03:05:45.735]          // end if-block "!hasDormant"
[03:05:45.735]        </control>
[03:05:45.735]        // end if-block "isSWJ"
[03:05:45.735]      </control>
[03:05:45.735]      // end if-block "protType == 2"
[03:05:45.735]    </control>
[03:05:45.735]  </sequence>
[03:05:45.735]  
[03:05:45.989]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:45.989]  
[03:05:45.989]  <debugvars>
[03:05:45.989]    // Pre-defined
[03:05:45.989]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:45.989]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:45.989]    __dp=0x00000000
[03:05:45.989]    __ap=0x00000000
[03:05:45.989]    __traceout=0x00000000      (Trace Disabled)
[03:05:45.989]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:45.989]    __FlashAddr=0x00000000
[03:05:45.989]    __FlashLen=0x00000000
[03:05:45.989]    __FlashArg=0x00000000
[03:05:45.989]    __FlashOp=0x00000000
[03:05:45.989]    __Result=0x00000000
[03:05:45.989]  </debugvars>
[03:05:45.989]  
[03:05:45.989]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:45.989]    <block atomic="false" info="">
[03:05:45.989]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:45.989]        // -> [isSWJ <= 0x00000001]
[03:05:45.989]      __var hasDormant = __protocol & 0x00020000;
[03:05:45.989]        // -> [hasDormant <= 0x00000000]
[03:05:45.989]      __var protType   = __protocol & 0x0000FFFF;
[03:05:45.989]        // -> [protType <= 0x00000002]
[03:05:45.989]    </block>
[03:05:45.989]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:45.989]      // if-block "protType == 1"
[03:05:45.989]        // =>  FALSE
[03:05:45.989]      // skip if-block "protType == 1"
[03:05:45.989]    </control>
[03:05:45.989]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:45.989]      // if-block "protType == 2"
[03:05:45.989]        // =>  TRUE
[03:05:45.993]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:45.993]        // if-block "isSWJ"
[03:05:45.993]          // =>  TRUE
[03:05:45.993]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:45.993]          // if-block "hasDormant"
[03:05:45.993]            // =>  FALSE
[03:05:45.993]          // skip if-block "hasDormant"
[03:05:45.993]        </control>
[03:05:45.993]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:45.993]          // if-block "!hasDormant"
[03:05:45.993]            // =>  TRUE
[03:05:45.993]          <block atomic="false" info="">
[03:05:45.993]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:47.004]  
[03:05:47.004]  !!! E320 : DAP access error
[03:05:47.004]  
[03:05:47.012]          </block>
[03:05:47.012]          // end if-block "!hasDormant"
[03:05:47.012]        </control>
[03:05:47.012]        // end if-block "isSWJ"
[03:05:47.012]      </control>
[03:05:47.012]      // end if-block "protType == 2"
[03:05:47.012]    </control>
[03:05:47.012]  </sequence>
[03:05:47.012]  
[03:05:47.270]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:47.270]  
[03:05:47.272]  <debugvars>
[03:05:47.272]    // Pre-defined
[03:05:47.272]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:47.272]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:47.272]    __dp=0x00000000
[03:05:47.272]    __ap=0x00000000
[03:05:47.272]    __traceout=0x00000000      (Trace Disabled)
[03:05:47.272]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:47.272]    __FlashAddr=0x00000000
[03:05:47.272]    __FlashLen=0x00000000
[03:05:47.273]    __FlashArg=0x00000000
[03:05:47.273]    __FlashOp=0x00000000
[03:05:47.273]    __Result=0x00000000
[03:05:47.273]  </debugvars>
[03:05:47.273]  
[03:05:47.273]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:47.273]    <block atomic="false" info="">
[03:05:47.273]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:47.273]        // -> [isSWJ <= 0x00000001]
[03:05:47.273]      __var hasDormant = __protocol & 0x00020000;
[03:05:47.273]        // -> [hasDormant <= 0x00000000]
[03:05:47.273]      __var protType   = __protocol & 0x0000FFFF;
[03:05:47.273]        // -> [protType <= 0x00000002]
[03:05:47.273]    </block>
[03:05:47.273]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:47.274]      // if-block "protType == 1"
[03:05:47.274]        // =>  FALSE
[03:05:47.274]      // skip if-block "protType == 1"
[03:05:47.274]    </control>
[03:05:47.274]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:47.274]      // if-block "protType == 2"
[03:05:47.274]        // =>  TRUE
[03:05:47.274]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:47.274]        // if-block "isSWJ"
[03:05:47.274]          // =>  TRUE
[03:05:47.274]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:47.274]          // if-block "hasDormant"
[03:05:47.274]            // =>  FALSE
[03:05:47.274]          // skip if-block "hasDormant"
[03:05:47.274]        </control>
[03:05:47.274]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:47.274]          // if-block "!hasDormant"
[03:05:47.274]            // =>  TRUE
[03:05:47.274]          <block atomic="false" info="">
[03:05:47.274]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:48.281]  
[03:05:48.281]  !!! E320 : DAP access error
[03:05:48.281]  
[03:05:48.289]          </block>
[03:05:48.289]          // end if-block "!hasDormant"
[03:05:48.289]        </control>
[03:05:48.289]        // end if-block "isSWJ"
[03:05:48.289]      </control>
[03:05:48.289]      // end if-block "protType == 2"
[03:05:48.289]    </control>
[03:05:48.289]  </sequence>
[03:05:48.289]  
[03:05:48.542]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:48.542]  
[03:05:48.550]  <debugvars>
[03:05:48.550]    // Pre-defined
[03:05:48.550]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:48.550]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:48.550]    __dp=0x00000000
[03:05:48.550]    __ap=0x00000000
[03:05:48.550]    __traceout=0x00000000      (Trace Disabled)
[03:05:48.550]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:48.550]    __FlashAddr=0x00000000
[03:05:48.550]    __FlashLen=0x00000000
[03:05:48.550]    __FlashArg=0x00000000
[03:05:48.550]    __FlashOp=0x00000000
[03:05:48.550]    __Result=0x00000000
[03:05:48.550]  </debugvars>
[03:05:48.550]  
[03:05:48.550]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:48.550]    <block atomic="false" info="">
[03:05:48.550]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:48.550]        // -> [isSWJ <= 0x00000001]
[03:05:48.550]      __var hasDormant = __protocol & 0x00020000;
[03:05:48.550]        // -> [hasDormant <= 0x00000000]
[03:05:48.550]      __var protType   = __protocol & 0x0000FFFF;
[03:05:48.550]        // -> [protType <= 0x00000002]
[03:05:48.550]    </block>
[03:05:48.550]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:48.550]      // if-block "protType == 1"
[03:05:48.550]        // =>  FALSE
[03:05:48.550]      // skip if-block "protType == 1"
[03:05:48.550]    </control>
[03:05:48.550]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:48.550]      // if-block "protType == 2"
[03:05:48.550]        // =>  TRUE
[03:05:48.550]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:48.550]        // if-block "isSWJ"
[03:05:48.550]          // =>  TRUE
[03:05:48.550]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:48.554]          // if-block "hasDormant"
[03:05:48.554]            // =>  FALSE
[03:05:48.554]          // skip if-block "hasDormant"
[03:05:48.554]        </control>
[03:05:48.554]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:48.554]          // if-block "!hasDormant"
[03:05:48.554]            // =>  TRUE
[03:05:48.554]          <block atomic="false" info="">
[03:05:48.554]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:49.562]  
[03:05:49.562]  !!! E320 : DAP access error
[03:05:49.562]  
[03:05:49.570]          </block>
[03:05:49.570]          // end if-block "!hasDormant"
[03:05:49.570]        </control>
[03:05:49.570]        // end if-block "isSWJ"
[03:05:49.570]      </control>
[03:05:49.570]      // end if-block "protType == 2"
[03:05:49.570]    </control>
[03:05:49.570]  </sequence>
[03:05:49.570]  
[03:05:49.826]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:49.826]  
[03:05:49.835]  <debugvars>
[03:05:49.835]    // Pre-defined
[03:05:49.835]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:49.835]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:49.835]    __dp=0x00000000
[03:05:49.835]    __ap=0x00000000
[03:05:49.835]    __traceout=0x00000000      (Trace Disabled)
[03:05:49.835]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:49.835]    __FlashAddr=0x00000000
[03:05:49.835]    __FlashLen=0x00000000
[03:05:49.835]    __FlashArg=0x00000000
[03:05:49.835]    __FlashOp=0x00000000
[03:05:49.835]    __Result=0x00000000
[03:05:49.835]  </debugvars>
[03:05:49.835]  
[03:05:49.835]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:49.835]    <block atomic="false" info="">
[03:05:49.835]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:49.835]        // -> [isSWJ <= 0x00000001]
[03:05:49.835]      __var hasDormant = __protocol & 0x00020000;
[03:05:49.835]        // -> [hasDormant <= 0x00000000]
[03:05:49.835]      __var protType   = __protocol & 0x0000FFFF;
[03:05:49.835]        // -> [protType <= 0x00000002]
[03:05:49.835]    </block>
[03:05:49.835]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:49.835]      // if-block "protType == 1"
[03:05:49.835]        // =>  FALSE
[03:05:49.835]      // skip if-block "protType == 1"
[03:05:49.835]    </control>
[03:05:49.839]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:49.839]      // if-block "protType == 2"
[03:05:49.839]        // =>  TRUE
[03:05:49.839]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:49.839]        // if-block "isSWJ"
[03:05:49.839]          // =>  TRUE
[03:05:49.839]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:49.839]          // if-block "hasDormant"
[03:05:49.839]            // =>  FALSE
[03:05:49.839]          // skip if-block "hasDormant"
[03:05:49.839]        </control>
[03:05:49.839]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:49.839]          // if-block "!hasDormant"
[03:05:49.839]            // =>  TRUE
[03:05:49.839]          <block atomic="false" info="">
[03:05:49.839]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:50.848]  
[03:05:50.848]  !!! E320 : DAP access error
[03:05:50.848]  
[03:05:50.856]          </block>
[03:05:50.856]          // end if-block "!hasDormant"
[03:05:50.856]        </control>
[03:05:50.856]        // end if-block "isSWJ"
[03:05:50.856]      </control>
[03:05:50.856]      // end if-block "protType == 2"
[03:05:50.856]    </control>
[03:05:50.856]  </sequence>
[03:05:50.856]  
[03:05:51.112]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:51.112]  
[03:05:51.121]  <debugvars>
[03:05:51.121]    // Pre-defined
[03:05:51.121]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:51.121]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:51.121]    __dp=0x00000000
[03:05:51.121]    __ap=0x00000000
[03:05:51.121]    __traceout=0x00000000      (Trace Disabled)
[03:05:51.121]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:51.121]    __FlashAddr=0x00000000
[03:05:51.121]    __FlashLen=0x00000000
[03:05:51.121]    __FlashArg=0x00000000
[03:05:51.121]    __FlashOp=0x00000000
[03:05:51.121]    __Result=0x00000000
[03:05:51.121]  </debugvars>
[03:05:51.121]  
[03:05:51.121]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:51.121]    <block atomic="false" info="">
[03:05:51.121]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:51.121]        // -> [isSWJ <= 0x00000001]
[03:05:51.121]      __var hasDormant = __protocol & 0x00020000;
[03:05:51.121]        // -> [hasDormant <= 0x00000000]
[03:05:51.121]      __var protType   = __protocol & 0x0000FFFF;
[03:05:51.121]        // -> [protType <= 0x00000002]
[03:05:51.121]    </block>
[03:05:51.121]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:51.121]      // if-block "protType == 1"
[03:05:51.121]        // =>  FALSE
[03:05:51.121]      // skip if-block "protType == 1"
[03:05:51.121]    </control>
[03:05:51.121]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:51.121]      // if-block "protType == 2"
[03:05:51.121]        // =>  TRUE
[03:05:51.121]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:51.125]        // if-block "isSWJ"
[03:05:51.125]          // =>  TRUE
[03:05:51.125]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:51.125]          // if-block "hasDormant"
[03:05:51.125]            // =>  FALSE
[03:05:51.125]          // skip if-block "hasDormant"
[03:05:51.125]        </control>
[03:05:51.125]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:51.125]          // if-block "!hasDormant"
[03:05:51.125]            // =>  TRUE
[03:05:51.125]          <block atomic="false" info="">
[03:05:51.125]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:52.126]  
[03:05:52.126]  !!! E320 : DAP access error
[03:05:52.126]  
[03:05:52.135]          </block>
[03:05:52.135]          // end if-block "!hasDormant"
[03:05:52.135]        </control>
[03:05:52.135]        // end if-block "isSWJ"
[03:05:52.135]      </control>
[03:05:52.135]      // end if-block "protType == 2"
[03:05:52.135]    </control>
[03:05:52.135]  </sequence>
[03:05:52.135]  
[03:05:52.393]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:52.393]  
[03:05:52.403]  <debugvars>
[03:05:52.403]    // Pre-defined
[03:05:52.403]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:52.403]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:52.403]    __dp=0x00000000
[03:05:52.403]    __ap=0x00000000
[03:05:52.403]    __traceout=0x00000000      (Trace Disabled)
[03:05:52.403]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:52.403]    __FlashAddr=0x00000000
[03:05:52.403]    __FlashLen=0x00000000
[03:05:52.403]    __FlashArg=0x00000000
[03:05:52.403]    __FlashOp=0x00000000
[03:05:52.403]    __Result=0x00000000
[03:05:52.403]  </debugvars>
[03:05:52.403]  
[03:05:52.403]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:52.403]    <block atomic="false" info="">
[03:05:52.405]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:52.405]        // -> [isSWJ <= 0x00000001]
[03:05:52.405]      __var hasDormant = __protocol & 0x00020000;
[03:05:52.405]        // -> [hasDormant <= 0x00000000]
[03:05:52.405]      __var protType   = __protocol & 0x0000FFFF;
[03:05:52.405]        // -> [protType <= 0x00000002]
[03:05:52.405]    </block>
[03:05:52.405]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:52.405]      // if-block "protType == 1"
[03:05:52.405]        // =>  FALSE
[03:05:52.405]      // skip if-block "protType == 1"
[03:05:52.405]    </control>
[03:05:52.405]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:52.405]      // if-block "protType == 2"
[03:05:52.405]        // =>  TRUE
[03:05:52.405]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:52.405]        // if-block "isSWJ"
[03:05:52.405]          // =>  TRUE
[03:05:52.405]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:52.405]          // if-block "hasDormant"
[03:05:52.405]            // =>  FALSE
[03:05:52.405]          // skip if-block "hasDormant"
[03:05:52.405]        </control>
[03:05:52.405]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:52.405]          // if-block "!hasDormant"
[03:05:52.405]            // =>  TRUE
[03:05:52.405]          <block atomic="false" info="">
[03:05:52.405]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:53.405]  
[03:05:53.405]  !!! E320 : DAP access error
[03:05:53.405]  
[03:05:53.413]          </block>
[03:05:53.413]          // end if-block "!hasDormant"
[03:05:53.413]        </control>
[03:05:53.413]        // end if-block "isSWJ"
[03:05:53.413]      </control>
[03:05:53.413]      // end if-block "protType == 2"
[03:05:53.413]    </control>
[03:05:53.413]  </sequence>
[03:05:53.413]  
[03:05:53.672]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:53.672]  
[03:05:53.680]  <debugvars>
[03:05:53.680]    // Pre-defined
[03:05:53.680]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:53.680]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:53.680]    __dp=0x00000000
[03:05:53.680]    __ap=0x00000000
[03:05:53.680]    __traceout=0x00000000      (Trace Disabled)
[03:05:53.680]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:53.680]    __FlashAddr=0x00000000
[03:05:53.680]    __FlashLen=0x00000000
[03:05:53.680]    __FlashArg=0x00000000
[03:05:53.681]    __FlashOp=0x00000000
[03:05:53.681]    __Result=0x00000000
[03:05:53.681]  </debugvars>
[03:05:53.681]  
[03:05:53.681]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:53.681]    <block atomic="false" info="">
[03:05:53.681]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:53.681]        // -> [isSWJ <= 0x00000001]
[03:05:53.681]      __var hasDormant = __protocol & 0x00020000;
[03:05:53.681]        // -> [hasDormant <= 0x00000000]
[03:05:53.681]      __var protType   = __protocol & 0x0000FFFF;
[03:05:53.681]        // -> [protType <= 0x00000002]
[03:05:53.683]    </block>
[03:05:53.683]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:53.683]      // if-block "protType == 1"
[03:05:53.683]        // =>  FALSE
[03:05:53.683]      // skip if-block "protType == 1"
[03:05:53.683]    </control>
[03:05:53.683]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:53.683]      // if-block "protType == 2"
[03:05:53.683]        // =>  TRUE
[03:05:53.683]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:53.683]        // if-block "isSWJ"
[03:05:53.684]          // =>  TRUE
[03:05:53.684]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:53.684]          // if-block "hasDormant"
[03:05:53.684]            // =>  FALSE
[03:05:53.684]          // skip if-block "hasDormant"
[03:05:53.684]        </control>
[03:05:53.684]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:53.684]          // if-block "!hasDormant"
[03:05:53.685]            // =>  TRUE
[03:05:53.685]          <block atomic="false" info="">
[03:05:53.685]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:54.694]  
[03:05:54.694]  !!! E320 : DAP access error
[03:05:54.694]  
[03:05:54.703]          </block>
[03:05:54.703]          // end if-block "!hasDormant"
[03:05:54.703]        </control>
[03:05:54.703]        // end if-block "isSWJ"
[03:05:54.703]      </control>
[03:05:54.703]      // end if-block "protType == 2"
[03:05:54.703]    </control>
[03:05:54.703]  </sequence>
[03:05:54.703]  
[03:05:54.963]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:54.963]  
[03:05:54.971]  <debugvars>
[03:05:54.971]    // Pre-defined
[03:05:54.972]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:54.972]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:54.972]    __dp=0x00000000
[03:05:54.972]    __ap=0x00000000
[03:05:54.972]    __traceout=0x00000000      (Trace Disabled)
[03:05:54.972]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:54.972]    __FlashAddr=0x00000000
[03:05:54.972]    __FlashLen=0x00000000
[03:05:54.972]    __FlashArg=0x00000000
[03:05:54.972]    __FlashOp=0x00000000
[03:05:54.972]    __Result=0x00000000
[03:05:54.972]  </debugvars>
[03:05:54.972]  
[03:05:54.973]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:54.973]    <block atomic="false" info="">
[03:05:54.973]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:54.973]        // -> [isSWJ <= 0x00000001]
[03:05:54.973]      __var hasDormant = __protocol & 0x00020000;
[03:05:54.973]        // -> [hasDormant <= 0x00000000]
[03:05:54.973]      __var protType   = __protocol & 0x0000FFFF;
[03:05:54.973]        // -> [protType <= 0x00000002]
[03:05:54.973]    </block>
[03:05:54.973]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:54.973]      // if-block "protType == 1"
[03:05:54.975]        // =>  FALSE
[03:05:54.975]      // skip if-block "protType == 1"
[03:05:54.975]    </control>
[03:05:54.975]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:54.975]      // if-block "protType == 2"
[03:05:54.975]        // =>  TRUE
[03:05:54.975]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:54.975]        // if-block "isSWJ"
[03:05:54.975]          // =>  TRUE
[03:05:54.975]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:54.976]          // if-block "hasDormant"
[03:05:54.976]            // =>  FALSE
[03:05:54.976]          // skip if-block "hasDormant"
[03:05:54.976]        </control>
[03:05:54.976]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:54.976]          // if-block "!hasDormant"
[03:05:54.976]            // =>  TRUE
[03:05:54.976]          <block atomic="false" info="">
[03:05:54.976]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:55.979]  
[03:05:55.979]  !!! E320 : DAP access error
[03:05:55.979]  
[03:05:55.987]          </block>
[03:05:55.987]          // end if-block "!hasDormant"
[03:05:55.987]        </control>
[03:05:55.987]        // end if-block "isSWJ"
[03:05:55.987]      </control>
[03:05:55.987]      // end if-block "protType == 2"
[03:05:55.987]    </control>
[03:05:55.987]  </sequence>
[03:05:55.987]  
[03:05:56.245]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:56.245]  
[03:05:56.253]  <debugvars>
[03:05:56.253]    // Pre-defined
[03:05:56.253]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:56.253]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:56.253]    __dp=0x00000000
[03:05:56.253]    __ap=0x00000000
[03:05:56.254]    __traceout=0x00000000      (Trace Disabled)
[03:05:56.254]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:56.254]    __FlashAddr=0x00000000
[03:05:56.254]    __FlashLen=0x00000000
[03:05:56.254]    __FlashArg=0x00000000
[03:05:56.254]    __FlashOp=0x00000000
[03:05:56.254]    __Result=0x00000000
[03:05:56.254]  </debugvars>
[03:05:56.254]  
[03:05:56.254]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:56.254]    <block atomic="false" info="">
[03:05:56.255]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:56.255]        // -> [isSWJ <= 0x00000001]
[03:05:56.255]      __var hasDormant = __protocol & 0x00020000;
[03:05:56.255]        // -> [hasDormant <= 0x00000000]
[03:05:56.255]      __var protType   = __protocol & 0x0000FFFF;
[03:05:56.255]        // -> [protType <= 0x00000002]
[03:05:56.255]    </block>
[03:05:56.255]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:56.255]      // if-block "protType == 1"
[03:05:56.255]        // =>  FALSE
[03:05:56.255]      // skip if-block "protType == 1"
[03:05:56.256]    </control>
[03:05:56.256]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:56.256]      // if-block "protType == 2"
[03:05:56.256]        // =>  TRUE
[03:05:56.256]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:56.256]        // if-block "isSWJ"
[03:05:56.256]          // =>  TRUE
[03:05:56.256]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:56.256]          // if-block "hasDormant"
[03:05:56.256]            // =>  FALSE
[03:05:56.256]          // skip if-block "hasDormant"
[03:05:56.256]        </control>
[03:05:56.258]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:56.258]          // if-block "!hasDormant"
[03:05:56.258]            // =>  TRUE
[03:05:56.258]          <block atomic="false" info="">
[03:05:56.258]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:57.258]  
[03:05:57.258]  !!! E320 : DAP access error
[03:05:57.258]  
[03:05:57.267]          </block>
[03:05:57.267]          // end if-block "!hasDormant"
[03:05:57.267]        </control>
[03:05:57.267]        // end if-block "isSWJ"
[03:05:57.267]      </control>
[03:05:57.267]      // end if-block "protType == 2"
[03:05:57.267]    </control>
[03:05:57.267]  </sequence>
[03:05:57.267]  
[03:05:57.526]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:57.526]  
[03:05:57.534]  <debugvars>
[03:05:57.534]    // Pre-defined
[03:05:57.534]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:57.534]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:57.534]    __dp=0x00000000
[03:05:57.534]    __ap=0x00000000
[03:05:57.534]    __traceout=0x00000000      (Trace Disabled)
[03:05:57.534]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:57.534]    __FlashAddr=0x00000000
[03:05:57.535]    __FlashLen=0x00000000
[03:05:57.535]    __FlashArg=0x00000000
[03:05:57.535]    __FlashOp=0x00000000
[03:05:57.535]    __Result=0x00000000
[03:05:57.535]  </debugvars>
[03:05:57.535]  
[03:05:57.535]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:57.535]    <block atomic="false" info="">
[03:05:57.535]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:57.535]        // -> [isSWJ <= 0x00000001]
[03:05:57.535]      __var hasDormant = __protocol & 0x00020000;
[03:05:57.535]        // -> [hasDormant <= 0x00000000]
[03:05:57.535]      __var protType   = __protocol & 0x0000FFFF;
[03:05:57.535]        // -> [protType <= 0x00000002]
[03:05:57.535]    </block>
[03:05:57.535]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:57.537]      // if-block "protType == 1"
[03:05:57.537]        // =>  FALSE
[03:05:57.537]      // skip if-block "protType == 1"
[03:05:57.537]    </control>
[03:05:57.538]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:57.538]      // if-block "protType == 2"
[03:05:57.538]        // =>  TRUE
[03:05:57.538]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:57.538]        // if-block "isSWJ"
[03:05:57.538]          // =>  TRUE
[03:05:57.538]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:57.538]          // if-block "hasDormant"
[03:05:57.538]            // =>  FALSE
[03:05:57.538]          // skip if-block "hasDormant"
[03:05:57.538]        </control>
[03:05:57.538]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:57.538]          // if-block "!hasDormant"
[03:05:57.538]            // =>  TRUE
[03:05:57.538]          <block atomic="false" info="">
[03:05:57.538]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:58.546]  
[03:05:58.546]  !!! E320 : DAP access error
[03:05:58.546]  
[03:05:58.555]          </block>
[03:05:58.555]          // end if-block "!hasDormant"
[03:05:58.555]        </control>
[03:05:58.555]        // end if-block "isSWJ"
[03:05:58.555]      </control>
[03:05:58.555]      // end if-block "protType == 2"
[03:05:58.555]    </control>
[03:05:58.555]  </sequence>
[03:05:58.555]  
[03:05:58.814]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:05:58.814]  
[03:05:58.822]  <debugvars>
[03:05:58.822]    // Pre-defined
[03:05:58.822]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:05:58.822]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:05:58.822]    __dp=0x00000000
[03:05:58.822]    __ap=0x00000000
[03:05:58.822]    __traceout=0x00000000      (Trace Disabled)
[03:05:58.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:05:58.822]    __FlashAddr=0x00000000
[03:05:58.822]    __FlashLen=0x00000000
[03:05:58.822]    __FlashArg=0x00000000
[03:05:58.822]    __FlashOp=0x00000000
[03:05:58.822]    __Result=0x00000000
[03:05:58.822]  </debugvars>
[03:05:58.822]  
[03:05:58.822]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:05:58.822]    <block atomic="false" info="">
[03:05:58.822]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:05:58.822]        // -> [isSWJ <= 0x00000001]
[03:05:58.822]      __var hasDormant = __protocol & 0x00020000;
[03:05:58.822]        // -> [hasDormant <= 0x00000000]
[03:05:58.822]      __var protType   = __protocol & 0x0000FFFF;
[03:05:58.822]        // -> [protType <= 0x00000002]
[03:05:58.822]    </block>
[03:05:58.822]    <control if="protType == 1" while="" timeout="0" info="">
[03:05:58.822]      // if-block "protType == 1"
[03:05:58.822]        // =>  FALSE
[03:05:58.822]      // skip if-block "protType == 1"
[03:05:58.822]    </control>
[03:05:58.822]    <control if="protType == 2" while="" timeout="0" info="">
[03:05:58.822]      // if-block "protType == 2"
[03:05:58.822]        // =>  TRUE
[03:05:58.822]      <control if="isSWJ" while="" timeout="0" info="">
[03:05:58.822]        // if-block "isSWJ"
[03:05:58.822]          // =>  TRUE
[03:05:58.822]        <control if="hasDormant" while="" timeout="0" info="">
[03:05:58.822]          // if-block "hasDormant"
[03:05:58.826]            // =>  FALSE
[03:05:58.826]          // skip if-block "hasDormant"
[03:05:58.826]        </control>
[03:05:58.826]        <control if="!hasDormant" while="" timeout="0" info="">
[03:05:58.826]          // if-block "!hasDormant"
[03:05:58.826]            // =>  TRUE
[03:05:58.826]          <block atomic="false" info="">
[03:05:58.826]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:05:59.826]  
[03:05:59.826]  !!! E320 : DAP access error
[03:05:59.826]  
[03:05:59.826]          </block>
[03:05:59.826]          // end if-block "!hasDormant"
[03:05:59.826]        </control>
[03:05:59.826]        // end if-block "isSWJ"
[03:05:59.826]      </control>
[03:05:59.826]      // end if-block "protType == 2"
[03:05:59.826]    </control>
[03:05:59.826]  </sequence>
[03:05:59.826]  
[03:06:00.082]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:00.082]  
[03:06:00.082]  <debugvars>
[03:06:00.083]    // Pre-defined
[03:06:00.083]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:00.083]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:00.083]    __dp=0x00000000
[03:06:00.083]    __ap=0x00000000
[03:06:00.083]    __traceout=0x00000000      (Trace Disabled)
[03:06:00.083]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:00.083]    __FlashAddr=0x00000000
[03:06:00.083]    __FlashLen=0x00000000
[03:06:00.083]    __FlashArg=0x00000000
[03:06:00.083]    __FlashOp=0x00000000
[03:06:00.083]    __Result=0x00000000
[03:06:00.083]  </debugvars>
[03:06:00.083]  
[03:06:00.083]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:00.083]    <block atomic="false" info="">
[03:06:00.083]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:00.083]        // -> [isSWJ <= 0x00000001]
[03:06:00.083]      __var hasDormant = __protocol & 0x00020000;
[03:06:00.083]        // -> [hasDormant <= 0x00000000]
[03:06:00.083]      __var protType   = __protocol & 0x0000FFFF;
[03:06:00.086]        // -> [protType <= 0x00000002]
[03:06:00.086]    </block>
[03:06:00.086]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:00.086]      // if-block "protType == 1"
[03:06:00.086]        // =>  FALSE
[03:06:00.086]      // skip if-block "protType == 1"
[03:06:00.086]    </control>
[03:06:00.086]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:00.086]      // if-block "protType == 2"
[03:06:00.086]        // =>  TRUE
[03:06:00.086]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:00.086]        // if-block "isSWJ"
[03:06:00.086]          // =>  TRUE
[03:06:00.086]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:00.086]          // if-block "hasDormant"
[03:06:00.086]            // =>  FALSE
[03:06:00.086]          // skip if-block "hasDormant"
[03:06:00.086]        </control>
[03:06:00.086]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:00.086]          // if-block "!hasDormant"
[03:06:00.086]            // =>  TRUE
[03:06:00.086]          <block atomic="false" info="">
[03:06:00.086]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:01.088]  
[03:06:01.088]  !!! E320 : DAP access error
[03:06:01.088]  
[03:06:01.097]          </block>
[03:06:01.097]          // end if-block "!hasDormant"
[03:06:01.097]        </control>
[03:06:01.097]        // end if-block "isSWJ"
[03:06:01.097]      </control>
[03:06:01.097]      // end if-block "protType == 2"
[03:06:01.097]    </control>
[03:06:01.097]  </sequence>
[03:06:01.097]  
[03:06:01.348]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:01.348]  
[03:06:01.358]  <debugvars>
[03:06:01.358]    // Pre-defined
[03:06:01.358]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:01.358]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:01.358]    __dp=0x00000000
[03:06:01.358]    __ap=0x00000000
[03:06:01.358]    __traceout=0x00000000      (Trace Disabled)
[03:06:01.358]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:01.358]    __FlashAddr=0x00000000
[03:06:01.358]    __FlashLen=0x00000000
[03:06:01.358]    __FlashArg=0x00000000
[03:06:01.358]    __FlashOp=0x00000000
[03:06:01.358]    __Result=0x00000000
[03:06:01.358]  </debugvars>
[03:06:01.358]  
[03:06:01.358]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:01.358]    <block atomic="false" info="">
[03:06:01.358]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:01.358]        // -> [isSWJ <= 0x00000001]
[03:06:01.358]      __var hasDormant = __protocol & 0x00020000;
[03:06:01.358]        // -> [hasDormant <= 0x00000000]
[03:06:01.358]      __var protType   = __protocol & 0x0000FFFF;
[03:06:01.358]        // -> [protType <= 0x00000002]
[03:06:01.358]    </block>
[03:06:01.358]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:01.361]      // if-block "protType == 1"
[03:06:01.361]        // =>  FALSE
[03:06:01.361]      // skip if-block "protType == 1"
[03:06:01.361]    </control>
[03:06:01.361]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:01.361]      // if-block "protType == 2"
[03:06:01.361]        // =>  TRUE
[03:06:01.361]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:01.361]        // if-block "isSWJ"
[03:06:01.361]          // =>  TRUE
[03:06:01.361]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:01.361]          // if-block "hasDormant"
[03:06:01.361]            // =>  FALSE
[03:06:01.361]          // skip if-block "hasDormant"
[03:06:01.361]        </control>
[03:06:01.361]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:01.361]          // if-block "!hasDormant"
[03:06:01.361]            // =>  TRUE
[03:06:01.361]          <block atomic="false" info="">
[03:06:01.361]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:02.361]  
[03:06:02.361]  !!! E320 : DAP access error
[03:06:02.361]  
[03:06:02.361]          </block>
[03:06:02.361]          // end if-block "!hasDormant"
[03:06:02.361]        </control>
[03:06:02.361]        // end if-block "isSWJ"
[03:06:02.361]      </control>
[03:06:02.361]      // end if-block "protType == 2"
[03:06:02.361]    </control>
[03:06:02.361]  </sequence>
[03:06:02.361]  
[03:06:02.613]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:02.613]  
[03:06:02.623]  <debugvars>
[03:06:02.623]    // Pre-defined
[03:06:02.623]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:02.623]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:02.623]    __dp=0x00000000
[03:06:02.623]    __ap=0x00000000
[03:06:02.623]    __traceout=0x00000000      (Trace Disabled)
[03:06:02.623]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:02.623]    __FlashAddr=0x00000000
[03:06:02.623]    __FlashLen=0x00000000
[03:06:02.623]    __FlashArg=0x00000000
[03:06:02.623]    __FlashOp=0x00000000
[03:06:02.623]    __Result=0x00000000
[03:06:02.623]  </debugvars>
[03:06:02.623]  
[03:06:02.623]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:02.623]    <block atomic="false" info="">
[03:06:02.625]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:02.625]        // -> [isSWJ <= 0x00000001]
[03:06:02.625]      __var hasDormant = __protocol & 0x00020000;
[03:06:02.625]        // -> [hasDormant <= 0x00000000]
[03:06:02.625]      __var protType   = __protocol & 0x0000FFFF;
[03:06:02.625]        // -> [protType <= 0x00000002]
[03:06:02.625]    </block>
[03:06:02.625]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:02.625]      // if-block "protType == 1"
[03:06:02.625]        // =>  FALSE
[03:06:02.625]      // skip if-block "protType == 1"
[03:06:02.625]    </control>
[03:06:02.625]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:02.625]      // if-block "protType == 2"
[03:06:02.625]        // =>  TRUE
[03:06:02.625]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:02.625]        // if-block "isSWJ"
[03:06:02.625]          // =>  TRUE
[03:06:02.625]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:02.625]          // if-block "hasDormant"
[03:06:02.625]            // =>  FALSE
[03:06:02.625]          // skip if-block "hasDormant"
[03:06:02.625]        </control>
[03:06:02.625]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:02.625]          // if-block "!hasDormant"
[03:06:02.625]            // =>  TRUE
[03:06:02.625]          <block atomic="false" info="">
[03:06:02.625]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:03.630]  
[03:06:03.630]  !!! E320 : DAP access error
[03:06:03.630]  
[03:06:03.630]          </block>
[03:06:03.631]          // end if-block "!hasDormant"
[03:06:03.631]        </control>
[03:06:03.631]        // end if-block "isSWJ"
[03:06:03.631]      </control>
[03:06:03.631]      // end if-block "protType == 2"
[03:06:03.631]    </control>
[03:06:03.631]  </sequence>
[03:06:03.631]  
[03:06:03.889]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:03.889]  
[03:06:03.889]  <debugvars>
[03:06:03.889]    // Pre-defined
[03:06:03.889]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:03.889]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:03.889]    __dp=0x00000000
[03:06:03.889]    __ap=0x00000000
[03:06:03.889]    __traceout=0x00000000      (Trace Disabled)
[03:06:03.889]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:03.889]    __FlashAddr=0x00000000
[03:06:03.889]    __FlashLen=0x00000000
[03:06:03.889]    __FlashArg=0x00000000
[03:06:03.889]    __FlashOp=0x00000000
[03:06:03.889]    __Result=0x00000000
[03:06:03.889]  </debugvars>
[03:06:03.889]  
[03:06:03.889]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:03.889]    <block atomic="false" info="">
[03:06:03.889]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:03.889]        // -> [isSWJ <= 0x00000001]
[03:06:03.889]      __var hasDormant = __protocol & 0x00020000;
[03:06:03.889]        // -> [hasDormant <= 0x00000000]
[03:06:03.889]      __var protType   = __protocol & 0x0000FFFF;
[03:06:03.889]        // -> [protType <= 0x00000002]
[03:06:03.889]    </block>
[03:06:03.889]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:03.889]      // if-block "protType == 1"
[03:06:03.889]        // =>  FALSE
[03:06:03.889]      // skip if-block "protType == 1"
[03:06:03.889]    </control>
[03:06:03.889]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:03.893]      // if-block "protType == 2"
[03:06:03.893]        // =>  TRUE
[03:06:03.893]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:03.893]        // if-block "isSWJ"
[03:06:03.893]          // =>  TRUE
[03:06:03.893]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:03.893]          // if-block "hasDormant"
[03:06:03.893]            // =>  FALSE
[03:06:03.893]          // skip if-block "hasDormant"
[03:06:03.893]        </control>
[03:06:03.893]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:03.893]          // if-block "!hasDormant"
[03:06:03.893]            // =>  TRUE
[03:06:03.893]          <block atomic="false" info="">
[03:06:03.893]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:04.897]  
[03:06:04.897]  !!! E320 : DAP access error
[03:06:04.897]  
[03:06:04.905]          </block>
[03:06:04.905]          // end if-block "!hasDormant"
[03:06:04.905]        </control>
[03:06:04.905]        // end if-block "isSWJ"
[03:06:04.905]      </control>
[03:06:04.905]      // end if-block "protType == 2"
[03:06:04.905]    </control>
[03:06:04.906]  </sequence>
[03:06:04.906]  
[03:06:05.166]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:05.166]  
[03:06:05.166]  <debugvars>
[03:06:05.166]    // Pre-defined
[03:06:05.166]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:05.166]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:05.166]    __dp=0x00000000
[03:06:05.166]    __ap=0x00000000
[03:06:05.166]    __traceout=0x00000000      (Trace Disabled)
[03:06:05.166]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:05.166]    __FlashAddr=0x00000000
[03:06:05.166]    __FlashLen=0x00000000
[03:06:05.166]    __FlashArg=0x00000000
[03:06:05.166]    __FlashOp=0x00000000
[03:06:05.166]    __Result=0x00000000
[03:06:05.166]  </debugvars>
[03:06:05.166]  
[03:06:05.166]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:05.166]    <block atomic="false" info="">
[03:06:05.166]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:05.166]        // -> [isSWJ <= 0x00000001]
[03:06:05.166]      __var hasDormant = __protocol & 0x00020000;
[03:06:05.166]        // -> [hasDormant <= 0x00000000]
[03:06:05.166]      __var protType   = __protocol & 0x0000FFFF;
[03:06:05.166]        // -> [protType <= 0x00000002]
[03:06:05.166]    </block>
[03:06:05.166]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:05.166]      // if-block "protType == 1"
[03:06:05.166]        // =>  FALSE
[03:06:05.166]      // skip if-block "protType == 1"
[03:06:05.166]    </control>
[03:06:05.166]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:05.166]      // if-block "protType == 2"
[03:06:05.170]        // =>  TRUE
[03:06:05.170]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:05.170]        // if-block "isSWJ"
[03:06:05.170]          // =>  TRUE
[03:06:05.170]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:05.170]          // if-block "hasDormant"
[03:06:05.170]            // =>  FALSE
[03:06:05.170]          // skip if-block "hasDormant"
[03:06:05.170]        </control>
[03:06:05.170]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:05.170]          // if-block "!hasDormant"
[03:06:05.170]            // =>  TRUE
[03:06:05.170]          <block atomic="false" info="">
[03:06:05.170]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:06.179]  
[03:06:06.179]  !!! E320 : DAP access error
[03:06:06.179]  
[03:06:06.188]          </block>
[03:06:06.188]          // end if-block "!hasDormant"
[03:06:06.188]        </control>
[03:06:06.188]        // end if-block "isSWJ"
[03:06:06.188]      </control>
[03:06:06.188]      // end if-block "protType == 2"
[03:06:06.188]    </control>
[03:06:06.188]  </sequence>
[03:06:06.188]  
[03:06:06.444]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:06.444]  
[03:06:06.444]  <debugvars>
[03:06:06.444]    // Pre-defined
[03:06:06.444]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:06.444]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:06.444]    __dp=0x00000000
[03:06:06.444]    __ap=0x00000000
[03:06:06.444]    __traceout=0x00000000      (Trace Disabled)
[03:06:06.444]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:06.444]    __FlashAddr=0x00000000
[03:06:06.444]    __FlashLen=0x00000000
[03:06:06.444]    __FlashArg=0x00000000
[03:06:06.444]    __FlashOp=0x00000000
[03:06:06.444]    __Result=0x00000000
[03:06:06.444]  </debugvars>
[03:06:06.444]  
[03:06:06.444]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:06.444]    <block atomic="false" info="">
[03:06:06.448]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:06.448]        // -> [isSWJ <= 0x00000001]
[03:06:06.448]      __var hasDormant = __protocol & 0x00020000;
[03:06:06.448]        // -> [hasDormant <= 0x00000000]
[03:06:06.448]      __var protType   = __protocol & 0x0000FFFF;
[03:06:06.448]        // -> [protType <= 0x00000002]
[03:06:06.448]    </block>
[03:06:06.448]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:06.448]      // if-block "protType == 1"
[03:06:06.448]        // =>  FALSE
[03:06:06.448]      // skip if-block "protType == 1"
[03:06:06.448]    </control>
[03:06:06.448]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:06.448]      // if-block "protType == 2"
[03:06:06.448]        // =>  TRUE
[03:06:06.448]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:06.448]        // if-block "isSWJ"
[03:06:06.448]          // =>  TRUE
[03:06:06.448]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:06.448]          // if-block "hasDormant"
[03:06:06.448]            // =>  FALSE
[03:06:06.448]          // skip if-block "hasDormant"
[03:06:06.448]        </control>
[03:06:06.448]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:06.448]          // if-block "!hasDormant"
[03:06:06.448]            // =>  TRUE
[03:06:06.448]          <block atomic="false" info="">
[03:06:06.448]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:07.457]  
[03:06:07.457]  !!! E320 : DAP access error
[03:06:07.457]  
[03:06:07.466]          </block>
[03:06:07.466]          // end if-block "!hasDormant"
[03:06:07.466]        </control>
[03:06:07.466]        // end if-block "isSWJ"
[03:06:07.466]      </control>
[03:06:07.466]      // end if-block "protType == 2"
[03:06:07.466]    </control>
[03:06:07.466]  </sequence>
[03:06:07.466]  
[03:06:07.726]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:07.726]  
[03:06:07.726]  <debugvars>
[03:06:07.726]    // Pre-defined
[03:06:07.726]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:07.726]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:07.726]    __dp=0x00000000
[03:06:07.726]    __ap=0x00000000
[03:06:07.726]    __traceout=0x00000000      (Trace Disabled)
[03:06:07.726]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:07.726]    __FlashAddr=0x00000000
[03:06:07.726]    __FlashLen=0x00000000
[03:06:07.726]    __FlashArg=0x00000000
[03:06:07.726]    __FlashOp=0x00000000
[03:06:07.726]    __Result=0x00000000
[03:06:07.726]  </debugvars>
[03:06:07.726]  
[03:06:07.726]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:07.726]    <block atomic="false" info="">
[03:06:07.726]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:07.726]        // -> [isSWJ <= 0x00000001]
[03:06:07.726]      __var hasDormant = __protocol & 0x00020000;
[03:06:07.726]        // -> [hasDormant <= 0x00000000]
[03:06:07.726]      __var protType   = __protocol & 0x0000FFFF;
[03:06:07.726]        // -> [protType <= 0x00000002]
[03:06:07.726]    </block>
[03:06:07.726]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:07.726]      // if-block "protType == 1"
[03:06:07.726]        // =>  FALSE
[03:06:07.726]      // skip if-block "protType == 1"
[03:06:07.726]    </control>
[03:06:07.726]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:07.726]      // if-block "protType == 2"
[03:06:07.730]        // =>  TRUE
[03:06:07.730]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:07.730]        // if-block "isSWJ"
[03:06:07.730]          // =>  TRUE
[03:06:07.730]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:07.730]          // if-block "hasDormant"
[03:06:07.730]            // =>  FALSE
[03:06:07.730]          // skip if-block "hasDormant"
[03:06:07.730]        </control>
[03:06:07.730]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:07.730]          // if-block "!hasDormant"
[03:06:07.730]            // =>  TRUE
[03:06:07.730]          <block atomic="false" info="">
[03:06:07.730]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:08.736]  
[03:06:08.736]  !!! E320 : DAP access error
[03:06:08.736]  
[03:06:08.744]          </block>
[03:06:08.744]          // end if-block "!hasDormant"
[03:06:08.744]        </control>
[03:06:08.744]        // end if-block "isSWJ"
[03:06:08.744]      </control>
[03:06:08.744]      // end if-block "protType == 2"
[03:06:08.744]    </control>
[03:06:08.744]  </sequence>
[03:06:08.744]  
[03:06:09.001]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:09.001]  
[03:06:09.009]  <debugvars>
[03:06:09.009]    // Pre-defined
[03:06:09.009]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:09.009]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:09.009]    __dp=0x00000000
[03:06:09.009]    __ap=0x00000000
[03:06:09.009]    __traceout=0x00000000      (Trace Disabled)
[03:06:09.009]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:09.009]    __FlashAddr=0x00000000
[03:06:09.009]    __FlashLen=0x00000000
[03:06:09.009]    __FlashArg=0x00000000
[03:06:09.009]    __FlashOp=0x00000000
[03:06:09.009]    __Result=0x00000000
[03:06:09.009]  </debugvars>
[03:06:09.009]  
[03:06:09.009]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:09.009]    <block atomic="false" info="">
[03:06:09.009]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:09.009]        // -> [isSWJ <= 0x00000001]
[03:06:09.009]      __var hasDormant = __protocol & 0x00020000;
[03:06:09.009]        // -> [hasDormant <= 0x00000000]
[03:06:09.009]      __var protType   = __protocol & 0x0000FFFF;
[03:06:09.009]        // -> [protType <= 0x00000002]
[03:06:09.009]    </block>
[03:06:09.009]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:09.009]      // if-block "protType == 1"
[03:06:09.009]        // =>  FALSE
[03:06:09.009]      // skip if-block "protType == 1"
[03:06:09.009]    </control>
[03:06:09.009]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:09.009]      // if-block "protType == 2"
[03:06:09.009]        // =>  TRUE
[03:06:09.009]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:09.009]        // if-block "isSWJ"
[03:06:09.009]          // =>  TRUE
[03:06:09.009]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:09.009]          // if-block "hasDormant"
[03:06:09.009]            // =>  FALSE
[03:06:09.009]          // skip if-block "hasDormant"
[03:06:09.013]        </control>
[03:06:09.013]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:09.013]          // if-block "!hasDormant"
[03:06:09.013]            // =>  TRUE
[03:06:09.013]          <block atomic="false" info="">
[03:06:09.013]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:10.016]  
[03:06:10.016]  !!! E320 : DAP access error
[03:06:10.016]  
[03:06:10.018]          </block>
[03:06:10.018]          // end if-block "!hasDormant"
[03:06:10.018]        </control>
[03:06:10.018]        // end if-block "isSWJ"
[03:06:10.018]      </control>
[03:06:10.018]      // end if-block "protType == 2"
[03:06:10.018]    </control>
[03:06:10.018]  </sequence>
[03:06:10.018]  
[03:06:10.270]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:10.270]  
[03:06:10.272]  <debugvars>
[03:06:10.272]    // Pre-defined
[03:06:10.272]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:10.272]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:10.272]    __dp=0x00000000
[03:06:10.272]    __ap=0x00000000
[03:06:10.272]    __traceout=0x00000000      (Trace Disabled)
[03:06:10.272]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:10.272]    __FlashAddr=0x00000000
[03:06:10.272]    __FlashLen=0x00000000
[03:06:10.272]    __FlashArg=0x00000000
[03:06:10.272]    __FlashOp=0x00000000
[03:06:10.272]    __Result=0x00000000
[03:06:10.272]  </debugvars>
[03:06:10.272]  
[03:06:10.272]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:10.272]    <block atomic="false" info="">
[03:06:10.272]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:10.272]        // -> [isSWJ <= 0x00000001]
[03:06:10.274]      __var hasDormant = __protocol & 0x00020000;
[03:06:10.274]        // -> [hasDormant <= 0x00000000]
[03:06:10.274]      __var protType   = __protocol & 0x0000FFFF;
[03:06:10.274]        // -> [protType <= 0x00000002]
[03:06:10.274]    </block>
[03:06:10.274]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:10.274]      // if-block "protType == 1"
[03:06:10.274]        // =>  FALSE
[03:06:10.274]      // skip if-block "protType == 1"
[03:06:10.274]    </control>
[03:06:10.274]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:10.274]      // if-block "protType == 2"
[03:06:10.274]        // =>  TRUE
[03:06:10.274]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:10.274]        // if-block "isSWJ"
[03:06:10.274]          // =>  TRUE
[03:06:10.274]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:10.274]          // if-block "hasDormant"
[03:06:10.274]            // =>  FALSE
[03:06:10.274]          // skip if-block "hasDormant"
[03:06:10.274]        </control>
[03:06:10.274]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:10.274]          // if-block "!hasDormant"
[03:06:10.274]            // =>  TRUE
[03:06:10.274]          <block atomic="false" info="">
[03:06:10.274]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:11.280]  
[03:06:11.280]  !!! E320 : DAP access error
[03:06:11.280]  
[03:06:11.288]          </block>
[03:06:11.288]          // end if-block "!hasDormant"
[03:06:11.288]        </control>
[03:06:11.288]        // end if-block "isSWJ"
[03:06:11.289]      </control>
[03:06:11.289]      // end if-block "protType == 2"
[03:06:11.289]    </control>
[03:06:11.289]  </sequence>
[03:06:11.289]  
[03:06:11.548]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:11.548]  
[03:06:11.556]  <debugvars>
[03:06:11.556]    // Pre-defined
[03:06:11.556]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:11.556]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:11.556]    __dp=0x00000000
[03:06:11.556]    __ap=0x00000000
[03:06:11.556]    __traceout=0x00000000      (Trace Disabled)
[03:06:11.556]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:11.556]    __FlashAddr=0x00000000
[03:06:11.556]    __FlashLen=0x00000000
[03:06:11.556]    __FlashArg=0x00000000
[03:06:11.556]    __FlashOp=0x00000000
[03:06:11.556]    __Result=0x00000000
[03:06:11.556]  </debugvars>
[03:06:11.556]  
[03:06:11.556]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:11.556]    <block atomic="false" info="">
[03:06:11.556]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:11.556]        // -> [isSWJ <= 0x00000001]
[03:06:11.556]      __var hasDormant = __protocol & 0x00020000;
[03:06:11.556]        // -> [hasDormant <= 0x00000000]
[03:06:11.556]      __var protType   = __protocol & 0x0000FFFF;
[03:06:11.556]        // -> [protType <= 0x00000002]
[03:06:11.556]    </block>
[03:06:11.556]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:11.556]      // if-block "protType == 1"
[03:06:11.556]        // =>  FALSE
[03:06:11.556]      // skip if-block "protType == 1"
[03:06:11.556]    </control>
[03:06:11.556]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:11.556]      // if-block "protType == 2"
[03:06:11.556]        // =>  TRUE
[03:06:11.556]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:11.556]        // if-block "isSWJ"
[03:06:11.556]          // =>  TRUE
[03:06:11.556]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:11.556]          // if-block "hasDormant"
[03:06:11.556]            // =>  FALSE
[03:06:11.556]          // skip if-block "hasDormant"
[03:06:11.560]        </control>
[03:06:11.560]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:11.560]          // if-block "!hasDormant"
[03:06:11.560]            // =>  TRUE
[03:06:11.560]          <block atomic="false" info="">
[03:06:11.560]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:12.569]  
[03:06:12.569]  !!! E320 : DAP access error
[03:06:12.569]  
[03:06:12.578]          </block>
[03:06:12.578]          // end if-block "!hasDormant"
[03:06:12.578]        </control>
[03:06:12.578]        // end if-block "isSWJ"
[03:06:12.578]      </control>
[03:06:12.578]      // end if-block "protType == 2"
[03:06:12.578]    </control>
[03:06:12.578]  </sequence>
[03:06:12.578]  
[03:06:12.840]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:12.840]  
[03:06:12.850]  <debugvars>
[03:06:12.850]    // Pre-defined
[03:06:12.850]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:12.850]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:12.850]    __dp=0x00000000
[03:06:12.850]    __ap=0x00000000
[03:06:12.850]    __traceout=0x00000000      (Trace Disabled)
[03:06:12.850]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:12.850]    __FlashAddr=0x00000000
[03:06:12.850]    __FlashLen=0x00000000
[03:06:12.850]    __FlashArg=0x00000000
[03:06:12.850]    __FlashOp=0x00000000
[03:06:12.850]    __Result=0x00000000
[03:06:12.850]  </debugvars>
[03:06:12.850]  
[03:06:12.850]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:12.850]    <block atomic="false" info="">
[03:06:12.850]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:12.850]        // -> [isSWJ <= 0x00000001]
[03:06:12.852]      __var hasDormant = __protocol & 0x00020000;
[03:06:12.852]        // -> [hasDormant <= 0x00000000]
[03:06:12.852]      __var protType   = __protocol & 0x0000FFFF;
[03:06:12.852]        // -> [protType <= 0x00000002]
[03:06:12.852]    </block>
[03:06:12.852]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:12.852]      // if-block "protType == 1"
[03:06:12.853]        // =>  FALSE
[03:06:12.853]      // skip if-block "protType == 1"
[03:06:12.853]    </control>
[03:06:12.853]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:12.854]      // if-block "protType == 2"
[03:06:12.854]        // =>  TRUE
[03:06:12.854]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:12.854]        // if-block "isSWJ"
[03:06:12.854]          // =>  TRUE
[03:06:12.854]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:12.854]          // if-block "hasDormant"
[03:06:12.854]            // =>  FALSE
[03:06:12.854]          // skip if-block "hasDormant"
[03:06:12.854]        </control>
[03:06:12.854]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:12.854]          // if-block "!hasDormant"
[03:06:12.854]            // =>  TRUE
[03:06:12.854]          <block atomic="false" info="">
[03:06:12.854]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:13.860]  
[03:06:13.860]  !!! E320 : DAP access error
[03:06:13.860]  
[03:06:13.868]          </block>
[03:06:13.868]          // end if-block "!hasDormant"
[03:06:13.868]        </control>
[03:06:13.868]        // end if-block "isSWJ"
[03:06:13.868]      </control>
[03:06:13.868]      // end if-block "protType == 2"
[03:06:13.868]    </control>
[03:06:13.868]  </sequence>
[03:06:13.868]  
[03:06:14.124]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:14.124]  
[03:06:14.133]  <debugvars>
[03:06:14.133]    // Pre-defined
[03:06:14.133]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:14.133]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:14.133]    __dp=0x00000000
[03:06:14.133]    __ap=0x00000000
[03:06:14.133]    __traceout=0x00000000      (Trace Disabled)
[03:06:14.133]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:14.133]    __FlashAddr=0x00000000
[03:06:14.133]    __FlashLen=0x00000000
[03:06:14.133]    __FlashArg=0x00000000
[03:06:14.133]    __FlashOp=0x00000000
[03:06:14.133]    __Result=0x00000000
[03:06:14.133]  </debugvars>
[03:06:14.133]  
[03:06:14.133]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:14.133]    <block atomic="false" info="">
[03:06:14.133]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:14.133]        // -> [isSWJ <= 0x00000001]
[03:06:14.133]      __var hasDormant = __protocol & 0x00020000;
[03:06:14.133]        // -> [hasDormant <= 0x00000000]
[03:06:14.133]      __var protType   = __protocol & 0x0000FFFF;
[03:06:14.133]        // -> [protType <= 0x00000002]
[03:06:14.133]    </block>
[03:06:14.133]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:14.133]      // if-block "protType == 1"
[03:06:14.133]        // =>  FALSE
[03:06:14.136]      // skip if-block "protType == 1"
[03:06:14.136]    </control>
[03:06:14.136]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:14.136]      // if-block "protType == 2"
[03:06:14.136]        // =>  TRUE
[03:06:14.136]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:14.136]        // if-block "isSWJ"
[03:06:14.136]          // =>  TRUE
[03:06:14.136]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:14.136]          // if-block "hasDormant"
[03:06:14.136]            // =>  FALSE
[03:06:14.136]          // skip if-block "hasDormant"
[03:06:14.136]        </control>
[03:06:14.136]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:14.136]          // if-block "!hasDormant"
[03:06:14.136]            // =>  TRUE
[03:06:14.136]          <block atomic="false" info="">
[03:06:14.136]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:15.142]  
[03:06:15.142]  !!! E320 : DAP access error
[03:06:15.142]  
[03:06:15.142]          </block>
[03:06:15.143]          // end if-block "!hasDormant"
[03:06:15.143]        </control>
[03:06:15.143]        // end if-block "isSWJ"
[03:06:15.143]      </control>
[03:06:15.143]      // end if-block "protType == 2"
[03:06:15.143]    </control>
[03:06:15.143]  </sequence>
[03:06:15.143]  
[03:06:15.403]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:15.403]  
[03:06:15.412]  <debugvars>
[03:06:15.412]    // Pre-defined
[03:06:15.412]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:15.412]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:15.412]    __dp=0x00000000
[03:06:15.412]    __ap=0x00000000
[03:06:15.412]    __traceout=0x00000000      (Trace Disabled)
[03:06:15.412]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:15.412]    __FlashAddr=0x00000000
[03:06:15.412]    __FlashLen=0x00000000
[03:06:15.412]    __FlashArg=0x00000000
[03:06:15.412]    __FlashOp=0x00000000
[03:06:15.412]    __Result=0x00000000
[03:06:15.412]  </debugvars>
[03:06:15.412]  
[03:06:15.412]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:15.412]    <block atomic="false" info="">
[03:06:15.412]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:15.412]        // -> [isSWJ <= 0x00000001]
[03:06:15.414]      __var hasDormant = __protocol & 0x00020000;
[03:06:15.414]        // -> [hasDormant <= 0x00000000]
[03:06:15.414]      __var protType   = __protocol & 0x0000FFFF;
[03:06:15.414]        // -> [protType <= 0x00000002]
[03:06:15.414]    </block>
[03:06:15.414]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:15.415]      // if-block "protType == 1"
[03:06:15.415]        // =>  FALSE
[03:06:15.415]      // skip if-block "protType == 1"
[03:06:15.415]    </control>
[03:06:15.415]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:15.415]      // if-block "protType == 2"
[03:06:15.415]        // =>  TRUE
[03:06:15.415]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:15.415]        // if-block "isSWJ"
[03:06:15.415]          // =>  TRUE
[03:06:15.415]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:15.415]          // if-block "hasDormant"
[03:06:15.415]            // =>  FALSE
[03:06:15.415]          // skip if-block "hasDormant"
[03:06:15.415]        </control>
[03:06:15.415]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:15.415]          // if-block "!hasDormant"
[03:06:15.415]            // =>  TRUE
[03:06:15.415]          <block atomic="false" info="">
[03:06:15.415]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:16.425]  
[03:06:16.425]  !!! E320 : DAP access error
[03:06:16.425]  
[03:06:16.433]          </block>
[03:06:16.433]          // end if-block "!hasDormant"
[03:06:16.433]        </control>
[03:06:16.433]        // end if-block "isSWJ"
[03:06:16.433]      </control>
[03:06:16.433]      // end if-block "protType == 2"
[03:06:16.433]    </control>
[03:06:16.433]  </sequence>
[03:06:16.433]  
[03:06:16.695]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:16.695]  
[03:06:16.704]  <debugvars>
[03:06:16.704]    // Pre-defined
[03:06:16.704]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:16.704]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:16.704]    __dp=0x00000000
[03:06:16.704]    __ap=0x00000000
[03:06:16.704]    __traceout=0x00000000      (Trace Disabled)
[03:06:16.704]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:16.704]    __FlashAddr=0x00000000
[03:06:16.704]    __FlashLen=0x00000000
[03:06:16.704]    __FlashArg=0x00000000
[03:06:16.704]    __FlashOp=0x00000000
[03:06:16.704]    __Result=0x00000000
[03:06:16.704]  </debugvars>
[03:06:16.704]  
[03:06:16.704]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:16.704]    <block atomic="false" info="">
[03:06:16.704]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:16.704]        // -> [isSWJ <= 0x00000001]
[03:06:16.704]      __var hasDormant = __protocol & 0x00020000;
[03:06:16.704]        // -> [hasDormant <= 0x00000000]
[03:06:16.704]      __var protType   = __protocol & 0x0000FFFF;
[03:06:16.707]        // -> [protType <= 0x00000002]
[03:06:16.707]    </block>
[03:06:16.707]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:16.707]      // if-block "protType == 1"
[03:06:16.707]        // =>  FALSE
[03:06:16.707]      // skip if-block "protType == 1"
[03:06:16.707]    </control>
[03:06:16.707]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:16.707]      // if-block "protType == 2"
[03:06:16.707]        // =>  TRUE
[03:06:16.707]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:16.707]        // if-block "isSWJ"
[03:06:16.707]          // =>  TRUE
[03:06:16.707]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:16.707]          // if-block "hasDormant"
[03:06:16.707]            // =>  FALSE
[03:06:16.707]          // skip if-block "hasDormant"
[03:06:16.707]        </control>
[03:06:16.707]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:16.707]          // if-block "!hasDormant"
[03:06:16.707]            // =>  TRUE
[03:06:16.707]          <block atomic="false" info="">
[03:06:16.707]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:17.716]  
[03:06:17.716]  !!! E320 : DAP access error
[03:06:17.716]  
[03:06:17.725]          </block>
[03:06:17.725]          // end if-block "!hasDormant"
[03:06:17.725]        </control>
[03:06:17.725]        // end if-block "isSWJ"
[03:06:17.725]      </control>
[03:06:17.725]      // end if-block "protType == 2"
[03:06:17.725]    </control>
[03:06:17.725]  </sequence>
[03:06:17.725]  
[03:06:17.978]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:17.978]  
[03:06:17.986]  <debugvars>
[03:06:17.986]    // Pre-defined
[03:06:17.986]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:17.986]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:17.986]    __dp=0x00000000
[03:06:17.986]    __ap=0x00000000
[03:06:17.986]    __traceout=0x00000000      (Trace Disabled)
[03:06:17.986]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:17.986]    __FlashAddr=0x00000000
[03:06:17.986]    __FlashLen=0x00000000
[03:06:17.986]    __FlashArg=0x00000000
[03:06:17.986]    __FlashOp=0x00000000
[03:06:17.986]    __Result=0x00000000
[03:06:17.986]  </debugvars>
[03:06:17.986]  
[03:06:17.986]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:17.986]    <block atomic="false" info="">
[03:06:17.986]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:17.986]        // -> [isSWJ <= 0x00000001]
[03:06:17.986]      __var hasDormant = __protocol & 0x00020000;
[03:06:17.988]        // -> [hasDormant <= 0x00000000]
[03:06:17.988]      __var protType   = __protocol & 0x0000FFFF;
[03:06:17.988]        // -> [protType <= 0x00000002]
[03:06:17.988]    </block>
[03:06:17.988]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:17.988]      // if-block "protType == 1"
[03:06:17.988]        // =>  FALSE
[03:06:17.988]      // skip if-block "protType == 1"
[03:06:17.988]    </control>
[03:06:17.988]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:17.988]      // if-block "protType == 2"
[03:06:17.988]        // =>  TRUE
[03:06:17.988]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:17.990]        // if-block "isSWJ"
[03:06:17.990]          // =>  TRUE
[03:06:17.990]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:17.990]          // if-block "hasDormant"
[03:06:17.990]            // =>  FALSE
[03:06:17.990]          // skip if-block "hasDormant"
[03:06:17.990]        </control>
[03:06:17.990]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:17.990]          // if-block "!hasDormant"
[03:06:17.990]            // =>  TRUE
[03:06:17.990]          <block atomic="false" info="">
[03:06:17.990]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:19.002]  
[03:06:19.002]  !!! E320 : DAP access error
[03:06:19.002]  
[03:06:19.011]          </block>
[03:06:19.011]          // end if-block "!hasDormant"
[03:06:19.011]        </control>
[03:06:19.011]        // end if-block "isSWJ"
[03:06:19.011]      </control>
[03:06:19.011]      // end if-block "protType == 2"
[03:06:19.011]    </control>
[03:06:19.012]  </sequence>
[03:06:19.012]  
[03:06:19.272]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:19.272]  
[03:06:19.280]  <debugvars>
[03:06:19.280]    // Pre-defined
[03:06:19.280]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:19.280]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:19.280]    __dp=0x00000000
[03:06:19.280]    __ap=0x00000000
[03:06:19.280]    __traceout=0x00000000      (Trace Disabled)
[03:06:19.280]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:19.280]    __FlashAddr=0x00000000
[03:06:19.280]    __FlashLen=0x00000000
[03:06:19.280]    __FlashArg=0x00000000
[03:06:19.280]    __FlashOp=0x00000000
[03:06:19.280]    __Result=0x00000000
[03:06:19.280]  </debugvars>
[03:06:19.280]  
[03:06:19.280]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:19.280]    <block atomic="false" info="">
[03:06:19.280]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:19.280]        // -> [isSWJ <= 0x00000001]
[03:06:19.280]      __var hasDormant = __protocol & 0x00020000;
[03:06:19.280]        // -> [hasDormant <= 0x00000000]
[03:06:19.280]      __var protType   = __protocol & 0x0000FFFF;
[03:06:19.280]        // -> [protType <= 0x00000002]
[03:06:19.280]    </block>
[03:06:19.280]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:19.280]      // if-block "protType == 1"
[03:06:19.280]        // =>  FALSE
[03:06:19.280]      // skip if-block "protType == 1"
[03:06:19.280]    </control>
[03:06:19.280]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:19.280]      // if-block "protType == 2"
[03:06:19.284]        // =>  TRUE
[03:06:19.284]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:19.284]        // if-block "isSWJ"
[03:06:19.284]          // =>  TRUE
[03:06:19.284]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:19.284]          // if-block "hasDormant"
[03:06:19.284]            // =>  FALSE
[03:06:19.284]          // skip if-block "hasDormant"
[03:06:19.284]        </control>
[03:06:19.284]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:19.284]          // if-block "!hasDormant"
[03:06:19.284]            // =>  TRUE
[03:06:19.284]          <block atomic="false" info="">
[03:06:19.284]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:20.291]  
[03:06:20.291]  !!! E320 : DAP access error
[03:06:20.291]  
[03:06:20.300]          </block>
[03:06:20.300]          // end if-block "!hasDormant"
[03:06:20.300]        </control>
[03:06:20.300]        // end if-block "isSWJ"
[03:06:20.300]      </control>
[03:06:20.300]      // end if-block "protType == 2"
[03:06:20.300]    </control>
[03:06:20.300]  </sequence>
[03:06:20.300]  
[03:06:20.562]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:20.562]  
[03:06:20.562]  <debugvars>
[03:06:20.562]    // Pre-defined
[03:06:20.562]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:20.563]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:20.563]    __dp=0x00000000
[03:06:20.563]    __ap=0x00000000
[03:06:20.563]    __traceout=0x00000000      (Trace Disabled)
[03:06:20.563]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:20.563]    __FlashAddr=0x00000000
[03:06:20.563]    __FlashLen=0x00000000
[03:06:20.563]    __FlashArg=0x00000000
[03:06:20.563]    __FlashOp=0x00000000
[03:06:20.563]    __Result=0x00000000
[03:06:20.564]  </debugvars>
[03:06:20.564]  
[03:06:20.564]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:20.564]    <block atomic="false" info="">
[03:06:20.564]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:20.564]        // -> [isSWJ <= 0x00000001]
[03:06:20.564]      __var hasDormant = __protocol & 0x00020000;
[03:06:20.564]        // -> [hasDormant <= 0x00000000]
[03:06:20.564]      __var protType   = __protocol & 0x0000FFFF;
[03:06:20.564]        // -> [protType <= 0x00000002]
[03:06:20.564]    </block>
[03:06:20.564]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:20.564]      // if-block "protType == 1"
[03:06:20.564]        // =>  FALSE
[03:06:20.564]      // skip if-block "protType == 1"
[03:06:20.564]    </control>
[03:06:20.564]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:20.564]      // if-block "protType == 2"
[03:06:20.566]        // =>  TRUE
[03:06:20.566]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:20.566]        // if-block "isSWJ"
[03:06:20.566]          // =>  TRUE
[03:06:20.566]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:20.566]          // if-block "hasDormant"
[03:06:20.566]            // =>  FALSE
[03:06:20.566]          // skip if-block "hasDormant"
[03:06:20.566]        </control>
[03:06:20.566]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:20.566]          // if-block "!hasDormant"
[03:06:20.566]            // =>  TRUE
[03:06:20.566]          <block atomic="false" info="">
[03:06:20.566]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:21.578]  
[03:06:21.578]  !!! E320 : DAP access error
[03:06:21.578]  
[03:06:21.587]          </block>
[03:06:21.587]          // end if-block "!hasDormant"
[03:06:21.587]        </control>
[03:06:21.587]        // end if-block "isSWJ"
[03:06:21.587]      </control>
[03:06:21.587]      // end if-block "protType == 2"
[03:06:21.587]    </control>
[03:06:21.587]  </sequence>
[03:06:21.587]  
[03:06:21.846]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:21.846]  
[03:06:21.846]  <debugvars>
[03:06:21.846]    // Pre-defined
[03:06:21.846]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:21.847]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:21.847]    __dp=0x00000000
[03:06:21.847]    __ap=0x00000000
[03:06:21.847]    __traceout=0x00000000      (Trace Disabled)
[03:06:21.847]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:21.847]    __FlashAddr=0x00000000
[03:06:21.847]    __FlashLen=0x00000000
[03:06:21.847]    __FlashArg=0x00000000
[03:06:21.847]    __FlashOp=0x00000000
[03:06:21.847]    __Result=0x00000000
[03:06:21.847]  </debugvars>
[03:06:21.847]  
[03:06:21.848]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:21.848]    <block atomic="false" info="">
[03:06:21.848]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:21.848]        // -> [isSWJ <= 0x00000001]
[03:06:21.848]      __var hasDormant = __protocol & 0x00020000;
[03:06:21.848]        // -> [hasDormant <= 0x00000000]
[03:06:21.848]      __var protType   = __protocol & 0x0000FFFF;
[03:06:21.848]        // -> [protType <= 0x00000002]
[03:06:21.848]    </block>
[03:06:21.848]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:21.849]      // if-block "protType == 1"
[03:06:21.849]        // =>  FALSE
[03:06:21.849]      // skip if-block "protType == 1"
[03:06:21.849]    </control>
[03:06:21.849]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:21.849]      // if-block "protType == 2"
[03:06:21.849]        // =>  TRUE
[03:06:21.849]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:21.849]        // if-block "isSWJ"
[03:06:21.850]          // =>  TRUE
[03:06:21.850]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:21.850]          // if-block "hasDormant"
[03:06:21.850]            // =>  FALSE
[03:06:21.850]          // skip if-block "hasDormant"
[03:06:21.851]        </control>
[03:06:21.851]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:21.851]          // if-block "!hasDormant"
[03:06:21.851]            // =>  TRUE
[03:06:21.851]          <block atomic="false" info="">
[03:06:21.851]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:22.856]  
[03:06:22.856]  !!! E320 : DAP access error
[03:06:22.856]  
[03:06:22.858]          </block>
[03:06:22.858]          // end if-block "!hasDormant"
[03:06:22.858]        </control>
[03:06:22.858]        // end if-block "isSWJ"
[03:06:22.858]      </control>
[03:06:22.858]      // end if-block "protType == 2"
[03:06:22.858]    </control>
[03:06:22.858]  </sequence>
[03:06:22.858]  
[03:06:23.116]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:23.116]  
[03:06:23.126]  <debugvars>
[03:06:23.126]    // Pre-defined
[03:06:23.126]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:23.126]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:23.126]    __dp=0x00000000
[03:06:23.126]    __ap=0x00000000
[03:06:23.126]    __traceout=0x00000000      (Trace Disabled)
[03:06:23.126]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:23.126]    __FlashAddr=0x00000000
[03:06:23.126]    __FlashLen=0x00000000
[03:06:23.126]    __FlashArg=0x00000000
[03:06:23.126]    __FlashOp=0x00000000
[03:06:23.126]    __Result=0x00000000
[03:06:23.126]  </debugvars>
[03:06:23.126]  
[03:06:23.128]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:23.128]    <block atomic="false" info="">
[03:06:23.128]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:23.128]        // -> [isSWJ <= 0x00000001]
[03:06:23.128]      __var hasDormant = __protocol & 0x00020000;
[03:06:23.128]        // -> [hasDormant <= 0x00000000]
[03:06:23.128]      __var protType   = __protocol & 0x0000FFFF;
[03:06:23.129]        // -> [protType <= 0x00000002]
[03:06:23.129]    </block>
[03:06:23.129]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:23.129]      // if-block "protType == 1"
[03:06:23.129]        // =>  FALSE
[03:06:23.129]      // skip if-block "protType == 1"
[03:06:23.129]    </control>
[03:06:23.129]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:23.129]      // if-block "protType == 2"
[03:06:23.130]        // =>  TRUE
[03:06:23.130]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:23.130]        // if-block "isSWJ"
[03:06:23.130]          // =>  TRUE
[03:06:23.130]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:23.130]          // if-block "hasDormant"
[03:06:23.130]            // =>  FALSE
[03:06:23.130]          // skip if-block "hasDormant"
[03:06:23.130]        </control>
[03:06:23.130]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:23.130]          // if-block "!hasDormant"
[03:06:23.130]            // =>  TRUE
[03:06:23.130]          <block atomic="false" info="">
[03:06:23.130]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:24.135]  
[03:06:24.135]  !!! E320 : DAP access error
[03:06:24.135]  
[03:06:24.135]          </block>
[03:06:24.135]          // end if-block "!hasDormant"
[03:06:24.135]        </control>
[03:06:24.135]        // end if-block "isSWJ"
[03:06:24.135]      </control>
[03:06:24.135]      // end if-block "protType == 2"
[03:06:24.135]    </control>
[03:06:24.135]  </sequence>
[03:06:24.135]  
[03:06:24.392]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:24.392]  
[03:06:24.402]  <debugvars>
[03:06:24.402]    // Pre-defined
[03:06:24.402]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:24.402]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:24.402]    __dp=0x00000000
[03:06:24.402]    __ap=0x00000000
[03:06:24.402]    __traceout=0x00000000      (Trace Disabled)
[03:06:24.402]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:24.402]    __FlashAddr=0x00000000
[03:06:24.402]    __FlashLen=0x00000000
[03:06:24.402]    __FlashArg=0x00000000
[03:06:24.402]    __FlashOp=0x00000000
[03:06:24.402]    __Result=0x00000000
[03:06:24.402]  </debugvars>
[03:06:24.402]  
[03:06:24.402]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:24.402]    <block atomic="false" info="">
[03:06:24.404]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:24.404]        // -> [isSWJ <= 0x00000001]
[03:06:24.404]      __var hasDormant = __protocol & 0x00020000;
[03:06:24.404]        // -> [hasDormant <= 0x00000000]
[03:06:24.404]      __var protType   = __protocol & 0x0000FFFF;
[03:06:24.404]        // -> [protType <= 0x00000002]
[03:06:24.404]    </block>
[03:06:24.404]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:24.404]      // if-block "protType == 1"
[03:06:24.405]        // =>  FALSE
[03:06:24.405]      // skip if-block "protType == 1"
[03:06:24.405]    </control>
[03:06:24.405]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:24.405]      // if-block "protType == 2"
[03:06:24.405]        // =>  TRUE
[03:06:24.405]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:24.405]        // if-block "isSWJ"
[03:06:24.405]          // =>  TRUE
[03:06:24.405]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:24.405]          // if-block "hasDormant"
[03:06:24.405]            // =>  FALSE
[03:06:24.405]          // skip if-block "hasDormant"
[03:06:24.405]        </control>
[03:06:24.405]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:24.405]          // if-block "!hasDormant"
[03:06:24.405]            // =>  TRUE
[03:06:24.405]          <block atomic="false" info="">
[03:06:24.405]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:25.413]  
[03:06:25.413]  !!! E320 : DAP access error
[03:06:25.413]  
[03:06:25.413]          </block>
[03:06:25.413]          // end if-block "!hasDormant"
[03:06:25.413]        </control>
[03:06:25.413]        // end if-block "isSWJ"
[03:06:25.413]      </control>
[03:06:25.413]      // end if-block "protType == 2"
[03:06:25.413]    </control>
[03:06:25.413]  </sequence>
[03:06:25.413]  
[03:06:25.668]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:25.668]  
[03:06:25.677]  <debugvars>
[03:06:25.677]    // Pre-defined
[03:06:25.677]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:25.677]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:25.677]    __dp=0x00000000
[03:06:25.677]    __ap=0x00000000
[03:06:25.677]    __traceout=0x00000000      (Trace Disabled)
[03:06:25.677]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:25.677]    __FlashAddr=0x00000000
[03:06:25.677]    __FlashLen=0x00000000
[03:06:25.677]    __FlashArg=0x00000000
[03:06:25.677]    __FlashOp=0x00000000
[03:06:25.677]    __Result=0x00000000
[03:06:25.677]  </debugvars>
[03:06:25.677]  
[03:06:25.677]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:25.677]    <block atomic="false" info="">
[03:06:25.677]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:25.677]        // -> [isSWJ <= 0x00000001]
[03:06:25.677]      __var hasDormant = __protocol & 0x00020000;
[03:06:25.677]        // -> [hasDormant <= 0x00000000]
[03:06:25.680]      __var protType   = __protocol & 0x0000FFFF;
[03:06:25.680]        // -> [protType <= 0x00000002]
[03:06:25.680]    </block>
[03:06:25.681]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:25.682]      // if-block "protType == 1"
[03:06:25.682]        // =>  FALSE
[03:06:25.682]      // skip if-block "protType == 1"
[03:06:25.682]    </control>
[03:06:25.682]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:25.682]      // if-block "protType == 2"
[03:06:25.682]        // =>  TRUE
[03:06:25.682]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:25.682]        // if-block "isSWJ"
[03:06:25.682]          // =>  TRUE
[03:06:25.682]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:25.682]          // if-block "hasDormant"
[03:06:25.682]            // =>  FALSE
[03:06:25.682]          // skip if-block "hasDormant"
[03:06:25.682]        </control>
[03:06:25.682]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:25.682]          // if-block "!hasDormant"
[03:06:25.683]            // =>  TRUE
[03:06:25.683]          <block atomic="false" info="">
[03:06:25.683]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:26.692]  
[03:06:26.692]  !!! E320 : DAP access error
[03:06:26.692]  
[03:06:26.702]          </block>
[03:06:26.702]          // end if-block "!hasDormant"
[03:06:26.702]        </control>
[03:06:26.702]        // end if-block "isSWJ"
[03:06:26.702]      </control>
[03:06:26.702]      // end if-block "protType == 2"
[03:06:26.702]    </control>
[03:06:26.702]  </sequence>
[03:06:26.702]  
[03:06:26.961]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:26.961]  
[03:06:26.970]  <debugvars>
[03:06:26.970]    // Pre-defined
[03:06:26.970]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:26.970]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:26.970]    __dp=0x00000000
[03:06:26.970]    __ap=0x00000000
[03:06:26.970]    __traceout=0x00000000      (Trace Disabled)
[03:06:26.970]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:26.970]    __FlashAddr=0x00000000
[03:06:26.970]    __FlashLen=0x00000000
[03:06:26.970]    __FlashArg=0x00000000
[03:06:26.970]    __FlashOp=0x00000000
[03:06:26.970]    __Result=0x00000000
[03:06:26.970]  </debugvars>
[03:06:26.970]  
[03:06:26.970]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:26.970]    <block atomic="false" info="">
[03:06:26.970]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:26.970]        // -> [isSWJ <= 0x00000001]
[03:06:26.970]      __var hasDormant = __protocol & 0x00020000;
[03:06:26.970]        // -> [hasDormant <= 0x00000000]
[03:06:26.970]      __var protType   = __protocol & 0x0000FFFF;
[03:06:26.973]        // -> [protType <= 0x00000002]
[03:06:26.973]    </block>
[03:06:26.973]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:26.973]      // if-block "protType == 1"
[03:06:26.973]        // =>  FALSE
[03:06:26.973]      // skip if-block "protType == 1"
[03:06:26.973]    </control>
[03:06:26.973]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:26.973]      // if-block "protType == 2"
[03:06:26.973]        // =>  TRUE
[03:06:26.973]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:26.973]        // if-block "isSWJ"
[03:06:26.973]          // =>  TRUE
[03:06:26.975]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:26.975]          // if-block "hasDormant"
[03:06:26.975]            // =>  FALSE
[03:06:26.975]          // skip if-block "hasDormant"
[03:06:26.975]        </control>
[03:06:26.975]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:26.975]          // if-block "!hasDormant"
[03:06:26.975]            // =>  TRUE
[03:06:26.975]          <block atomic="false" info="">
[03:06:26.975]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:27.980]  
[03:06:27.980]  !!! E320 : DAP access error
[03:06:27.980]  
[03:06:27.988]          </block>
[03:06:27.988]          // end if-block "!hasDormant"
[03:06:27.988]        </control>
[03:06:27.988]        // end if-block "isSWJ"
[03:06:27.988]      </control>
[03:06:27.988]      // end if-block "protType == 2"
[03:06:27.988]    </control>
[03:06:27.988]  </sequence>
[03:06:27.988]  
[03:06:28.239]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:28.239]  
[03:06:28.239]  <debugvars>
[03:06:28.239]    // Pre-defined
[03:06:28.239]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:28.239]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:28.239]    __dp=0x00000000
[03:06:28.239]    __ap=0x00000000
[03:06:28.239]    __traceout=0x00000000      (Trace Disabled)
[03:06:28.239]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:28.239]    __FlashAddr=0x00000000
[03:06:28.239]    __FlashLen=0x00000000
[03:06:28.239]    __FlashArg=0x00000000
[03:06:28.239]    __FlashOp=0x00000000
[03:06:28.239]    __Result=0x00000000
[03:06:28.239]  </debugvars>
[03:06:28.239]  
[03:06:28.239]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:28.239]    <block atomic="false" info="">
[03:06:28.239]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:28.239]        // -> [isSWJ <= 0x00000001]
[03:06:28.239]      __var hasDormant = __protocol & 0x00020000;
[03:06:28.239]        // -> [hasDormant <= 0x00000000]
[03:06:28.239]      __var protType   = __protocol & 0x0000FFFF;
[03:06:28.239]        // -> [protType <= 0x00000002]
[03:06:28.239]    </block>
[03:06:28.239]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:28.239]      // if-block "protType == 1"
[03:06:28.239]        // =>  FALSE
[03:06:28.239]      // skip if-block "protType == 1"
[03:06:28.239]    </control>
[03:06:28.243]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:28.243]      // if-block "protType == 2"
[03:06:28.243]        // =>  TRUE
[03:06:28.243]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:28.243]        // if-block "isSWJ"
[03:06:28.243]          // =>  TRUE
[03:06:28.243]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:28.243]          // if-block "hasDormant"
[03:06:28.244]            // =>  FALSE
[03:06:28.244]          // skip if-block "hasDormant"
[03:06:28.244]        </control>
[03:06:28.244]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:28.244]          // if-block "!hasDormant"
[03:06:28.244]            // =>  TRUE
[03:06:28.244]          <block atomic="false" info="">
[03:06:28.244]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:29.245]  
[03:06:29.245]  !!! E320 : DAP access error
[03:06:29.245]  
[03:06:29.245]          </block>
[03:06:29.245]          // end if-block "!hasDormant"
[03:06:29.245]        </control>
[03:06:29.245]        // end if-block "isSWJ"
[03:06:29.245]      </control>
[03:06:29.245]      // end if-block "protType == 2"
[03:06:29.245]    </control>
[03:06:29.245]  </sequence>
[03:06:29.245]  
[03:06:29.500]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:29.500]  
[03:06:29.500]  <debugvars>
[03:06:29.500]    // Pre-defined
[03:06:29.500]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:29.500]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:29.500]    __dp=0x00000000
[03:06:29.500]    __ap=0x00000000
[03:06:29.500]    __traceout=0x00000000      (Trace Disabled)
[03:06:29.500]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:29.500]    __FlashAddr=0x00000000
[03:06:29.500]    __FlashLen=0x00000000
[03:06:29.500]    __FlashArg=0x00000000
[03:06:29.500]    __FlashOp=0x00000000
[03:06:29.500]    __Result=0x00000000
[03:06:29.500]  </debugvars>
[03:06:29.500]  
[03:06:29.500]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:29.500]    <block atomic="false" info="">
[03:06:29.500]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:29.500]        // -> [isSWJ <= 0x00000001]
[03:06:29.500]      __var hasDormant = __protocol & 0x00020000;
[03:06:29.500]        // -> [hasDormant <= 0x00000000]
[03:06:29.500]      __var protType   = __protocol & 0x0000FFFF;
[03:06:29.500]        // -> [protType <= 0x00000002]
[03:06:29.500]    </block>
[03:06:29.500]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:29.500]      // if-block "protType == 1"
[03:06:29.500]        // =>  FALSE
[03:06:29.500]      // skip if-block "protType == 1"
[03:06:29.500]    </control>
[03:06:29.500]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:29.500]      // if-block "protType == 2"
[03:06:29.500]        // =>  TRUE
[03:06:29.504]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:29.504]        // if-block "isSWJ"
[03:06:29.504]          // =>  TRUE
[03:06:29.504]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:29.504]          // if-block "hasDormant"
[03:06:29.504]            // =>  FALSE
[03:06:29.504]          // skip if-block "hasDormant"
[03:06:29.504]        </control>
[03:06:29.504]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:29.504]          // if-block "!hasDormant"
[03:06:29.504]            // =>  TRUE
[03:06:29.504]          <block atomic="false" info="">
[03:06:29.504]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:30.505]  
[03:06:30.505]  !!! E320 : DAP access error
[03:06:30.505]  
[03:06:30.513]          </block>
[03:06:30.513]          // end if-block "!hasDormant"
[03:06:30.513]        </control>
[03:06:30.513]        // end if-block "isSWJ"
[03:06:30.513]      </control>
[03:06:30.513]      // end if-block "protType == 2"
[03:06:30.513]    </control>
[03:06:30.513]  </sequence>
[03:06:30.513]  
[03:06:30.767]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:30.767]  
[03:06:30.767]  <debugvars>
[03:06:30.767]    // Pre-defined
[03:06:30.767]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:30.767]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:30.767]    __dp=0x00000000
[03:06:30.767]    __ap=0x00000000
[03:06:30.767]    __traceout=0x00000000      (Trace Disabled)
[03:06:30.767]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:30.767]    __FlashAddr=0x00000000
[03:06:30.767]    __FlashLen=0x00000000
[03:06:30.767]    __FlashArg=0x00000000
[03:06:30.767]    __FlashOp=0x00000000
[03:06:30.767]    __Result=0x00000000
[03:06:30.767]  </debugvars>
[03:06:30.767]  
[03:06:30.767]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:30.767]    <block atomic="false" info="">
[03:06:30.767]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:30.767]        // -> [isSWJ <= 0x00000001]
[03:06:30.767]      __var hasDormant = __protocol & 0x00020000;
[03:06:30.767]        // -> [hasDormant <= 0x00000000]
[03:06:30.767]      __var protType   = __protocol & 0x0000FFFF;
[03:06:30.767]        // -> [protType <= 0x00000002]
[03:06:30.771]    </block>
[03:06:30.771]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:30.771]      // if-block "protType == 1"
[03:06:30.771]        // =>  FALSE
[03:06:30.771]      // skip if-block "protType == 1"
[03:06:30.771]    </control>
[03:06:30.771]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:30.771]      // if-block "protType == 2"
[03:06:30.771]        // =>  TRUE
[03:06:30.771]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:30.771]        // if-block "isSWJ"
[03:06:30.771]          // =>  TRUE
[03:06:30.771]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:30.771]          // if-block "hasDormant"
[03:06:30.771]            // =>  FALSE
[03:06:30.771]          // skip if-block "hasDormant"
[03:06:30.771]        </control>
[03:06:30.771]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:30.771]          // if-block "!hasDormant"
[03:06:30.771]            // =>  TRUE
[03:06:30.771]          <block atomic="false" info="">
[03:06:30.771]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:31.771]  
[03:06:31.771]  !!! E320 : DAP access error
[03:06:31.771]  
[03:06:31.772]          </block>
[03:06:31.772]          // end if-block "!hasDormant"
[03:06:31.772]        </control>
[03:06:31.772]        // end if-block "isSWJ"
[03:06:31.772]      </control>
[03:06:31.772]      // end if-block "protType == 2"
[03:06:31.772]    </control>
[03:06:31.772]  </sequence>
[03:06:31.772]  
[03:06:32.034]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:32.034]  
[03:06:32.042]  <debugvars>
[03:06:32.042]    // Pre-defined
[03:06:32.042]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:32.042]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:32.042]    __dp=0x00000000
[03:06:32.042]    __ap=0x00000000
[03:06:32.042]    __traceout=0x00000000      (Trace Disabled)
[03:06:32.042]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:32.042]    __FlashAddr=0x00000000
[03:06:32.042]    __FlashLen=0x00000000
[03:06:32.042]    __FlashArg=0x00000000
[03:06:32.042]    __FlashOp=0x00000000
[03:06:32.042]    __Result=0x00000000
[03:06:32.042]  </debugvars>
[03:06:32.042]  
[03:06:32.042]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:32.042]    <block atomic="false" info="">
[03:06:32.042]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:32.042]        // -> [isSWJ <= 0x00000001]
[03:06:32.042]      __var hasDormant = __protocol & 0x00020000;
[03:06:32.042]        // -> [hasDormant <= 0x00000000]
[03:06:32.042]      __var protType   = __protocol & 0x0000FFFF;
[03:06:32.042]        // -> [protType <= 0x00000002]
[03:06:32.042]    </block>
[03:06:32.042]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:32.042]      // if-block "protType == 1"
[03:06:32.042]        // =>  FALSE
[03:06:32.042]      // skip if-block "protType == 1"
[03:06:32.042]    </control>
[03:06:32.042]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:32.042]      // if-block "protType == 2"
[03:06:32.042]        // =>  TRUE
[03:06:32.042]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:32.042]        // if-block "isSWJ"
[03:06:32.042]          // =>  TRUE
[03:06:32.042]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:32.042]          // if-block "hasDormant"
[03:06:32.042]            // =>  FALSE
[03:06:32.042]          // skip if-block "hasDormant"
[03:06:32.042]        </control>
[03:06:32.047]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:32.047]          // if-block "!hasDormant"
[03:06:32.047]            // =>  TRUE
[03:06:32.047]          <block atomic="false" info="">
[03:06:32.047]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:33.054]  
[03:06:33.054]  !!! E320 : DAP access error
[03:06:33.054]  
[03:06:33.063]          </block>
[03:06:33.063]          // end if-block "!hasDormant"
[03:06:33.063]        </control>
[03:06:33.063]        // end if-block "isSWJ"
[03:06:33.063]      </control>
[03:06:33.063]      // end if-block "protType == 2"
[03:06:33.063]    </control>
[03:06:33.063]  </sequence>
[03:06:33.063]  
[03:06:33.319]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:33.319]  
[03:06:33.328]  <debugvars>
[03:06:33.328]    // Pre-defined
[03:06:33.328]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:33.328]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:33.328]    __dp=0x00000000
[03:06:33.328]    __ap=0x00000000
[03:06:33.328]    __traceout=0x00000000      (Trace Disabled)
[03:06:33.328]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:33.328]    __FlashAddr=0x00000000
[03:06:33.328]    __FlashLen=0x00000000
[03:06:33.328]    __FlashArg=0x00000000
[03:06:33.328]    __FlashOp=0x00000000
[03:06:33.328]    __Result=0x00000000
[03:06:33.328]  </debugvars>
[03:06:33.328]  
[03:06:33.328]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:33.328]    <block atomic="false" info="">
[03:06:33.328]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:33.328]        // -> [isSWJ <= 0x00000001]
[03:06:33.328]      __var hasDormant = __protocol & 0x00020000;
[03:06:33.328]        // -> [hasDormant <= 0x00000000]
[03:06:33.328]      __var protType   = __protocol & 0x0000FFFF;
[03:06:33.328]        // -> [protType <= 0x00000002]
[03:06:33.328]    </block>
[03:06:33.328]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:33.328]      // if-block "protType == 1"
[03:06:33.328]        // =>  FALSE
[03:06:33.328]      // skip if-block "protType == 1"
[03:06:33.331]    </control>
[03:06:33.331]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:33.331]      // if-block "protType == 2"
[03:06:33.331]        // =>  TRUE
[03:06:33.331]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:33.331]        // if-block "isSWJ"
[03:06:33.331]          // =>  TRUE
[03:06:33.331]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:33.331]          // if-block "hasDormant"
[03:06:33.331]            // =>  FALSE
[03:06:33.331]          // skip if-block "hasDormant"
[03:06:33.331]        </control>
[03:06:33.331]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:33.331]          // if-block "!hasDormant"
[03:06:33.331]            // =>  TRUE
[03:06:33.331]          <block atomic="false" info="">
[03:06:33.331]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:34.342]  
[03:06:34.342]  !!! E320 : DAP access error
[03:06:34.342]  
[03:06:34.351]          </block>
[03:06:34.351]          // end if-block "!hasDormant"
[03:06:34.351]        </control>
[03:06:34.351]        // end if-block "isSWJ"
[03:06:34.351]      </control>
[03:06:34.351]      // end if-block "protType == 2"
[03:06:34.351]    </control>
[03:06:34.351]  </sequence>
[03:06:34.351]  
[03:06:34.607]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:34.607]  
[03:06:34.615]  <debugvars>
[03:06:34.615]    // Pre-defined
[03:06:34.615]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:34.615]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:34.615]    __dp=0x00000000
[03:06:34.615]    __ap=0x00000000
[03:06:34.615]    __traceout=0x00000000      (Trace Disabled)
[03:06:34.615]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:34.615]    __FlashAddr=0x00000000
[03:06:34.615]    __FlashLen=0x00000000
[03:06:34.615]    __FlashArg=0x00000000
[03:06:34.615]    __FlashOp=0x00000000
[03:06:34.615]    __Result=0x00000000
[03:06:34.615]  </debugvars>
[03:06:34.615]  
[03:06:34.615]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:34.615]    <block atomic="false" info="">
[03:06:34.615]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:34.615]        // -> [isSWJ <= 0x00000001]
[03:06:34.615]      __var hasDormant = __protocol & 0x00020000;
[03:06:34.615]        // -> [hasDormant <= 0x00000000]
[03:06:34.615]      __var protType   = __protocol & 0x0000FFFF;
[03:06:34.615]        // -> [protType <= 0x00000002]
[03:06:34.615]    </block>
[03:06:34.615]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:34.615]      // if-block "protType == 1"
[03:06:34.615]        // =>  FALSE
[03:06:34.615]      // skip if-block "protType == 1"
[03:06:34.615]    </control>
[03:06:34.615]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:34.615]      // if-block "protType == 2"
[03:06:34.615]        // =>  TRUE
[03:06:34.615]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:34.615]        // if-block "isSWJ"
[03:06:34.615]          // =>  TRUE
[03:06:34.615]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:34.615]          // if-block "hasDormant"
[03:06:34.619]            // =>  FALSE
[03:06:34.619]          // skip if-block "hasDormant"
[03:06:34.619]        </control>
[03:06:34.619]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:34.619]          // if-block "!hasDormant"
[03:06:34.619]            // =>  TRUE
[03:06:34.619]          <block atomic="false" info="">
[03:06:34.619]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:35.624]  
[03:06:35.624]  !!! E320 : DAP access error
[03:06:35.624]  
[03:06:35.624]          </block>
[03:06:35.624]          // end if-block "!hasDormant"
[03:06:35.624]        </control>
[03:06:35.624]        // end if-block "isSWJ"
[03:06:35.624]      </control>
[03:06:35.624]      // end if-block "protType == 2"
[03:06:35.624]    </control>
[03:06:35.624]  </sequence>
[03:06:35.624]  
[03:06:35.876]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:35.876]  
[03:06:35.876]  <debugvars>
[03:06:35.876]    // Pre-defined
[03:06:35.876]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:35.876]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:35.876]    __dp=0x00000000
[03:06:35.876]    __ap=0x00000000
[03:06:35.876]    __traceout=0x00000000      (Trace Disabled)
[03:06:35.876]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:35.876]    __FlashAddr=0x00000000
[03:06:35.876]    __FlashLen=0x00000000
[03:06:35.876]    __FlashArg=0x00000000
[03:06:35.876]    __FlashOp=0x00000000
[03:06:35.876]    __Result=0x00000000
[03:06:35.876]  </debugvars>
[03:06:35.876]  
[03:06:35.876]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:35.876]    <block atomic="false" info="">
[03:06:35.876]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:35.876]        // -> [isSWJ <= 0x00000001]
[03:06:35.876]      __var hasDormant = __protocol & 0x00020000;
[03:06:35.876]        // -> [hasDormant <= 0x00000000]
[03:06:35.880]      __var protType   = __protocol & 0x0000FFFF;
[03:06:35.880]        // -> [protType <= 0x00000002]
[03:06:35.880]    </block>
[03:06:35.880]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:35.880]      // if-block "protType == 1"
[03:06:35.880]        // =>  FALSE
[03:06:35.880]      // skip if-block "protType == 1"
[03:06:35.880]    </control>
[03:06:35.880]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:35.880]      // if-block "protType == 2"
[03:06:35.880]        // =>  TRUE
[03:06:35.880]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:35.880]        // if-block "isSWJ"
[03:06:35.880]          // =>  TRUE
[03:06:35.880]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:35.880]          // if-block "hasDormant"
[03:06:35.880]            // =>  FALSE
[03:06:35.880]          // skip if-block "hasDormant"
[03:06:35.880]        </control>
[03:06:35.880]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:35.880]          // if-block "!hasDormant"
[03:06:35.880]            // =>  TRUE
[03:06:35.880]          <block atomic="false" info="">
[03:06:35.880]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:36.886]  
[03:06:36.886]  !!! E320 : DAP access error
[03:06:36.886]  
[03:06:36.895]          </block>
[03:06:36.895]          // end if-block "!hasDormant"
[03:06:36.895]        </control>
[03:06:36.895]        // end if-block "isSWJ"
[03:06:36.895]      </control>
[03:06:36.895]      // end if-block "protType == 2"
[03:06:36.895]    </control>
[03:06:36.895]  </sequence>
[03:06:36.895]  
[03:06:37.149]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:37.149]  
[03:06:37.157]  <debugvars>
[03:06:37.157]    // Pre-defined
[03:06:37.157]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:37.157]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:37.157]    __dp=0x00000000
[03:06:37.157]    __ap=0x00000000
[03:06:37.157]    __traceout=0x00000000      (Trace Disabled)
[03:06:37.157]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:37.157]    __FlashAddr=0x00000000
[03:06:37.157]    __FlashLen=0x00000000
[03:06:37.157]    __FlashArg=0x00000000
[03:06:37.157]    __FlashOp=0x00000000
[03:06:37.158]    __Result=0x00000000
[03:06:37.158]  </debugvars>
[03:06:37.158]  
[03:06:37.158]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:37.158]    <block atomic="false" info="">
[03:06:37.158]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:37.158]        // -> [isSWJ <= 0x00000001]
[03:06:37.158]      __var hasDormant = __protocol & 0x00020000;
[03:06:37.159]        // -> [hasDormant <= 0x00000000]
[03:06:37.159]      __var protType   = __protocol & 0x0000FFFF;
[03:06:37.159]        // -> [protType <= 0x00000002]
[03:06:37.159]    </block>
[03:06:37.159]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:37.159]      // if-block "protType == 1"
[03:06:37.159]        // =>  FALSE
[03:06:37.159]      // skip if-block "protType == 1"
[03:06:37.159]    </control>
[03:06:37.159]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:37.159]      // if-block "protType == 2"
[03:06:37.159]        // =>  TRUE
[03:06:37.159]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:37.161]        // if-block "isSWJ"
[03:06:37.161]          // =>  TRUE
[03:06:37.161]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:37.161]          // if-block "hasDormant"
[03:06:37.161]            // =>  FALSE
[03:06:37.161]          // skip if-block "hasDormant"
[03:06:37.161]        </control>
[03:06:37.161]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:37.162]          // if-block "!hasDormant"
[03:06:37.162]            // =>  TRUE
[03:06:37.162]          <block atomic="false" info="">
[03:06:37.162]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:38.169]  
[03:06:38.169]  !!! E320 : DAP access error
[03:06:38.169]  
[03:06:38.177]          </block>
[03:06:38.177]          // end if-block "!hasDormant"
[03:06:38.177]        </control>
[03:06:38.177]        // end if-block "isSWJ"
[03:06:38.177]      </control>
[03:06:38.177]      // end if-block "protType == 2"
[03:06:38.177]    </control>
[03:06:38.177]  </sequence>
[03:06:38.177]  
[03:06:38.435]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:38.435]  
[03:06:38.444]  <debugvars>
[03:06:38.444]    // Pre-defined
[03:06:38.444]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:38.444]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:38.444]    __dp=0x00000000
[03:06:38.444]    __ap=0x00000000
[03:06:38.444]    __traceout=0x00000000      (Trace Disabled)
[03:06:38.444]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:38.444]    __FlashAddr=0x00000000
[03:06:38.444]    __FlashLen=0x00000000
[03:06:38.444]    __FlashArg=0x00000000
[03:06:38.444]    __FlashOp=0x00000000
[03:06:38.444]    __Result=0x00000000
[03:06:38.444]  </debugvars>
[03:06:38.444]  
[03:06:38.444]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:38.444]    <block atomic="false" info="">
[03:06:38.444]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:38.444]        // -> [isSWJ <= 0x00000001]
[03:06:38.444]      __var hasDormant = __protocol & 0x00020000;
[03:06:38.444]        // -> [hasDormant <= 0x00000000]
[03:06:38.447]      __var protType   = __protocol & 0x0000FFFF;
[03:06:38.447]        // -> [protType <= 0x00000002]
[03:06:38.447]    </block>
[03:06:38.447]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:38.447]      // if-block "protType == 1"
[03:06:38.447]        // =>  FALSE
[03:06:38.447]      // skip if-block "protType == 1"
[03:06:38.447]    </control>
[03:06:38.447]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:38.447]      // if-block "protType == 2"
[03:06:38.447]        // =>  TRUE
[03:06:38.448]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:38.448]        // if-block "isSWJ"
[03:06:38.448]          // =>  TRUE
[03:06:38.448]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:38.448]          // if-block "hasDormant"
[03:06:38.448]            // =>  FALSE
[03:06:38.448]          // skip if-block "hasDormant"
[03:06:38.448]        </control>
[03:06:38.448]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:38.448]          // if-block "!hasDormant"
[03:06:38.448]            // =>  TRUE
[03:06:38.448]          <block atomic="false" info="">
[03:06:38.448]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:39.452]  
[03:06:39.452]  !!! E320 : DAP access error
[03:06:39.452]  
[03:06:39.462]          </block>
[03:06:39.462]          // end if-block "!hasDormant"
[03:06:39.462]        </control>
[03:06:39.462]        // end if-block "isSWJ"
[03:06:39.462]      </control>
[03:06:39.462]      // end if-block "protType == 2"
[03:06:39.462]    </control>
[03:06:39.462]  </sequence>
[03:06:39.462]  
[03:06:39.723]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:39.723]  
[03:06:39.723]  <debugvars>
[03:06:39.723]    // Pre-defined
[03:06:39.723]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:39.723]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:39.723]    __dp=0x00000000
[03:06:39.723]    __ap=0x00000000
[03:06:39.723]    __traceout=0x00000000      (Trace Disabled)
[03:06:39.723]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:39.723]    __FlashAddr=0x00000000
[03:06:39.723]    __FlashLen=0x00000000
[03:06:39.723]    __FlashArg=0x00000000
[03:06:39.723]    __FlashOp=0x00000000
[03:06:39.723]    __Result=0x00000000
[03:06:39.723]  </debugvars>
[03:06:39.723]  
[03:06:39.723]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:39.723]    <block atomic="false" info="">
[03:06:39.723]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:39.723]        // -> [isSWJ <= 0x00000001]
[03:06:39.723]      __var hasDormant = __protocol & 0x00020000;
[03:06:39.723]        // -> [hasDormant <= 0x00000000]
[03:06:39.723]      __var protType   = __protocol & 0x0000FFFF;
[03:06:39.723]        // -> [protType <= 0x00000002]
[03:06:39.727]    </block>
[03:06:39.727]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:39.727]      // if-block "protType == 1"
[03:06:39.727]        // =>  FALSE
[03:06:39.727]      // skip if-block "protType == 1"
[03:06:39.727]    </control>
[03:06:39.727]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:39.727]      // if-block "protType == 2"
[03:06:39.727]        // =>  TRUE
[03:06:39.727]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:39.727]        // if-block "isSWJ"
[03:06:39.727]          // =>  TRUE
[03:06:39.727]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:39.727]          // if-block "hasDormant"
[03:06:39.727]            // =>  FALSE
[03:06:39.727]          // skip if-block "hasDormant"
[03:06:39.727]        </control>
[03:06:39.727]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:39.727]          // if-block "!hasDormant"
[03:06:39.727]            // =>  TRUE
[03:06:39.727]          <block atomic="false" info="">
[03:06:39.727]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:40.732]  
[03:06:40.732]  !!! E320 : DAP access error
[03:06:40.732]  
[03:06:40.740]          </block>
[03:06:40.740]          // end if-block "!hasDormant"
[03:06:40.740]        </control>
[03:06:40.740]        // end if-block "isSWJ"
[03:06:40.740]      </control>
[03:06:40.740]      // end if-block "protType == 2"
[03:06:40.740]    </control>
[03:06:40.740]  </sequence>
[03:06:40.740]  
[03:06:40.993]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:40.993]  
[03:06:41.001]  <debugvars>
[03:06:41.001]    // Pre-defined
[03:06:41.001]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:41.001]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:41.001]    __dp=0x00000000
[03:06:41.001]    __ap=0x00000000
[03:06:41.001]    __traceout=0x00000000      (Trace Disabled)
[03:06:41.001]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:41.001]    __FlashAddr=0x00000000
[03:06:41.001]    __FlashLen=0x00000000
[03:06:41.001]    __FlashArg=0x00000000
[03:06:41.002]    __FlashOp=0x00000000
[03:06:41.002]    __Result=0x00000000
[03:06:41.002]  </debugvars>
[03:06:41.002]  
[03:06:41.002]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:41.002]    <block atomic="false" info="">
[03:06:41.002]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:41.002]        // -> [isSWJ <= 0x00000001]
[03:06:41.002]      __var hasDormant = __protocol & 0x00020000;
[03:06:41.002]        // -> [hasDormant <= 0x00000000]
[03:06:41.002]      __var protType   = __protocol & 0x0000FFFF;
[03:06:41.002]        // -> [protType <= 0x00000002]
[03:06:41.002]    </block>
[03:06:41.002]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:41.002]      // if-block "protType == 1"
[03:06:41.002]        // =>  FALSE
[03:06:41.002]      // skip if-block "protType == 1"
[03:06:41.002]    </control>
[03:06:41.002]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:41.002]      // if-block "protType == 2"
[03:06:41.002]        // =>  TRUE
[03:06:41.002]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:41.002]        // if-block "isSWJ"
[03:06:41.002]          // =>  TRUE
[03:06:41.002]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:41.005]          // if-block "hasDormant"
[03:06:41.005]            // =>  FALSE
[03:06:41.005]          // skip if-block "hasDormant"
[03:06:41.005]        </control>
[03:06:41.005]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:41.005]          // if-block "!hasDormant"
[03:06:41.005]            // =>  TRUE
[03:06:41.005]          <block atomic="false" info="">
[03:06:41.005]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:42.018]  
[03:06:42.018]  !!! E320 : DAP access error
[03:06:42.018]  
[03:06:42.027]          </block>
[03:06:42.027]          // end if-block "!hasDormant"
[03:06:42.027]        </control>
[03:06:42.027]        // end if-block "isSWJ"
[03:06:42.027]      </control>
[03:06:42.027]      // end if-block "protType == 2"
[03:06:42.027]    </control>
[03:06:42.027]  </sequence>
[03:06:42.027]  
[03:06:42.280]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:42.280]  
[03:06:42.288]  <debugvars>
[03:06:42.288]    // Pre-defined
[03:06:42.288]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:42.288]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:42.288]    __dp=0x00000000
[03:06:42.288]    __ap=0x00000000
[03:06:42.288]    __traceout=0x00000000      (Trace Disabled)
[03:06:42.288]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:42.288]    __FlashAddr=0x00000000
[03:06:42.288]    __FlashLen=0x00000000
[03:06:42.288]    __FlashArg=0x00000000
[03:06:42.288]    __FlashOp=0x00000000
[03:06:42.288]    __Result=0x00000000
[03:06:42.288]  </debugvars>
[03:06:42.288]  
[03:06:42.288]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:42.288]    <block atomic="false" info="">
[03:06:42.288]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:42.288]        // -> [isSWJ <= 0x00000001]
[03:06:42.288]      __var hasDormant = __protocol & 0x00020000;
[03:06:42.288]        // -> [hasDormant <= 0x00000000]
[03:06:42.288]      __var protType   = __protocol & 0x0000FFFF;
[03:06:42.288]        // -> [protType <= 0x00000002]
[03:06:42.288]    </block>
[03:06:42.288]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:42.288]      // if-block "protType == 1"
[03:06:42.288]        // =>  FALSE
[03:06:42.288]      // skip if-block "protType == 1"
[03:06:42.288]    </control>
[03:06:42.288]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:42.288]      // if-block "protType == 2"
[03:06:42.288]        // =>  TRUE
[03:06:42.288]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:42.292]        // if-block "isSWJ"
[03:06:42.292]          // =>  TRUE
[03:06:42.292]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:42.292]          // if-block "hasDormant"
[03:06:42.292]            // =>  FALSE
[03:06:42.292]          // skip if-block "hasDormant"
[03:06:42.292]        </control>
[03:06:42.292]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:42.292]          // if-block "!hasDormant"
[03:06:42.292]            // =>  TRUE
[03:06:42.292]          <block atomic="false" info="">
[03:06:42.292]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:43.297]  
[03:06:43.297]  !!! E320 : DAP access error
[03:06:43.297]  
[03:06:43.299]          </block>
[03:06:43.299]          // end if-block "!hasDormant"
[03:06:43.299]        </control>
[03:06:43.299]        // end if-block "isSWJ"
[03:06:43.299]      </control>
[03:06:43.299]      // end if-block "protType == 2"
[03:06:43.299]    </control>
[03:06:43.299]  </sequence>
[03:06:43.299]  
[03:06:43.556]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:43.556]  
[03:06:43.557]  <debugvars>
[03:06:43.557]    // Pre-defined
[03:06:43.557]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:43.557]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:43.557]    __dp=0x00000000
[03:06:43.557]    __ap=0x00000000
[03:06:43.557]    __traceout=0x00000000      (Trace Disabled)
[03:06:43.557]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:43.557]    __FlashAddr=0x00000000
[03:06:43.557]    __FlashLen=0x00000000
[03:06:43.557]    __FlashArg=0x00000000
[03:06:43.557]    __FlashOp=0x00000000
[03:06:43.559]    __Result=0x00000000
[03:06:43.559]  </debugvars>
[03:06:43.559]  
[03:06:43.559]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:43.559]    <block atomic="false" info="">
[03:06:43.559]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:43.559]        // -> [isSWJ <= 0x00000001]
[03:06:43.559]      __var hasDormant = __protocol & 0x00020000;
[03:06:43.559]        // -> [hasDormant <= 0x00000000]
[03:06:43.559]      __var protType   = __protocol & 0x0000FFFF;
[03:06:43.559]        // -> [protType <= 0x00000002]
[03:06:43.559]    </block>
[03:06:43.559]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:43.559]      // if-block "protType == 1"
[03:06:43.559]        // =>  FALSE
[03:06:43.560]      // skip if-block "protType == 1"
[03:06:43.560]    </control>
[03:06:43.560]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:43.560]      // if-block "protType == 2"
[03:06:43.560]        // =>  TRUE
[03:06:43.560]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:43.560]        // if-block "isSWJ"
[03:06:43.560]          // =>  TRUE
[03:06:43.560]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:43.560]          // if-block "hasDormant"
[03:06:43.560]            // =>  FALSE
[03:06:43.560]          // skip if-block "hasDormant"
[03:06:43.560]        </control>
[03:06:43.560]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:43.560]          // if-block "!hasDormant"
[03:06:43.560]            // =>  TRUE
[03:06:43.560]          <block atomic="false" info="">
[03:06:43.560]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:44.565]  
[03:06:44.565]  !!! E320 : DAP access error
[03:06:44.565]  
[03:06:44.565]          </block>
[03:06:44.565]          // end if-block "!hasDormant"
[03:06:44.565]        </control>
[03:06:44.565]        // end if-block "isSWJ"
[03:06:44.565]      </control>
[03:06:44.565]      // end if-block "protType == 2"
[03:06:44.565]    </control>
[03:06:44.565]  </sequence>
[03:06:44.565]  
[03:06:44.818]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:44.818]  
[03:06:44.828]  <debugvars>
[03:06:44.828]    // Pre-defined
[03:06:44.828]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:44.828]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:44.828]    __dp=0x00000000
[03:06:44.828]    __ap=0x00000000
[03:06:44.828]    __traceout=0x00000000      (Trace Disabled)
[03:06:44.828]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:44.828]    __FlashAddr=0x00000000
[03:06:44.828]    __FlashLen=0x00000000
[03:06:44.828]    __FlashArg=0x00000000
[03:06:44.828]    __FlashOp=0x00000000
[03:06:44.828]    __Result=0x00000000
[03:06:44.828]  </debugvars>
[03:06:44.828]  
[03:06:44.830]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:44.830]    <block atomic="false" info="">
[03:06:44.830]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:44.830]        // -> [isSWJ <= 0x00000001]
[03:06:44.830]      __var hasDormant = __protocol & 0x00020000;
[03:06:44.830]        // -> [hasDormant <= 0x00000000]
[03:06:44.830]      __var protType   = __protocol & 0x0000FFFF;
[03:06:44.830]        // -> [protType <= 0x00000002]
[03:06:44.830]    </block>
[03:06:44.830]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:44.830]      // if-block "protType == 1"
[03:06:44.830]        // =>  FALSE
[03:06:44.830]      // skip if-block "protType == 1"
[03:06:44.830]    </control>
[03:06:44.830]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:44.830]      // if-block "protType == 2"
[03:06:44.830]        // =>  TRUE
[03:06:44.830]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:44.830]        // if-block "isSWJ"
[03:06:44.830]          // =>  TRUE
[03:06:44.830]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:44.830]          // if-block "hasDormant"
[03:06:44.830]            // =>  FALSE
[03:06:44.830]          // skip if-block "hasDormant"
[03:06:44.830]        </control>
[03:06:44.830]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:44.830]          // if-block "!hasDormant"
[03:06:44.830]            // =>  TRUE
[03:06:44.830]          <block atomic="false" info="">
[03:06:44.830]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:45.831]  
[03:06:45.831]  !!! E320 : DAP access error
[03:06:45.831]  
[03:06:45.831]          </block>
[03:06:45.831]          // end if-block "!hasDormant"
[03:06:45.831]        </control>
[03:06:45.831]        // end if-block "isSWJ"
[03:06:45.831]      </control>
[03:06:45.831]      // end if-block "protType == 2"
[03:06:45.831]    </control>
[03:06:45.831]  </sequence>
[03:06:45.831]  
[03:06:46.092]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:46.092]  
[03:06:46.101]  <debugvars>
[03:06:46.101]    // Pre-defined
[03:06:46.101]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:46.101]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:46.101]    __dp=0x00000000
[03:06:46.101]    __ap=0x00000000
[03:06:46.101]    __traceout=0x00000000      (Trace Disabled)
[03:06:46.101]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:46.101]    __FlashAddr=0x00000000
[03:06:46.101]    __FlashLen=0x00000000
[03:06:46.101]    __FlashArg=0x00000000
[03:06:46.101]    __FlashOp=0x00000000
[03:06:46.102]    __Result=0x00000000
[03:06:46.102]  </debugvars>
[03:06:46.102]  
[03:06:46.102]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:46.102]    <block atomic="false" info="">
[03:06:46.102]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:46.102]        // -> [isSWJ <= 0x00000001]
[03:06:46.102]      __var hasDormant = __protocol & 0x00020000;
[03:06:46.102]        // -> [hasDormant <= 0x00000000]
[03:06:46.102]      __var protType   = __protocol & 0x0000FFFF;
[03:06:46.102]        // -> [protType <= 0x00000002]
[03:06:46.102]    </block>
[03:06:46.102]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:46.102]      // if-block "protType == 1"
[03:06:46.102]        // =>  FALSE
[03:06:46.102]      // skip if-block "protType == 1"
[03:06:46.102]    </control>
[03:06:46.102]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:46.102]      // if-block "protType == 2"
[03:06:46.102]        // =>  TRUE
[03:06:46.102]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:46.102]        // if-block "isSWJ"
[03:06:46.102]          // =>  TRUE
[03:06:46.105]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:46.105]          // if-block "hasDormant"
[03:06:46.105]            // =>  FALSE
[03:06:46.105]          // skip if-block "hasDormant"
[03:06:46.105]        </control>
[03:06:46.105]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:46.105]          // if-block "!hasDormant"
[03:06:46.105]            // =>  TRUE
[03:06:46.105]          <block atomic="false" info="">
[03:06:46.106]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:47.107]  
[03:06:47.107]  !!! E320 : DAP access error
[03:06:47.107]  
[03:06:47.115]          </block>
[03:06:47.115]          // end if-block "!hasDormant"
[03:06:47.115]        </control>
[03:06:47.115]        // end if-block "isSWJ"
[03:06:47.115]      </control>
[03:06:47.115]      // end if-block "protType == 2"
[03:06:47.115]    </control>
[03:06:47.115]  </sequence>
[03:06:47.115]  
[03:06:47.372]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:47.372]  
[03:06:47.372]  <debugvars>
[03:06:47.372]    // Pre-defined
[03:06:47.372]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:47.372]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:47.372]    __dp=0x00000000
[03:06:47.372]    __ap=0x00000000
[03:06:47.372]    __traceout=0x00000000      (Trace Disabled)
[03:06:47.372]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:47.372]    __FlashAddr=0x00000000
[03:06:47.372]    __FlashLen=0x00000000
[03:06:47.372]    __FlashArg=0x00000000
[03:06:47.372]    __FlashOp=0x00000000
[03:06:47.372]    __Result=0x00000000
[03:06:47.372]  </debugvars>
[03:06:47.372]  
[03:06:47.372]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:47.372]    <block atomic="false" info="">
[03:06:47.372]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:47.376]        // -> [isSWJ <= 0x00000001]
[03:06:47.376]      __var hasDormant = __protocol & 0x00020000;
[03:06:47.376]        // -> [hasDormant <= 0x00000000]
[03:06:47.376]      __var protType   = __protocol & 0x0000FFFF;
[03:06:47.376]        // -> [protType <= 0x00000002]
[03:06:47.376]    </block>
[03:06:47.376]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:47.376]      // if-block "protType == 1"
[03:06:47.376]        // =>  FALSE
[03:06:47.376]      // skip if-block "protType == 1"
[03:06:47.376]    </control>
[03:06:47.376]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:47.376]      // if-block "protType == 2"
[03:06:47.376]        // =>  TRUE
[03:06:47.376]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:47.376]        // if-block "isSWJ"
[03:06:47.376]          // =>  TRUE
[03:06:47.376]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:47.376]          // if-block "hasDormant"
[03:06:47.376]            // =>  FALSE
[03:06:47.376]          // skip if-block "hasDormant"
[03:06:47.376]        </control>
[03:06:47.376]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:47.376]          // if-block "!hasDormant"
[03:06:47.376]            // =>  TRUE
[03:06:47.376]          <block atomic="false" info="">
[03:06:47.376]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:48.384]  
[03:06:48.384]  !!! E320 : DAP access error
[03:06:48.384]  
[03:06:48.393]          </block>
[03:06:48.393]          // end if-block "!hasDormant"
[03:06:48.393]        </control>
[03:06:48.393]        // end if-block "isSWJ"
[03:06:48.393]      </control>
[03:06:48.393]      // end if-block "protType == 2"
[03:06:48.393]    </control>
[03:06:48.393]  </sequence>
[03:06:48.393]  
[03:06:48.648]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:48.648]  
[03:06:48.648]  <debugvars>
[03:06:48.648]    // Pre-defined
[03:06:48.648]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:48.648]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:48.648]    __dp=0x00000000
[03:06:48.648]    __ap=0x00000000
[03:06:48.648]    __traceout=0x00000000      (Trace Disabled)
[03:06:48.648]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:48.648]    __FlashAddr=0x00000000
[03:06:48.648]    __FlashLen=0x00000000
[03:06:48.648]    __FlashArg=0x00000000
[03:06:48.648]    __FlashOp=0x00000000
[03:06:48.648]    __Result=0x00000000
[03:06:48.648]  </debugvars>
[03:06:48.648]  
[03:06:48.648]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:48.648]    <block atomic="false" info="">
[03:06:48.648]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:48.648]        // -> [isSWJ <= 0x00000001]
[03:06:48.648]      __var hasDormant = __protocol & 0x00020000;
[03:06:48.648]        // -> [hasDormant <= 0x00000000]
[03:06:48.648]      __var protType   = __protocol & 0x0000FFFF;
[03:06:48.648]        // -> [protType <= 0x00000002]
[03:06:48.648]    </block>
[03:06:48.648]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:48.648]      // if-block "protType == 1"
[03:06:48.648]        // =>  FALSE
[03:06:48.648]      // skip if-block "protType == 1"
[03:06:48.648]    </control>
[03:06:48.648]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:48.648]      // if-block "protType == 2"
[03:06:48.652]        // =>  TRUE
[03:06:48.652]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:48.652]        // if-block "isSWJ"
[03:06:48.652]          // =>  TRUE
[03:06:48.652]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:48.652]          // if-block "hasDormant"
[03:06:48.652]            // =>  FALSE
[03:06:48.652]          // skip if-block "hasDormant"
[03:06:48.652]        </control>
[03:06:48.652]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:48.652]          // if-block "!hasDormant"
[03:06:48.652]            // =>  TRUE
[03:06:48.652]          <block atomic="false" info="">
[03:06:48.652]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:49.660]  
[03:06:49.660]  !!! E320 : DAP access error
[03:06:49.660]  
[03:06:49.668]          </block>
[03:06:49.668]          // end if-block "!hasDormant"
[03:06:49.668]        </control>
[03:06:49.668]        // end if-block "isSWJ"
[03:06:49.668]      </control>
[03:06:49.668]      // end if-block "protType == 2"
[03:06:49.668]    </control>
[03:06:49.668]  </sequence>
[03:06:49.668]  
[03:06:49.924]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:49.924]  
[03:06:49.924]  <debugvars>
[03:06:49.924]    // Pre-defined
[03:06:49.924]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:49.924]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:49.924]    __dp=0x00000000
[03:06:49.924]    __ap=0x00000000
[03:06:49.924]    __traceout=0x00000000      (Trace Disabled)
[03:06:49.924]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:49.926]    __FlashAddr=0x00000000
[03:06:49.926]    __FlashLen=0x00000000
[03:06:49.926]    __FlashArg=0x00000000
[03:06:49.926]    __FlashOp=0x00000000
[03:06:49.926]    __Result=0x00000000
[03:06:49.927]  </debugvars>
[03:06:49.927]  
[03:06:49.927]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:49.927]    <block atomic="false" info="">
[03:06:49.927]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:49.927]        // -> [isSWJ <= 0x00000001]
[03:06:49.927]      __var hasDormant = __protocol & 0x00020000;
[03:06:49.927]        // -> [hasDormant <= 0x00000000]
[03:06:49.927]      __var protType   = __protocol & 0x0000FFFF;
[03:06:49.927]        // -> [protType <= 0x00000002]
[03:06:49.927]    </block>
[03:06:49.927]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:49.927]      // if-block "protType == 1"
[03:06:49.927]        // =>  FALSE
[03:06:49.927]      // skip if-block "protType == 1"
[03:06:49.928]    </control>
[03:06:49.928]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:49.928]      // if-block "protType == 2"
[03:06:49.928]        // =>  TRUE
[03:06:49.928]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:49.928]        // if-block "isSWJ"
[03:06:49.928]          // =>  TRUE
[03:06:49.928]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:49.928]          // if-block "hasDormant"
[03:06:49.928]            // =>  FALSE
[03:06:49.928]          // skip if-block "hasDormant"
[03:06:49.928]        </control>
[03:06:49.928]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:49.928]          // if-block "!hasDormant"
[03:06:49.928]            // =>  TRUE
[03:06:49.930]          <block atomic="false" info="">
[03:06:49.930]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:50.932]  
[03:06:50.932]  !!! E320 : DAP access error
[03:06:50.932]  
[03:06:50.941]          </block>
[03:06:50.941]          // end if-block "!hasDormant"
[03:06:50.941]        </control>
[03:06:50.941]        // end if-block "isSWJ"
[03:06:50.941]      </control>
[03:06:50.941]      // end if-block "protType == 2"
[03:06:50.941]    </control>
[03:06:50.941]  </sequence>
[03:06:50.941]  
[03:06:51.198]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:51.198]  
[03:06:51.207]  <debugvars>
[03:06:51.207]    // Pre-defined
[03:06:51.207]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:51.207]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:51.207]    __dp=0x00000000
[03:06:51.207]    __ap=0x00000000
[03:06:51.207]    __traceout=0x00000000      (Trace Disabled)
[03:06:51.207]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:51.207]    __FlashAddr=0x00000000
[03:06:51.207]    __FlashLen=0x00000000
[03:06:51.207]    __FlashArg=0x00000000
[03:06:51.207]    __FlashOp=0x00000000
[03:06:51.207]    __Result=0x00000000
[03:06:51.207]  </debugvars>
[03:06:51.207]  
[03:06:51.207]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:51.207]    <block atomic="false" info="">
[03:06:51.207]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:51.207]        // -> [isSWJ <= 0x00000001]
[03:06:51.207]      __var hasDormant = __protocol & 0x00020000;
[03:06:51.207]        // -> [hasDormant <= 0x00000000]
[03:06:51.207]      __var protType   = __protocol & 0x0000FFFF;
[03:06:51.207]        // -> [protType <= 0x00000002]
[03:06:51.207]    </block>
[03:06:51.207]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:51.207]      // if-block "protType == 1"
[03:06:51.207]        // =>  FALSE
[03:06:51.207]      // skip if-block "protType == 1"
[03:06:51.207]    </control>
[03:06:51.210]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:51.210]      // if-block "protType == 2"
[03:06:51.210]        // =>  TRUE
[03:06:51.210]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:51.210]        // if-block "isSWJ"
[03:06:51.210]          // =>  TRUE
[03:06:51.210]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:51.210]          // if-block "hasDormant"
[03:06:51.210]            // =>  FALSE
[03:06:51.210]          // skip if-block "hasDormant"
[03:06:51.210]        </control>
[03:06:51.210]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:51.210]          // if-block "!hasDormant"
[03:06:51.210]            // =>  TRUE
[03:06:51.210]          <block atomic="false" info="">
[03:06:51.210]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:52.217]  
[03:06:52.217]  !!! E320 : DAP access error
[03:06:52.217]  
[03:06:52.226]          </block>
[03:06:52.226]          // end if-block "!hasDormant"
[03:06:52.226]        </control>
[03:06:52.226]        // end if-block "isSWJ"
[03:06:52.226]      </control>
[03:06:52.226]      // end if-block "protType == 2"
[03:06:52.226]    </control>
[03:06:52.226]  </sequence>
[03:06:52.226]  
[03:06:52.484]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:52.484]  
[03:06:52.492]  <debugvars>
[03:06:52.492]    // Pre-defined
[03:06:52.492]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:52.492]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:52.492]    __dp=0x00000000
[03:06:52.492]    __ap=0x00000000
[03:06:52.492]    __traceout=0x00000000      (Trace Disabled)
[03:06:52.492]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:52.492]    __FlashAddr=0x00000000
[03:06:52.492]    __FlashLen=0x00000000
[03:06:52.492]    __FlashArg=0x00000000
[03:06:52.492]    __FlashOp=0x00000000
[03:06:52.492]    __Result=0x00000000
[03:06:52.492]  </debugvars>
[03:06:52.492]  
[03:06:52.492]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:52.492]    <block atomic="false" info="">
[03:06:52.492]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:52.492]        // -> [isSWJ <= 0x00000001]
[03:06:52.492]      __var hasDormant = __protocol & 0x00020000;
[03:06:52.492]        // -> [hasDormant <= 0x00000000]
[03:06:52.492]      __var protType   = __protocol & 0x0000FFFF;
[03:06:52.495]        // -> [protType <= 0x00000002]
[03:06:52.495]    </block>
[03:06:52.495]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:52.495]      // if-block "protType == 1"
[03:06:52.495]        // =>  FALSE
[03:06:52.495]      // skip if-block "protType == 1"
[03:06:52.495]    </control>
[03:06:52.495]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:52.495]      // if-block "protType == 2"
[03:06:52.495]        // =>  TRUE
[03:06:52.495]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:52.495]        // if-block "isSWJ"
[03:06:52.495]          // =>  TRUE
[03:06:52.495]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:52.495]          // if-block "hasDormant"
[03:06:52.495]            // =>  FALSE
[03:06:52.495]          // skip if-block "hasDormant"
[03:06:52.495]        </control>
[03:06:52.495]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:52.495]          // if-block "!hasDormant"
[03:06:52.495]            // =>  TRUE
[03:06:52.495]          <block atomic="false" info="">
[03:06:52.495]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:53.504]  
[03:06:53.504]  !!! E320 : DAP access error
[03:06:53.504]  
[03:06:53.514]          </block>
[03:06:53.514]          // end if-block "!hasDormant"
[03:06:53.514]        </control>
[03:06:53.514]        // end if-block "isSWJ"
[03:06:53.514]      </control>
[03:06:53.514]      // end if-block "protType == 2"
[03:06:53.514]    </control>
[03:06:53.514]  </sequence>
[03:06:53.514]  
[03:06:53.769]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:53.769]  
[03:06:53.769]  <debugvars>
[03:06:53.769]    // Pre-defined
[03:06:53.769]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:53.769]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:53.769]    __dp=0x00000000
[03:06:53.769]    __ap=0x00000000
[03:06:53.769]    __traceout=0x00000000      (Trace Disabled)
[03:06:53.769]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:53.769]    __FlashAddr=0x00000000
[03:06:53.769]    __FlashLen=0x00000000
[03:06:53.769]    __FlashArg=0x00000000
[03:06:53.769]    __FlashOp=0x00000000
[03:06:53.769]    __Result=0x00000000
[03:06:53.769]  </debugvars>
[03:06:53.769]  
[03:06:53.769]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:53.769]    <block atomic="false" info="">
[03:06:53.773]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:53.773]        // -> [isSWJ <= 0x00000001]
[03:06:53.773]      __var hasDormant = __protocol & 0x00020000;
[03:06:53.773]        // -> [hasDormant <= 0x00000000]
[03:06:53.773]      __var protType   = __protocol & 0x0000FFFF;
[03:06:53.773]        // -> [protType <= 0x00000002]
[03:06:53.773]    </block>
[03:06:53.773]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:53.773]      // if-block "protType == 1"
[03:06:53.773]        // =>  FALSE
[03:06:53.773]      // skip if-block "protType == 1"
[03:06:53.773]    </control>
[03:06:53.773]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:53.773]      // if-block "protType == 2"
[03:06:53.773]        // =>  TRUE
[03:06:53.773]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:53.773]        // if-block "isSWJ"
[03:06:53.773]          // =>  TRUE
[03:06:53.773]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:53.773]          // if-block "hasDormant"
[03:06:53.773]            // =>  FALSE
[03:06:53.773]          // skip if-block "hasDormant"
[03:06:53.773]        </control>
[03:06:53.773]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:53.773]          // if-block "!hasDormant"
[03:06:53.773]            // =>  TRUE
[03:06:53.773]          <block atomic="false" info="">
[03:06:53.773]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:54.776]  
[03:06:54.776]  !!! E320 : DAP access error
[03:06:54.776]  
[03:06:54.785]          </block>
[03:06:54.785]          // end if-block "!hasDormant"
[03:06:54.785]        </control>
[03:06:54.785]        // end if-block "isSWJ"
[03:06:54.785]      </control>
[03:06:54.785]      // end if-block "protType == 2"
[03:06:54.785]    </control>
[03:06:54.785]  </sequence>
[03:06:54.785]  
[03:06:55.042]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:55.042]  
[03:06:55.050]  <debugvars>
[03:06:55.050]    // Pre-defined
[03:06:55.050]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:55.050]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:55.050]    __dp=0x00000000
[03:06:55.050]    __ap=0x00000000
[03:06:55.050]    __traceout=0x00000000      (Trace Disabled)
[03:06:55.050]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:55.050]    __FlashAddr=0x00000000
[03:06:55.050]    __FlashLen=0x00000000
[03:06:55.050]    __FlashArg=0x00000000
[03:06:55.050]    __FlashOp=0x00000000
[03:06:55.050]    __Result=0x00000000
[03:06:55.050]  </debugvars>
[03:06:55.050]  
[03:06:55.050]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:55.050]    <block atomic="false" info="">
[03:06:55.050]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:55.050]        // -> [isSWJ <= 0x00000001]
[03:06:55.050]      __var hasDormant = __protocol & 0x00020000;
[03:06:55.050]        // -> [hasDormant <= 0x00000000]
[03:06:55.050]      __var protType   = __protocol & 0x0000FFFF;
[03:06:55.050]        // -> [protType <= 0x00000002]
[03:06:55.050]    </block>
[03:06:55.050]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:55.050]      // if-block "protType == 1"
[03:06:55.050]        // =>  FALSE
[03:06:55.050]      // skip if-block "protType == 1"
[03:06:55.050]    </control>
[03:06:55.050]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:55.050]      // if-block "protType == 2"
[03:06:55.050]        // =>  TRUE
[03:06:55.054]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:55.054]        // if-block "isSWJ"
[03:06:55.054]          // =>  TRUE
[03:06:55.054]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:55.054]          // if-block "hasDormant"
[03:06:55.054]            // =>  FALSE
[03:06:55.054]          // skip if-block "hasDormant"
[03:06:55.054]        </control>
[03:06:55.054]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:55.054]          // if-block "!hasDormant"
[03:06:55.054]            // =>  TRUE
[03:06:55.054]          <block atomic="false" info="">
[03:06:55.054]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:56.062]  
[03:06:56.062]  !!! E320 : DAP access error
[03:06:56.062]  
[03:06:56.071]          </block>
[03:06:56.071]          // end if-block "!hasDormant"
[03:06:56.071]        </control>
[03:06:56.071]        // end if-block "isSWJ"
[03:06:56.071]      </control>
[03:06:56.071]      // end if-block "protType == 2"
[03:06:56.071]    </control>
[03:06:56.072]  </sequence>
[03:06:56.072]  
[03:06:56.332]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:56.332]  
[03:06:56.340]  <debugvars>
[03:06:56.340]    // Pre-defined
[03:06:56.340]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:56.340]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:56.340]    __dp=0x00000000
[03:06:56.340]    __ap=0x00000000
[03:06:56.340]    __traceout=0x00000000      (Trace Disabled)
[03:06:56.340]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:56.340]    __FlashAddr=0x00000000
[03:06:56.340]    __FlashLen=0x00000000
[03:06:56.340]    __FlashArg=0x00000000
[03:06:56.340]    __FlashOp=0x00000000
[03:06:56.340]    __Result=0x00000000
[03:06:56.340]  </debugvars>
[03:06:56.340]  
[03:06:56.340]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:56.340]    <block atomic="false" info="">
[03:06:56.340]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:56.340]        // -> [isSWJ <= 0x00000001]
[03:06:56.340]      __var hasDormant = __protocol & 0x00020000;
[03:06:56.340]        // -> [hasDormant <= 0x00000000]
[03:06:56.340]      __var protType   = __protocol & 0x0000FFFF;
[03:06:56.340]        // -> [protType <= 0x00000002]
[03:06:56.340]    </block>
[03:06:56.340]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:56.340]      // if-block "protType == 1"
[03:06:56.340]        // =>  FALSE
[03:06:56.340]      // skip if-block "protType == 1"
[03:06:56.340]    </control>
[03:06:56.340]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:56.340]      // if-block "protType == 2"
[03:06:56.340]        // =>  TRUE
[03:06:56.340]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:56.344]        // if-block "isSWJ"
[03:06:56.344]          // =>  TRUE
[03:06:56.344]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:56.344]          // if-block "hasDormant"
[03:06:56.344]            // =>  FALSE
[03:06:56.344]          // skip if-block "hasDormant"
[03:06:56.344]        </control>
[03:06:56.344]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:56.344]          // if-block "!hasDormant"
[03:06:56.344]            // =>  TRUE
[03:06:56.344]          <block atomic="false" info="">
[03:06:56.344]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:57.352]  
[03:06:57.352]  !!! E320 : DAP access error
[03:06:57.352]  
[03:06:57.360]          </block>
[03:06:57.360]          // end if-block "!hasDormant"
[03:06:57.360]        </control>
[03:06:57.360]        // end if-block "isSWJ"
[03:06:57.360]      </control>
[03:06:57.360]      // end if-block "protType == 2"
[03:06:57.360]    </control>
[03:06:57.360]  </sequence>
[03:06:57.360]  
[03:06:57.612]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:57.612]  
[03:06:57.621]  <debugvars>
[03:06:57.621]    // Pre-defined
[03:06:57.621]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:57.621]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:57.621]    __dp=0x00000000
[03:06:57.621]    __ap=0x00000000
[03:06:57.621]    __traceout=0x00000000      (Trace Disabled)
[03:06:57.621]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:57.621]    __FlashAddr=0x00000000
[03:06:57.621]    __FlashLen=0x00000000
[03:06:57.621]    __FlashArg=0x00000000
[03:06:57.622]    __FlashOp=0x00000000
[03:06:57.622]    __Result=0x00000000
[03:06:57.622]  </debugvars>
[03:06:57.623]  
[03:06:57.623]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:57.623]    <block atomic="false" info="">
[03:06:57.623]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:57.623]        // -> [isSWJ <= 0x00000001]
[03:06:57.623]      __var hasDormant = __protocol & 0x00020000;
[03:06:57.623]        // -> [hasDormant <= 0x00000000]
[03:06:57.623]      __var protType   = __protocol & 0x0000FFFF;
[03:06:57.623]        // -> [protType <= 0x00000002]
[03:06:57.623]    </block>
[03:06:57.623]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:57.623]      // if-block "protType == 1"
[03:06:57.623]        // =>  FALSE
[03:06:57.623]      // skip if-block "protType == 1"
[03:06:57.623]    </control>
[03:06:57.623]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:57.624]      // if-block "protType == 2"
[03:06:57.624]        // =>  TRUE
[03:06:57.624]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:57.624]        // if-block "isSWJ"
[03:06:57.624]          // =>  TRUE
[03:06:57.624]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:57.624]          // if-block "hasDormant"
[03:06:57.624]            // =>  FALSE
[03:06:57.624]          // skip if-block "hasDormant"
[03:06:57.624]        </control>
[03:06:57.624]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:57.624]          // if-block "!hasDormant"
[03:06:57.624]            // =>  TRUE
[03:06:57.624]          <block atomic="false" info="">
[03:06:57.624]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:58.638]  
[03:06:58.638]  !!! E320 : DAP access error
[03:06:58.638]  
[03:06:58.646]          </block>
[03:06:58.646]          // end if-block "!hasDormant"
[03:06:58.646]        </control>
[03:06:58.646]        // end if-block "isSWJ"
[03:06:58.646]      </control>
[03:06:58.646]      // end if-block "protType == 2"
[03:06:58.646]    </control>
[03:06:58.646]  </sequence>
[03:06:58.646]  
[03:06:58.898]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:06:58.898]  
[03:06:58.905]  <debugvars>
[03:06:58.906]    // Pre-defined
[03:06:58.906]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:06:58.906]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:06:58.906]    __dp=0x00000000
[03:06:58.906]    __ap=0x00000000
[03:06:58.906]    __traceout=0x00000000      (Trace Disabled)
[03:06:58.906]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:06:58.906]    __FlashAddr=0x00000000
[03:06:58.906]    __FlashLen=0x00000000
[03:06:58.906]    __FlashArg=0x00000000
[03:06:58.906]    __FlashOp=0x00000000
[03:06:58.906]    __Result=0x00000000
[03:06:58.906]  </debugvars>
[03:06:58.906]  
[03:06:58.906]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:06:58.906]    <block atomic="false" info="">
[03:06:58.906]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:06:58.906]        // -> [isSWJ <= 0x00000001]
[03:06:58.906]      __var hasDormant = __protocol & 0x00020000;
[03:06:58.906]        // -> [hasDormant <= 0x00000000]
[03:06:58.906]      __var protType   = __protocol & 0x0000FFFF;
[03:06:58.906]        // -> [protType <= 0x00000002]
[03:06:58.906]    </block>
[03:06:58.906]    <control if="protType == 1" while="" timeout="0" info="">
[03:06:58.906]      // if-block "protType == 1"
[03:06:58.906]        // =>  FALSE
[03:06:58.906]      // skip if-block "protType == 1"
[03:06:58.906]    </control>
[03:06:58.910]    <control if="protType == 2" while="" timeout="0" info="">
[03:06:58.910]      // if-block "protType == 2"
[03:06:58.910]        // =>  TRUE
[03:06:58.910]      <control if="isSWJ" while="" timeout="0" info="">
[03:06:58.910]        // if-block "isSWJ"
[03:06:58.910]          // =>  TRUE
[03:06:58.910]        <control if="hasDormant" while="" timeout="0" info="">
[03:06:58.910]          // if-block "hasDormant"
[03:06:58.910]            // =>  FALSE
[03:06:58.911]          // skip if-block "hasDormant"
[03:06:58.911]        </control>
[03:06:58.911]        <control if="!hasDormant" while="" timeout="0" info="">
[03:06:58.911]          // if-block "!hasDormant"
[03:06:58.911]            // =>  TRUE
[03:06:58.911]          <block atomic="false" info="">
[03:06:58.911]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:06:59.923]  
[03:06:59.923]  !!! E320 : DAP access error
[03:06:59.923]  
[03:06:59.931]          </block>
[03:06:59.931]          // end if-block "!hasDormant"
[03:06:59.931]        </control>
[03:06:59.931]        // end if-block "isSWJ"
[03:06:59.931]      </control>
[03:06:59.931]      // end if-block "protType == 2"
[03:06:59.931]    </control>
[03:06:59.931]  </sequence>
[03:06:59.931]  
[03:07:00.189]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:00.189]  
[03:07:00.198]  <debugvars>
[03:07:00.198]    // Pre-defined
[03:07:00.198]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:00.198]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:00.198]    __dp=0x00000000
[03:07:00.198]    __ap=0x00000000
[03:07:00.198]    __traceout=0x00000000      (Trace Disabled)
[03:07:00.198]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:00.198]    __FlashAddr=0x00000000
[03:07:00.198]    __FlashLen=0x00000000
[03:07:00.198]    __FlashArg=0x00000000
[03:07:00.198]    __FlashOp=0x00000000
[03:07:00.198]    __Result=0x00000000
[03:07:00.198]  </debugvars>
[03:07:00.198]  
[03:07:00.198]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:00.198]    <block atomic="false" info="">
[03:07:00.198]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:00.198]        // -> [isSWJ <= 0x00000001]
[03:07:00.198]      __var hasDormant = __protocol & 0x00020000;
[03:07:00.200]        // -> [hasDormant <= 0x00000000]
[03:07:00.200]      __var protType   = __protocol & 0x0000FFFF;
[03:07:00.200]        // -> [protType <= 0x00000002]
[03:07:00.200]    </block>
[03:07:00.200]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:00.200]      // if-block "protType == 1"
[03:07:00.200]        // =>  FALSE
[03:07:00.200]      // skip if-block "protType == 1"
[03:07:00.200]    </control>
[03:07:00.200]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:00.200]      // if-block "protType == 2"
[03:07:00.200]        // =>  TRUE
[03:07:00.200]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:00.200]        // if-block "isSWJ"
[03:07:00.200]          // =>  TRUE
[03:07:00.200]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:00.200]          // if-block "hasDormant"
[03:07:00.200]            // =>  FALSE
[03:07:00.200]          // skip if-block "hasDormant"
[03:07:00.200]        </control>
[03:07:00.200]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:00.200]          // if-block "!hasDormant"
[03:07:00.200]            // =>  TRUE
[03:07:00.200]          <block atomic="false" info="">
[03:07:00.200]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:01.208]  
[03:07:01.208]  !!! E320 : DAP access error
[03:07:01.208]  
[03:07:01.216]          </block>
[03:07:01.216]          // end if-block "!hasDormant"
[03:07:01.216]        </control>
[03:07:01.216]        // end if-block "isSWJ"
[03:07:01.216]      </control>
[03:07:01.216]      // end if-block "protType == 2"
[03:07:01.216]    </control>
[03:07:01.216]  </sequence>
[03:07:01.216]  
[03:07:01.467]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:01.467]  
[03:07:01.467]  <debugvars>
[03:07:01.468]    // Pre-defined
[03:07:01.468]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:01.468]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:01.468]    __dp=0x00000000
[03:07:01.468]    __ap=0x00000000
[03:07:01.468]    __traceout=0x00000000      (Trace Disabled)
[03:07:01.468]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:01.468]    __FlashAddr=0x00000000
[03:07:01.468]    __FlashLen=0x00000000
[03:07:01.468]    __FlashArg=0x00000000
[03:07:01.468]    __FlashOp=0x00000000
[03:07:01.468]    __Result=0x00000000
[03:07:01.468]  </debugvars>
[03:07:01.468]  
[03:07:01.469]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:01.469]    <block atomic="false" info="">
[03:07:01.469]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:01.469]        // -> [isSWJ <= 0x00000001]
[03:07:01.469]      __var hasDormant = __protocol & 0x00020000;
[03:07:01.469]        // -> [hasDormant <= 0x00000000]
[03:07:01.469]      __var protType   = __protocol & 0x0000FFFF;
[03:07:01.469]        // -> [protType <= 0x00000002]
[03:07:01.469]    </block>
[03:07:01.469]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:01.469]      // if-block "protType == 1"
[03:07:01.469]        // =>  FALSE
[03:07:01.471]      // skip if-block "protType == 1"
[03:07:01.471]    </control>
[03:07:01.471]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:01.471]      // if-block "protType == 2"
[03:07:01.471]        // =>  TRUE
[03:07:01.471]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:01.471]        // if-block "isSWJ"
[03:07:01.471]          // =>  TRUE
[03:07:01.471]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:01.471]          // if-block "hasDormant"
[03:07:01.472]            // =>  FALSE
[03:07:01.472]          // skip if-block "hasDormant"
[03:07:01.472]        </control>
[03:07:01.472]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:01.472]          // if-block "!hasDormant"
[03:07:01.472]            // =>  TRUE
[03:07:01.472]          <block atomic="false" info="">
[03:07:01.473]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:02.474]  
[03:07:02.474]  !!! E320 : DAP access error
[03:07:02.474]  
[03:07:02.482]          </block>
[03:07:02.482]          // end if-block "!hasDormant"
[03:07:02.482]        </control>
[03:07:02.482]        // end if-block "isSWJ"
[03:07:02.482]      </control>
[03:07:02.482]      // end if-block "protType == 2"
[03:07:02.482]    </control>
[03:07:02.482]  </sequence>
[03:07:02.482]  
[03:07:02.738]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:02.738]  
[03:07:02.747]  <debugvars>
[03:07:02.747]    // Pre-defined
[03:07:02.747]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:02.747]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:02.747]    __dp=0x00000000
[03:07:02.747]    __ap=0x00000000
[03:07:02.747]    __traceout=0x00000000      (Trace Disabled)
[03:07:02.747]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:02.747]    __FlashAddr=0x00000000
[03:07:02.747]    __FlashLen=0x00000000
[03:07:02.747]    __FlashArg=0x00000000
[03:07:02.747]    __FlashOp=0x00000000
[03:07:02.747]    __Result=0x00000000
[03:07:02.747]  </debugvars>
[03:07:02.747]  
[03:07:02.747]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:02.747]    <block atomic="false" info="">
[03:07:02.747]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:02.747]        // -> [isSWJ <= 0x00000001]
[03:07:02.747]      __var hasDormant = __protocol & 0x00020000;
[03:07:02.747]        // -> [hasDormant <= 0x00000000]
[03:07:02.747]      __var protType   = __protocol & 0x0000FFFF;
[03:07:02.747]        // -> [protType <= 0x00000002]
[03:07:02.747]    </block>
[03:07:02.747]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:02.750]      // if-block "protType == 1"
[03:07:02.750]        // =>  FALSE
[03:07:02.750]      // skip if-block "protType == 1"
[03:07:02.750]    </control>
[03:07:02.750]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:02.750]      // if-block "protType == 2"
[03:07:02.751]        // =>  TRUE
[03:07:02.751]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:02.751]        // if-block "isSWJ"
[03:07:02.751]          // =>  TRUE
[03:07:02.751]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:02.751]          // if-block "hasDormant"
[03:07:02.751]            // =>  FALSE
[03:07:02.751]          // skip if-block "hasDormant"
[03:07:02.751]        </control>
[03:07:02.751]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:02.751]          // if-block "!hasDormant"
[03:07:02.752]            // =>  TRUE
[03:07:02.752]          <block atomic="false" info="">
[03:07:02.752]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:03.762]  
[03:07:03.762]  !!! E320 : DAP access error
[03:07:03.762]  
[03:07:03.770]          </block>
[03:07:03.770]          // end if-block "!hasDormant"
[03:07:03.770]        </control>
[03:07:03.770]        // end if-block "isSWJ"
[03:07:03.770]      </control>
[03:07:03.770]      // end if-block "protType == 2"
[03:07:03.770]    </control>
[03:07:03.770]  </sequence>
[03:07:03.770]  
[03:07:04.031]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:04.031]  
[03:07:04.039]  <debugvars>
[03:07:04.039]    // Pre-defined
[03:07:04.039]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:04.039]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:04.039]    __dp=0x00000000
[03:07:04.039]    __ap=0x00000000
[03:07:04.039]    __traceout=0x00000000      (Trace Disabled)
[03:07:04.039]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:04.039]    __FlashAddr=0x00000000
[03:07:04.039]    __FlashLen=0x00000000
[03:07:04.039]    __FlashArg=0x00000000
[03:07:04.039]    __FlashOp=0x00000000
[03:07:04.039]    __Result=0x00000000
[03:07:04.039]  </debugvars>
[03:07:04.039]  
[03:07:04.039]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:04.039]    <block atomic="false" info="">
[03:07:04.039]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:04.039]        // -> [isSWJ <= 0x00000001]
[03:07:04.039]      __var hasDormant = __protocol & 0x00020000;
[03:07:04.039]        // -> [hasDormant <= 0x00000000]
[03:07:04.039]      __var protType   = __protocol & 0x0000FFFF;
[03:07:04.039]        // -> [protType <= 0x00000002]
[03:07:04.039]    </block>
[03:07:04.039]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:04.039]      // if-block "protType == 1"
[03:07:04.039]        // =>  FALSE
[03:07:04.039]      // skip if-block "protType == 1"
[03:07:04.039]    </control>
[03:07:04.039]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:04.039]      // if-block "protType == 2"
[03:07:04.039]        // =>  TRUE
[03:07:04.043]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:04.043]        // if-block "isSWJ"
[03:07:04.043]          // =>  TRUE
[03:07:04.043]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:04.043]          // if-block "hasDormant"
[03:07:04.043]            // =>  FALSE
[03:07:04.043]          // skip if-block "hasDormant"
[03:07:04.043]        </control>
[03:07:04.043]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:04.043]          // if-block "!hasDormant"
[03:07:04.043]            // =>  TRUE
[03:07:04.043]          <block atomic="false" info="">
[03:07:04.043]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:05.048]  
[03:07:05.048]  !!! E320 : DAP access error
[03:07:05.048]  
[03:07:05.048]          </block>
[03:07:05.048]          // end if-block "!hasDormant"
[03:07:05.048]        </control>
[03:07:05.048]        // end if-block "isSWJ"
[03:07:05.048]      </control>
[03:07:05.048]      // end if-block "protType == 2"
[03:07:05.048]    </control>
[03:07:05.048]  </sequence>
[03:07:05.048]  
[03:07:05.304]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:05.304]  
[03:07:05.311]  <debugvars>
[03:07:05.311]    // Pre-defined
[03:07:05.311]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:05.311]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:05.311]    __dp=0x00000000
[03:07:05.311]    __ap=0x00000000
[03:07:05.311]    __traceout=0x00000000      (Trace Disabled)
[03:07:05.311]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:05.311]    __FlashAddr=0x00000000
[03:07:05.311]    __FlashLen=0x00000000
[03:07:05.311]    __FlashArg=0x00000000
[03:07:05.311]    __FlashOp=0x00000000
[03:07:05.311]    __Result=0x00000000
[03:07:05.311]  </debugvars>
[03:07:05.311]  
[03:07:05.311]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:05.311]    <block atomic="false" info="">
[03:07:05.311]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:05.311]        // -> [isSWJ <= 0x00000001]
[03:07:05.311]      __var hasDormant = __protocol & 0x00020000;
[03:07:05.311]        // -> [hasDormant <= 0x00000000]
[03:07:05.311]      __var protType   = __protocol & 0x0000FFFF;
[03:07:05.311]        // -> [protType <= 0x00000002]
[03:07:05.311]    </block>
[03:07:05.311]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:05.311]      // if-block "protType == 1"
[03:07:05.311]        // =>  FALSE
[03:07:05.311]      // skip if-block "protType == 1"
[03:07:05.311]    </control>
[03:07:05.311]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:05.311]      // if-block "protType == 2"
[03:07:05.315]        // =>  TRUE
[03:07:05.315]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:05.315]        // if-block "isSWJ"
[03:07:05.315]          // =>  TRUE
[03:07:05.315]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:05.315]          // if-block "hasDormant"
[03:07:05.315]            // =>  FALSE
[03:07:05.315]          // skip if-block "hasDormant"
[03:07:05.315]        </control>
[03:07:05.315]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:05.315]          // if-block "!hasDormant"
[03:07:05.315]            // =>  TRUE
[03:07:05.315]          <block atomic="false" info="">
[03:07:05.315]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:06.318]  
[03:07:06.318]  !!! E320 : DAP access error
[03:07:06.318]  
[03:07:06.318]          </block>
[03:07:06.318]          // end if-block "!hasDormant"
[03:07:06.318]        </control>
[03:07:06.318]        // end if-block "isSWJ"
[03:07:06.318]      </control>
[03:07:06.318]      // end if-block "protType == 2"
[03:07:06.318]    </control>
[03:07:06.318]  </sequence>
[03:07:06.318]  
[03:07:06.571]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:06.571]  
[03:07:06.572]  <debugvars>
[03:07:06.573]    // Pre-defined
[03:07:06.573]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:06.573]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:06.573]    __dp=0x00000000
[03:07:06.573]    __ap=0x00000000
[03:07:06.573]    __traceout=0x00000000      (Trace Disabled)
[03:07:06.573]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:06.573]    __FlashAddr=0x00000000
[03:07:06.573]    __FlashLen=0x00000000
[03:07:06.573]    __FlashArg=0x00000000
[03:07:06.574]    __FlashOp=0x00000000
[03:07:06.574]    __Result=0x00000000
[03:07:06.574]  </debugvars>
[03:07:06.574]  
[03:07:06.574]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:06.574]    <block atomic="false" info="">
[03:07:06.574]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:06.574]        // -> [isSWJ <= 0x00000001]
[03:07:06.574]      __var hasDormant = __protocol & 0x00020000;
[03:07:06.574]        // -> [hasDormant <= 0x00000000]
[03:07:06.574]      __var protType   = __protocol & 0x0000FFFF;
[03:07:06.574]        // -> [protType <= 0x00000002]
[03:07:06.574]    </block>
[03:07:06.575]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:06.575]      // if-block "protType == 1"
[03:07:06.575]        // =>  FALSE
[03:07:06.575]      // skip if-block "protType == 1"
[03:07:06.575]    </control>
[03:07:06.575]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:06.576]      // if-block "protType == 2"
[03:07:06.576]        // =>  TRUE
[03:07:06.576]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:06.576]        // if-block "isSWJ"
[03:07:06.576]          // =>  TRUE
[03:07:06.576]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:06.576]          // if-block "hasDormant"
[03:07:06.576]            // =>  FALSE
[03:07:06.576]          // skip if-block "hasDormant"
[03:07:06.576]        </control>
[03:07:06.576]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:06.577]          // if-block "!hasDormant"
[03:07:06.577]            // =>  TRUE
[03:07:06.577]          <block atomic="false" info="">
[03:07:06.577]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:07.581]  
[03:07:07.581]  !!! E320 : DAP access error
[03:07:07.581]  
[03:07:07.589]          </block>
[03:07:07.589]          // end if-block "!hasDormant"
[03:07:07.589]        </control>
[03:07:07.589]        // end if-block "isSWJ"
[03:07:07.589]      </control>
[03:07:07.589]      // end if-block "protType == 2"
[03:07:07.589]    </control>
[03:07:07.589]  </sequence>
[03:07:07.589]  
[03:07:07.840]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:07.840]  
[03:07:07.848]  <debugvars>
[03:07:07.848]    // Pre-defined
[03:07:07.848]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:07.848]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:07.848]    __dp=0x00000000
[03:07:07.848]    __ap=0x00000000
[03:07:07.848]    __traceout=0x00000000      (Trace Disabled)
[03:07:07.848]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:07.848]    __FlashAddr=0x00000000
[03:07:07.848]    __FlashLen=0x00000000
[03:07:07.848]    __FlashArg=0x00000000
[03:07:07.848]    __FlashOp=0x00000000
[03:07:07.848]    __Result=0x00000000
[03:07:07.848]  </debugvars>
[03:07:07.848]  
[03:07:07.848]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:07.848]    <block atomic="false" info="">
[03:07:07.848]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:07.848]        // -> [isSWJ <= 0x00000001]
[03:07:07.848]      __var hasDormant = __protocol & 0x00020000;
[03:07:07.848]        // -> [hasDormant <= 0x00000000]
[03:07:07.848]      __var protType   = __protocol & 0x0000FFFF;
[03:07:07.848]        // -> [protType <= 0x00000002]
[03:07:07.848]    </block>
[03:07:07.848]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:07.848]      // if-block "protType == 1"
[03:07:07.848]        // =>  FALSE
[03:07:07.848]      // skip if-block "protType == 1"
[03:07:07.848]    </control>
[03:07:07.848]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:07.848]      // if-block "protType == 2"
[03:07:07.848]        // =>  TRUE
[03:07:07.848]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:07.852]        // if-block "isSWJ"
[03:07:07.852]          // =>  TRUE
[03:07:07.852]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:07.852]          // if-block "hasDormant"
[03:07:07.852]            // =>  FALSE
[03:07:07.852]          // skip if-block "hasDormant"
[03:07:07.852]        </control>
[03:07:07.852]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:07.852]          // if-block "!hasDormant"
[03:07:07.852]            // =>  TRUE
[03:07:07.852]          <block atomic="false" info="">
[03:07:07.852]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:08.861]  
[03:07:08.861]  !!! E320 : DAP access error
[03:07:08.861]  
[03:07:08.869]          </block>
[03:07:08.869]          // end if-block "!hasDormant"
[03:07:08.869]        </control>
[03:07:08.869]        // end if-block "isSWJ"
[03:07:08.869]      </control>
[03:07:08.869]      // end if-block "protType == 2"
[03:07:08.869]    </control>
[03:07:08.869]  </sequence>
[03:07:08.869]  
[03:07:09.126]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:09.126]  
[03:07:09.126]  <debugvars>
[03:07:09.126]    // Pre-defined
[03:07:09.126]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:09.126]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:09.126]    __dp=0x00000000
[03:07:09.126]    __ap=0x00000000
[03:07:09.126]    __traceout=0x00000000      (Trace Disabled)
[03:07:09.126]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:09.126]    __FlashAddr=0x00000000
[03:07:09.126]    __FlashLen=0x00000000
[03:07:09.126]    __FlashArg=0x00000000
[03:07:09.126]    __FlashOp=0x00000000
[03:07:09.126]    __Result=0x00000000
[03:07:09.126]  </debugvars>
[03:07:09.126]  
[03:07:09.126]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:09.126]    <block atomic="false" info="">
[03:07:09.126]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:09.126]        // -> [isSWJ <= 0x00000001]
[03:07:09.126]      __var hasDormant = __protocol & 0x00020000;
[03:07:09.126]        // -> [hasDormant <= 0x00000000]
[03:07:09.126]      __var protType   = __protocol & 0x0000FFFF;
[03:07:09.126]        // -> [protType <= 0x00000002]
[03:07:09.130]    </block>
[03:07:09.130]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:09.130]      // if-block "protType == 1"
[03:07:09.130]        // =>  FALSE
[03:07:09.130]      // skip if-block "protType == 1"
[03:07:09.130]    </control>
[03:07:09.130]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:09.130]      // if-block "protType == 2"
[03:07:09.130]        // =>  TRUE
[03:07:09.130]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:09.130]        // if-block "isSWJ"
[03:07:09.130]          // =>  TRUE
[03:07:09.130]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:09.130]          // if-block "hasDormant"
[03:07:09.130]            // =>  FALSE
[03:07:09.130]          // skip if-block "hasDormant"
[03:07:09.130]        </control>
[03:07:09.130]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:09.130]          // if-block "!hasDormant"
[03:07:09.130]            // =>  TRUE
[03:07:09.130]          <block atomic="false" info="">
[03:07:09.130]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:10.136]  
[03:07:10.136]  !!! E320 : DAP access error
[03:07:10.136]  
[03:07:10.136]          </block>
[03:07:10.136]          // end if-block "!hasDormant"
[03:07:10.136]        </control>
[03:07:10.136]        // end if-block "isSWJ"
[03:07:10.136]      </control>
[03:07:10.136]      // end if-block "protType == 2"
[03:07:10.137]    </control>
[03:07:10.137]  </sequence>
[03:07:10.137]  
[03:07:10.388]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:10.388]  
[03:07:10.388]  <debugvars>
[03:07:10.388]    // Pre-defined
[03:07:10.388]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:10.388]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:10.388]    __dp=0x00000000
[03:07:10.388]    __ap=0x00000000
[03:07:10.388]    __traceout=0x00000000      (Trace Disabled)
[03:07:10.388]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:10.388]    __FlashAddr=0x00000000
[03:07:10.388]    __FlashLen=0x00000000
[03:07:10.388]    __FlashArg=0x00000000
[03:07:10.388]    __FlashOp=0x00000000
[03:07:10.388]    __Result=0x00000000
[03:07:10.388]  </debugvars>
[03:07:10.388]  
[03:07:10.388]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:10.388]    <block atomic="false" info="">
[03:07:10.388]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:10.388]        // -> [isSWJ <= 0x00000001]
[03:07:10.388]      __var hasDormant = __protocol & 0x00020000;
[03:07:10.388]        // -> [hasDormant <= 0x00000000]
[03:07:10.388]      __var protType   = __protocol & 0x0000FFFF;
[03:07:10.388]        // -> [protType <= 0x00000002]
[03:07:10.388]    </block>
[03:07:10.388]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:10.388]      // if-block "protType == 1"
[03:07:10.388]        // =>  FALSE
[03:07:10.388]      // skip if-block "protType == 1"
[03:07:10.388]    </control>
[03:07:10.388]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:10.392]      // if-block "protType == 2"
[03:07:10.392]        // =>  TRUE
[03:07:10.392]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:10.392]        // if-block "isSWJ"
[03:07:10.392]          // =>  TRUE
[03:07:10.392]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:10.392]          // if-block "hasDormant"
[03:07:10.392]            // =>  FALSE
[03:07:10.392]          // skip if-block "hasDormant"
[03:07:10.392]        </control>
[03:07:10.392]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:10.392]          // if-block "!hasDormant"
[03:07:10.392]            // =>  TRUE
[03:07:10.392]          <block atomic="false" info="">
[03:07:10.392]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:11.395]  
[03:07:11.395]  !!! E320 : DAP access error
[03:07:11.395]  
[03:07:11.395]          </block>
[03:07:11.395]          // end if-block "!hasDormant"
[03:07:11.395]        </control>
[03:07:11.395]        // end if-block "isSWJ"
[03:07:11.396]      </control>
[03:07:11.396]      // end if-block "protType == 2"
[03:07:11.396]    </control>
[03:07:11.396]  </sequence>
[03:07:11.396]  
[03:07:11.654]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:11.654]  
[03:07:11.662]  <debugvars>
[03:07:11.662]    // Pre-defined
[03:07:11.662]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:11.662]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:11.662]    __dp=0x00000000
[03:07:11.662]    __ap=0x00000000
[03:07:11.662]    __traceout=0x00000000      (Trace Disabled)
[03:07:11.662]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:11.662]    __FlashAddr=0x00000000
[03:07:11.662]    __FlashLen=0x00000000
[03:07:11.662]    __FlashArg=0x00000000
[03:07:11.662]    __FlashOp=0x00000000
[03:07:11.662]    __Result=0x00000000
[03:07:11.662]  </debugvars>
[03:07:11.662]  
[03:07:11.662]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:11.662]    <block atomic="false" info="">
[03:07:11.662]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:11.662]        // -> [isSWJ <= 0x00000001]
[03:07:11.662]      __var hasDormant = __protocol & 0x00020000;
[03:07:11.662]        // -> [hasDormant <= 0x00000000]
[03:07:11.662]      __var protType   = __protocol & 0x0000FFFF;
[03:07:11.662]        // -> [protType <= 0x00000002]
[03:07:11.662]    </block>
[03:07:11.662]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:11.662]      // if-block "protType == 1"
[03:07:11.662]        // =>  FALSE
[03:07:11.662]      // skip if-block "protType == 1"
[03:07:11.662]    </control>
[03:07:11.662]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:11.662]      // if-block "protType == 2"
[03:07:11.662]        // =>  TRUE
[03:07:11.662]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:11.662]        // if-block "isSWJ"
[03:07:11.662]          // =>  TRUE
[03:07:11.666]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:11.666]          // if-block "hasDormant"
[03:07:11.666]            // =>  FALSE
[03:07:11.666]          // skip if-block "hasDormant"
[03:07:11.666]        </control>
[03:07:11.666]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:11.666]          // if-block "!hasDormant"
[03:07:11.666]            // =>  TRUE
[03:07:11.666]          <block atomic="false" info="">
[03:07:11.666]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:12.675]  
[03:07:12.675]  !!! E320 : DAP access error
[03:07:12.675]  
[03:07:12.683]          </block>
[03:07:12.683]          // end if-block "!hasDormant"
[03:07:12.683]        </control>
[03:07:12.683]        // end if-block "isSWJ"
[03:07:12.683]      </control>
[03:07:12.683]      // end if-block "protType == 2"
[03:07:12.683]    </control>
[03:07:12.683]  </sequence>
[03:07:12.683]  
[03:07:12.933]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:12.933]  
[03:07:12.943]  <debugvars>
[03:07:12.943]    // Pre-defined
[03:07:12.943]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:12.943]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:12.943]    __dp=0x00000000
[03:07:12.943]    __ap=0x00000000
[03:07:12.943]    __traceout=0x00000000      (Trace Disabled)
[03:07:12.943]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:12.943]    __FlashAddr=0x00000000
[03:07:12.943]    __FlashLen=0x00000000
[03:07:12.943]    __FlashArg=0x00000000
[03:07:12.943]    __FlashOp=0x00000000
[03:07:12.943]    __Result=0x00000000
[03:07:12.943]  </debugvars>
[03:07:12.943]  
[03:07:12.945]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:12.945]    <block atomic="false" info="">
[03:07:12.945]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:12.945]        // -> [isSWJ <= 0x00000001]
[03:07:12.945]      __var hasDormant = __protocol & 0x00020000;
[03:07:12.945]        // -> [hasDormant <= 0x00000000]
[03:07:12.945]      __var protType   = __protocol & 0x0000FFFF;
[03:07:12.945]        // -> [protType <= 0x00000002]
[03:07:12.947]    </block>
[03:07:12.947]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:12.947]      // if-block "protType == 1"
[03:07:12.947]        // =>  FALSE
[03:07:12.947]      // skip if-block "protType == 1"
[03:07:12.947]    </control>
[03:07:12.947]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:12.947]      // if-block "protType == 2"
[03:07:12.947]        // =>  TRUE
[03:07:12.947]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:12.947]        // if-block "isSWJ"
[03:07:12.947]          // =>  TRUE
[03:07:12.947]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:12.947]          // if-block "hasDormant"
[03:07:12.947]            // =>  FALSE
[03:07:12.947]          // skip if-block "hasDormant"
[03:07:12.947]        </control>
[03:07:12.947]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:12.947]          // if-block "!hasDormant"
[03:07:12.947]            // =>  TRUE
[03:07:12.947]          <block atomic="false" info="">
[03:07:12.947]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:13.955]  
[03:07:13.955]  !!! E320 : DAP access error
[03:07:13.955]  
[03:07:13.964]          </block>
[03:07:13.964]          // end if-block "!hasDormant"
[03:07:13.964]        </control>
[03:07:13.964]        // end if-block "isSWJ"
[03:07:13.964]      </control>
[03:07:13.964]      // end if-block "protType == 2"
[03:07:13.964]    </control>
[03:07:13.964]  </sequence>
[03:07:13.964]  
[03:07:14.225]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:14.225]  
[03:07:14.233]  <debugvars>
[03:07:14.233]    // Pre-defined
[03:07:14.233]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:14.233]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:14.233]    __dp=0x00000000
[03:07:14.233]    __ap=0x00000000
[03:07:14.233]    __traceout=0x00000000      (Trace Disabled)
[03:07:14.234]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:14.234]    __FlashAddr=0x00000000
[03:07:14.234]    __FlashLen=0x00000000
[03:07:14.234]    __FlashArg=0x00000000
[03:07:14.234]    __FlashOp=0x00000000
[03:07:14.234]    __Result=0x00000000
[03:07:14.234]  </debugvars>
[03:07:14.234]  
[03:07:14.234]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:14.234]    <block atomic="false" info="">
[03:07:14.234]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:14.235]        // -> [isSWJ <= 0x00000001]
[03:07:14.235]      __var hasDormant = __protocol & 0x00020000;
[03:07:14.235]        // -> [hasDormant <= 0x00000000]
[03:07:14.235]      __var protType   = __protocol & 0x0000FFFF;
[03:07:14.235]        // -> [protType <= 0x00000002]
[03:07:14.235]    </block>
[03:07:14.235]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:14.235]      // if-block "protType == 1"
[03:07:14.235]        // =>  FALSE
[03:07:14.235]      // skip if-block "protType == 1"
[03:07:14.235]    </control>
[03:07:14.235]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:14.237]      // if-block "protType == 2"
[03:07:14.237]        // =>  TRUE
[03:07:14.237]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:14.237]        // if-block "isSWJ"
[03:07:14.237]          // =>  TRUE
[03:07:14.238]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:14.238]          // if-block "hasDormant"
[03:07:14.238]            // =>  FALSE
[03:07:14.238]          // skip if-block "hasDormant"
[03:07:14.238]        </control>
[03:07:14.238]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:14.238]          // if-block "!hasDormant"
[03:07:14.238]            // =>  TRUE
[03:07:14.238]          <block atomic="false" info="">
[03:07:14.238]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:15.245]  
[03:07:15.245]  !!! E320 : DAP access error
[03:07:15.245]  
[03:07:15.253]          </block>
[03:07:15.253]          // end if-block "!hasDormant"
[03:07:15.253]        </control>
[03:07:15.253]        // end if-block "isSWJ"
[03:07:15.253]      </control>
[03:07:15.253]      // end if-block "protType == 2"
[03:07:15.253]    </control>
[03:07:15.253]  </sequence>
[03:07:15.253]  
[03:07:15.508]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:15.508]  
[03:07:15.518]  <debugvars>
[03:07:15.518]    // Pre-defined
[03:07:15.518]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:15.518]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:15.518]    __dp=0x00000000
[03:07:15.518]    __ap=0x00000000
[03:07:15.518]    __traceout=0x00000000      (Trace Disabled)
[03:07:15.518]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:15.518]    __FlashAddr=0x00000000
[03:07:15.518]    __FlashLen=0x00000000
[03:07:15.518]    __FlashArg=0x00000000
[03:07:15.518]    __FlashOp=0x00000000
[03:07:15.518]    __Result=0x00000000
[03:07:15.518]  </debugvars>
[03:07:15.518]  
[03:07:15.520]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:15.520]    <block atomic="false" info="">
[03:07:15.520]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:15.520]        // -> [isSWJ <= 0x00000001]
[03:07:15.520]      __var hasDormant = __protocol & 0x00020000;
[03:07:15.520]        // -> [hasDormant <= 0x00000000]
[03:07:15.520]      __var protType   = __protocol & 0x0000FFFF;
[03:07:15.520]        // -> [protType <= 0x00000002]
[03:07:15.520]    </block>
[03:07:15.520]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:15.520]      // if-block "protType == 1"
[03:07:15.520]        // =>  FALSE
[03:07:15.520]      // skip if-block "protType == 1"
[03:07:15.522]    </control>
[03:07:15.522]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:15.522]      // if-block "protType == 2"
[03:07:15.522]        // =>  TRUE
[03:07:15.522]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:15.522]        // if-block "isSWJ"
[03:07:15.522]          // =>  TRUE
[03:07:15.522]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:15.522]          // if-block "hasDormant"
[03:07:15.522]            // =>  FALSE
[03:07:15.522]          // skip if-block "hasDormant"
[03:07:15.522]        </control>
[03:07:15.522]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:15.522]          // if-block "!hasDormant"
[03:07:15.522]            // =>  TRUE
[03:07:15.522]          <block atomic="false" info="">
[03:07:15.522]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:16.523]  
[03:07:16.523]  !!! E320 : DAP access error
[03:07:16.523]  
[03:07:16.523]          </block>
[03:07:16.523]          // end if-block "!hasDormant"
[03:07:16.523]        </control>
[03:07:16.523]        // end if-block "isSWJ"
[03:07:16.523]      </control>
[03:07:16.523]      // end if-block "protType == 2"
[03:07:16.523]    </control>
[03:07:16.523]  </sequence>
[03:07:16.523]  
[03:07:16.779]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:16.779]  
[03:07:16.788]  <debugvars>
[03:07:16.788]    // Pre-defined
[03:07:16.788]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:16.788]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:16.788]    __dp=0x00000000
[03:07:16.788]    __ap=0x00000000
[03:07:16.788]    __traceout=0x00000000      (Trace Disabled)
[03:07:16.788]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:16.788]    __FlashAddr=0x00000000
[03:07:16.788]    __FlashLen=0x00000000
[03:07:16.788]    __FlashArg=0x00000000
[03:07:16.788]    __FlashOp=0x00000000
[03:07:16.788]    __Result=0x00000000
[03:07:16.788]  </debugvars>
[03:07:16.788]  
[03:07:16.788]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:16.788]    <block atomic="false" info="">
[03:07:16.788]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:16.788]        // -> [isSWJ <= 0x00000001]
[03:07:16.788]      __var hasDormant = __protocol & 0x00020000;
[03:07:16.788]        // -> [hasDormant <= 0x00000000]
[03:07:16.788]      __var protType   = __protocol & 0x0000FFFF;
[03:07:16.788]        // -> [protType <= 0x00000002]
[03:07:16.788]    </block>
[03:07:16.791]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:16.791]      // if-block "protType == 1"
[03:07:16.791]        // =>  FALSE
[03:07:16.791]      // skip if-block "protType == 1"
[03:07:16.791]    </control>
[03:07:16.791]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:16.791]      // if-block "protType == 2"
[03:07:16.791]        // =>  TRUE
[03:07:16.791]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:16.791]        // if-block "isSWJ"
[03:07:16.791]          // =>  TRUE
[03:07:16.791]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:16.791]          // if-block "hasDormant"
[03:07:16.791]            // =>  FALSE
[03:07:16.791]          // skip if-block "hasDormant"
[03:07:16.791]        </control>
[03:07:16.791]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:16.791]          // if-block "!hasDormant"
[03:07:16.791]            // =>  TRUE
[03:07:16.791]          <block atomic="false" info="">
[03:07:16.791]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:17.799]  
[03:07:17.799]  !!! E320 : DAP access error
[03:07:17.799]  
[03:07:17.809]          </block>
[03:07:17.809]          // end if-block "!hasDormant"
[03:07:17.809]        </control>
[03:07:17.809]        // end if-block "isSWJ"
[03:07:17.809]      </control>
[03:07:17.809]      // end if-block "protType == 2"
[03:07:17.809]    </control>
[03:07:17.809]  </sequence>
[03:07:17.809]  
[03:07:18.064]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:18.064]  
[03:07:18.073]  <debugvars>
[03:07:18.073]    // Pre-defined
[03:07:18.073]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:18.073]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:18.073]    __dp=0x00000000
[03:07:18.073]    __ap=0x00000000
[03:07:18.073]    __traceout=0x00000000      (Trace Disabled)
[03:07:18.073]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:18.073]    __FlashAddr=0x00000000
[03:07:18.073]    __FlashLen=0x00000000
[03:07:18.073]    __FlashArg=0x00000000
[03:07:18.073]    __FlashOp=0x00000000
[03:07:18.073]    __Result=0x00000000
[03:07:18.073]  </debugvars>
[03:07:18.073]  
[03:07:18.073]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:18.073]    <block atomic="false" info="">
[03:07:18.073]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:18.073]        // -> [isSWJ <= 0x00000001]
[03:07:18.073]      __var hasDormant = __protocol & 0x00020000;
[03:07:18.073]        // -> [hasDormant <= 0x00000000]
[03:07:18.073]      __var protType   = __protocol & 0x0000FFFF;
[03:07:18.073]        // -> [protType <= 0x00000002]
[03:07:18.076]    </block>
[03:07:18.076]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:18.076]      // if-block "protType == 1"
[03:07:18.076]        // =>  FALSE
[03:07:18.076]      // skip if-block "protType == 1"
[03:07:18.076]    </control>
[03:07:18.076]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:18.076]      // if-block "protType == 2"
[03:07:18.076]        // =>  TRUE
[03:07:18.076]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:18.076]        // if-block "isSWJ"
[03:07:18.076]          // =>  TRUE
[03:07:18.076]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:18.076]          // if-block "hasDormant"
[03:07:18.076]            // =>  FALSE
[03:07:18.076]          // skip if-block "hasDormant"
[03:07:18.076]        </control>
[03:07:18.076]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:18.076]          // if-block "!hasDormant"
[03:07:18.076]            // =>  TRUE
[03:07:18.076]          <block atomic="false" info="">
[03:07:18.076]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:19.085]  
[03:07:19.085]  !!! E320 : DAP access error
[03:07:19.085]  
[03:07:19.093]          </block>
[03:07:19.093]          // end if-block "!hasDormant"
[03:07:19.093]        </control>
[03:07:19.093]        // end if-block "isSWJ"
[03:07:19.093]      </control>
[03:07:19.093]      // end if-block "protType == 2"
[03:07:19.093]    </control>
[03:07:19.093]  </sequence>
[03:07:19.093]  
[03:07:19.349]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:19.349]  
[03:07:19.357]  <debugvars>
[03:07:19.357]    // Pre-defined
[03:07:19.357]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:19.357]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:19.357]    __dp=0x00000000
[03:07:19.357]    __ap=0x00000000
[03:07:19.357]    __traceout=0x00000000      (Trace Disabled)
[03:07:19.357]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:19.357]    __FlashAddr=0x00000000
[03:07:19.357]    __FlashLen=0x00000000
[03:07:19.357]    __FlashArg=0x00000000
[03:07:19.357]    __FlashOp=0x00000000
[03:07:19.357]    __Result=0x00000000
[03:07:19.357]  </debugvars>
[03:07:19.357]  
[03:07:19.357]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:19.357]    <block atomic="false" info="">
[03:07:19.357]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:19.357]        // -> [isSWJ <= 0x00000001]
[03:07:19.357]      __var hasDormant = __protocol & 0x00020000;
[03:07:19.357]        // -> [hasDormant <= 0x00000000]
[03:07:19.357]      __var protType   = __protocol & 0x0000FFFF;
[03:07:19.357]        // -> [protType <= 0x00000002]
[03:07:19.357]    </block>
[03:07:19.357]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:19.357]      // if-block "protType == 1"
[03:07:19.357]        // =>  FALSE
[03:07:19.357]      // skip if-block "protType == 1"
[03:07:19.357]    </control>
[03:07:19.357]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:19.357]      // if-block "protType == 2"
[03:07:19.357]        // =>  TRUE
[03:07:19.357]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:19.357]        // if-block "isSWJ"
[03:07:19.357]          // =>  TRUE
[03:07:19.357]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:19.357]          // if-block "hasDormant"
[03:07:19.357]            // =>  FALSE
[03:07:19.361]          // skip if-block "hasDormant"
[03:07:19.361]        </control>
[03:07:19.361]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:19.361]          // if-block "!hasDormant"
[03:07:19.361]            // =>  TRUE
[03:07:19.361]          <block atomic="false" info="">
[03:07:19.361]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:20.372]  
[03:07:20.372]  !!! E320 : DAP access error
[03:07:20.372]  
[03:07:20.380]          </block>
[03:07:20.380]          // end if-block "!hasDormant"
[03:07:20.380]        </control>
[03:07:20.380]        // end if-block "isSWJ"
[03:07:20.380]      </control>
[03:07:20.380]      // end if-block "protType == 2"
[03:07:20.380]    </control>
[03:07:20.380]  </sequence>
[03:07:20.380]  
[03:07:20.637]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:20.637]  
[03:07:20.646]  <debugvars>
[03:07:20.646]    // Pre-defined
[03:07:20.646]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:20.646]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:20.646]    __dp=0x00000000
[03:07:20.646]    __ap=0x00000000
[03:07:20.646]    __traceout=0x00000000      (Trace Disabled)
[03:07:20.646]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:20.646]    __FlashAddr=0x00000000
[03:07:20.646]    __FlashLen=0x00000000
[03:07:20.646]    __FlashArg=0x00000000
[03:07:20.646]    __FlashOp=0x00000000
[03:07:20.646]    __Result=0x00000000
[03:07:20.646]  </debugvars>
[03:07:20.646]  
[03:07:20.646]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:20.646]    <block atomic="false" info="">
[03:07:20.646]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:20.646]        // -> [isSWJ <= 0x00000001]
[03:07:20.646]      __var hasDormant = __protocol & 0x00020000;
[03:07:20.646]        // -> [hasDormant <= 0x00000000]
[03:07:20.646]      __var protType   = __protocol & 0x0000FFFF;
[03:07:20.649]        // -> [protType <= 0x00000002]
[03:07:20.649]    </block>
[03:07:20.649]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:20.649]      // if-block "protType == 1"
[03:07:20.649]        // =>  FALSE
[03:07:20.649]      // skip if-block "protType == 1"
[03:07:20.649]    </control>
[03:07:20.649]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:20.649]      // if-block "protType == 2"
[03:07:20.649]        // =>  TRUE
[03:07:20.649]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:20.649]        // if-block "isSWJ"
[03:07:20.649]          // =>  TRUE
[03:07:20.649]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:20.649]          // if-block "hasDormant"
[03:07:20.649]            // =>  FALSE
[03:07:20.649]          // skip if-block "hasDormant"
[03:07:20.649]        </control>
[03:07:20.649]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:20.649]          // if-block "!hasDormant"
[03:07:20.649]            // =>  TRUE
[03:07:20.649]          <block atomic="false" info="">
[03:07:20.649]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:21.651]  
[03:07:21.651]  !!! E320 : DAP access error
[03:07:21.651]  
[03:07:21.659]          </block>
[03:07:21.659]          // end if-block "!hasDormant"
[03:07:21.659]        </control>
[03:07:21.659]        // end if-block "isSWJ"
[03:07:21.659]      </control>
[03:07:21.659]      // end if-block "protType == 2"
[03:07:21.659]    </control>
[03:07:21.659]  </sequence>
[03:07:21.659]  
[03:07:21.918]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:21.918]  
[03:07:21.918]  <debugvars>
[03:07:21.918]    // Pre-defined
[03:07:21.918]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:21.918]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:21.920]    __dp=0x00000000
[03:07:21.920]    __ap=0x00000000
[03:07:21.920]    __traceout=0x00000000      (Trace Disabled)
[03:07:21.920]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:21.920]    __FlashAddr=0x00000000
[03:07:21.920]    __FlashLen=0x00000000
[03:07:21.920]    __FlashArg=0x00000000
[03:07:21.920]    __FlashOp=0x00000000
[03:07:21.920]    __Result=0x00000000
[03:07:21.920]  </debugvars>
[03:07:21.920]  
[03:07:21.920]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:21.920]    <block atomic="false" info="">
[03:07:21.920]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:21.920]        // -> [isSWJ <= 0x00000001]
[03:07:21.920]      __var hasDormant = __protocol & 0x00020000;
[03:07:21.920]        // -> [hasDormant <= 0x00000000]
[03:07:21.920]      __var protType   = __protocol & 0x0000FFFF;
[03:07:21.920]        // -> [protType <= 0x00000002]
[03:07:21.920]    </block>
[03:07:21.920]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:21.920]      // if-block "protType == 1"
[03:07:21.920]        // =>  FALSE
[03:07:21.920]      // skip if-block "protType == 1"
[03:07:21.920]    </control>
[03:07:21.923]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:21.923]      // if-block "protType == 2"
[03:07:21.923]        // =>  TRUE
[03:07:21.923]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:21.923]        // if-block "isSWJ"
[03:07:21.923]          // =>  TRUE
[03:07:21.923]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:21.923]          // if-block "hasDormant"
[03:07:21.923]            // =>  FALSE
[03:07:21.923]          // skip if-block "hasDormant"
[03:07:21.923]        </control>
[03:07:21.923]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:21.923]          // if-block "!hasDormant"
[03:07:21.923]            // =>  TRUE
[03:07:21.923]          <block atomic="false" info="">
[03:07:21.923]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:22.927]  
[03:07:22.927]  !!! E320 : DAP access error
[03:07:22.927]  
[03:07:22.935]          </block>
[03:07:22.935]          // end if-block "!hasDormant"
[03:07:22.935]        </control>
[03:07:22.935]        // end if-block "isSWJ"
[03:07:22.935]      </control>
[03:07:22.935]      // end if-block "protType == 2"
[03:07:22.935]    </control>
[03:07:22.935]  </sequence>
[03:07:22.935]  
[03:07:23.195]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:23.195]  
[03:07:23.204]  <debugvars>
[03:07:23.204]    // Pre-defined
[03:07:23.204]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:23.204]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:23.204]    __dp=0x00000000
[03:07:23.204]    __ap=0x00000000
[03:07:23.204]    __traceout=0x00000000      (Trace Disabled)
[03:07:23.204]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:23.204]    __FlashAddr=0x00000000
[03:07:23.204]    __FlashLen=0x00000000
[03:07:23.204]    __FlashArg=0x00000000
[03:07:23.204]    __FlashOp=0x00000000
[03:07:23.204]    __Result=0x00000000
[03:07:23.204]  </debugvars>
[03:07:23.204]  
[03:07:23.204]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:23.204]    <block atomic="false" info="">
[03:07:23.204]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:23.204]        // -> [isSWJ <= 0x00000001]
[03:07:23.204]      __var hasDormant = __protocol & 0x00020000;
[03:07:23.204]        // -> [hasDormant <= 0x00000000]
[03:07:23.204]      __var protType   = __protocol & 0x0000FFFF;
[03:07:23.204]        // -> [protType <= 0x00000002]
[03:07:23.207]    </block>
[03:07:23.207]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:23.207]      // if-block "protType == 1"
[03:07:23.207]        // =>  FALSE
[03:07:23.207]      // skip if-block "protType == 1"
[03:07:23.207]    </control>
[03:07:23.207]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:23.207]      // if-block "protType == 2"
[03:07:23.207]        // =>  TRUE
[03:07:23.207]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:23.207]        // if-block "isSWJ"
[03:07:23.207]          // =>  TRUE
[03:07:23.207]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:23.207]          // if-block "hasDormant"
[03:07:23.207]            // =>  FALSE
[03:07:23.207]          // skip if-block "hasDormant"
[03:07:23.207]        </control>
[03:07:23.207]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:23.207]          // if-block "!hasDormant"
[03:07:23.207]            // =>  TRUE
[03:07:23.207]          <block atomic="false" info="">
[03:07:23.207]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:24.213]  
[03:07:24.213]  !!! E320 : DAP access error
[03:07:24.213]  
[03:07:24.221]          </block>
[03:07:24.221]          // end if-block "!hasDormant"
[03:07:24.221]        </control>
[03:07:24.221]        // end if-block "isSWJ"
[03:07:24.221]      </control>
[03:07:24.221]      // end if-block "protType == 2"
[03:07:24.221]    </control>
[03:07:24.221]  </sequence>
[03:07:24.221]  
[03:07:24.473]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:24.473]  
[03:07:24.482]  <debugvars>
[03:07:24.482]    // Pre-defined
[03:07:24.482]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:24.482]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:24.482]    __dp=0x00000000
[03:07:24.482]    __ap=0x00000000
[03:07:24.482]    __traceout=0x00000000      (Trace Disabled)
[03:07:24.482]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:24.482]    __FlashAddr=0x00000000
[03:07:24.482]    __FlashLen=0x00000000
[03:07:24.482]    __FlashArg=0x00000000
[03:07:24.482]    __FlashOp=0x00000000
[03:07:24.482]    __Result=0x00000000
[03:07:24.482]  </debugvars>
[03:07:24.482]  
[03:07:24.482]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:24.482]    <block atomic="false" info="">
[03:07:24.482]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:24.482]        // -> [isSWJ <= 0x00000001]
[03:07:24.482]      __var hasDormant = __protocol & 0x00020000;
[03:07:24.482]        // -> [hasDormant <= 0x00000000]
[03:07:24.482]      __var protType   = __protocol & 0x0000FFFF;
[03:07:24.482]        // -> [protType <= 0x00000002]
[03:07:24.485]    </block>
[03:07:24.485]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:24.485]      // if-block "protType == 1"
[03:07:24.485]        // =>  FALSE
[03:07:24.485]      // skip if-block "protType == 1"
[03:07:24.485]    </control>
[03:07:24.485]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:24.485]      // if-block "protType == 2"
[03:07:24.485]        // =>  TRUE
[03:07:24.485]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:24.485]        // if-block "isSWJ"
[03:07:24.485]          // =>  TRUE
[03:07:24.485]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:24.485]          // if-block "hasDormant"
[03:07:24.485]            // =>  FALSE
[03:07:24.485]          // skip if-block "hasDormant"
[03:07:24.485]        </control>
[03:07:24.485]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:24.485]          // if-block "!hasDormant"
[03:07:24.485]            // =>  TRUE
[03:07:24.485]          <block atomic="false" info="">
[03:07:24.485]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:25.491]  
[03:07:25.491]  !!! E320 : DAP access error
[03:07:25.491]  
[03:07:25.491]          </block>
[03:07:25.491]          // end if-block "!hasDormant"
[03:07:25.491]        </control>
[03:07:25.491]        // end if-block "isSWJ"
[03:07:25.491]      </control>
[03:07:25.491]      // end if-block "protType == 2"
[03:07:25.491]    </control>
[03:07:25.491]  </sequence>
[03:07:25.491]  
[03:07:25.748]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:25.748]  
[03:07:25.748]  <debugvars>
[03:07:25.748]    // Pre-defined
[03:07:25.748]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:25.748]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:25.748]    __dp=0x00000000
[03:07:25.748]    __ap=0x00000000
[03:07:25.748]    __traceout=0x00000000      (Trace Disabled)
[03:07:25.748]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:25.748]    __FlashAddr=0x00000000
[03:07:25.748]    __FlashLen=0x00000000
[03:07:25.748]    __FlashArg=0x00000000
[03:07:25.748]    __FlashOp=0x00000000
[03:07:25.748]    __Result=0x00000000
[03:07:25.748]  </debugvars>
[03:07:25.748]  
[03:07:25.748]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:25.748]    <block atomic="false" info="">
[03:07:25.748]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:25.748]        // -> [isSWJ <= 0x00000001]
[03:07:25.748]      __var hasDormant = __protocol & 0x00020000;
[03:07:25.748]        // -> [hasDormant <= 0x00000000]
[03:07:25.748]      __var protType   = __protocol & 0x0000FFFF;
[03:07:25.748]        // -> [protType <= 0x00000002]
[03:07:25.748]    </block>
[03:07:25.748]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:25.748]      // if-block "protType == 1"
[03:07:25.748]        // =>  FALSE
[03:07:25.748]      // skip if-block "protType == 1"
[03:07:25.748]    </control>
[03:07:25.748]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:25.748]      // if-block "protType == 2"
[03:07:25.752]        // =>  TRUE
[03:07:25.752]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:25.752]        // if-block "isSWJ"
[03:07:25.752]          // =>  TRUE
[03:07:25.752]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:25.752]          // if-block "hasDormant"
[03:07:25.752]            // =>  FALSE
[03:07:25.752]          // skip if-block "hasDormant"
[03:07:25.752]        </control>
[03:07:25.752]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:25.752]          // if-block "!hasDormant"
[03:07:25.752]            // =>  TRUE
[03:07:25.752]          <block atomic="false" info="">
[03:07:25.752]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:26.754]  
[03:07:26.754]  !!! E320 : DAP access error
[03:07:26.754]  
[03:07:26.754]          </block>
[03:07:26.754]          // end if-block "!hasDormant"
[03:07:26.754]        </control>
[03:07:26.754]        // end if-block "isSWJ"
[03:07:26.754]      </control>
[03:07:26.754]      // end if-block "protType == 2"
[03:07:26.754]    </control>
[03:07:26.754]  </sequence>
[03:07:26.754]  
[03:07:27.012]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:27.012]  
[03:07:27.022]  <debugvars>
[03:07:27.022]    // Pre-defined
[03:07:27.022]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:27.022]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:27.022]    __dp=0x00000000
[03:07:27.022]    __ap=0x00000000
[03:07:27.022]    __traceout=0x00000000      (Trace Disabled)
[03:07:27.022]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:27.022]    __FlashAddr=0x00000000
[03:07:27.022]    __FlashLen=0x00000000
[03:07:27.022]    __FlashArg=0x00000000
[03:07:27.022]    __FlashOp=0x00000000
[03:07:27.022]    __Result=0x00000000
[03:07:27.022]  </debugvars>
[03:07:27.022]  
[03:07:27.022]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:27.022]    <block atomic="false" info="">
[03:07:27.022]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:27.022]        // -> [isSWJ <= 0x00000001]
[03:07:27.022]      __var hasDormant = __protocol & 0x00020000;
[03:07:27.022]        // -> [hasDormant <= 0x00000000]
[03:07:27.022]      __var protType   = __protocol & 0x0000FFFF;
[03:07:27.022]        // -> [protType <= 0x00000002]
[03:07:27.022]    </block>
[03:07:27.025]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:27.025]      // if-block "protType == 1"
[03:07:27.025]        // =>  FALSE
[03:07:27.025]      // skip if-block "protType == 1"
[03:07:27.025]    </control>
[03:07:27.025]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:27.025]      // if-block "protType == 2"
[03:07:27.026]        // =>  TRUE
[03:07:27.026]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:27.026]        // if-block "isSWJ"
[03:07:27.026]          // =>  TRUE
[03:07:27.026]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:27.026]          // if-block "hasDormant"
[03:07:27.026]            // =>  FALSE
[03:07:27.026]          // skip if-block "hasDormant"
[03:07:27.026]        </control>
[03:07:27.026]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:27.026]          // if-block "!hasDormant"
[03:07:27.026]            // =>  TRUE
[03:07:27.026]          <block atomic="false" info="">
[03:07:27.027]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:28.034]  
[03:07:28.034]  !!! E320 : DAP access error
[03:07:28.034]  
[03:07:28.044]          </block>
[03:07:28.044]          // end if-block "!hasDormant"
[03:07:28.044]        </control>
[03:07:28.044]        // end if-block "isSWJ"
[03:07:28.044]      </control>
[03:07:28.044]      // end if-block "protType == 2"
[03:07:28.044]    </control>
[03:07:28.044]  </sequence>
[03:07:28.044]  
[03:07:28.302]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:28.302]  
[03:07:28.302]  <debugvars>
[03:07:28.302]    // Pre-defined
[03:07:28.302]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:28.302]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:28.302]    __dp=0x00000000
[03:07:28.302]    __ap=0x00000000
[03:07:28.302]    __traceout=0x00000000      (Trace Disabled)
[03:07:28.302]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:28.305]    __FlashAddr=0x00000000
[03:07:28.305]    __FlashLen=0x00000000
[03:07:28.305]    __FlashArg=0x00000000
[03:07:28.305]    __FlashOp=0x00000000
[03:07:28.305]    __Result=0x00000000
[03:07:28.305]  </debugvars>
[03:07:28.305]  
[03:07:28.305]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:28.305]    <block atomic="false" info="">
[03:07:28.305]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:28.305]        // -> [isSWJ <= 0x00000001]
[03:07:28.305]      __var hasDormant = __protocol & 0x00020000;
[03:07:28.305]        // -> [hasDormant <= 0x00000000]
[03:07:28.305]      __var protType   = __protocol & 0x0000FFFF;
[03:07:28.305]        // -> [protType <= 0x00000002]
[03:07:28.305]    </block>
[03:07:28.305]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:28.307]      // if-block "protType == 1"
[03:07:28.307]        // =>  FALSE
[03:07:28.307]      // skip if-block "protType == 1"
[03:07:28.307]    </control>
[03:07:28.307]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:28.307]      // if-block "protType == 2"
[03:07:28.307]        // =>  TRUE
[03:07:28.308]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:28.308]        // if-block "isSWJ"
[03:07:28.308]          // =>  TRUE
[03:07:28.308]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:28.308]          // if-block "hasDormant"
[03:07:28.308]            // =>  FALSE
[03:07:28.308]          // skip if-block "hasDormant"
[03:07:28.308]        </control>
[03:07:28.308]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:28.308]          // if-block "!hasDormant"
[03:07:28.308]            // =>  TRUE
[03:07:28.308]          <block atomic="false" info="">
[03:07:28.308]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:29.310]  
[03:07:29.310]  !!! E320 : DAP access error
[03:07:29.310]  
[03:07:29.319]          </block>
[03:07:29.319]          // end if-block "!hasDormant"
[03:07:29.319]        </control>
[03:07:29.319]        // end if-block "isSWJ"
[03:07:29.319]      </control>
[03:07:29.319]      // end if-block "protType == 2"
[03:07:29.319]    </control>
[03:07:29.319]  </sequence>
[03:07:29.319]  
[03:07:29.575]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:29.575]  
[03:07:29.575]  <debugvars>
[03:07:29.575]    // Pre-defined
[03:07:29.575]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:29.575]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:29.575]    __dp=0x00000000
[03:07:29.575]    __ap=0x00000000
[03:07:29.575]    __traceout=0x00000000      (Trace Disabled)
[03:07:29.575]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:29.575]    __FlashAddr=0x00000000
[03:07:29.575]    __FlashLen=0x00000000
[03:07:29.575]    __FlashArg=0x00000000
[03:07:29.577]    __FlashOp=0x00000000
[03:07:29.578]    __Result=0x00000000
[03:07:29.578]  </debugvars>
[03:07:29.578]  
[03:07:29.578]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:29.578]    <block atomic="false" info="">
[03:07:29.578]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:29.578]        // -> [isSWJ <= 0x00000001]
[03:07:29.578]      __var hasDormant = __protocol & 0x00020000;
[03:07:29.578]        // -> [hasDormant <= 0x00000000]
[03:07:29.578]      __var protType   = __protocol & 0x0000FFFF;
[03:07:29.579]        // -> [protType <= 0x00000002]
[03:07:29.579]    </block>
[03:07:29.579]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:29.579]      // if-block "protType == 1"
[03:07:29.579]        // =>  FALSE
[03:07:29.579]      // skip if-block "protType == 1"
[03:07:29.579]    </control>
[03:07:29.579]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:29.580]      // if-block "protType == 2"
[03:07:29.580]        // =>  TRUE
[03:07:29.580]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:29.580]        // if-block "isSWJ"
[03:07:29.580]          // =>  TRUE
[03:07:29.580]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:29.580]          // if-block "hasDormant"
[03:07:29.580]            // =>  FALSE
[03:07:29.580]          // skip if-block "hasDormant"
[03:07:29.580]        </control>
[03:07:29.580]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:29.580]          // if-block "!hasDormant"
[03:07:29.580]            // =>  TRUE
[03:07:29.580]          <block atomic="false" info="">
[03:07:29.581]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:30.582]  
[03:07:30.582]  !!! E320 : DAP access error
[03:07:30.582]  
[03:07:30.591]          </block>
[03:07:30.591]          // end if-block "!hasDormant"
[03:07:30.591]        </control>
[03:07:30.591]        // end if-block "isSWJ"
[03:07:30.591]      </control>
[03:07:30.591]      // end if-block "protType == 2"
[03:07:30.591]    </control>
[03:07:30.591]  </sequence>
[03:07:30.591]  
[03:07:30.851]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:30.851]  
[03:07:30.851]  <debugvars>
[03:07:30.851]    // Pre-defined
[03:07:30.851]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:30.851]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:30.851]    __dp=0x00000000
[03:07:30.851]    __ap=0x00000000
[03:07:30.851]    __traceout=0x00000000      (Trace Disabled)
[03:07:30.851]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:30.851]    __FlashAddr=0x00000000
[03:07:30.851]    __FlashLen=0x00000000
[03:07:30.851]    __FlashArg=0x00000000
[03:07:30.851]    __FlashOp=0x00000000
[03:07:30.851]    __Result=0x00000000
[03:07:30.851]  </debugvars>
[03:07:30.851]  
[03:07:30.851]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:30.851]    <block atomic="false" info="">
[03:07:30.851]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:30.851]        // -> [isSWJ <= 0x00000001]
[03:07:30.855]      __var hasDormant = __protocol & 0x00020000;
[03:07:30.855]        // -> [hasDormant <= 0x00000000]
[03:07:30.855]      __var protType   = __protocol & 0x0000FFFF;
[03:07:30.855]        // -> [protType <= 0x00000002]
[03:07:30.855]    </block>
[03:07:30.855]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:30.855]      // if-block "protType == 1"
[03:07:30.855]        // =>  FALSE
[03:07:30.855]      // skip if-block "protType == 1"
[03:07:30.855]    </control>
[03:07:30.855]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:30.855]      // if-block "protType == 2"
[03:07:30.855]        // =>  TRUE
[03:07:30.855]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:30.855]        // if-block "isSWJ"
[03:07:30.855]          // =>  TRUE
[03:07:30.855]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:30.855]          // if-block "hasDormant"
[03:07:30.855]            // =>  FALSE
[03:07:30.855]          // skip if-block "hasDormant"
[03:07:30.855]        </control>
[03:07:30.855]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:30.855]          // if-block "!hasDormant"
[03:07:30.855]            // =>  TRUE
[03:07:30.855]          <block atomic="false" info="">
[03:07:30.855]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:31.864]  
[03:07:31.864]  !!! E320 : DAP access error
[03:07:31.864]  
[03:07:31.872]          </block>
[03:07:31.872]          // end if-block "!hasDormant"
[03:07:31.872]        </control>
[03:07:31.872]        // end if-block "isSWJ"
[03:07:31.872]      </control>
[03:07:31.872]      // end if-block "protType == 2"
[03:07:31.872]    </control>
[03:07:31.872]  </sequence>
[03:07:31.872]  
[03:07:32.126]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:32.126]  
[03:07:32.136]  <debugvars>
[03:07:32.136]    // Pre-defined
[03:07:32.136]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:32.136]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:32.136]    __dp=0x00000000
[03:07:32.136]    __ap=0x00000000
[03:07:32.136]    __traceout=0x00000000      (Trace Disabled)
[03:07:32.136]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:32.136]    __FlashAddr=0x00000000
[03:07:32.136]    __FlashLen=0x00000000
[03:07:32.136]    __FlashArg=0x00000000
[03:07:32.136]    __FlashOp=0x00000000
[03:07:32.136]    __Result=0x00000000
[03:07:32.136]  </debugvars>
[03:07:32.136]  
[03:07:32.136]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:32.136]    <block atomic="false" info="">
[03:07:32.136]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:32.136]        // -> [isSWJ <= 0x00000001]
[03:07:32.136]      __var hasDormant = __protocol & 0x00020000;
[03:07:32.136]        // -> [hasDormant <= 0x00000000]
[03:07:32.136]      __var protType   = __protocol & 0x0000FFFF;
[03:07:32.136]        // -> [protType <= 0x00000002]
[03:07:32.136]    </block>
[03:07:32.139]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:32.139]      // if-block "protType == 1"
[03:07:32.139]        // =>  FALSE
[03:07:32.139]      // skip if-block "protType == 1"
[03:07:32.139]    </control>
[03:07:32.139]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:32.139]      // if-block "protType == 2"
[03:07:32.139]        // =>  TRUE
[03:07:32.139]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:32.139]        // if-block "isSWJ"
[03:07:32.139]          // =>  TRUE
[03:07:32.139]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:32.139]          // if-block "hasDormant"
[03:07:32.139]            // =>  FALSE
[03:07:32.139]          // skip if-block "hasDormant"
[03:07:32.139]        </control>
[03:07:32.139]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:32.139]          // if-block "!hasDormant"
[03:07:32.139]            // =>  TRUE
[03:07:32.139]          <block atomic="false" info="">
[03:07:32.139]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:33.142]  
[03:07:33.142]  !!! E320 : DAP access error
[03:07:33.142]  
[03:07:33.142]          </block>
[03:07:33.142]          // end if-block "!hasDormant"
[03:07:33.142]        </control>
[03:07:33.142]        // end if-block "isSWJ"
[03:07:33.142]      </control>
[03:07:33.142]      // end if-block "protType == 2"
[03:07:33.142]    </control>
[03:07:33.142]  </sequence>
[03:07:33.142]  
[03:07:33.399]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:33.399]  
[03:07:33.408]  <debugvars>
[03:07:33.408]    // Pre-defined
[03:07:33.408]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:33.408]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:33.408]    __dp=0x00000000
[03:07:33.408]    __ap=0x00000000
[03:07:33.408]    __traceout=0x00000000      (Trace Disabled)
[03:07:33.408]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:33.408]    __FlashAddr=0x00000000
[03:07:33.408]    __FlashLen=0x00000000
[03:07:33.408]    __FlashArg=0x00000000
[03:07:33.408]    __FlashOp=0x00000000
[03:07:33.408]    __Result=0x00000000
[03:07:33.408]  </debugvars>
[03:07:33.408]  
[03:07:33.408]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:33.408]    <block atomic="false" info="">
[03:07:33.408]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:33.408]        // -> [isSWJ <= 0x00000001]
[03:07:33.408]      __var hasDormant = __protocol & 0x00020000;
[03:07:33.408]        // -> [hasDormant <= 0x00000000]
[03:07:33.408]      __var protType   = __protocol & 0x0000FFFF;
[03:07:33.408]        // -> [protType <= 0x00000002]
[03:07:33.408]    </block>
[03:07:33.408]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:33.411]      // if-block "protType == 1"
[03:07:33.411]        // =>  FALSE
[03:07:33.411]      // skip if-block "protType == 1"
[03:07:33.411]    </control>
[03:07:33.411]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:33.411]      // if-block "protType == 2"
[03:07:33.412]        // =>  TRUE
[03:07:33.412]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:33.412]        // if-block "isSWJ"
[03:07:33.412]          // =>  TRUE
[03:07:33.412]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:33.412]          // if-block "hasDormant"
[03:07:33.412]            // =>  FALSE
[03:07:33.412]          // skip if-block "hasDormant"
[03:07:33.412]        </control>
[03:07:33.412]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:33.413]          // if-block "!hasDormant"
[03:07:33.413]            // =>  TRUE
[03:07:33.413]          <block atomic="false" info="">
[03:07:33.413]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:34.415]  
[03:07:34.415]  !!! E320 : DAP access error
[03:07:34.415]  
[03:07:34.415]          </block>
[03:07:34.415]          // end if-block "!hasDormant"
[03:07:34.415]        </control>
[03:07:34.415]        // end if-block "isSWJ"
[03:07:34.415]      </control>
[03:07:34.415]      // end if-block "protType == 2"
[03:07:34.415]    </control>
[03:07:34.415]  </sequence>
[03:07:34.415]  
[03:07:34.671]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:34.671]  
[03:07:34.679]  <debugvars>
[03:07:34.679]    // Pre-defined
[03:07:34.679]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:34.679]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:34.679]    __dp=0x00000000
[03:07:34.680]    __ap=0x00000000
[03:07:34.680]    __traceout=0x00000000      (Trace Disabled)
[03:07:34.680]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:34.680]    __FlashAddr=0x00000000
[03:07:34.680]    __FlashLen=0x00000000
[03:07:34.680]    __FlashArg=0x00000000
[03:07:34.680]    __FlashOp=0x00000000
[03:07:34.680]    __Result=0x00000000
[03:07:34.680]  </debugvars>
[03:07:34.680]  
[03:07:34.680]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:34.680]    <block atomic="false" info="">
[03:07:34.680]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:34.680]        // -> [isSWJ <= 0x00000001]
[03:07:34.680]      __var hasDormant = __protocol & 0x00020000;
[03:07:34.680]        // -> [hasDormant <= 0x00000000]
[03:07:34.680]      __var protType   = __protocol & 0x0000FFFF;
[03:07:34.680]        // -> [protType <= 0x00000002]
[03:07:34.680]    </block>
[03:07:34.680]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:34.680]      // if-block "protType == 1"
[03:07:34.680]        // =>  FALSE
[03:07:34.683]      // skip if-block "protType == 1"
[03:07:34.683]    </control>
[03:07:34.683]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:34.683]      // if-block "protType == 2"
[03:07:34.683]        // =>  TRUE
[03:07:34.683]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:34.683]        // if-block "isSWJ"
[03:07:34.683]          // =>  TRUE
[03:07:34.683]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:34.683]          // if-block "hasDormant"
[03:07:34.683]            // =>  FALSE
[03:07:34.683]          // skip if-block "hasDormant"
[03:07:34.683]        </control>
[03:07:34.683]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:34.683]          // if-block "!hasDormant"
[03:07:34.683]            // =>  TRUE
[03:07:34.683]          <block atomic="false" info="">
[03:07:34.683]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:35.696]  
[03:07:35.696]  !!! E320 : DAP access error
[03:07:35.696]  
[03:07:35.704]          </block>
[03:07:35.704]          // end if-block "!hasDormant"
[03:07:35.704]        </control>
[03:07:35.704]        // end if-block "isSWJ"
[03:07:35.704]      </control>
[03:07:35.704]      // end if-block "protType == 2"
[03:07:35.704]    </control>
[03:07:35.704]  </sequence>
[03:07:35.704]  
[03:07:35.961]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:35.961]  
[03:07:35.970]  <debugvars>
[03:07:35.970]    // Pre-defined
[03:07:35.970]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:35.970]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:35.970]    __dp=0x00000000
[03:07:35.970]    __ap=0x00000000
[03:07:35.970]    __traceout=0x00000000      (Trace Disabled)
[03:07:35.970]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:35.970]    __FlashAddr=0x00000000
[03:07:35.970]    __FlashLen=0x00000000
[03:07:35.970]    __FlashArg=0x00000000
[03:07:35.970]    __FlashOp=0x00000000
[03:07:35.970]    __Result=0x00000000
[03:07:35.970]  </debugvars>
[03:07:35.970]  
[03:07:35.970]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:35.970]    <block atomic="false" info="">
[03:07:35.970]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:35.970]        // -> [isSWJ <= 0x00000001]
[03:07:35.970]      __var hasDormant = __protocol & 0x00020000;
[03:07:35.970]        // -> [hasDormant <= 0x00000000]
[03:07:35.970]      __var protType   = __protocol & 0x0000FFFF;
[03:07:35.970]        // -> [protType <= 0x00000002]
[03:07:35.970]    </block>
[03:07:35.970]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:35.970]      // if-block "protType == 1"
[03:07:35.970]        // =>  FALSE
[03:07:35.970]      // skip if-block "protType == 1"
[03:07:35.970]    </control>
[03:07:35.970]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:35.973]      // if-block "protType == 2"
[03:07:35.973]        // =>  TRUE
[03:07:35.973]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:35.973]        // if-block "isSWJ"
[03:07:35.973]          // =>  TRUE
[03:07:35.973]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:35.973]          // if-block "hasDormant"
[03:07:35.973]            // =>  FALSE
[03:07:35.973]          // skip if-block "hasDormant"
[03:07:35.973]        </control>
[03:07:35.973]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:35.973]          // if-block "!hasDormant"
[03:07:35.973]            // =>  TRUE
[03:07:35.973]          <block atomic="false" info="">
[03:07:35.973]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:36.976]  
[03:07:36.976]  !!! E320 : DAP access error
[03:07:36.976]  
[03:07:36.985]          </block>
[03:07:36.985]          // end if-block "!hasDormant"
[03:07:36.985]        </control>
[03:07:36.985]        // end if-block "isSWJ"
[03:07:36.985]      </control>
[03:07:36.985]      // end if-block "protType == 2"
[03:07:36.985]    </control>
[03:07:36.985]  </sequence>
[03:07:36.985]  
[03:07:37.245]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:37.245]  
[03:07:37.253]  <debugvars>
[03:07:37.253]    // Pre-defined
[03:07:37.253]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:37.253]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:37.253]    __dp=0x00000000
[03:07:37.253]    __ap=0x00000000
[03:07:37.253]    __traceout=0x00000000      (Trace Disabled)
[03:07:37.253]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:37.253]    __FlashAddr=0x00000000
[03:07:37.253]    __FlashLen=0x00000000
[03:07:37.253]    __FlashArg=0x00000000
[03:07:37.253]    __FlashOp=0x00000000
[03:07:37.253]    __Result=0x00000000
[03:07:37.253]  </debugvars>
[03:07:37.253]  
[03:07:37.253]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:37.253]    <block atomic="false" info="">
[03:07:37.253]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:37.253]        // -> [isSWJ <= 0x00000001]
[03:07:37.253]      __var hasDormant = __protocol & 0x00020000;
[03:07:37.253]        // -> [hasDormant <= 0x00000000]
[03:07:37.253]      __var protType   = __protocol & 0x0000FFFF;
[03:07:37.253]        // -> [protType <= 0x00000002]
[03:07:37.253]    </block>
[03:07:37.253]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:37.253]      // if-block "protType == 1"
[03:07:37.253]        // =>  FALSE
[03:07:37.253]      // skip if-block "protType == 1"
[03:07:37.253]    </control>
[03:07:37.253]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:37.253]      // if-block "protType == 2"
[03:07:37.253]        // =>  TRUE
[03:07:37.253]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:37.253]        // if-block "isSWJ"
[03:07:37.253]          // =>  TRUE
[03:07:37.257]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:37.257]          // if-block "hasDormant"
[03:07:37.257]            // =>  FALSE
[03:07:37.257]          // skip if-block "hasDormant"
[03:07:37.257]        </control>
[03:07:37.257]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:37.257]          // if-block "!hasDormant"
[03:07:37.257]            // =>  TRUE
[03:07:37.257]          <block atomic="false" info="">
[03:07:37.257]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:38.263]  
[03:07:38.263]  !!! E320 : DAP access error
[03:07:38.263]  
[03:07:38.271]          </block>
[03:07:38.271]          // end if-block "!hasDormant"
[03:07:38.271]        </control>
[03:07:38.271]        // end if-block "isSWJ"
[03:07:38.271]      </control>
[03:07:38.271]      // end if-block "protType == 2"
[03:07:38.271]    </control>
[03:07:38.271]  </sequence>
[03:07:38.271]  
[03:07:38.532]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:38.532]  
[03:07:38.540]  <debugvars>
[03:07:38.540]    // Pre-defined
[03:07:38.540]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:38.540]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:38.540]    __dp=0x00000000
[03:07:38.541]    __ap=0x00000000
[03:07:38.541]    __traceout=0x00000000      (Trace Disabled)
[03:07:38.541]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:38.541]    __FlashAddr=0x00000000
[03:07:38.541]    __FlashLen=0x00000000
[03:07:38.541]    __FlashArg=0x00000000
[03:07:38.541]    __FlashOp=0x00000000
[03:07:38.541]    __Result=0x00000000
[03:07:38.541]  </debugvars>
[03:07:38.541]  
[03:07:38.541]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:38.541]    <block atomic="false" info="">
[03:07:38.541]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:38.543]        // -> [isSWJ <= 0x00000001]
[03:07:38.543]      __var hasDormant = __protocol & 0x00020000;
[03:07:38.543]        // -> [hasDormant <= 0x00000000]
[03:07:38.543]      __var protType   = __protocol & 0x0000FFFF;
[03:07:38.543]        // -> [protType <= 0x00000002]
[03:07:38.543]    </block>
[03:07:38.543]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:38.543]      // if-block "protType == 1"
[03:07:38.543]        // =>  FALSE
[03:07:38.543]      // skip if-block "protType == 1"
[03:07:38.543]    </control>
[03:07:38.544]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:38.544]      // if-block "protType == 2"
[03:07:38.544]        // =>  TRUE
[03:07:38.544]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:38.544]        // if-block "isSWJ"
[03:07:38.544]          // =>  TRUE
[03:07:38.544]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:38.544]          // if-block "hasDormant"
[03:07:38.544]            // =>  FALSE
[03:07:38.544]          // skip if-block "hasDormant"
[03:07:38.544]        </control>
[03:07:38.544]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:38.544]          // if-block "!hasDormant"
[03:07:38.544]            // =>  TRUE
[03:07:38.546]          <block atomic="false" info="">
[03:07:38.546]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:39.551]  
[03:07:39.551]  !!! E320 : DAP access error
[03:07:39.551]  
[03:07:39.559]          </block>
[03:07:39.559]          // end if-block "!hasDormant"
[03:07:39.559]        </control>
[03:07:39.559]        // end if-block "isSWJ"
[03:07:39.559]      </control>
[03:07:39.559]      // end if-block "protType == 2"
[03:07:39.559]    </control>
[03:07:39.559]  </sequence>
[03:07:39.559]  
[03:07:39.819]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:39.819]  
[03:07:39.827]  <debugvars>
[03:07:39.827]    // Pre-defined
[03:07:39.827]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:39.827]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:39.827]    __dp=0x00000000
[03:07:39.827]    __ap=0x00000000
[03:07:39.827]    __traceout=0x00000000      (Trace Disabled)
[03:07:39.827]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:39.827]    __FlashAddr=0x00000000
[03:07:39.827]    __FlashLen=0x00000000
[03:07:39.827]    __FlashArg=0x00000000
[03:07:39.827]    __FlashOp=0x00000000
[03:07:39.827]    __Result=0x00000000
[03:07:39.827]  </debugvars>
[03:07:39.827]  
[03:07:39.827]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:39.827]    <block atomic="false" info="">
[03:07:39.827]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:39.827]        // -> [isSWJ <= 0x00000001]
[03:07:39.827]      __var hasDormant = __protocol & 0x00020000;
[03:07:39.827]        // -> [hasDormant <= 0x00000000]
[03:07:39.827]      __var protType   = __protocol & 0x0000FFFF;
[03:07:39.827]        // -> [protType <= 0x00000002]
[03:07:39.827]    </block>
[03:07:39.827]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:39.830]      // if-block "protType == 1"
[03:07:39.830]        // =>  FALSE
[03:07:39.830]      // skip if-block "protType == 1"
[03:07:39.830]    </control>
[03:07:39.830]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:39.830]      // if-block "protType == 2"
[03:07:39.830]        // =>  TRUE
[03:07:39.830]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:39.830]        // if-block "isSWJ"
[03:07:39.830]          // =>  TRUE
[03:07:39.830]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:39.830]          // if-block "hasDormant"
[03:07:39.830]            // =>  FALSE
[03:07:39.831]          // skip if-block "hasDormant"
[03:07:39.831]        </control>
[03:07:39.831]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:39.831]          // if-block "!hasDormant"
[03:07:39.831]            // =>  TRUE
[03:07:39.831]          <block atomic="false" info="">
[03:07:39.831]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:40.843]  
[03:07:40.843]  !!! E320 : DAP access error
[03:07:40.843]  
[03:07:40.851]          </block>
[03:07:40.851]          // end if-block "!hasDormant"
[03:07:40.851]        </control>
[03:07:40.851]        // end if-block "isSWJ"
[03:07:40.851]      </control>
[03:07:40.851]      // end if-block "protType == 2"
[03:07:40.851]    </control>
[03:07:40.851]  </sequence>
[03:07:40.851]  
[03:07:41.111]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:41.111]  
[03:07:41.119]  <debugvars>
[03:07:41.119]    // Pre-defined
[03:07:41.119]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:41.119]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:41.119]    __dp=0x00000000
[03:07:41.119]    __ap=0x00000000
[03:07:41.119]    __traceout=0x00000000      (Trace Disabled)
[03:07:41.119]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:41.119]    __FlashAddr=0x00000000
[03:07:41.119]    __FlashLen=0x00000000
[03:07:41.119]    __FlashArg=0x00000000
[03:07:41.119]    __FlashOp=0x00000000
[03:07:41.119]    __Result=0x00000000
[03:07:41.119]  </debugvars>
[03:07:41.119]  
[03:07:41.119]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:41.119]    <block atomic="false" info="">
[03:07:41.119]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:41.119]        // -> [isSWJ <= 0x00000001]
[03:07:41.119]      __var hasDormant = __protocol & 0x00020000;
[03:07:41.119]        // -> [hasDormant <= 0x00000000]
[03:07:41.119]      __var protType   = __protocol & 0x0000FFFF;
[03:07:41.119]        // -> [protType <= 0x00000002]
[03:07:41.119]    </block>
[03:07:41.119]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:41.119]      // if-block "protType == 1"
[03:07:41.119]        // =>  FALSE
[03:07:41.119]      // skip if-block "protType == 1"
[03:07:41.119]    </control>
[03:07:41.119]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:41.119]      // if-block "protType == 2"
[03:07:41.119]        // =>  TRUE
[03:07:41.123]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:41.123]        // if-block "isSWJ"
[03:07:41.123]          // =>  TRUE
[03:07:41.123]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:41.123]          // if-block "hasDormant"
[03:07:41.123]            // =>  FALSE
[03:07:41.123]          // skip if-block "hasDormant"
[03:07:41.123]        </control>
[03:07:41.123]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:41.123]          // if-block "!hasDormant"
[03:07:41.123]            // =>  TRUE
[03:07:41.123]          <block atomic="false" info="">
[03:07:41.123]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:42.131]  
[03:07:42.131]  !!! E320 : DAP access error
[03:07:42.131]  
[03:07:42.139]          </block>
[03:07:42.139]          // end if-block "!hasDormant"
[03:07:42.140]        </control>
[03:07:42.140]        // end if-block "isSWJ"
[03:07:42.140]      </control>
[03:07:42.140]      // end if-block "protType == 2"
[03:07:42.140]    </control>
[03:07:42.140]  </sequence>
[03:07:42.140]  
[03:07:42.396]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:42.396]  
[03:07:42.406]  <debugvars>
[03:07:42.406]    // Pre-defined
[03:07:42.406]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:42.406]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:42.406]    __dp=0x00000000
[03:07:42.406]    __ap=0x00000000
[03:07:42.406]    __traceout=0x00000000      (Trace Disabled)
[03:07:42.406]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:42.406]    __FlashAddr=0x00000000
[03:07:42.406]    __FlashLen=0x00000000
[03:07:42.406]    __FlashArg=0x00000000
[03:07:42.406]    __FlashOp=0x00000000
[03:07:42.406]    __Result=0x00000000
[03:07:42.406]  </debugvars>
[03:07:42.406]  
[03:07:42.406]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:42.406]    <block atomic="false" info="">
[03:07:42.406]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:42.406]        // -> [isSWJ <= 0x00000001]
[03:07:42.409]      __var hasDormant = __protocol & 0x00020000;
[03:07:42.409]        // -> [hasDormant <= 0x00000000]
[03:07:42.409]      __var protType   = __protocol & 0x0000FFFF;
[03:07:42.409]        // -> [protType <= 0x00000002]
[03:07:42.409]    </block>
[03:07:42.409]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:42.409]      // if-block "protType == 1"
[03:07:42.409]        // =>  FALSE
[03:07:42.409]      // skip if-block "protType == 1"
[03:07:42.409]    </control>
[03:07:42.409]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:42.409]      // if-block "protType == 2"
[03:07:42.409]        // =>  TRUE
[03:07:42.409]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:42.409]        // if-block "isSWJ"
[03:07:42.409]          // =>  TRUE
[03:07:42.409]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:42.409]          // if-block "hasDormant"
[03:07:42.409]            // =>  FALSE
[03:07:42.409]          // skip if-block "hasDormant"
[03:07:42.409]        </control>
[03:07:42.409]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:42.409]          // if-block "!hasDormant"
[03:07:42.409]            // =>  TRUE
[03:07:42.409]          <block atomic="false" info="">
[03:07:42.409]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:43.415]  
[03:07:43.415]  !!! E320 : DAP access error
[03:07:43.415]  
[03:07:43.423]          </block>
[03:07:43.423]          // end if-block "!hasDormant"
[03:07:43.423]        </control>
[03:07:43.423]        // end if-block "isSWJ"
[03:07:43.423]      </control>
[03:07:43.423]      // end if-block "protType == 2"
[03:07:43.423]    </control>
[03:07:43.423]  </sequence>
[03:07:43.423]  
[03:07:43.681]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:43.681]  
[03:07:43.688]  <debugvars>
[03:07:43.688]    // Pre-defined
[03:07:43.688]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:43.688]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:43.688]    __dp=0x00000000
[03:07:43.688]    __ap=0x00000000
[03:07:43.688]    __traceout=0x00000000      (Trace Disabled)
[03:07:43.688]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:43.688]    __FlashAddr=0x00000000
[03:07:43.688]    __FlashLen=0x00000000
[03:07:43.688]    __FlashArg=0x00000000
[03:07:43.688]    __FlashOp=0x00000000
[03:07:43.688]    __Result=0x00000000
[03:07:43.688]  </debugvars>
[03:07:43.688]  
[03:07:43.688]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:43.688]    <block atomic="false" info="">
[03:07:43.688]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:43.688]        // -> [isSWJ <= 0x00000001]
[03:07:43.688]      __var hasDormant = __protocol & 0x00020000;
[03:07:43.688]        // -> [hasDormant <= 0x00000000]
[03:07:43.688]      __var protType   = __protocol & 0x0000FFFF;
[03:07:43.688]        // -> [protType <= 0x00000002]
[03:07:43.688]    </block>
[03:07:43.688]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:43.688]      // if-block "protType == 1"
[03:07:43.688]        // =>  FALSE
[03:07:43.688]      // skip if-block "protType == 1"
[03:07:43.688]    </control>
[03:07:43.688]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:43.688]      // if-block "protType == 2"
[03:07:43.688]        // =>  TRUE
[03:07:43.688]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:43.688]        // if-block "isSWJ"
[03:07:43.688]          // =>  TRUE
[03:07:43.688]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:43.688]          // if-block "hasDormant"
[03:07:43.688]            // =>  FALSE
[03:07:43.688]          // skip if-block "hasDormant"
[03:07:43.692]        </control>
[03:07:43.692]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:43.692]          // if-block "!hasDormant"
[03:07:43.692]            // =>  TRUE
[03:07:43.692]          <block atomic="false" info="">
[03:07:43.692]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:44.695]  
[03:07:44.695]  !!! E320 : DAP access error
[03:07:44.695]  
[03:07:44.703]          </block>
[03:07:44.703]          // end if-block "!hasDormant"
[03:07:44.703]        </control>
[03:07:44.703]        // end if-block "isSWJ"
[03:07:44.703]      </control>
[03:07:44.703]      // end if-block "protType == 2"
[03:07:44.703]    </control>
[03:07:44.703]  </sequence>
[03:07:44.703]  
[03:07:44.961]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:44.961]  
[03:07:44.971]  <debugvars>
[03:07:44.971]    // Pre-defined
[03:07:44.971]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:44.971]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:44.971]    __dp=0x00000000
[03:07:44.971]    __ap=0x00000000
[03:07:44.971]    __traceout=0x00000000      (Trace Disabled)
[03:07:44.971]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:44.971]    __FlashAddr=0x00000000
[03:07:44.971]    __FlashLen=0x00000000
[03:07:44.971]    __FlashArg=0x00000000
[03:07:44.971]    __FlashOp=0x00000000
[03:07:44.971]    __Result=0x00000000
[03:07:44.971]  </debugvars>
[03:07:44.971]  
[03:07:44.971]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:44.971]    <block atomic="false" info="">
[03:07:44.971]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:44.971]        // -> [isSWJ <= 0x00000001]
[03:07:44.971]      __var hasDormant = __protocol & 0x00020000;
[03:07:44.971]        // -> [hasDormant <= 0x00000000]
[03:07:44.971]      __var protType   = __protocol & 0x0000FFFF;
[03:07:44.971]        // -> [protType <= 0x00000002]
[03:07:44.971]    </block>
[03:07:44.974]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:44.974]      // if-block "protType == 1"
[03:07:44.974]        // =>  FALSE
[03:07:44.974]      // skip if-block "protType == 1"
[03:07:44.974]    </control>
[03:07:44.974]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:44.974]      // if-block "protType == 2"
[03:07:44.974]        // =>  TRUE
[03:07:44.974]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:44.974]        // if-block "isSWJ"
[03:07:44.974]          // =>  TRUE
[03:07:44.974]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:44.974]          // if-block "hasDormant"
[03:07:44.974]            // =>  FALSE
[03:07:44.974]          // skip if-block "hasDormant"
[03:07:44.974]        </control>
[03:07:44.974]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:44.974]          // if-block "!hasDormant"
[03:07:44.974]            // =>  TRUE
[03:07:44.974]          <block atomic="false" info="">
[03:07:44.974]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:45.975]  
[03:07:45.975]  !!! E320 : DAP access error
[03:07:45.975]  
[03:07:45.975]          </block>
[03:07:45.975]          // end if-block "!hasDormant"
[03:07:45.975]        </control>
[03:07:45.975]        // end if-block "isSWJ"
[03:07:45.975]      </control>
[03:07:45.975]      // end if-block "protType == 2"
[03:07:45.975]    </control>
[03:07:45.975]  </sequence>
[03:07:45.975]  
[03:07:46.232]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:46.232]  
[03:07:46.241]  <debugvars>
[03:07:46.241]    // Pre-defined
[03:07:46.241]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:46.241]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:46.241]    __dp=0x00000000
[03:07:46.241]    __ap=0x00000000
[03:07:46.241]    __traceout=0x00000000      (Trace Disabled)
[03:07:46.241]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:46.241]    __FlashAddr=0x00000000
[03:07:46.241]    __FlashLen=0x00000000
[03:07:46.241]    __FlashArg=0x00000000
[03:07:46.241]    __FlashOp=0x00000000
[03:07:46.241]    __Result=0x00000000
[03:07:46.241]  </debugvars>
[03:07:46.241]  
[03:07:46.241]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:46.241]    <block atomic="false" info="">
[03:07:46.241]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:46.241]        // -> [isSWJ <= 0x00000001]
[03:07:46.241]      __var hasDormant = __protocol & 0x00020000;
[03:07:46.241]        // -> [hasDormant <= 0x00000000]
[03:07:46.241]      __var protType   = __protocol & 0x0000FFFF;
[03:07:46.243]        // -> [protType <= 0x00000002]
[03:07:46.243]    </block>
[03:07:46.243]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:46.243]      // if-block "protType == 1"
[03:07:46.243]        // =>  FALSE
[03:07:46.243]      // skip if-block "protType == 1"
[03:07:46.243]    </control>
[03:07:46.243]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:46.243]      // if-block "protType == 2"
[03:07:46.243]        // =>  TRUE
[03:07:46.243]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:46.243]        // if-block "isSWJ"
[03:07:46.243]          // =>  TRUE
[03:07:46.243]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:46.243]          // if-block "hasDormant"
[03:07:46.245]            // =>  FALSE
[03:07:46.245]          // skip if-block "hasDormant"
[03:07:46.245]        </control>
[03:07:46.245]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:46.245]          // if-block "!hasDormant"
[03:07:46.245]            // =>  TRUE
[03:07:46.245]          <block atomic="false" info="">
[03:07:46.245]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:47.249]  
[03:07:47.249]  !!! E320 : DAP access error
[03:07:47.249]  
[03:07:47.249]          </block>
[03:07:47.249]          // end if-block "!hasDormant"
[03:07:47.249]        </control>
[03:07:47.249]        // end if-block "isSWJ"
[03:07:47.249]      </control>
[03:07:47.249]      // end if-block "protType == 2"
[03:07:47.249]    </control>
[03:07:47.249]  </sequence>
[03:07:47.251]  
[03:07:47.508]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:47.508]  
[03:07:47.516]  <debugvars>
[03:07:47.516]    // Pre-defined
[03:07:47.516]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:47.516]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:47.516]    __dp=0x00000000
[03:07:47.516]    __ap=0x00000000
[03:07:47.516]    __traceout=0x00000000      (Trace Disabled)
[03:07:47.516]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:47.516]    __FlashAddr=0x00000000
[03:07:47.516]    __FlashLen=0x00000000
[03:07:47.516]    __FlashArg=0x00000000
[03:07:47.516]    __FlashOp=0x00000000
[03:07:47.516]    __Result=0x00000000
[03:07:47.516]  </debugvars>
[03:07:47.516]  
[03:07:47.516]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:47.516]    <block atomic="false" info="">
[03:07:47.516]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:47.516]        // -> [isSWJ <= 0x00000001]
[03:07:47.516]      __var hasDormant = __protocol & 0x00020000;
[03:07:47.516]        // -> [hasDormant <= 0x00000000]
[03:07:47.516]      __var protType   = __protocol & 0x0000FFFF;
[03:07:47.516]        // -> [protType <= 0x00000002]
[03:07:47.516]    </block>
[03:07:47.516]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:47.516]      // if-block "protType == 1"
[03:07:47.516]        // =>  FALSE
[03:07:47.516]      // skip if-block "protType == 1"
[03:07:47.516]    </control>
[03:07:47.516]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:47.516]      // if-block "protType == 2"
[03:07:47.516]        // =>  TRUE
[03:07:47.516]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:47.516]        // if-block "isSWJ"
[03:07:47.520]          // =>  TRUE
[03:07:47.520]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:47.520]          // if-block "hasDormant"
[03:07:47.520]            // =>  FALSE
[03:07:47.520]          // skip if-block "hasDormant"
[03:07:47.520]        </control>
[03:07:47.520]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:47.520]          // if-block "!hasDormant"
[03:07:47.520]            // =>  TRUE
[03:07:47.520]          <block atomic="false" info="">
[03:07:47.520]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:48.521]  
[03:07:48.521]  !!! E320 : DAP access error
[03:07:48.521]  
[03:07:48.529]          </block>
[03:07:48.529]          // end if-block "!hasDormant"
[03:07:48.529]        </control>
[03:07:48.529]        // end if-block "isSWJ"
[03:07:48.529]      </control>
[03:07:48.529]      // end if-block "protType == 2"
[03:07:48.529]    </control>
[03:07:48.529]  </sequence>
[03:07:48.529]  
[03:07:48.784]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:48.784]  
[03:07:48.792]  <debugvars>
[03:07:48.792]    // Pre-defined
[03:07:48.792]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:48.792]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:48.792]    __dp=0x00000000
[03:07:48.792]    __ap=0x00000000
[03:07:48.792]    __traceout=0x00000000      (Trace Disabled)
[03:07:48.792]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:48.792]    __FlashAddr=0x00000000
[03:07:48.792]    __FlashLen=0x00000000
[03:07:48.792]    __FlashArg=0x00000000
[03:07:48.792]    __FlashOp=0x00000000
[03:07:48.792]    __Result=0x00000000
[03:07:48.792]  </debugvars>
[03:07:48.792]  
[03:07:48.792]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:48.792]    <block atomic="false" info="">
[03:07:48.792]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:48.792]        // -> [isSWJ <= 0x00000001]
[03:07:48.792]      __var hasDormant = __protocol & 0x00020000;
[03:07:48.792]        // -> [hasDormant <= 0x00000000]
[03:07:48.792]      __var protType   = __protocol & 0x0000FFFF;
[03:07:48.792]        // -> [protType <= 0x00000002]
[03:07:48.792]    </block>
[03:07:48.792]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:48.795]      // if-block "protType == 1"
[03:07:48.795]        // =>  FALSE
[03:07:48.795]      // skip if-block "protType == 1"
[03:07:48.795]    </control>
[03:07:48.795]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:48.795]      // if-block "protType == 2"
[03:07:48.795]        // =>  TRUE
[03:07:48.796]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:48.796]        // if-block "isSWJ"
[03:07:48.796]          // =>  TRUE
[03:07:48.797]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:48.797]          // if-block "hasDormant"
[03:07:48.797]            // =>  FALSE
[03:07:48.797]          // skip if-block "hasDormant"
[03:07:48.797]        </control>
[03:07:48.797]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:48.797]          // if-block "!hasDormant"
[03:07:48.797]            // =>  TRUE
[03:07:48.797]          <block atomic="false" info="">
[03:07:48.797]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:49.801]  
[03:07:49.801]  !!! E320 : DAP access error
[03:07:49.801]  
[03:07:49.801]          </block>
[03:07:49.801]          // end if-block "!hasDormant"
[03:07:49.801]        </control>
[03:07:49.801]        // end if-block "isSWJ"
[03:07:49.801]      </control>
[03:07:49.801]      // end if-block "protType == 2"
[03:07:49.801]    </control>
[03:07:49.801]  </sequence>
[03:07:49.801]  
[03:07:50.056]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:50.056]  
[03:07:50.056]  <debugvars>
[03:07:50.056]    // Pre-defined
[03:07:50.056]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:50.056]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:50.056]    __dp=0x00000000
[03:07:50.056]    __ap=0x00000000
[03:07:50.056]    __traceout=0x00000000      (Trace Disabled)
[03:07:50.056]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:50.056]    __FlashAddr=0x00000000
[03:07:50.056]    __FlashLen=0x00000000
[03:07:50.056]    __FlashArg=0x00000000
[03:07:50.056]    __FlashOp=0x00000000
[03:07:50.056]    __Result=0x00000000
[03:07:50.056]  </debugvars>
[03:07:50.056]  
[03:07:50.056]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:50.056]    <block atomic="false" info="">
[03:07:50.056]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:50.056]        // -> [isSWJ <= 0x00000001]
[03:07:50.056]      __var hasDormant = __protocol & 0x00020000;
[03:07:50.056]        // -> [hasDormant <= 0x00000000]
[03:07:50.056]      __var protType   = __protocol & 0x0000FFFF;
[03:07:50.056]        // -> [protType <= 0x00000002]
[03:07:50.056]    </block>
[03:07:50.056]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:50.056]      // if-block "protType == 1"
[03:07:50.056]        // =>  FALSE
[03:07:50.056]      // skip if-block "protType == 1"
[03:07:50.056]    </control>
[03:07:50.056]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:50.056]      // if-block "protType == 2"
[03:07:50.060]        // =>  TRUE
[03:07:50.060]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:50.060]        // if-block "isSWJ"
[03:07:50.060]          // =>  TRUE
[03:07:50.060]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:50.060]          // if-block "hasDormant"
[03:07:50.060]            // =>  FALSE
[03:07:50.060]          // skip if-block "hasDormant"
[03:07:50.060]        </control>
[03:07:50.060]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:50.060]          // if-block "!hasDormant"
[03:07:50.060]            // =>  TRUE
[03:07:50.060]          <block atomic="false" info="">
[03:07:50.060]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:51.072]  
[03:07:51.072]  !!! E320 : DAP access error
[03:07:51.072]  
[03:07:51.081]          </block>
[03:07:51.081]          // end if-block "!hasDormant"
[03:07:51.081]        </control>
[03:07:51.081]        // end if-block "isSWJ"
[03:07:51.081]      </control>
[03:07:51.081]      // end if-block "protType == 2"
[03:07:51.081]    </control>
[03:07:51.081]  </sequence>
[03:07:51.081]  
[03:07:51.336]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:51.336]  
[03:07:51.336]  <debugvars>
[03:07:51.336]    // Pre-defined
[03:07:51.338]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:51.338]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:51.338]    __dp=0x00000000
[03:07:51.338]    __ap=0x00000000
[03:07:51.338]    __traceout=0x00000000      (Trace Disabled)
[03:07:51.338]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:51.338]    __FlashAddr=0x00000000
[03:07:51.338]    __FlashLen=0x00000000
[03:07:51.338]    __FlashArg=0x00000000
[03:07:51.338]    __FlashOp=0x00000000
[03:07:51.338]    __Result=0x00000000
[03:07:51.338]  </debugvars>
[03:07:51.338]  
[03:07:51.338]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:51.338]    <block atomic="false" info="">
[03:07:51.338]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:51.338]        // -> [isSWJ <= 0x00000001]
[03:07:51.338]      __var hasDormant = __protocol & 0x00020000;
[03:07:51.338]        // -> [hasDormant <= 0x00000000]
[03:07:51.338]      __var protType   = __protocol & 0x0000FFFF;
[03:07:51.338]        // -> [protType <= 0x00000002]
[03:07:51.338]    </block>
[03:07:51.338]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:51.338]      // if-block "protType == 1"
[03:07:51.338]        // =>  FALSE
[03:07:51.340]      // skip if-block "protType == 1"
[03:07:51.340]    </control>
[03:07:51.340]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:51.340]      // if-block "protType == 2"
[03:07:51.340]        // =>  TRUE
[03:07:51.340]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:51.340]        // if-block "isSWJ"
[03:07:51.340]          // =>  TRUE
[03:07:51.340]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:51.340]          // if-block "hasDormant"
[03:07:51.340]            // =>  FALSE
[03:07:51.340]          // skip if-block "hasDormant"
[03:07:51.340]        </control>
[03:07:51.340]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:51.340]          // if-block "!hasDormant"
[03:07:51.340]            // =>  TRUE
[03:07:51.340]          <block atomic="false" info="">
[03:07:51.340]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:52.348]  
[03:07:52.348]  !!! E320 : DAP access error
[03:07:52.348]  
[03:07:52.358]          </block>
[03:07:52.358]          // end if-block "!hasDormant"
[03:07:52.358]        </control>
[03:07:52.358]        // end if-block "isSWJ"
[03:07:52.358]      </control>
[03:07:52.358]      // end if-block "protType == 2"
[03:07:52.359]    </control>
[03:07:52.359]  </sequence>
[03:07:52.359]  
[03:07:52.613]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:52.613]  
[03:07:52.613]  <debugvars>
[03:07:52.613]    // Pre-defined
[03:07:52.613]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:52.613]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:52.613]    __dp=0x00000000
[03:07:52.613]    __ap=0x00000000
[03:07:52.613]    __traceout=0x00000000      (Trace Disabled)
[03:07:52.613]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:52.615]    __FlashAddr=0x00000000
[03:07:52.615]    __FlashLen=0x00000000
[03:07:52.615]    __FlashArg=0x00000000
[03:07:52.615]    __FlashOp=0x00000000
[03:07:52.615]    __Result=0x00000000
[03:07:52.615]  </debugvars>
[03:07:52.615]  
[03:07:52.615]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:52.615]    <block atomic="false" info="">
[03:07:52.615]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:52.615]        // -> [isSWJ <= 0x00000001]
[03:07:52.615]      __var hasDormant = __protocol & 0x00020000;
[03:07:52.615]        // -> [hasDormant <= 0x00000000]
[03:07:52.615]      __var protType   = __protocol & 0x0000FFFF;
[03:07:52.615]        // -> [protType <= 0x00000002]
[03:07:52.615]    </block>
[03:07:52.615]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:52.615]      // if-block "protType == 1"
[03:07:52.618]        // =>  FALSE
[03:07:52.618]      // skip if-block "protType == 1"
[03:07:52.618]    </control>
[03:07:52.618]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:52.618]      // if-block "protType == 2"
[03:07:52.618]        // =>  TRUE
[03:07:52.618]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:52.618]        // if-block "isSWJ"
[03:07:52.618]          // =>  TRUE
[03:07:52.619]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:52.619]          // if-block "hasDormant"
[03:07:52.619]            // =>  FALSE
[03:07:52.619]          // skip if-block "hasDormant"
[03:07:52.619]        </control>
[03:07:52.619]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:52.619]          // if-block "!hasDormant"
[03:07:52.619]            // =>  TRUE
[03:07:52.619]          <block atomic="false" info="">
[03:07:52.619]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:53.620]  
[03:07:53.620]  !!! E320 : DAP access error
[03:07:53.620]  
[03:07:53.629]          </block>
[03:07:53.629]          // end if-block "!hasDormant"
[03:07:53.629]        </control>
[03:07:53.629]        // end if-block "isSWJ"
[03:07:53.629]      </control>
[03:07:53.629]      // end if-block "protType == 2"
[03:07:53.629]    </control>
[03:07:53.629]  </sequence>
[03:07:53.629]  
[03:07:53.886]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:53.886]  
[03:07:53.895]  <debugvars>
[03:07:53.895]    // Pre-defined
[03:07:53.895]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:53.895]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:53.895]    __dp=0x00000000
[03:07:53.895]    __ap=0x00000000
[03:07:53.895]    __traceout=0x00000000      (Trace Disabled)
[03:07:53.895]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:53.895]    __FlashAddr=0x00000000
[03:07:53.895]    __FlashLen=0x00000000
[03:07:53.895]    __FlashArg=0x00000000
[03:07:53.895]    __FlashOp=0x00000000
[03:07:53.895]    __Result=0x00000000
[03:07:53.895]  </debugvars>
[03:07:53.895]  
[03:07:53.895]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:53.895]    <block atomic="false" info="">
[03:07:53.895]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:53.895]        // -> [isSWJ <= 0x00000001]
[03:07:53.895]      __var hasDormant = __protocol & 0x00020000;
[03:07:53.895]        // -> [hasDormant <= 0x00000000]
[03:07:53.895]      __var protType   = __protocol & 0x0000FFFF;
[03:07:53.895]        // -> [protType <= 0x00000002]
[03:07:53.895]    </block>
[03:07:53.895]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:53.895]      // if-block "protType == 1"
[03:07:53.895]        // =>  FALSE
[03:07:53.895]      // skip if-block "protType == 1"
[03:07:53.898]    </control>
[03:07:53.898]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:53.898]      // if-block "protType == 2"
[03:07:53.898]        // =>  TRUE
[03:07:53.898]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:53.898]        // if-block "isSWJ"
[03:07:53.898]          // =>  TRUE
[03:07:53.898]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:53.898]          // if-block "hasDormant"
[03:07:53.898]            // =>  FALSE
[03:07:53.898]          // skip if-block "hasDormant"
[03:07:53.898]        </control>
[03:07:53.898]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:53.898]          // if-block "!hasDormant"
[03:07:53.898]            // =>  TRUE
[03:07:53.898]          <block atomic="false" info="">
[03:07:53.898]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:54.907]  
[03:07:54.907]  !!! E320 : DAP access error
[03:07:54.907]  
[03:07:54.915]          </block>
[03:07:54.915]          // end if-block "!hasDormant"
[03:07:54.915]        </control>
[03:07:54.915]        // end if-block "isSWJ"
[03:07:54.915]      </control>
[03:07:54.915]      // end if-block "protType == 2"
[03:07:54.915]    </control>
[03:07:54.915]  </sequence>
[03:07:54.915]  
[03:07:55.170]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:55.170]  
[03:07:55.178]  <debugvars>
[03:07:55.178]    // Pre-defined
[03:07:55.178]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:55.178]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:55.178]    __dp=0x00000000
[03:07:55.178]    __ap=0x00000000
[03:07:55.178]    __traceout=0x00000000      (Trace Disabled)
[03:07:55.178]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:55.178]    __FlashAddr=0x00000000
[03:07:55.178]    __FlashLen=0x00000000
[03:07:55.178]    __FlashArg=0x00000000
[03:07:55.178]    __FlashOp=0x00000000
[03:07:55.178]    __Result=0x00000000
[03:07:55.178]  </debugvars>
[03:07:55.178]  
[03:07:55.178]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:55.180]    <block atomic="false" info="">
[03:07:55.180]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:55.180]        // -> [isSWJ <= 0x00000001]
[03:07:55.180]      __var hasDormant = __protocol & 0x00020000;
[03:07:55.180]        // -> [hasDormant <= 0x00000000]
[03:07:55.180]      __var protType   = __protocol & 0x0000FFFF;
[03:07:55.180]        // -> [protType <= 0x00000002]
[03:07:55.180]    </block>
[03:07:55.180]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:55.182]      // if-block "protType == 1"
[03:07:55.182]        // =>  FALSE
[03:07:55.182]      // skip if-block "protType == 1"
[03:07:55.182]    </control>
[03:07:55.182]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:55.182]      // if-block "protType == 2"
[03:07:55.182]        // =>  TRUE
[03:07:55.182]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:55.183]        // if-block "isSWJ"
[03:07:55.183]          // =>  TRUE
[03:07:55.183]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:55.183]          // if-block "hasDormant"
[03:07:55.183]            // =>  FALSE
[03:07:55.183]          // skip if-block "hasDormant"
[03:07:55.183]        </control>
[03:07:55.183]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:55.183]          // if-block "!hasDormant"
[03:07:55.183]            // =>  TRUE
[03:07:55.183]          <block atomic="false" info="">
[03:07:55.183]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:56.185]  
[03:07:56.185]  !!! E320 : DAP access error
[03:07:56.185]  
[03:07:56.193]          </block>
[03:07:56.193]          // end if-block "!hasDormant"
[03:07:56.193]        </control>
[03:07:56.193]        // end if-block "isSWJ"
[03:07:56.193]      </control>
[03:07:56.193]      // end if-block "protType == 2"
[03:07:56.193]    </control>
[03:07:56.193]  </sequence>
[03:07:56.193]  
[03:07:56.449]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:56.449]  
[03:07:56.459]  <debugvars>
[03:07:56.459]    // Pre-defined
[03:07:56.460]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:56.460]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:56.460]    __dp=0x00000000
[03:07:56.460]    __ap=0x00000000
[03:07:56.460]    __traceout=0x00000000      (Trace Disabled)
[03:07:56.460]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:56.460]    __FlashAddr=0x00000000
[03:07:56.460]    __FlashLen=0x00000000
[03:07:56.460]    __FlashArg=0x00000000
[03:07:56.460]    __FlashOp=0x00000000
[03:07:56.460]    __Result=0x00000000
[03:07:56.461]  </debugvars>
[03:07:56.461]  
[03:07:56.461]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:56.461]    <block atomic="false" info="">
[03:07:56.461]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:56.461]        // -> [isSWJ <= 0x00000001]
[03:07:56.461]      __var hasDormant = __protocol & 0x00020000;
[03:07:56.461]        // -> [hasDormant <= 0x00000000]
[03:07:56.461]      __var protType   = __protocol & 0x0000FFFF;
[03:07:56.461]        // -> [protType <= 0x00000002]
[03:07:56.461]    </block>
[03:07:56.461]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:56.464]      // if-block "protType == 1"
[03:07:56.464]        // =>  FALSE
[03:07:56.464]      // skip if-block "protType == 1"
[03:07:56.464]    </control>
[03:07:56.464]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:56.464]      // if-block "protType == 2"
[03:07:56.464]        // =>  TRUE
[03:07:56.464]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:56.464]        // if-block "isSWJ"
[03:07:56.464]          // =>  TRUE
[03:07:56.464]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:56.464]          // if-block "hasDormant"
[03:07:56.464]            // =>  FALSE
[03:07:56.464]          // skip if-block "hasDormant"
[03:07:56.464]        </control>
[03:07:56.465]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:56.465]          // if-block "!hasDormant"
[03:07:56.465]            // =>  TRUE
[03:07:56.465]          <block atomic="false" info="">
[03:07:56.465]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:57.468]  
[03:07:57.468]  !!! E320 : DAP access error
[03:07:57.468]  
[03:07:57.478]          </block>
[03:07:57.478]          // end if-block "!hasDormant"
[03:07:57.478]        </control>
[03:07:57.478]        // end if-block "isSWJ"
[03:07:57.478]      </control>
[03:07:57.478]      // end if-block "protType == 2"
[03:07:57.478]    </control>
[03:07:57.478]  </sequence>
[03:07:57.478]  
[03:07:57.737]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:57.737]  
[03:07:57.745]  <debugvars>
[03:07:57.745]    // Pre-defined
[03:07:57.745]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:57.745]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:57.745]    __dp=0x00000000
[03:07:57.745]    __ap=0x00000000
[03:07:57.745]    __traceout=0x00000000      (Trace Disabled)
[03:07:57.745]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:57.745]    __FlashAddr=0x00000000
[03:07:57.745]    __FlashLen=0x00000000
[03:07:57.745]    __FlashArg=0x00000000
[03:07:57.745]    __FlashOp=0x00000000
[03:07:57.745]    __Result=0x00000000
[03:07:57.745]  </debugvars>
[03:07:57.747]  
[03:07:57.747]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:57.747]    <block atomic="false" info="">
[03:07:57.747]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:57.747]        // -> [isSWJ <= 0x00000001]
[03:07:57.747]      __var hasDormant = __protocol & 0x00020000;
[03:07:57.747]        // -> [hasDormant <= 0x00000000]
[03:07:57.747]      __var protType   = __protocol & 0x0000FFFF;
[03:07:57.747]        // -> [protType <= 0x00000002]
[03:07:57.747]    </block>
[03:07:57.747]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:57.747]      // if-block "protType == 1"
[03:07:57.747]        // =>  FALSE
[03:07:57.747]      // skip if-block "protType == 1"
[03:07:57.747]    </control>
[03:07:57.747]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:57.747]      // if-block "protType == 2"
[03:07:57.747]        // =>  TRUE
[03:07:57.747]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:57.747]        // if-block "isSWJ"
[03:07:57.750]          // =>  TRUE
[03:07:57.750]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:57.750]          // if-block "hasDormant"
[03:07:57.750]            // =>  FALSE
[03:07:57.750]          // skip if-block "hasDormant"
[03:07:57.750]        </control>
[03:07:57.750]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:57.751]          // if-block "!hasDormant"
[03:07:57.751]            // =>  TRUE
[03:07:57.751]          <block atomic="false" info="">
[03:07:57.751]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:07:58.761]  
[03:07:58.761]  !!! E320 : DAP access error
[03:07:58.761]  
[03:07:58.769]          </block>
[03:07:58.769]          // end if-block "!hasDormant"
[03:07:58.769]        </control>
[03:07:58.769]        // end if-block "isSWJ"
[03:07:58.769]      </control>
[03:07:58.769]      // end if-block "protType == 2"
[03:07:58.769]    </control>
[03:07:58.769]  </sequence>
[03:07:58.769]  
[03:07:59.030]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:07:59.030]  
[03:07:59.038]  <debugvars>
[03:07:59.038]    // Pre-defined
[03:07:59.038]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:07:59.038]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:07:59.038]    __dp=0x00000000
[03:07:59.038]    __ap=0x00000000
[03:07:59.038]    __traceout=0x00000000      (Trace Disabled)
[03:07:59.038]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:07:59.038]    __FlashAddr=0x00000000
[03:07:59.038]    __FlashLen=0x00000000
[03:07:59.038]    __FlashArg=0x00000000
[03:07:59.038]    __FlashOp=0x00000000
[03:07:59.038]    __Result=0x00000000
[03:07:59.038]  </debugvars>
[03:07:59.038]  
[03:07:59.038]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:07:59.038]    <block atomic="false" info="">
[03:07:59.038]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:07:59.038]        // -> [isSWJ <= 0x00000001]
[03:07:59.038]      __var hasDormant = __protocol & 0x00020000;
[03:07:59.038]        // -> [hasDormant <= 0x00000000]
[03:07:59.038]      __var protType   = __protocol & 0x0000FFFF;
[03:07:59.038]        // -> [protType <= 0x00000002]
[03:07:59.038]    </block>
[03:07:59.038]    <control if="protType == 1" while="" timeout="0" info="">
[03:07:59.038]      // if-block "protType == 1"
[03:07:59.038]        // =>  FALSE
[03:07:59.038]      // skip if-block "protType == 1"
[03:07:59.038]    </control>
[03:07:59.038]    <control if="protType == 2" while="" timeout="0" info="">
[03:07:59.038]      // if-block "protType == 2"
[03:07:59.038]        // =>  TRUE
[03:07:59.038]      <control if="isSWJ" while="" timeout="0" info="">
[03:07:59.038]        // if-block "isSWJ"
[03:07:59.038]          // =>  TRUE
[03:07:59.038]        <control if="hasDormant" while="" timeout="0" info="">
[03:07:59.042]          // if-block "hasDormant"
[03:07:59.042]            // =>  FALSE
[03:07:59.042]          // skip if-block "hasDormant"
[03:07:59.042]        </control>
[03:07:59.042]        <control if="!hasDormant" while="" timeout="0" info="">
[03:07:59.042]          // if-block "!hasDormant"
[03:07:59.042]            // =>  TRUE
[03:07:59.042]          <block atomic="false" info="">
[03:07:59.042]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:00.053]  
[03:08:00.053]  !!! E320 : DAP access error
[03:08:00.053]  
[03:08:00.062]          </block>
[03:08:00.062]          // end if-block "!hasDormant"
[03:08:00.062]        </control>
[03:08:00.063]        // end if-block "isSWJ"
[03:08:00.063]      </control>
[03:08:00.063]      // end if-block "protType == 2"
[03:08:00.063]    </control>
[03:08:00.063]  </sequence>
[03:08:00.063]  
[03:08:00.315]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:00.315]  
[03:08:00.323]  <debugvars>
[03:08:00.323]    // Pre-defined
[03:08:00.323]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:00.323]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:00.323]    __dp=0x00000000
[03:08:00.323]    __ap=0x00000000
[03:08:00.323]    __traceout=0x00000000      (Trace Disabled)
[03:08:00.323]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:00.323]    __FlashAddr=0x00000000
[03:08:00.323]    __FlashLen=0x00000000
[03:08:00.323]    __FlashArg=0x00000000
[03:08:00.323]    __FlashOp=0x00000000
[03:08:00.323]    __Result=0x00000000
[03:08:00.323]  </debugvars>
[03:08:00.323]  
[03:08:00.323]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:00.323]    <block atomic="false" info="">
[03:08:00.323]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:00.323]        // -> [isSWJ <= 0x00000001]
[03:08:00.323]      __var hasDormant = __protocol & 0x00020000;
[03:08:00.323]        // -> [hasDormant <= 0x00000000]
[03:08:00.323]      __var protType   = __protocol & 0x0000FFFF;
[03:08:00.323]        // -> [protType <= 0x00000002]
[03:08:00.323]    </block>
[03:08:00.323]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:00.323]      // if-block "protType == 1"
[03:08:00.323]        // =>  FALSE
[03:08:00.323]      // skip if-block "protType == 1"
[03:08:00.323]    </control>
[03:08:00.323]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:00.323]      // if-block "protType == 2"
[03:08:00.323]        // =>  TRUE
[03:08:00.323]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:00.323]        // if-block "isSWJ"
[03:08:00.327]          // =>  TRUE
[03:08:00.327]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:00.327]          // if-block "hasDormant"
[03:08:00.327]            // =>  FALSE
[03:08:00.327]          // skip if-block "hasDormant"
[03:08:00.327]        </control>
[03:08:00.327]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:00.327]          // if-block "!hasDormant"
[03:08:00.327]            // =>  TRUE
[03:08:00.327]          <block atomic="false" info="">
[03:08:00.327]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:01.335]  
[03:08:01.335]  !!! E320 : DAP access error
[03:08:01.335]  
[03:08:01.343]          </block>
[03:08:01.343]          // end if-block "!hasDormant"
[03:08:01.343]        </control>
[03:08:01.343]        // end if-block "isSWJ"
[03:08:01.343]      </control>
[03:08:01.343]      // end if-block "protType == 2"
[03:08:01.343]    </control>
[03:08:01.343]  </sequence>
[03:08:01.343]  
[03:08:01.600]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:01.600]  
[03:08:01.609]  <debugvars>
[03:08:01.609]    // Pre-defined
[03:08:01.609]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:01.609]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:01.609]    __dp=0x00000000
[03:08:01.609]    __ap=0x00000000
[03:08:01.609]    __traceout=0x00000000      (Trace Disabled)
[03:08:01.609]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:01.609]    __FlashAddr=0x00000000
[03:08:01.609]    __FlashLen=0x00000000
[03:08:01.609]    __FlashArg=0x00000000
[03:08:01.609]    __FlashOp=0x00000000
[03:08:01.609]    __Result=0x00000000
[03:08:01.609]  </debugvars>
[03:08:01.609]  
[03:08:01.609]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:01.609]    <block atomic="false" info="">
[03:08:01.609]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:01.609]        // -> [isSWJ <= 0x00000001]
[03:08:01.609]      __var hasDormant = __protocol & 0x00020000;
[03:08:01.609]        // -> [hasDormant <= 0x00000000]
[03:08:01.609]      __var protType   = __protocol & 0x0000FFFF;
[03:08:01.609]        // -> [protType <= 0x00000002]
[03:08:01.609]    </block>
[03:08:01.609]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:01.609]      // if-block "protType == 1"
[03:08:01.609]        // =>  FALSE
[03:08:01.609]      // skip if-block "protType == 1"
[03:08:01.609]    </control>
[03:08:01.612]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:01.612]      // if-block "protType == 2"
[03:08:01.612]        // =>  TRUE
[03:08:01.612]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:01.612]        // if-block "isSWJ"
[03:08:01.612]          // =>  TRUE
[03:08:01.612]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:01.612]          // if-block "hasDormant"
[03:08:01.612]            // =>  FALSE
[03:08:01.612]          // skip if-block "hasDormant"
[03:08:01.612]        </control>
[03:08:01.612]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:01.612]          // if-block "!hasDormant"
[03:08:01.612]            // =>  TRUE
[03:08:01.612]          <block atomic="false" info="">
[03:08:01.612]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:02.617]  
[03:08:02.617]  !!! E320 : DAP access error
[03:08:02.617]  
[03:08:02.625]          </block>
[03:08:02.625]          // end if-block "!hasDormant"
[03:08:02.625]        </control>
[03:08:02.625]        // end if-block "isSWJ"
[03:08:02.625]      </control>
[03:08:02.625]      // end if-block "protType == 2"
[03:08:02.625]    </control>
[03:08:02.625]  </sequence>
[03:08:02.625]  
[03:08:02.877]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:02.877]  
[03:08:02.887]  <debugvars>
[03:08:02.887]    // Pre-defined
[03:08:02.887]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:02.887]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:02.887]    __dp=0x00000000
[03:08:02.887]    __ap=0x00000000
[03:08:02.887]    __traceout=0x00000000      (Trace Disabled)
[03:08:02.887]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:02.887]    __FlashAddr=0x00000000
[03:08:02.887]    __FlashLen=0x00000000
[03:08:02.887]    __FlashArg=0x00000000
[03:08:02.887]    __FlashOp=0x00000000
[03:08:02.887]    __Result=0x00000000
[03:08:02.887]  </debugvars>
[03:08:02.887]  
[03:08:02.887]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:02.887]    <block atomic="false" info="">
[03:08:02.889]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:02.889]        // -> [isSWJ <= 0x00000001]
[03:08:02.889]      __var hasDormant = __protocol & 0x00020000;
[03:08:02.889]        // -> [hasDormant <= 0x00000000]
[03:08:02.889]      __var protType   = __protocol & 0x0000FFFF;
[03:08:02.889]        // -> [protType <= 0x00000002]
[03:08:02.889]    </block>
[03:08:02.889]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:02.890]      // if-block "protType == 1"
[03:08:02.890]        // =>  FALSE
[03:08:02.890]      // skip if-block "protType == 1"
[03:08:02.890]    </control>
[03:08:02.890]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:02.890]      // if-block "protType == 2"
[03:08:02.890]        // =>  TRUE
[03:08:02.890]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:02.890]        // if-block "isSWJ"
[03:08:02.890]          // =>  TRUE
[03:08:02.890]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:02.890]          // if-block "hasDormant"
[03:08:02.890]            // =>  FALSE
[03:08:02.890]          // skip if-block "hasDormant"
[03:08:02.890]        </control>
[03:08:02.890]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:02.890]          // if-block "!hasDormant"
[03:08:02.890]            // =>  TRUE
[03:08:02.890]          <block atomic="false" info="">
[03:08:02.890]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:03.890]  
[03:08:03.890]  !!! E320 : DAP access error
[03:08:03.890]  
[03:08:03.899]          </block>
[03:08:03.899]          // end if-block "!hasDormant"
[03:08:03.899]        </control>
[03:08:03.899]        // end if-block "isSWJ"
[03:08:03.899]      </control>
[03:08:03.899]      // end if-block "protType == 2"
[03:08:03.899]    </control>
[03:08:03.899]  </sequence>
[03:08:03.899]  
[03:08:04.151]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:04.151]  
[03:08:04.160]  <debugvars>
[03:08:04.160]    // Pre-defined
[03:08:04.160]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:04.160]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:04.160]    __dp=0x00000000
[03:08:04.160]    __ap=0x00000000
[03:08:04.160]    __traceout=0x00000000      (Trace Disabled)
[03:08:04.160]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:04.160]    __FlashAddr=0x00000000
[03:08:04.160]    __FlashLen=0x00000000
[03:08:04.161]    __FlashArg=0x00000000
[03:08:04.161]    __FlashOp=0x00000000
[03:08:04.161]    __Result=0x00000000
[03:08:04.161]  </debugvars>
[03:08:04.161]  
[03:08:04.161]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:04.161]    <block atomic="false" info="">
[03:08:04.161]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:04.161]        // -> [isSWJ <= 0x00000001]
[03:08:04.161]      __var hasDormant = __protocol & 0x00020000;
[03:08:04.161]        // -> [hasDormant <= 0x00000000]
[03:08:04.161]      __var protType   = __protocol & 0x0000FFFF;
[03:08:04.161]        // -> [protType <= 0x00000002]
[03:08:04.161]    </block>
[03:08:04.161]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:04.161]      // if-block "protType == 1"
[03:08:04.161]        // =>  FALSE
[03:08:04.161]      // skip if-block "protType == 1"
[03:08:04.163]    </control>
[03:08:04.163]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:04.163]      // if-block "protType == 2"
[03:08:04.163]        // =>  TRUE
[03:08:04.163]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:04.164]        // if-block "isSWJ"
[03:08:04.164]          // =>  TRUE
[03:08:04.164]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:04.164]          // if-block "hasDormant"
[03:08:04.164]            // =>  FALSE
[03:08:04.164]          // skip if-block "hasDormant"
[03:08:04.164]        </control>
[03:08:04.164]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:04.164]          // if-block "!hasDormant"
[03:08:04.164]            // =>  TRUE
[03:08:04.164]          <block atomic="false" info="">
[03:08:04.164]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:05.170]  
[03:08:05.170]  !!! E320 : DAP access error
[03:08:05.170]  
[03:08:05.178]          </block>
[03:08:05.178]          // end if-block "!hasDormant"
[03:08:05.178]        </control>
[03:08:05.178]        // end if-block "isSWJ"
[03:08:05.178]      </control>
[03:08:05.178]      // end if-block "protType == 2"
[03:08:05.178]    </control>
[03:08:05.178]  </sequence>
[03:08:05.178]  
[03:08:05.432]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:05.432]  
[03:08:05.441]  <debugvars>
[03:08:05.441]    // Pre-defined
[03:08:05.441]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:05.441]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:05.441]    __dp=0x00000000
[03:08:05.441]    __ap=0x00000000
[03:08:05.441]    __traceout=0x00000000      (Trace Disabled)
[03:08:05.441]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:05.441]    __FlashAddr=0x00000000
[03:08:05.441]    __FlashLen=0x00000000
[03:08:05.441]    __FlashArg=0x00000000
[03:08:05.441]    __FlashOp=0x00000000
[03:08:05.441]    __Result=0x00000000
[03:08:05.441]  </debugvars>
[03:08:05.441]  
[03:08:05.441]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:05.441]    <block atomic="false" info="">
[03:08:05.441]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:05.441]        // -> [isSWJ <= 0x00000001]
[03:08:05.441]      __var hasDormant = __protocol & 0x00020000;
[03:08:05.441]        // -> [hasDormant <= 0x00000000]
[03:08:05.441]      __var protType   = __protocol & 0x0000FFFF;
[03:08:05.441]        // -> [protType <= 0x00000002]
[03:08:05.441]    </block>
[03:08:05.441]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:05.441]      // if-block "protType == 1"
[03:08:05.441]        // =>  FALSE
[03:08:05.441]      // skip if-block "protType == 1"
[03:08:05.441]    </control>
[03:08:05.441]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:05.441]      // if-block "protType == 2"
[03:08:05.444]        // =>  TRUE
[03:08:05.444]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:05.444]        // if-block "isSWJ"
[03:08:05.444]          // =>  TRUE
[03:08:05.444]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:05.444]          // if-block "hasDormant"
[03:08:05.444]            // =>  FALSE
[03:08:05.445]          // skip if-block "hasDormant"
[03:08:05.445]        </control>
[03:08:05.445]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:05.445]          // if-block "!hasDormant"
[03:08:05.445]            // =>  TRUE
[03:08:05.446]          <block atomic="false" info="">
[03:08:05.446]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:06.453]  
[03:08:06.453]  !!! E320 : DAP access error
[03:08:06.453]  
[03:08:06.455]          </block>
[03:08:06.455]          // end if-block "!hasDormant"
[03:08:06.455]        </control>
[03:08:06.455]        // end if-block "isSWJ"
[03:08:06.455]      </control>
[03:08:06.455]      // end if-block "protType == 2"
[03:08:06.455]    </control>
[03:08:06.455]  </sequence>
[03:08:06.455]  
[03:08:06.705]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:06.705]  
[03:08:06.705]  <debugvars>
[03:08:06.705]    // Pre-defined
[03:08:06.705]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:06.705]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:06.705]    __dp=0x00000000
[03:08:06.705]    __ap=0x00000000
[03:08:06.705]    __traceout=0x00000000      (Trace Disabled)
[03:08:06.705]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:06.705]    __FlashAddr=0x00000000
[03:08:06.705]    __FlashLen=0x00000000
[03:08:06.705]    __FlashArg=0x00000000
[03:08:06.705]    __FlashOp=0x00000000
[03:08:06.705]    __Result=0x00000000
[03:08:06.705]  </debugvars>
[03:08:06.705]  
[03:08:06.705]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:06.705]    <block atomic="false" info="">
[03:08:06.709]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:06.709]        // -> [isSWJ <= 0x00000001]
[03:08:06.709]      __var hasDormant = __protocol & 0x00020000;
[03:08:06.709]        // -> [hasDormant <= 0x00000000]
[03:08:06.709]      __var protType   = __protocol & 0x0000FFFF;
[03:08:06.709]        // -> [protType <= 0x00000002]
[03:08:06.709]    </block>
[03:08:06.709]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:06.709]      // if-block "protType == 1"
[03:08:06.709]        // =>  FALSE
[03:08:06.709]      // skip if-block "protType == 1"
[03:08:06.709]    </control>
[03:08:06.709]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:06.709]      // if-block "protType == 2"
[03:08:06.709]        // =>  TRUE
[03:08:06.709]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:06.709]        // if-block "isSWJ"
[03:08:06.709]          // =>  TRUE
[03:08:06.709]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:06.709]          // if-block "hasDormant"
[03:08:06.709]            // =>  FALSE
[03:08:06.709]          // skip if-block "hasDormant"
[03:08:06.709]        </control>
[03:08:06.709]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:06.709]          // if-block "!hasDormant"
[03:08:06.709]            // =>  TRUE
[03:08:06.709]          <block atomic="false" info="">
[03:08:06.709]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:07.721]  
[03:08:07.721]  !!! E320 : DAP access error
[03:08:07.721]  
[03:08:07.721]          </block>
[03:08:07.721]          // end if-block "!hasDormant"
[03:08:07.721]        </control>
[03:08:07.721]        // end if-block "isSWJ"
[03:08:07.721]      </control>
[03:08:07.721]      // end if-block "protType == 2"
[03:08:07.721]    </control>
[03:08:07.721]  </sequence>
[03:08:07.721]  
[03:08:07.982]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:07.982]  
[03:08:07.990]  <debugvars>
[03:08:07.990]    // Pre-defined
[03:08:07.990]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:07.990]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:07.990]    __dp=0x00000000
[03:08:07.990]    __ap=0x00000000
[03:08:07.990]    __traceout=0x00000000      (Trace Disabled)
[03:08:07.990]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:07.990]    __FlashAddr=0x00000000
[03:08:07.990]    __FlashLen=0x00000000
[03:08:07.990]    __FlashArg=0x00000000
[03:08:07.990]    __FlashOp=0x00000000
[03:08:07.990]    __Result=0x00000000
[03:08:07.990]  </debugvars>
[03:08:07.990]  
[03:08:07.990]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:07.990]    <block atomic="false" info="">
[03:08:07.990]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:07.990]        // -> [isSWJ <= 0x00000001]
[03:08:07.990]      __var hasDormant = __protocol & 0x00020000;
[03:08:07.990]        // -> [hasDormant <= 0x00000000]
[03:08:07.990]      __var protType   = __protocol & 0x0000FFFF;
[03:08:07.990]        // -> [protType <= 0x00000002]
[03:08:07.990]    </block>
[03:08:07.990]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:07.990]      // if-block "protType == 1"
[03:08:07.990]        // =>  FALSE
[03:08:07.990]      // skip if-block "protType == 1"
[03:08:07.990]    </control>
[03:08:07.990]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:07.990]      // if-block "protType == 2"
[03:08:07.990]        // =>  TRUE
[03:08:07.994]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:07.994]        // if-block "isSWJ"
[03:08:07.994]          // =>  TRUE
[03:08:07.994]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:07.994]          // if-block "hasDormant"
[03:08:07.994]            // =>  FALSE
[03:08:07.994]          // skip if-block "hasDormant"
[03:08:07.994]        </control>
[03:08:07.994]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:07.994]          // if-block "!hasDormant"
[03:08:07.994]            // =>  TRUE
[03:08:07.994]          <block atomic="false" info="">
[03:08:07.994]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:09.005]  
[03:08:09.005]  !!! E320 : DAP access error
[03:08:09.005]  
[03:08:09.005]          </block>
[03:08:09.005]          // end if-block "!hasDormant"
[03:08:09.005]        </control>
[03:08:09.005]        // end if-block "isSWJ"
[03:08:09.005]      </control>
[03:08:09.005]      // end if-block "protType == 2"
[03:08:09.005]    </control>
[03:08:09.005]  </sequence>
[03:08:09.005]  
[03:08:09.256]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:09.256]  
[03:08:09.264]  <debugvars>
[03:08:09.264]    // Pre-defined
[03:08:09.264]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:09.264]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:09.264]    __dp=0x00000000
[03:08:09.264]    __ap=0x00000000
[03:08:09.264]    __traceout=0x00000000      (Trace Disabled)
[03:08:09.264]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:09.264]    __FlashAddr=0x00000000
[03:08:09.264]    __FlashLen=0x00000000
[03:08:09.264]    __FlashArg=0x00000000
[03:08:09.264]    __FlashOp=0x00000000
[03:08:09.264]    __Result=0x00000000
[03:08:09.264]  </debugvars>
[03:08:09.264]  
[03:08:09.264]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:09.264]    <block atomic="false" info="">
[03:08:09.264]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:09.264]        // -> [isSWJ <= 0x00000001]
[03:08:09.264]      __var hasDormant = __protocol & 0x00020000;
[03:08:09.264]        // -> [hasDormant <= 0x00000000]
[03:08:09.264]      __var protType   = __protocol & 0x0000FFFF;
[03:08:09.264]        // -> [protType <= 0x00000002]
[03:08:09.264]    </block>
[03:08:09.264]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:09.264]      // if-block "protType == 1"
[03:08:09.264]        // =>  FALSE
[03:08:09.264]      // skip if-block "protType == 1"
[03:08:09.264]    </control>
[03:08:09.264]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:09.264]      // if-block "protType == 2"
[03:08:09.268]        // =>  TRUE
[03:08:09.268]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:09.268]        // if-block "isSWJ"
[03:08:09.268]          // =>  TRUE
[03:08:09.268]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:09.268]          // if-block "hasDormant"
[03:08:09.268]            // =>  FALSE
[03:08:09.268]          // skip if-block "hasDormant"
[03:08:09.268]        </control>
[03:08:09.268]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:09.268]          // if-block "!hasDormant"
[03:08:09.268]            // =>  TRUE
[03:08:09.268]          <block atomic="false" info="">
[03:08:09.268]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:10.274]  
[03:08:10.274]  !!! E320 : DAP access error
[03:08:10.274]  
[03:08:10.274]          </block>
[03:08:10.274]          // end if-block "!hasDormant"
[03:08:10.274]        </control>
[03:08:10.274]        // end if-block "isSWJ"
[03:08:10.274]      </control>
[03:08:10.274]      // end if-block "protType == 2"
[03:08:10.274]    </control>
[03:08:10.274]  </sequence>
[03:08:10.274]  
[03:08:10.528]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:10.528]  
[03:08:10.530]  <debugvars>
[03:08:10.530]    // Pre-defined
[03:08:10.530]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:10.530]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:10.530]    __dp=0x00000000
[03:08:10.530]    __ap=0x00000000
[03:08:10.530]    __traceout=0x00000000      (Trace Disabled)
[03:08:10.530]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:10.530]    __FlashAddr=0x00000000
[03:08:10.530]    __FlashLen=0x00000000
[03:08:10.530]    __FlashArg=0x00000000
[03:08:10.530]    __FlashOp=0x00000000
[03:08:10.530]    __Result=0x00000000
[03:08:10.530]  </debugvars>
[03:08:10.530]  
[03:08:10.530]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:10.530]    <block atomic="false" info="">
[03:08:10.530]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:10.530]        // -> [isSWJ <= 0x00000001]
[03:08:10.530]      __var hasDormant = __protocol & 0x00020000;
[03:08:10.530]        // -> [hasDormant <= 0x00000000]
[03:08:10.530]      __var protType   = __protocol & 0x0000FFFF;
[03:08:10.530]        // -> [protType <= 0x00000002]
[03:08:10.532]    </block>
[03:08:10.532]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:10.532]      // if-block "protType == 1"
[03:08:10.532]        // =>  FALSE
[03:08:10.532]      // skip if-block "protType == 1"
[03:08:10.532]    </control>
[03:08:10.532]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:10.532]      // if-block "protType == 2"
[03:08:10.532]        // =>  TRUE
[03:08:10.532]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:10.532]        // if-block "isSWJ"
[03:08:10.532]          // =>  TRUE
[03:08:10.532]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:10.532]          // if-block "hasDormant"
[03:08:10.532]            // =>  FALSE
[03:08:10.532]          // skip if-block "hasDormant"
[03:08:10.532]        </control>
[03:08:10.532]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:10.532]          // if-block "!hasDormant"
[03:08:10.532]            // =>  TRUE
[03:08:10.532]          <block atomic="false" info="">
[03:08:10.532]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:11.541]  
[03:08:11.541]  !!! E320 : DAP access error
[03:08:11.541]  
[03:08:11.549]          </block>
[03:08:11.549]          // end if-block "!hasDormant"
[03:08:11.549]        </control>
[03:08:11.549]        // end if-block "isSWJ"
[03:08:11.549]      </control>
[03:08:11.549]      // end if-block "protType == 2"
[03:08:11.549]    </control>
[03:08:11.549]  </sequence>
[03:08:11.549]  
[03:08:11.808]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:11.808]  
[03:08:11.808]  <debugvars>
[03:08:11.808]    // Pre-defined
[03:08:11.808]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:11.809]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:11.809]    __dp=0x00000000
[03:08:11.809]    __ap=0x00000000
[03:08:11.810]    __traceout=0x00000000      (Trace Disabled)
[03:08:11.810]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:11.810]    __FlashAddr=0x00000000
[03:08:11.810]    __FlashLen=0x00000000
[03:08:11.810]    __FlashArg=0x00000000
[03:08:11.810]    __FlashOp=0x00000000
[03:08:11.810]    __Result=0x00000000
[03:08:11.810]  </debugvars>
[03:08:11.810]  
[03:08:11.810]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:11.810]    <block atomic="false" info="">
[03:08:11.810]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:11.810]        // -> [isSWJ <= 0x00000001]
[03:08:11.810]      __var hasDormant = __protocol & 0x00020000;
[03:08:11.810]        // -> [hasDormant <= 0x00000000]
[03:08:11.811]      __var protType   = __protocol & 0x0000FFFF;
[03:08:11.811]        // -> [protType <= 0x00000002]
[03:08:11.811]    </block>
[03:08:11.811]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:11.811]      // if-block "protType == 1"
[03:08:11.811]        // =>  FALSE
[03:08:11.812]      // skip if-block "protType == 1"
[03:08:11.812]    </control>
[03:08:11.812]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:11.812]      // if-block "protType == 2"
[03:08:11.812]        // =>  TRUE
[03:08:11.812]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:11.812]        // if-block "isSWJ"
[03:08:11.812]          // =>  TRUE
[03:08:11.812]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:11.812]          // if-block "hasDormant"
[03:08:11.812]            // =>  FALSE
[03:08:11.812]          // skip if-block "hasDormant"
[03:08:11.812]        </control>
[03:08:11.812]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:11.812]          // if-block "!hasDormant"
[03:08:11.812]            // =>  TRUE
[03:08:11.812]          <block atomic="false" info="">
[03:08:11.812]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:12.818]  
[03:08:12.818]  !!! E320 : DAP access error
[03:08:12.818]  
[03:08:12.827]          </block>
[03:08:12.827]          // end if-block "!hasDormant"
[03:08:12.827]        </control>
[03:08:12.827]        // end if-block "isSWJ"
[03:08:12.827]      </control>
[03:08:12.827]      // end if-block "protType == 2"
[03:08:12.827]    </control>
[03:08:12.827]  </sequence>
[03:08:12.827]  
[03:08:13.087]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:13.087]  
[03:08:13.088]  <debugvars>
[03:08:13.088]    // Pre-defined
[03:08:13.088]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:13.088]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:13.088]    __dp=0x00000000
[03:08:13.088]    __ap=0x00000000
[03:08:13.088]    __traceout=0x00000000      (Trace Disabled)
[03:08:13.089]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:13.089]    __FlashAddr=0x00000000
[03:08:13.089]    __FlashLen=0x00000000
[03:08:13.089]    __FlashArg=0x00000000
[03:08:13.089]    __FlashOp=0x00000000
[03:08:13.089]    __Result=0x00000000
[03:08:13.089]  </debugvars>
[03:08:13.089]  
[03:08:13.089]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:13.089]    <block atomic="false" info="">
[03:08:13.090]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:13.090]        // -> [isSWJ <= 0x00000001]
[03:08:13.090]      __var hasDormant = __protocol & 0x00020000;
[03:08:13.090]        // -> [hasDormant <= 0x00000000]
[03:08:13.090]      __var protType   = __protocol & 0x0000FFFF;
[03:08:13.090]        // -> [protType <= 0x00000002]
[03:08:13.090]    </block>
[03:08:13.090]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:13.090]      // if-block "protType == 1"
[03:08:13.090]        // =>  FALSE
[03:08:13.090]      // skip if-block "protType == 1"
[03:08:13.090]    </control>
[03:08:13.090]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:13.090]      // if-block "protType == 2"
[03:08:13.090]        // =>  TRUE
[03:08:13.090]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:13.090]        // if-block "isSWJ"
[03:08:13.090]          // =>  TRUE
[03:08:13.090]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:13.092]          // if-block "hasDormant"
[03:08:13.092]            // =>  FALSE
[03:08:13.092]          // skip if-block "hasDormant"
[03:08:13.092]        </control>
[03:08:13.092]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:13.093]          // if-block "!hasDormant"
[03:08:13.093]            // =>  TRUE
[03:08:13.093]          <block atomic="false" info="">
[03:08:13.093]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:14.104]  
[03:08:14.104]  !!! E320 : DAP access error
[03:08:14.104]  
[03:08:14.112]          </block>
[03:08:14.112]          // end if-block "!hasDormant"
[03:08:14.113]        </control>
[03:08:14.113]        // end if-block "isSWJ"
[03:08:14.113]      </control>
[03:08:14.113]      // end if-block "protType == 2"
[03:08:14.113]    </control>
[03:08:14.113]  </sequence>
[03:08:14.113]  
[03:08:14.371]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:14.371]  
[03:08:14.380]  <debugvars>
[03:08:14.380]    // Pre-defined
[03:08:14.380]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:14.380]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:14.380]    __dp=0x00000000
[03:08:14.380]    __ap=0x00000000
[03:08:14.380]    __traceout=0x00000000      (Trace Disabled)
[03:08:14.380]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:14.380]    __FlashAddr=0x00000000
[03:08:14.380]    __FlashLen=0x00000000
[03:08:14.380]    __FlashArg=0x00000000
[03:08:14.380]    __FlashOp=0x00000000
[03:08:14.380]    __Result=0x00000000
[03:08:14.380]  </debugvars>
[03:08:14.380]  
[03:08:14.380]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:14.380]    <block atomic="false" info="">
[03:08:14.380]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:14.380]        // -> [isSWJ <= 0x00000001]
[03:08:14.380]      __var hasDormant = __protocol & 0x00020000;
[03:08:14.380]        // -> [hasDormant <= 0x00000000]
[03:08:14.380]      __var protType   = __protocol & 0x0000FFFF;
[03:08:14.380]        // -> [protType <= 0x00000002]
[03:08:14.380]    </block>
[03:08:14.380]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:14.383]      // if-block "protType == 1"
[03:08:14.383]        // =>  FALSE
[03:08:14.383]      // skip if-block "protType == 1"
[03:08:14.383]    </control>
[03:08:14.383]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:14.383]      // if-block "protType == 2"
[03:08:14.383]        // =>  TRUE
[03:08:14.383]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:14.383]        // if-block "isSWJ"
[03:08:14.383]          // =>  TRUE
[03:08:14.383]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:14.383]          // if-block "hasDormant"
[03:08:14.383]            // =>  FALSE
[03:08:14.383]          // skip if-block "hasDormant"
[03:08:14.383]        </control>
[03:08:14.383]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:14.383]          // if-block "!hasDormant"
[03:08:14.383]            // =>  TRUE
[03:08:14.383]          <block atomic="false" info="">
[03:08:14.383]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:15.394]  
[03:08:15.394]  !!! E320 : DAP access error
[03:08:15.394]  
[03:08:15.394]          </block>
[03:08:15.394]          // end if-block "!hasDormant"
[03:08:15.394]        </control>
[03:08:15.394]        // end if-block "isSWJ"
[03:08:15.394]      </control>
[03:08:15.394]      // end if-block "protType == 2"
[03:08:15.394]    </control>
[03:08:15.394]  </sequence>
[03:08:15.394]  
[03:08:15.646]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:15.646]  
[03:08:15.655]  <debugvars>
[03:08:15.655]    // Pre-defined
[03:08:15.655]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:15.655]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:15.655]    __dp=0x00000000
[03:08:15.655]    __ap=0x00000000
[03:08:15.655]    __traceout=0x00000000      (Trace Disabled)
[03:08:15.655]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:15.655]    __FlashAddr=0x00000000
[03:08:15.655]    __FlashLen=0x00000000
[03:08:15.655]    __FlashArg=0x00000000
[03:08:15.655]    __FlashOp=0x00000000
[03:08:15.655]    __Result=0x00000000
[03:08:15.655]  </debugvars>
[03:08:15.655]  
[03:08:15.655]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:15.655]    <block atomic="false" info="">
[03:08:15.655]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:15.655]        // -> [isSWJ <= 0x00000001]
[03:08:15.655]      __var hasDormant = __protocol & 0x00020000;
[03:08:15.655]        // -> [hasDormant <= 0x00000000]
[03:08:15.655]      __var protType   = __protocol & 0x0000FFFF;
[03:08:15.655]        // -> [protType <= 0x00000002]
[03:08:15.655]    </block>
[03:08:15.655]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:15.658]      // if-block "protType == 1"
[03:08:15.658]        // =>  FALSE
[03:08:15.658]      // skip if-block "protType == 1"
[03:08:15.658]    </control>
[03:08:15.658]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:15.658]      // if-block "protType == 2"
[03:08:15.658]        // =>  TRUE
[03:08:15.658]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:15.658]        // if-block "isSWJ"
[03:08:15.658]          // =>  TRUE
[03:08:15.658]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:15.658]          // if-block "hasDormant"
[03:08:15.658]            // =>  FALSE
[03:08:15.658]          // skip if-block "hasDormant"
[03:08:15.658]        </control>
[03:08:15.658]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:15.658]          // if-block "!hasDormant"
[03:08:15.658]            // =>  TRUE
[03:08:15.658]          <block atomic="false" info="">
[03:08:15.658]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:16.671]  
[03:08:16.671]  !!! E320 : DAP access error
[03:08:16.671]  
[03:08:16.680]          </block>
[03:08:16.680]          // end if-block "!hasDormant"
[03:08:16.680]        </control>
[03:08:16.680]        // end if-block "isSWJ"
[03:08:16.680]      </control>
[03:08:16.680]      // end if-block "protType == 2"
[03:08:16.680]    </control>
[03:08:16.680]  </sequence>
[03:08:16.680]  
[03:08:16.930]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:16.930]  
[03:08:16.939]  <debugvars>
[03:08:16.939]    // Pre-defined
[03:08:16.939]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:16.939]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:16.939]    __dp=0x00000000
[03:08:16.939]    __ap=0x00000000
[03:08:16.939]    __traceout=0x00000000      (Trace Disabled)
[03:08:16.939]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:16.939]    __FlashAddr=0x00000000
[03:08:16.939]    __FlashLen=0x00000000
[03:08:16.939]    __FlashArg=0x00000000
[03:08:16.939]    __FlashOp=0x00000000
[03:08:16.939]    __Result=0x00000000
[03:08:16.939]  </debugvars>
[03:08:16.939]  
[03:08:16.939]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:16.939]    <block atomic="false" info="">
[03:08:16.939]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:16.939]        // -> [isSWJ <= 0x00000001]
[03:08:16.939]      __var hasDormant = __protocol & 0x00020000;
[03:08:16.939]        // -> [hasDormant <= 0x00000000]
[03:08:16.939]      __var protType   = __protocol & 0x0000FFFF;
[03:08:16.939]        // -> [protType <= 0x00000002]
[03:08:16.942]    </block>
[03:08:16.942]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:16.942]      // if-block "protType == 1"
[03:08:16.942]        // =>  FALSE
[03:08:16.942]      // skip if-block "protType == 1"
[03:08:16.942]    </control>
[03:08:16.942]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:16.942]      // if-block "protType == 2"
[03:08:16.942]        // =>  TRUE
[03:08:16.942]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:16.942]        // if-block "isSWJ"
[03:08:16.942]          // =>  TRUE
[03:08:16.942]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:16.942]          // if-block "hasDormant"
[03:08:16.942]            // =>  FALSE
[03:08:16.942]          // skip if-block "hasDormant"
[03:08:16.942]        </control>
[03:08:16.942]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:16.942]          // if-block "!hasDormant"
[03:08:16.942]            // =>  TRUE
[03:08:16.942]          <block atomic="false" info="">
[03:08:16.942]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:17.945]  
[03:08:17.945]  !!! E320 : DAP access error
[03:08:17.945]  
[03:08:17.953]          </block>
[03:08:17.953]          // end if-block "!hasDormant"
[03:08:17.953]        </control>
[03:08:17.953]        // end if-block "isSWJ"
[03:08:17.953]      </control>
[03:08:17.953]      // end if-block "protType == 2"
[03:08:17.953]    </control>
[03:08:17.953]  </sequence>
[03:08:17.954]  
[03:08:18.207]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:18.207]  
[03:08:18.215]  <debugvars>
[03:08:18.215]    // Pre-defined
[03:08:18.215]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:18.215]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:18.215]    __dp=0x00000000
[03:08:18.215]    __ap=0x00000000
[03:08:18.215]    __traceout=0x00000000      (Trace Disabled)
[03:08:18.215]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:18.215]    __FlashAddr=0x00000000
[03:08:18.215]    __FlashLen=0x00000000
[03:08:18.215]    __FlashArg=0x00000000
[03:08:18.215]    __FlashOp=0x00000000
[03:08:18.215]    __Result=0x00000000
[03:08:18.215]  </debugvars>
[03:08:18.215]  
[03:08:18.215]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:18.215]    <block atomic="false" info="">
[03:08:18.215]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:18.215]        // -> [isSWJ <= 0x00000001]
[03:08:18.215]      __var hasDormant = __protocol & 0x00020000;
[03:08:18.215]        // -> [hasDormant <= 0x00000000]
[03:08:18.215]      __var protType   = __protocol & 0x0000FFFF;
[03:08:18.215]        // -> [protType <= 0x00000002]
[03:08:18.215]    </block>
[03:08:18.215]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:18.215]      // if-block "protType == 1"
[03:08:18.215]        // =>  FALSE
[03:08:18.215]      // skip if-block "protType == 1"
[03:08:18.215]    </control>
[03:08:18.215]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:18.219]      // if-block "protType == 2"
[03:08:18.220]        // =>  TRUE
[03:08:18.220]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:18.220]        // if-block "isSWJ"
[03:08:18.220]          // =>  TRUE
[03:08:18.220]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:18.220]          // if-block "hasDormant"
[03:08:18.220]            // =>  FALSE
[03:08:18.220]          // skip if-block "hasDormant"
[03:08:18.220]        </control>
[03:08:18.220]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:18.220]          // if-block "!hasDormant"
[03:08:18.221]            // =>  TRUE
[03:08:18.221]          <block atomic="false" info="">
[03:08:18.221]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:19.224]  
[03:08:19.224]  !!! E320 : DAP access error
[03:08:19.224]  
[03:08:19.232]          </block>
[03:08:19.232]          // end if-block "!hasDormant"
[03:08:19.232]        </control>
[03:08:19.232]        // end if-block "isSWJ"
[03:08:19.232]      </control>
[03:08:19.232]      // end if-block "protType == 2"
[03:08:19.232]    </control>
[03:08:19.232]  </sequence>
[03:08:19.232]  
[03:08:19.492]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:19.492]  
[03:08:19.502]  <debugvars>
[03:08:19.502]    // Pre-defined
[03:08:19.502]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:19.502]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:19.502]    __dp=0x00000000
[03:08:19.502]    __ap=0x00000000
[03:08:19.502]    __traceout=0x00000000      (Trace Disabled)
[03:08:19.502]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:19.502]    __FlashAddr=0x00000000
[03:08:19.502]    __FlashLen=0x00000000
[03:08:19.502]    __FlashArg=0x00000000
[03:08:19.502]    __FlashOp=0x00000000
[03:08:19.502]    __Result=0x00000000
[03:08:19.502]  </debugvars>
[03:08:19.502]  
[03:08:19.502]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:19.502]    <block atomic="false" info="">
[03:08:19.502]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:19.502]        // -> [isSWJ <= 0x00000001]
[03:08:19.504]      __var hasDormant = __protocol & 0x00020000;
[03:08:19.504]        // -> [hasDormant <= 0x00000000]
[03:08:19.504]      __var protType   = __protocol & 0x0000FFFF;
[03:08:19.504]        // -> [protType <= 0x00000002]
[03:08:19.504]    </block>
[03:08:19.504]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:19.504]      // if-block "protType == 1"
[03:08:19.504]        // =>  FALSE
[03:08:19.504]      // skip if-block "protType == 1"
[03:08:19.504]    </control>
[03:08:19.504]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:19.504]      // if-block "protType == 2"
[03:08:19.504]        // =>  TRUE
[03:08:19.504]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:19.504]        // if-block "isSWJ"
[03:08:19.504]          // =>  TRUE
[03:08:19.504]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:19.504]          // if-block "hasDormant"
[03:08:19.504]            // =>  FALSE
[03:08:19.504]          // skip if-block "hasDormant"
[03:08:19.504]        </control>
[03:08:19.504]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:19.504]          // if-block "!hasDormant"
[03:08:19.504]            // =>  TRUE
[03:08:19.504]          <block atomic="false" info="">
[03:08:19.504]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:20.514]  
[03:08:20.514]  !!! E320 : DAP access error
[03:08:20.514]  
[03:08:20.522]          </block>
[03:08:20.522]          // end if-block "!hasDormant"
[03:08:20.522]        </control>
[03:08:20.522]        // end if-block "isSWJ"
[03:08:20.522]      </control>
[03:08:20.522]      // end if-block "protType == 2"
[03:08:20.522]    </control>
[03:08:20.522]  </sequence>
[03:08:20.522]  
[03:08:20.774]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:20.774]  
[03:08:20.782]  <debugvars>
[03:08:20.782]    // Pre-defined
[03:08:20.782]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:20.782]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:20.782]    __dp=0x00000000
[03:08:20.782]    __ap=0x00000000
[03:08:20.782]    __traceout=0x00000000      (Trace Disabled)
[03:08:20.782]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:20.782]    __FlashAddr=0x00000000
[03:08:20.782]    __FlashLen=0x00000000
[03:08:20.782]    __FlashArg=0x00000000
[03:08:20.782]    __FlashOp=0x00000000
[03:08:20.782]    __Result=0x00000000
[03:08:20.782]  </debugvars>
[03:08:20.782]  
[03:08:20.782]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:20.782]    <block atomic="false" info="">
[03:08:20.782]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:20.782]        // -> [isSWJ <= 0x00000001]
[03:08:20.782]      __var hasDormant = __protocol & 0x00020000;
[03:08:20.782]        // -> [hasDormant <= 0x00000000]
[03:08:20.782]      __var protType   = __protocol & 0x0000FFFF;
[03:08:20.782]        // -> [protType <= 0x00000002]
[03:08:20.782]    </block>
[03:08:20.782]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:20.784]      // if-block "protType == 1"
[03:08:20.784]        // =>  FALSE
[03:08:20.784]      // skip if-block "protType == 1"
[03:08:20.784]    </control>
[03:08:20.784]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:20.784]      // if-block "protType == 2"
[03:08:20.784]        // =>  TRUE
[03:08:20.784]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:20.784]        // if-block "isSWJ"
[03:08:20.784]          // =>  TRUE
[03:08:20.784]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:20.784]          // if-block "hasDormant"
[03:08:20.784]            // =>  FALSE
[03:08:20.784]          // skip if-block "hasDormant"
[03:08:20.784]        </control>
[03:08:20.786]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:20.786]          // if-block "!hasDormant"
[03:08:20.786]            // =>  TRUE
[03:08:20.786]          <block atomic="false" info="">
[03:08:20.786]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:21.791]  
[03:08:21.791]  !!! E320 : DAP access error
[03:08:21.791]  
[03:08:21.791]          </block>
[03:08:21.791]          // end if-block "!hasDormant"
[03:08:21.791]        </control>
[03:08:21.791]        // end if-block "isSWJ"
[03:08:21.791]      </control>
[03:08:21.791]      // end if-block "protType == 2"
[03:08:21.791]    </control>
[03:08:21.791]  </sequence>
[03:08:21.791]  
[03:08:22.049]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:22.049]  
[03:08:22.058]  <debugvars>
[03:08:22.058]    // Pre-defined
[03:08:22.058]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:22.058]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:22.058]    __dp=0x00000000
[03:08:22.058]    __ap=0x00000000
[03:08:22.058]    __traceout=0x00000000      (Trace Disabled)
[03:08:22.058]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:22.058]    __FlashAddr=0x00000000
[03:08:22.058]    __FlashLen=0x00000000
[03:08:22.058]    __FlashArg=0x00000000
[03:08:22.058]    __FlashOp=0x00000000
[03:08:22.058]    __Result=0x00000000
[03:08:22.058]  </debugvars>
[03:08:22.058]  
[03:08:22.058]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:22.058]    <block atomic="false" info="">
[03:08:22.058]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:22.058]        // -> [isSWJ <= 0x00000001]
[03:08:22.058]      __var hasDormant = __protocol & 0x00020000;
[03:08:22.061]        // -> [hasDormant <= 0x00000000]
[03:08:22.061]      __var protType   = __protocol & 0x0000FFFF;
[03:08:22.061]        // -> [protType <= 0x00000002]
[03:08:22.061]    </block>
[03:08:22.061]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:22.061]      // if-block "protType == 1"
[03:08:22.061]        // =>  FALSE
[03:08:22.061]      // skip if-block "protType == 1"
[03:08:22.061]    </control>
[03:08:22.061]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:22.061]      // if-block "protType == 2"
[03:08:22.061]        // =>  TRUE
[03:08:22.061]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:22.061]        // if-block "isSWJ"
[03:08:22.061]          // =>  TRUE
[03:08:22.061]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:22.061]          // if-block "hasDormant"
[03:08:22.061]            // =>  FALSE
[03:08:22.061]          // skip if-block "hasDormant"
[03:08:22.061]        </control>
[03:08:22.061]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:22.061]          // if-block "!hasDormant"
[03:08:22.061]            // =>  TRUE
[03:08:22.061]          <block atomic="false" info="">
[03:08:22.061]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:23.064]  
[03:08:23.064]  !!! E320 : DAP access error
[03:08:23.064]  
[03:08:23.072]          </block>
[03:08:23.072]          // end if-block "!hasDormant"
[03:08:23.072]        </control>
[03:08:23.072]        // end if-block "isSWJ"
[03:08:23.072]      </control>
[03:08:23.072]      // end if-block "protType == 2"
[03:08:23.072]    </control>
[03:08:23.072]  </sequence>
[03:08:23.072]  
[03:08:23.323]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:23.323]  
[03:08:23.333]  <debugvars>
[03:08:23.333]    // Pre-defined
[03:08:23.333]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:23.333]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:23.333]    __dp=0x00000000
[03:08:23.333]    __ap=0x00000000
[03:08:23.333]    __traceout=0x00000000      (Trace Disabled)
[03:08:23.333]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:23.333]    __FlashAddr=0x00000000
[03:08:23.333]    __FlashLen=0x00000000
[03:08:23.333]    __FlashArg=0x00000000
[03:08:23.333]    __FlashOp=0x00000000
[03:08:23.333]    __Result=0x00000000
[03:08:23.333]  </debugvars>
[03:08:23.333]  
[03:08:23.333]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:23.333]    <block atomic="false" info="">
[03:08:23.333]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:23.333]        // -> [isSWJ <= 0x00000001]
[03:08:23.333]      __var hasDormant = __protocol & 0x00020000;
[03:08:23.333]        // -> [hasDormant <= 0x00000000]
[03:08:23.333]      __var protType   = __protocol & 0x0000FFFF;
[03:08:23.333]        // -> [protType <= 0x00000002]
[03:08:23.333]    </block>
[03:08:23.336]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:23.336]      // if-block "protType == 1"
[03:08:23.336]        // =>  FALSE
[03:08:23.336]      // skip if-block "protType == 1"
[03:08:23.336]    </control>
[03:08:23.336]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:23.336]      // if-block "protType == 2"
[03:08:23.336]        // =>  TRUE
[03:08:23.336]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:23.336]        // if-block "isSWJ"
[03:08:23.336]          // =>  TRUE
[03:08:23.336]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:23.336]          // if-block "hasDormant"
[03:08:23.338]            // =>  FALSE
[03:08:23.338]          // skip if-block "hasDormant"
[03:08:23.338]        </control>
[03:08:23.338]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:23.338]          // if-block "!hasDormant"
[03:08:23.338]            // =>  TRUE
[03:08:23.338]          <block atomic="false" info="">
[03:08:23.338]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:24.346]  
[03:08:24.346]  !!! E320 : DAP access error
[03:08:24.346]  
[03:08:24.354]          </block>
[03:08:24.354]          // end if-block "!hasDormant"
[03:08:24.354]        </control>
[03:08:24.354]        // end if-block "isSWJ"
[03:08:24.354]      </control>
[03:08:24.354]      // end if-block "protType == 2"
[03:08:24.354]    </control>
[03:08:24.354]  </sequence>
[03:08:24.354]  
[03:08:24.614]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:24.614]  
[03:08:24.624]  <debugvars>
[03:08:24.624]    // Pre-defined
[03:08:24.624]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:24.624]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:24.624]    __dp=0x00000000
[03:08:24.624]    __ap=0x00000000
[03:08:24.624]    __traceout=0x00000000      (Trace Disabled)
[03:08:24.624]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:24.624]    __FlashAddr=0x00000000
[03:08:24.624]    __FlashLen=0x00000000
[03:08:24.624]    __FlashArg=0x00000000
[03:08:24.624]    __FlashOp=0x00000000
[03:08:24.624]    __Result=0x00000000
[03:08:24.624]  </debugvars>
[03:08:24.626]  
[03:08:24.626]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:24.626]    <block atomic="false" info="">
[03:08:24.626]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:24.626]        // -> [isSWJ <= 0x00000001]
[03:08:24.626]      __var hasDormant = __protocol & 0x00020000;
[03:08:24.626]        // -> [hasDormant <= 0x00000000]
[03:08:24.626]      __var protType   = __protocol & 0x0000FFFF;
[03:08:24.626]        // -> [protType <= 0x00000002]
[03:08:24.626]    </block>
[03:08:24.626]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:24.626]      // if-block "protType == 1"
[03:08:24.626]        // =>  FALSE
[03:08:24.626]      // skip if-block "protType == 1"
[03:08:24.626]    </control>
[03:08:24.626]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:24.626]      // if-block "protType == 2"
[03:08:24.626]        // =>  TRUE
[03:08:24.629]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:24.629]        // if-block "isSWJ"
[03:08:24.629]          // =>  TRUE
[03:08:24.629]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:24.629]          // if-block "hasDormant"
[03:08:24.629]            // =>  FALSE
[03:08:24.629]          // skip if-block "hasDormant"
[03:08:24.629]        </control>
[03:08:24.629]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:24.629]          // if-block "!hasDormant"
[03:08:24.629]            // =>  TRUE
[03:08:24.629]          <block atomic="false" info="">
[03:08:24.629]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:25.631]  
[03:08:25.631]  !!! E320 : DAP access error
[03:08:25.631]  
[03:08:25.639]          </block>
[03:08:25.639]          // end if-block "!hasDormant"
[03:08:25.639]        </control>
[03:08:25.639]        // end if-block "isSWJ"
[03:08:25.639]      </control>
[03:08:25.639]      // end if-block "protType == 2"
[03:08:25.639]    </control>
[03:08:25.639]  </sequence>
[03:08:25.639]  
[03:08:25.898]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:25.898]  
[03:08:25.906]  <debugvars>
[03:08:25.906]    // Pre-defined
[03:08:25.906]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:25.906]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:25.906]    __dp=0x00000000
[03:08:25.906]    __ap=0x00000000
[03:08:25.906]    __traceout=0x00000000      (Trace Disabled)
[03:08:25.906]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:25.906]    __FlashAddr=0x00000000
[03:08:25.906]    __FlashLen=0x00000000
[03:08:25.906]    __FlashArg=0x00000000
[03:08:25.906]    __FlashOp=0x00000000
[03:08:25.906]    __Result=0x00000000
[03:08:25.906]  </debugvars>
[03:08:25.906]  
[03:08:25.906]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:25.906]    <block atomic="false" info="">
[03:08:25.906]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:25.906]        // -> [isSWJ <= 0x00000001]
[03:08:25.906]      __var hasDormant = __protocol & 0x00020000;
[03:08:25.906]        // -> [hasDormant <= 0x00000000]
[03:08:25.906]      __var protType   = __protocol & 0x0000FFFF;
[03:08:25.906]        // -> [protType <= 0x00000002]
[03:08:25.906]    </block>
[03:08:25.906]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:25.906]      // if-block "protType == 1"
[03:08:25.906]        // =>  FALSE
[03:08:25.906]      // skip if-block "protType == 1"
[03:08:25.906]    </control>
[03:08:25.906]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:25.906]      // if-block "protType == 2"
[03:08:25.906]        // =>  TRUE
[03:08:25.906]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:25.906]        // if-block "isSWJ"
[03:08:25.906]          // =>  TRUE
[03:08:25.906]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:25.906]          // if-block "hasDormant"
[03:08:25.906]            // =>  FALSE
[03:08:25.910]          // skip if-block "hasDormant"
[03:08:25.910]        </control>
[03:08:25.910]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:25.910]          // if-block "!hasDormant"
[03:08:25.910]            // =>  TRUE
[03:08:25.910]          <block atomic="false" info="">
[03:08:25.910]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:26.916]  
[03:08:26.916]  !!! E320 : DAP access error
[03:08:26.916]  
[03:08:26.925]          </block>
[03:08:26.925]          // end if-block "!hasDormant"
[03:08:26.925]        </control>
[03:08:26.925]        // end if-block "isSWJ"
[03:08:26.925]      </control>
[03:08:26.925]      // end if-block "protType == 2"
[03:08:26.925]    </control>
[03:08:26.925]  </sequence>
[03:08:26.925]  
[03:08:27.182]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:27.182]  
[03:08:27.182]  <debugvars>
[03:08:27.182]    // Pre-defined
[03:08:27.182]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:27.182]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:27.182]    __dp=0x00000000
[03:08:27.182]    __ap=0x00000000
[03:08:27.182]    __traceout=0x00000000      (Trace Disabled)
[03:08:27.182]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:27.182]    __FlashAddr=0x00000000
[03:08:27.182]    __FlashLen=0x00000000
[03:08:27.182]    __FlashArg=0x00000000
[03:08:27.182]    __FlashOp=0x00000000
[03:08:27.182]    __Result=0x00000000
[03:08:27.182]  </debugvars>
[03:08:27.182]  
[03:08:27.182]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:27.182]    <block atomic="false" info="">
[03:08:27.182]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:27.182]        // -> [isSWJ <= 0x00000001]
[03:08:27.182]      __var hasDormant = __protocol & 0x00020000;
[03:08:27.182]        // -> [hasDormant <= 0x00000000]
[03:08:27.182]      __var protType   = __protocol & 0x0000FFFF;
[03:08:27.182]        // -> [protType <= 0x00000002]
[03:08:27.182]    </block>
[03:08:27.182]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:27.182]      // if-block "protType == 1"
[03:08:27.182]        // =>  FALSE
[03:08:27.182]      // skip if-block "protType == 1"
[03:08:27.182]    </control>
[03:08:27.182]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:27.186]      // if-block "protType == 2"
[03:08:27.186]        // =>  TRUE
[03:08:27.186]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:27.186]        // if-block "isSWJ"
[03:08:27.186]          // =>  TRUE
[03:08:27.186]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:27.186]          // if-block "hasDormant"
[03:08:27.186]            // =>  FALSE
[03:08:27.186]          // skip if-block "hasDormant"
[03:08:27.186]        </control>
[03:08:27.186]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:27.186]          // if-block "!hasDormant"
[03:08:27.186]            // =>  TRUE
[03:08:27.186]          <block atomic="false" info="">
[03:08:27.186]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:28.196]  
[03:08:28.196]  !!! E320 : DAP access error
[03:08:28.196]  
[03:08:28.196]          </block>
[03:08:28.196]          // end if-block "!hasDormant"
[03:08:28.196]        </control>
[03:08:28.196]        // end if-block "isSWJ"
[03:08:28.196]      </control>
[03:08:28.196]      // end if-block "protType == 2"
[03:08:28.196]    </control>
[03:08:28.196]  </sequence>
[03:08:28.196]  
[03:08:28.456]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:28.456]  
[03:08:28.464]  <debugvars>
[03:08:28.464]    // Pre-defined
[03:08:28.464]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:28.464]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:28.464]    __dp=0x00000000
[03:08:28.464]    __ap=0x00000000
[03:08:28.464]    __traceout=0x00000000      (Trace Disabled)
[03:08:28.464]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:28.464]    __FlashAddr=0x00000000
[03:08:28.464]    __FlashLen=0x00000000
[03:08:28.464]    __FlashArg=0x00000000
[03:08:28.464]    __FlashOp=0x00000000
[03:08:28.464]    __Result=0x00000000
[03:08:28.464]  </debugvars>
[03:08:28.464]  
[03:08:28.464]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:28.464]    <block atomic="false" info="">
[03:08:28.464]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:28.464]        // -> [isSWJ <= 0x00000001]
[03:08:28.464]      __var hasDormant = __protocol & 0x00020000;
[03:08:28.464]        // -> [hasDormant <= 0x00000000]
[03:08:28.464]      __var protType   = __protocol & 0x0000FFFF;
[03:08:28.464]        // -> [protType <= 0x00000002]
[03:08:28.464]    </block>
[03:08:28.464]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:28.464]      // if-block "protType == 1"
[03:08:28.464]        // =>  FALSE
[03:08:28.464]      // skip if-block "protType == 1"
[03:08:28.464]    </control>
[03:08:28.464]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:28.464]      // if-block "protType == 2"
[03:08:28.464]        // =>  TRUE
[03:08:28.464]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:28.468]        // if-block "isSWJ"
[03:08:28.468]          // =>  TRUE
[03:08:28.468]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:28.468]          // if-block "hasDormant"
[03:08:28.468]            // =>  FALSE
[03:08:28.468]          // skip if-block "hasDormant"
[03:08:28.468]        </control>
[03:08:28.468]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:28.468]          // if-block "!hasDormant"
[03:08:28.468]            // =>  TRUE
[03:08:28.468]          <block atomic="false" info="">
[03:08:28.468]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:29.473]  
[03:08:29.473]  !!! E320 : DAP access error
[03:08:29.473]  
[03:08:29.473]          </block>
[03:08:29.473]          // end if-block "!hasDormant"
[03:08:29.473]        </control>
[03:08:29.473]        // end if-block "isSWJ"
[03:08:29.473]      </control>
[03:08:29.473]      // end if-block "protType == 2"
[03:08:29.473]    </control>
[03:08:29.473]  </sequence>
[03:08:29.473]  
[03:08:29.729]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:29.729]  
[03:08:29.737]  <debugvars>
[03:08:29.737]    // Pre-defined
[03:08:29.737]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:29.737]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:29.737]    __dp=0x00000000
[03:08:29.737]    __ap=0x00000000
[03:08:29.737]    __traceout=0x00000000      (Trace Disabled)
[03:08:29.737]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:29.737]    __FlashAddr=0x00000000
[03:08:29.737]    __FlashLen=0x00000000
[03:08:29.737]    __FlashArg=0x00000000
[03:08:29.737]    __FlashOp=0x00000000
[03:08:29.737]    __Result=0x00000000
[03:08:29.737]  </debugvars>
[03:08:29.737]  
[03:08:29.737]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:29.737]    <block atomic="false" info="">
[03:08:29.737]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:29.737]        // -> [isSWJ <= 0x00000001]
[03:08:29.737]      __var hasDormant = __protocol & 0x00020000;
[03:08:29.737]        // -> [hasDormant <= 0x00000000]
[03:08:29.737]      __var protType   = __protocol & 0x0000FFFF;
[03:08:29.737]        // -> [protType <= 0x00000002]
[03:08:29.737]    </block>
[03:08:29.737]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:29.737]      // if-block "protType == 1"
[03:08:29.737]        // =>  FALSE
[03:08:29.737]      // skip if-block "protType == 1"
[03:08:29.737]    </control>
[03:08:29.741]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:29.741]      // if-block "protType == 2"
[03:08:29.741]        // =>  TRUE
[03:08:29.741]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:29.741]        // if-block "isSWJ"
[03:08:29.741]          // =>  TRUE
[03:08:29.741]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:29.741]          // if-block "hasDormant"
[03:08:29.741]            // =>  FALSE
[03:08:29.741]          // skip if-block "hasDormant"
[03:08:29.741]        </control>
[03:08:29.741]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:29.741]          // if-block "!hasDormant"
[03:08:29.741]            // =>  TRUE
[03:08:29.741]          <block atomic="false" info="">
[03:08:29.741]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:30.746]  
[03:08:30.746]  !!! E320 : DAP access error
[03:08:30.746]  
[03:08:30.755]          </block>
[03:08:30.755]          // end if-block "!hasDormant"
[03:08:30.755]        </control>
[03:08:30.755]        // end if-block "isSWJ"
[03:08:30.755]      </control>
[03:08:30.755]      // end if-block "protType == 2"
[03:08:30.755]    </control>
[03:08:30.755]  </sequence>
[03:08:30.755]  
[03:08:31.012]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:31.012]  
[03:08:31.021]  <debugvars>
[03:08:31.021]    // Pre-defined
[03:08:31.021]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:31.021]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:31.021]    __dp=0x00000000
[03:08:31.021]    __ap=0x00000000
[03:08:31.021]    __traceout=0x00000000      (Trace Disabled)
[03:08:31.021]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:31.021]    __FlashAddr=0x00000000
[03:08:31.021]    __FlashLen=0x00000000
[03:08:31.021]    __FlashArg=0x00000000
[03:08:31.021]    __FlashOp=0x00000000
[03:08:31.021]    __Result=0x00000000
[03:08:31.021]  </debugvars>
[03:08:31.021]  
[03:08:31.021]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:31.021]    <block atomic="false" info="">
[03:08:31.021]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:31.021]        // -> [isSWJ <= 0x00000001]
[03:08:31.021]      __var hasDormant = __protocol & 0x00020000;
[03:08:31.021]        // -> [hasDormant <= 0x00000000]
[03:08:31.021]      __var protType   = __protocol & 0x0000FFFF;
[03:08:31.021]        // -> [protType <= 0x00000002]
[03:08:31.021]    </block>
[03:08:31.021]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:31.021]      // if-block "protType == 1"
[03:08:31.021]        // =>  FALSE
[03:08:31.021]      // skip if-block "protType == 1"
[03:08:31.021]    </control>
[03:08:31.021]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:31.021]      // if-block "protType == 2"
[03:08:31.021]        // =>  TRUE
[03:08:31.024]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:31.024]        // if-block "isSWJ"
[03:08:31.024]          // =>  TRUE
[03:08:31.024]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:31.024]          // if-block "hasDormant"
[03:08:31.024]            // =>  FALSE
[03:08:31.024]          // skip if-block "hasDormant"
[03:08:31.026]        </control>
[03:08:31.026]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:31.026]          // if-block "!hasDormant"
[03:08:31.026]            // =>  TRUE
[03:08:31.026]          <block atomic="false" info="">
[03:08:31.026]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:32.031]  
[03:08:32.031]  !!! E320 : DAP access error
[03:08:32.031]  
[03:08:32.039]          </block>
[03:08:32.039]          // end if-block "!hasDormant"
[03:08:32.039]        </control>
[03:08:32.039]        // end if-block "isSWJ"
[03:08:32.039]      </control>
[03:08:32.039]      // end if-block "protType == 2"
[03:08:32.039]    </control>
[03:08:32.039]  </sequence>
[03:08:32.039]  
[03:08:32.298]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:32.298]  
[03:08:32.298]  <debugvars>
[03:08:32.298]    // Pre-defined
[03:08:32.298]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:32.298]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:32.298]    __dp=0x00000000
[03:08:32.299]    __ap=0x00000000
[03:08:32.299]    __traceout=0x00000000      (Trace Disabled)
[03:08:32.299]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:32.299]    __FlashAddr=0x00000000
[03:08:32.299]    __FlashLen=0x00000000
[03:08:32.300]    __FlashArg=0x00000000
[03:08:32.300]    __FlashOp=0x00000000
[03:08:32.300]    __Result=0x00000000
[03:08:32.300]  </debugvars>
[03:08:32.300]  
[03:08:32.300]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:32.300]    <block atomic="false" info="">
[03:08:32.300]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:32.300]        // -> [isSWJ <= 0x00000001]
[03:08:32.300]      __var hasDormant = __protocol & 0x00020000;
[03:08:32.300]        // -> [hasDormant <= 0x00000000]
[03:08:32.300]      __var protType   = __protocol & 0x0000FFFF;
[03:08:32.300]        // -> [protType <= 0x00000002]
[03:08:32.300]    </block>
[03:08:32.300]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:32.300]      // if-block "protType == 1"
[03:08:32.300]        // =>  FALSE
[03:08:32.300]      // skip if-block "protType == 1"
[03:08:32.300]    </control>
[03:08:32.300]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:32.300]      // if-block "protType == 2"
[03:08:32.300]        // =>  TRUE
[03:08:32.302]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:32.302]        // if-block "isSWJ"
[03:08:32.302]          // =>  TRUE
[03:08:32.302]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:32.302]          // if-block "hasDormant"
[03:08:32.302]            // =>  FALSE
[03:08:32.302]          // skip if-block "hasDormant"
[03:08:32.302]        </control>
[03:08:32.302]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:32.302]          // if-block "!hasDormant"
[03:08:32.302]            // =>  TRUE
[03:08:32.302]          <block atomic="false" info="">
[03:08:32.302]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:33.308]  
[03:08:33.308]  !!! E320 : DAP access error
[03:08:33.308]  
[03:08:33.316]          </block>
[03:08:33.316]          // end if-block "!hasDormant"
[03:08:33.316]        </control>
[03:08:33.316]        // end if-block "isSWJ"
[03:08:33.316]      </control>
[03:08:33.316]      // end if-block "protType == 2"
[03:08:33.316]    </control>
[03:08:33.316]  </sequence>
[03:08:33.316]  
[03:08:33.576]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:33.576]  
[03:08:33.576]  <debugvars>
[03:08:33.576]    // Pre-defined
[03:08:33.576]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:33.576]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:33.576]    __dp=0x00000000
[03:08:33.576]    __ap=0x00000000
[03:08:33.576]    __traceout=0x00000000      (Trace Disabled)
[03:08:33.576]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:33.576]    __FlashAddr=0x00000000
[03:08:33.576]    __FlashLen=0x00000000
[03:08:33.576]    __FlashArg=0x00000000
[03:08:33.576]    __FlashOp=0x00000000
[03:08:33.576]    __Result=0x00000000
[03:08:33.576]  </debugvars>
[03:08:33.576]  
[03:08:33.576]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:33.576]    <block atomic="false" info="">
[03:08:33.576]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:33.576]        // -> [isSWJ <= 0x00000001]
[03:08:33.576]      __var hasDormant = __protocol & 0x00020000;
[03:08:33.576]        // -> [hasDormant <= 0x00000000]
[03:08:33.576]      __var protType   = __protocol & 0x0000FFFF;
[03:08:33.576]        // -> [protType <= 0x00000002]
[03:08:33.576]    </block>
[03:08:33.576]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:33.576]      // if-block "protType == 1"
[03:08:33.576]        // =>  FALSE
[03:08:33.576]      // skip if-block "protType == 1"
[03:08:33.576]    </control>
[03:08:33.576]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:33.576]      // if-block "protType == 2"
[03:08:33.580]        // =>  TRUE
[03:08:33.580]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:33.580]        // if-block "isSWJ"
[03:08:33.580]          // =>  TRUE
[03:08:33.580]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:33.580]          // if-block "hasDormant"
[03:08:33.580]            // =>  FALSE
[03:08:33.580]          // skip if-block "hasDormant"
[03:08:33.580]        </control>
[03:08:33.580]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:33.580]          // if-block "!hasDormant"
[03:08:33.580]            // =>  TRUE
[03:08:33.580]          <block atomic="false" info="">
[03:08:33.580]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:34.586]  
[03:08:34.586]  !!! E320 : DAP access error
[03:08:34.586]  
[03:08:34.586]          </block>
[03:08:34.586]          // end if-block "!hasDormant"
[03:08:34.587]        </control>
[03:08:34.587]        // end if-block "isSWJ"
[03:08:34.587]      </control>
[03:08:34.587]      // end if-block "protType == 2"
[03:08:34.587]    </control>
[03:08:34.589]  </sequence>
[03:08:34.589]  
[03:08:34.847]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:34.847]  
[03:08:34.856]  <debugvars>
[03:08:34.856]    // Pre-defined
[03:08:34.856]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:34.856]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:34.856]    __dp=0x00000000
[03:08:34.856]    __ap=0x00000000
[03:08:34.856]    __traceout=0x00000000      (Trace Disabled)
[03:08:34.856]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:34.856]    __FlashAddr=0x00000000
[03:08:34.856]    __FlashLen=0x00000000
[03:08:34.856]    __FlashArg=0x00000000
[03:08:34.856]    __FlashOp=0x00000000
[03:08:34.856]    __Result=0x00000000
[03:08:34.856]  </debugvars>
[03:08:34.856]  
[03:08:34.856]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:34.856]    <block atomic="false" info="">
[03:08:34.856]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:34.856]        // -> [isSWJ <= 0x00000001]
[03:08:34.856]      __var hasDormant = __protocol & 0x00020000;
[03:08:34.856]        // -> [hasDormant <= 0x00000000]
[03:08:34.856]      __var protType   = __protocol & 0x0000FFFF;
[03:08:34.856]        // -> [protType <= 0x00000002]
[03:08:34.856]    </block>
[03:08:34.856]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:34.859]      // if-block "protType == 1"
[03:08:34.859]        // =>  FALSE
[03:08:34.859]      // skip if-block "protType == 1"
[03:08:34.859]    </control>
[03:08:34.859]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:34.859]      // if-block "protType == 2"
[03:08:34.859]        // =>  TRUE
[03:08:34.859]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:34.860]        // if-block "isSWJ"
[03:08:34.860]          // =>  TRUE
[03:08:34.860]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:34.860]          // if-block "hasDormant"
[03:08:34.860]            // =>  FALSE
[03:08:34.860]          // skip if-block "hasDormant"
[03:08:34.860]        </control>
[03:08:34.860]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:34.860]          // if-block "!hasDormant"
[03:08:34.860]            // =>  TRUE
[03:08:34.860]          <block atomic="false" info="">
[03:08:34.860]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:35.869]  
[03:08:35.869]  !!! E320 : DAP access error
[03:08:35.869]  
[03:08:35.878]          </block>
[03:08:35.878]          // end if-block "!hasDormant"
[03:08:35.878]        </control>
[03:08:35.878]        // end if-block "isSWJ"
[03:08:35.878]      </control>
[03:08:35.878]      // end if-block "protType == 2"
[03:08:35.878]    </control>
[03:08:35.878]  </sequence>
[03:08:35.878]  
[03:08:36.129]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:36.129]  
[03:08:36.139]  <debugvars>
[03:08:36.139]    // Pre-defined
[03:08:36.139]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:36.139]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:36.139]    __dp=0x00000000
[03:08:36.139]    __ap=0x00000000
[03:08:36.139]    __traceout=0x00000000      (Trace Disabled)
[03:08:36.139]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:36.139]    __FlashAddr=0x00000000
[03:08:36.139]    __FlashLen=0x00000000
[03:08:36.141]    __FlashArg=0x00000000
[03:08:36.141]    __FlashOp=0x00000000
[03:08:36.141]    __Result=0x00000000
[03:08:36.141]  </debugvars>
[03:08:36.141]  
[03:08:36.141]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:36.141]    <block atomic="false" info="">
[03:08:36.141]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:36.141]        // -> [isSWJ <= 0x00000001]
[03:08:36.142]      __var hasDormant = __protocol & 0x00020000;
[03:08:36.142]        // -> [hasDormant <= 0x00000000]
[03:08:36.142]      __var protType   = __protocol & 0x0000FFFF;
[03:08:36.142]        // -> [protType <= 0x00000002]
[03:08:36.142]    </block>
[03:08:36.142]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:36.142]      // if-block "protType == 1"
[03:08:36.142]        // =>  FALSE
[03:08:36.142]      // skip if-block "protType == 1"
[03:08:36.142]    </control>
[03:08:36.142]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:36.142]      // if-block "protType == 2"
[03:08:36.142]        // =>  TRUE
[03:08:36.142]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:36.142]        // if-block "isSWJ"
[03:08:36.143]          // =>  TRUE
[03:08:36.143]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:36.143]          // if-block "hasDormant"
[03:08:36.143]            // =>  FALSE
[03:08:36.143]          // skip if-block "hasDormant"
[03:08:36.143]        </control>
[03:08:36.143]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:36.143]          // if-block "!hasDormant"
[03:08:36.143]            // =>  TRUE
[03:08:36.143]          <block atomic="false" info="">
[03:08:36.143]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:37.154]  
[03:08:37.154]  !!! E320 : DAP access error
[03:08:37.154]  
[03:08:37.154]          </block>
[03:08:37.154]          // end if-block "!hasDormant"
[03:08:37.154]        </control>
[03:08:37.154]        // end if-block "isSWJ"
[03:08:37.154]      </control>
[03:08:37.154]      // end if-block "protType == 2"
[03:08:37.154]    </control>
[03:08:37.154]  </sequence>
[03:08:37.154]  
[03:08:37.408]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:37.408]  
[03:08:37.411]  <debugvars>
[03:08:37.411]    // Pre-defined
[03:08:37.411]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:37.411]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:37.411]    __dp=0x00000000
[03:08:37.411]    __ap=0x00000000
[03:08:37.411]    __traceout=0x00000000      (Trace Disabled)
[03:08:37.411]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:37.411]    __FlashAddr=0x00000000
[03:08:37.411]    __FlashLen=0x00000000
[03:08:37.411]    __FlashArg=0x00000000
[03:08:37.411]    __FlashOp=0x00000000
[03:08:37.411]    __Result=0x00000000
[03:08:37.411]  </debugvars>
[03:08:37.411]  
[03:08:37.411]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:37.411]    <block atomic="false" info="">
[03:08:37.411]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:37.411]        // -> [isSWJ <= 0x00000001]
[03:08:37.411]      __var hasDormant = __protocol & 0x00020000;
[03:08:37.413]        // -> [hasDormant <= 0x00000000]
[03:08:37.413]      __var protType   = __protocol & 0x0000FFFF;
[03:08:37.413]        // -> [protType <= 0x00000002]
[03:08:37.413]    </block>
[03:08:37.413]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:37.413]      // if-block "protType == 1"
[03:08:37.413]        // =>  FALSE
[03:08:37.413]      // skip if-block "protType == 1"
[03:08:37.413]    </control>
[03:08:37.413]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:37.413]      // if-block "protType == 2"
[03:08:37.413]        // =>  TRUE
[03:08:37.413]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:37.413]        // if-block "isSWJ"
[03:08:37.413]          // =>  TRUE
[03:08:37.413]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:37.413]          // if-block "hasDormant"
[03:08:37.413]            // =>  FALSE
[03:08:37.413]          // skip if-block "hasDormant"
[03:08:37.413]        </control>
[03:08:37.413]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:37.413]          // if-block "!hasDormant"
[03:08:37.413]            // =>  TRUE
[03:08:37.413]          <block atomic="false" info="">
[03:08:37.413]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:38.424]  
[03:08:38.424]  !!! E320 : DAP access error
[03:08:38.424]  
[03:08:38.424]          </block>
[03:08:38.424]          // end if-block "!hasDormant"
[03:08:38.424]        </control>
[03:08:38.424]        // end if-block "isSWJ"
[03:08:38.424]      </control>
[03:08:38.424]      // end if-block "protType == 2"
[03:08:38.424]    </control>
[03:08:38.424]  </sequence>
[03:08:38.424]  
[03:08:38.677]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:38.677]  
[03:08:38.677]  <debugvars>
[03:08:38.677]    // Pre-defined
[03:08:38.677]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:38.679]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:38.679]    __dp=0x00000000
[03:08:38.679]    __ap=0x00000000
[03:08:38.679]    __traceout=0x00000000      (Trace Disabled)
[03:08:38.679]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:38.679]    __FlashAddr=0x00000000
[03:08:38.679]    __FlashLen=0x00000000
[03:08:38.679]    __FlashArg=0x00000000
[03:08:38.679]    __FlashOp=0x00000000
[03:08:38.679]    __Result=0x00000000
[03:08:38.679]  </debugvars>
[03:08:38.679]  
[03:08:38.679]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:38.679]    <block atomic="false" info="">
[03:08:38.679]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:38.679]        // -> [isSWJ <= 0x00000001]
[03:08:38.679]      __var hasDormant = __protocol & 0x00020000;
[03:08:38.679]        // -> [hasDormant <= 0x00000000]
[03:08:38.679]      __var protType   = __protocol & 0x0000FFFF;
[03:08:38.679]        // -> [protType <= 0x00000002]
[03:08:38.679]    </block>
[03:08:38.679]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:38.681]      // if-block "protType == 1"
[03:08:38.681]        // =>  FALSE
[03:08:38.681]      // skip if-block "protType == 1"
[03:08:38.681]    </control>
[03:08:38.681]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:38.681]      // if-block "protType == 2"
[03:08:38.681]        // =>  TRUE
[03:08:38.681]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:38.681]        // if-block "isSWJ"
[03:08:38.681]          // =>  TRUE
[03:08:38.681]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:38.681]          // if-block "hasDormant"
[03:08:38.681]            // =>  FALSE
[03:08:38.681]          // skip if-block "hasDormant"
[03:08:38.681]        </control>
[03:08:38.681]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:38.681]          // if-block "!hasDormant"
[03:08:38.681]            // =>  TRUE
[03:08:38.681]          <block atomic="false" info="">
[03:08:38.681]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:39.691]  
[03:08:39.691]  !!! E320 : DAP access error
[03:08:39.691]  
[03:08:39.691]          </block>
[03:08:39.691]          // end if-block "!hasDormant"
[03:08:39.691]        </control>
[03:08:39.691]        // end if-block "isSWJ"
[03:08:39.691]      </control>
[03:08:39.691]      // end if-block "protType == 2"
[03:08:39.691]    </control>
[03:08:39.691]  </sequence>
[03:08:39.691]  
[03:08:39.945]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:39.945]  
[03:08:39.945]  <debugvars>
[03:08:39.945]    // Pre-defined
[03:08:39.945]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:39.945]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:39.945]    __dp=0x00000000
[03:08:39.945]    __ap=0x00000000
[03:08:39.945]    __traceout=0x00000000      (Trace Disabled)
[03:08:39.945]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:39.945]    __FlashAddr=0x00000000
[03:08:39.945]    __FlashLen=0x00000000
[03:08:39.945]    __FlashArg=0x00000000
[03:08:39.945]    __FlashOp=0x00000000
[03:08:39.945]    __Result=0x00000000
[03:08:39.945]  </debugvars>
[03:08:39.945]  
[03:08:39.945]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:39.945]    <block atomic="false" info="">
[03:08:39.945]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:39.945]        // -> [isSWJ <= 0x00000001]
[03:08:39.945]      __var hasDormant = __protocol & 0x00020000;
[03:08:39.945]        // -> [hasDormant <= 0x00000000]
[03:08:39.945]      __var protType   = __protocol & 0x0000FFFF;
[03:08:39.945]        // -> [protType <= 0x00000002]
[03:08:39.945]    </block>
[03:08:39.945]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:39.949]      // if-block "protType == 1"
[03:08:39.949]        // =>  FALSE
[03:08:39.949]      // skip if-block "protType == 1"
[03:08:39.949]    </control>
[03:08:39.949]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:39.949]      // if-block "protType == 2"
[03:08:39.949]        // =>  TRUE
[03:08:39.949]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:39.949]        // if-block "isSWJ"
[03:08:39.949]          // =>  TRUE
[03:08:39.949]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:39.949]          // if-block "hasDormant"
[03:08:39.949]            // =>  FALSE
[03:08:39.949]          // skip if-block "hasDormant"
[03:08:39.949]        </control>
[03:08:39.949]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:39.949]          // if-block "!hasDormant"
[03:08:39.949]            // =>  TRUE
[03:08:39.949]          <block atomic="false" info="">
[03:08:39.949]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:40.956]  
[03:08:40.956]  !!! E320 : DAP access error
[03:08:40.956]  
[03:08:40.956]          </block>
[03:08:40.956]          // end if-block "!hasDormant"
[03:08:40.956]        </control>
[03:08:40.956]        // end if-block "isSWJ"
[03:08:40.956]      </control>
[03:08:40.956]      // end if-block "protType == 2"
[03:08:40.956]    </control>
[03:08:40.956]  </sequence>
[03:08:40.956]  
[03:08:41.213]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:41.213]  
[03:08:41.221]  <debugvars>
[03:08:41.221]    // Pre-defined
[03:08:41.221]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:41.221]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:41.221]    __dp=0x00000000
[03:08:41.221]    __ap=0x00000000
[03:08:41.221]    __traceout=0x00000000      (Trace Disabled)
[03:08:41.221]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:41.221]    __FlashAddr=0x00000000
[03:08:41.221]    __FlashLen=0x00000000
[03:08:41.221]    __FlashArg=0x00000000
[03:08:41.221]    __FlashOp=0x00000000
[03:08:41.221]    __Result=0x00000000
[03:08:41.221]  </debugvars>
[03:08:41.221]  
[03:08:41.221]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:41.221]    <block atomic="false" info="">
[03:08:41.221]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:41.221]        // -> [isSWJ <= 0x00000001]
[03:08:41.221]      __var hasDormant = __protocol & 0x00020000;
[03:08:41.221]        // -> [hasDormant <= 0x00000000]
[03:08:41.221]      __var protType   = __protocol & 0x0000FFFF;
[03:08:41.221]        // -> [protType <= 0x00000002]
[03:08:41.221]    </block>
[03:08:41.221]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:41.221]      // if-block "protType == 1"
[03:08:41.221]        // =>  FALSE
[03:08:41.221]      // skip if-block "protType == 1"
[03:08:41.221]    </control>
[03:08:41.221]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:41.221]      // if-block "protType == 2"
[03:08:41.221]        // =>  TRUE
[03:08:41.221]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:41.221]        // if-block "isSWJ"
[03:08:41.221]          // =>  TRUE
[03:08:41.221]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:41.221]          // if-block "hasDormant"
[03:08:41.221]            // =>  FALSE
[03:08:41.221]          // skip if-block "hasDormant"
[03:08:41.221]        </control>
[03:08:41.225]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:41.225]          // if-block "!hasDormant"
[03:08:41.225]            // =>  TRUE
[03:08:41.225]          <block atomic="false" info="">
[03:08:41.225]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:42.231]  
[03:08:42.231]  !!! E320 : DAP access error
[03:08:42.231]  
[03:08:42.231]          </block>
[03:08:42.231]          // end if-block "!hasDormant"
[03:08:42.231]        </control>
[03:08:42.231]        // end if-block "isSWJ"
[03:08:42.233]      </control>
[03:08:42.233]      // end if-block "protType == 2"
[03:08:42.233]    </control>
[03:08:42.233]  </sequence>
[03:08:42.233]  
[03:08:42.485]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:42.485]  
[03:08:42.493]  <debugvars>
[03:08:42.493]    // Pre-defined
[03:08:42.493]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:42.493]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:42.493]    __dp=0x00000000
[03:08:42.493]    __ap=0x00000000
[03:08:42.493]    __traceout=0x00000000      (Trace Disabled)
[03:08:42.493]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:42.493]    __FlashAddr=0x00000000
[03:08:42.493]    __FlashLen=0x00000000
[03:08:42.493]    __FlashArg=0x00000000
[03:08:42.493]    __FlashOp=0x00000000
[03:08:42.493]    __Result=0x00000000
[03:08:42.493]  </debugvars>
[03:08:42.493]  
[03:08:42.493]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:42.493]    <block atomic="false" info="">
[03:08:42.493]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:42.493]        // -> [isSWJ <= 0x00000001]
[03:08:42.493]      __var hasDormant = __protocol & 0x00020000;
[03:08:42.493]        // -> [hasDormant <= 0x00000000]
[03:08:42.493]      __var protType   = __protocol & 0x0000FFFF;
[03:08:42.493]        // -> [protType <= 0x00000002]
[03:08:42.495]    </block>
[03:08:42.495]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:42.495]      // if-block "protType == 1"
[03:08:42.495]        // =>  FALSE
[03:08:42.495]      // skip if-block "protType == 1"
[03:08:42.495]    </control>
[03:08:42.495]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:42.495]      // if-block "protType == 2"
[03:08:42.495]        // =>  TRUE
[03:08:42.495]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:42.497]        // if-block "isSWJ"
[03:08:42.497]          // =>  TRUE
[03:08:42.497]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:42.497]          // if-block "hasDormant"
[03:08:42.497]            // =>  FALSE
[03:08:42.497]          // skip if-block "hasDormant"
[03:08:42.497]        </control>
[03:08:42.497]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:42.497]          // if-block "!hasDormant"
[03:08:42.497]            // =>  TRUE
[03:08:42.498]          <block atomic="false" info="">
[03:08:42.498]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:43.500]  
[03:08:43.500]  !!! E320 : DAP access error
[03:08:43.500]  
[03:08:43.502]          </block>
[03:08:43.502]          // end if-block "!hasDormant"
[03:08:43.502]        </control>
[03:08:43.502]        // end if-block "isSWJ"
[03:08:43.502]      </control>
[03:08:43.502]      // end if-block "protType == 2"
[03:08:43.502]    </control>
[03:08:43.502]  </sequence>
[03:08:43.502]  
[03:08:43.753]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:43.753]  
[03:08:43.762]  <debugvars>
[03:08:43.762]    // Pre-defined
[03:08:43.762]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:43.762]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:43.762]    __dp=0x00000000
[03:08:43.762]    __ap=0x00000000
[03:08:43.762]    __traceout=0x00000000      (Trace Disabled)
[03:08:43.762]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:43.762]    __FlashAddr=0x00000000
[03:08:43.762]    __FlashLen=0x00000000
[03:08:43.762]    __FlashArg=0x00000000
[03:08:43.762]    __FlashOp=0x00000000
[03:08:43.762]    __Result=0x00000000
[03:08:43.762]  </debugvars>
[03:08:43.762]  
[03:08:43.762]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:43.762]    <block atomic="false" info="">
[03:08:43.762]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:43.762]        // -> [isSWJ <= 0x00000001]
[03:08:43.762]      __var hasDormant = __protocol & 0x00020000;
[03:08:43.762]        // -> [hasDormant <= 0x00000000]
[03:08:43.762]      __var protType   = __protocol & 0x0000FFFF;
[03:08:43.762]        // -> [protType <= 0x00000002]
[03:08:43.762]    </block>
[03:08:43.762]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:43.762]      // if-block "protType == 1"
[03:08:43.762]        // =>  FALSE
[03:08:43.762]      // skip if-block "protType == 1"
[03:08:43.765]    </control>
[03:08:43.765]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:43.765]      // if-block "protType == 2"
[03:08:43.765]        // =>  TRUE
[03:08:43.765]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:43.765]        // if-block "isSWJ"
[03:08:43.765]          // =>  TRUE
[03:08:43.765]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:43.765]          // if-block "hasDormant"
[03:08:43.765]            // =>  FALSE
[03:08:43.765]          // skip if-block "hasDormant"
[03:08:43.765]        </control>
[03:08:43.765]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:43.765]          // if-block "!hasDormant"
[03:08:43.765]            // =>  TRUE
[03:08:43.765]          <block atomic="false" info="">
[03:08:43.765]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:44.775]  
[03:08:44.775]  !!! E320 : DAP access error
[03:08:44.775]  
[03:08:44.784]          </block>
[03:08:44.784]          // end if-block "!hasDormant"
[03:08:44.784]        </control>
[03:08:44.784]        // end if-block "isSWJ"
[03:08:44.784]      </control>
[03:08:44.784]      // end if-block "protType == 2"
[03:08:44.784]    </control>
[03:08:44.784]  </sequence>
[03:08:44.784]  
[03:08:45.039]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:45.039]  
[03:08:45.049]  <debugvars>
[03:08:45.049]    // Pre-defined
[03:08:45.049]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:45.049]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:45.049]    __dp=0x00000000
[03:08:45.049]    __ap=0x00000000
[03:08:45.049]    __traceout=0x00000000      (Trace Disabled)
[03:08:45.049]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:45.049]    __FlashAddr=0x00000000
[03:08:45.049]    __FlashLen=0x00000000
[03:08:45.049]    __FlashArg=0x00000000
[03:08:45.049]    __FlashOp=0x00000000
[03:08:45.049]    __Result=0x00000000
[03:08:45.049]  </debugvars>
[03:08:45.051]  
[03:08:45.051]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:45.051]    <block atomic="false" info="">
[03:08:45.051]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:45.051]        // -> [isSWJ <= 0x00000001]
[03:08:45.051]      __var hasDormant = __protocol & 0x00020000;
[03:08:45.051]        // -> [hasDormant <= 0x00000000]
[03:08:45.052]      __var protType   = __protocol & 0x0000FFFF;
[03:08:45.052]        // -> [protType <= 0x00000002]
[03:08:45.052]    </block>
[03:08:45.052]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:45.052]      // if-block "protType == 1"
[03:08:45.052]        // =>  FALSE
[03:08:45.053]      // skip if-block "protType == 1"
[03:08:45.053]    </control>
[03:08:45.053]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:45.053]      // if-block "protType == 2"
[03:08:45.053]        // =>  TRUE
[03:08:45.053]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:45.053]        // if-block "isSWJ"
[03:08:45.053]          // =>  TRUE
[03:08:45.053]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:45.053]          // if-block "hasDormant"
[03:08:45.053]            // =>  FALSE
[03:08:45.053]          // skip if-block "hasDormant"
[03:08:45.053]        </control>
[03:08:45.053]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:45.053]          // if-block "!hasDormant"
[03:08:45.053]            // =>  TRUE
[03:08:45.053]          <block atomic="false" info="">
[03:08:45.053]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:46.057]  
[03:08:46.057]  !!! E320 : DAP access error
[03:08:46.057]  
[03:08:46.065]          </block>
[03:08:46.065]          // end if-block "!hasDormant"
[03:08:46.065]        </control>
[03:08:46.065]        // end if-block "isSWJ"
[03:08:46.065]      </control>
[03:08:46.065]      // end if-block "protType == 2"
[03:08:46.065]    </control>
[03:08:46.065]  </sequence>
[03:08:46.065]  
[03:08:46.325]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:46.325]  
[03:08:46.333]  <debugvars>
[03:08:46.333]    // Pre-defined
[03:08:46.333]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:46.333]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:46.333]    __dp=0x00000000
[03:08:46.333]    __ap=0x00000000
[03:08:46.333]    __traceout=0x00000000      (Trace Disabled)
[03:08:46.333]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:46.333]    __FlashAddr=0x00000000
[03:08:46.333]    __FlashLen=0x00000000
[03:08:46.333]    __FlashArg=0x00000000
[03:08:46.333]    __FlashOp=0x00000000
[03:08:46.333]    __Result=0x00000000
[03:08:46.333]  </debugvars>
[03:08:46.333]  
[03:08:46.333]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:46.333]    <block atomic="false" info="">
[03:08:46.333]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:46.333]        // -> [isSWJ <= 0x00000001]
[03:08:46.333]      __var hasDormant = __protocol & 0x00020000;
[03:08:46.333]        // -> [hasDormant <= 0x00000000]
[03:08:46.335]      __var protType   = __protocol & 0x0000FFFF;
[03:08:46.335]        // -> [protType <= 0x00000002]
[03:08:46.335]    </block>
[03:08:46.335]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:46.335]      // if-block "protType == 1"
[03:08:46.335]        // =>  FALSE
[03:08:46.335]      // skip if-block "protType == 1"
[03:08:46.335]    </control>
[03:08:46.335]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:46.335]      // if-block "protType == 2"
[03:08:46.335]        // =>  TRUE
[03:08:46.337]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:46.337]        // if-block "isSWJ"
[03:08:46.337]          // =>  TRUE
[03:08:46.337]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:46.337]          // if-block "hasDormant"
[03:08:46.337]            // =>  FALSE
[03:08:46.337]          // skip if-block "hasDormant"
[03:08:46.337]        </control>
[03:08:46.337]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:46.337]          // if-block "!hasDormant"
[03:08:46.337]            // =>  TRUE
[03:08:46.338]          <block atomic="false" info="">
[03:08:46.338]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:47.338]  
[03:08:47.338]  !!! E320 : DAP access error
[03:08:47.338]  
[03:08:47.338]          </block>
[03:08:47.338]          // end if-block "!hasDormant"
[03:08:47.338]        </control>
[03:08:47.338]        // end if-block "isSWJ"
[03:08:47.338]      </control>
[03:08:47.338]      // end if-block "protType == 2"
[03:08:47.338]    </control>
[03:08:47.338]  </sequence>
[03:08:47.338]  
[03:08:47.600]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:47.600]  
[03:08:47.600]  <debugvars>
[03:08:47.600]    // Pre-defined
[03:08:47.600]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:47.600]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:47.600]    __dp=0x00000000
[03:08:47.600]    __ap=0x00000000
[03:08:47.600]    __traceout=0x00000000      (Trace Disabled)
[03:08:47.600]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:47.600]    __FlashAddr=0x00000000
[03:08:47.600]    __FlashLen=0x00000000
[03:08:47.600]    __FlashArg=0x00000000
[03:08:47.600]    __FlashOp=0x00000000
[03:08:47.600]    __Result=0x00000000
[03:08:47.600]  </debugvars>
[03:08:47.600]  
[03:08:47.600]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:47.600]    <block atomic="false" info="">
[03:08:47.603]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:47.603]        // -> [isSWJ <= 0x00000001]
[03:08:47.603]      __var hasDormant = __protocol & 0x00020000;
[03:08:47.603]        // -> [hasDormant <= 0x00000000]
[03:08:47.603]      __var protType   = __protocol & 0x0000FFFF;
[03:08:47.603]        // -> [protType <= 0x00000002]
[03:08:47.603]    </block>
[03:08:47.603]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:47.603]      // if-block "protType == 1"
[03:08:47.603]        // =>  FALSE
[03:08:47.603]      // skip if-block "protType == 1"
[03:08:47.604]    </control>
[03:08:47.604]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:47.604]      // if-block "protType == 2"
[03:08:47.604]        // =>  TRUE
[03:08:47.604]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:47.604]        // if-block "isSWJ"
[03:08:47.604]          // =>  TRUE
[03:08:47.604]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:47.604]          // if-block "hasDormant"
[03:08:47.604]            // =>  FALSE
[03:08:47.604]          // skip if-block "hasDormant"
[03:08:47.604]        </control>
[03:08:47.604]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:47.604]          // if-block "!hasDormant"
[03:08:47.604]            // =>  TRUE
[03:08:47.604]          <block atomic="false" info="">
[03:08:47.604]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:48.614]  
[03:08:48.614]  !!! E320 : DAP access error
[03:08:48.614]  
[03:08:48.614]          </block>
[03:08:48.614]          // end if-block "!hasDormant"
[03:08:48.614]        </control>
[03:08:48.614]        // end if-block "isSWJ"
[03:08:48.614]      </control>
[03:08:48.614]      // end if-block "protType == 2"
[03:08:48.614]    </control>
[03:08:48.614]  </sequence>
[03:08:48.615]  
[03:08:48.868]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:48.868]  
[03:08:48.872]  <debugvars>
[03:08:48.872]    // Pre-defined
[03:08:48.872]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:48.872]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:48.872]    __dp=0x00000000
[03:08:48.872]    __ap=0x00000000
[03:08:48.872]    __traceout=0x00000000      (Trace Disabled)
[03:08:48.872]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:48.872]    __FlashAddr=0x00000000
[03:08:48.872]    __FlashLen=0x00000000
[03:08:48.872]    __FlashArg=0x00000000
[03:08:48.872]    __FlashOp=0x00000000
[03:08:48.872]    __Result=0x00000000
[03:08:48.872]  </debugvars>
[03:08:48.872]  
[03:08:48.872]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:48.872]    <block atomic="false" info="">
[03:08:48.872]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:48.872]        // -> [isSWJ <= 0x00000001]
[03:08:48.872]      __var hasDormant = __protocol & 0x00020000;
[03:08:48.872]        // -> [hasDormant <= 0x00000000]
[03:08:48.872]      __var protType   = __protocol & 0x0000FFFF;
[03:08:48.872]        // -> [protType <= 0x00000002]
[03:08:48.872]    </block>
[03:08:48.875]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:48.875]      // if-block "protType == 1"
[03:08:48.875]        // =>  FALSE
[03:08:48.875]      // skip if-block "protType == 1"
[03:08:48.875]    </control>
[03:08:48.875]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:48.875]      // if-block "protType == 2"
[03:08:48.875]        // =>  TRUE
[03:08:48.875]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:48.875]        // if-block "isSWJ"
[03:08:48.875]          // =>  TRUE
[03:08:48.875]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:48.875]          // if-block "hasDormant"
[03:08:48.875]            // =>  FALSE
[03:08:48.875]          // skip if-block "hasDormant"
[03:08:48.875]        </control>
[03:08:48.875]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:48.875]          // if-block "!hasDormant"
[03:08:48.875]            // =>  TRUE
[03:08:48.875]          <block atomic="false" info="">
[03:08:48.875]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:49.884]  
[03:08:49.884]  !!! E320 : DAP access error
[03:08:49.884]  
[03:08:49.884]          </block>
[03:08:49.884]          // end if-block "!hasDormant"
[03:08:49.884]        </control>
[03:08:49.884]        // end if-block "isSWJ"
[03:08:49.884]      </control>
[03:08:49.884]      // end if-block "protType == 2"
[03:08:49.884]    </control>
[03:08:49.884]  </sequence>
[03:08:49.884]  
[03:08:50.140]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:50.140]  
[03:08:50.140]  <debugvars>
[03:08:50.140]    // Pre-defined
[03:08:50.140]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:50.140]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:50.140]    __dp=0x00000000
[03:08:50.140]    __ap=0x00000000
[03:08:50.140]    __traceout=0x00000000      (Trace Disabled)
[03:08:50.140]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:50.140]    __FlashAddr=0x00000000
[03:08:50.140]    __FlashLen=0x00000000
[03:08:50.140]    __FlashArg=0x00000000
[03:08:50.143]    __FlashOp=0x00000000
[03:08:50.143]    __Result=0x00000000
[03:08:50.143]  </debugvars>
[03:08:50.143]  
[03:08:50.143]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:50.143]    <block atomic="false" info="">
[03:08:50.143]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:50.143]        // -> [isSWJ <= 0x00000001]
[03:08:50.143]      __var hasDormant = __protocol & 0x00020000;
[03:08:50.143]        // -> [hasDormant <= 0x00000000]
[03:08:50.143]      __var protType   = __protocol & 0x0000FFFF;
[03:08:50.143]        // -> [protType <= 0x00000002]
[03:08:50.143]    </block>
[03:08:50.145]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:50.145]      // if-block "protType == 1"
[03:08:50.145]        // =>  FALSE
[03:08:50.145]      // skip if-block "protType == 1"
[03:08:50.145]    </control>
[03:08:50.145]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:50.145]      // if-block "protType == 2"
[03:08:50.145]        // =>  TRUE
[03:08:50.145]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:50.145]        // if-block "isSWJ"
[03:08:50.145]          // =>  TRUE
[03:08:50.145]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:50.145]          // if-block "hasDormant"
[03:08:50.145]            // =>  FALSE
[03:08:50.145]          // skip if-block "hasDormant"
[03:08:50.145]        </control>
[03:08:50.145]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:50.145]          // if-block "!hasDormant"
[03:08:50.145]            // =>  TRUE
[03:08:50.145]          <block atomic="false" info="">
[03:08:50.147]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:51.155]  
[03:08:51.155]  !!! E320 : DAP access error
[03:08:51.155]  
[03:08:51.155]          </block>
[03:08:51.155]          // end if-block "!hasDormant"
[03:08:51.155]        </control>
[03:08:51.155]        // end if-block "isSWJ"
[03:08:51.155]      </control>
[03:08:51.155]      // end if-block "protType == 2"
[03:08:51.155]    </control>
[03:08:51.155]  </sequence>
[03:08:51.155]  
[03:08:51.408]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:51.408]  
[03:08:51.408]  <debugvars>
[03:08:51.408]    // Pre-defined
[03:08:51.408]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:51.408]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:51.408]    __dp=0x00000000
[03:08:51.408]    __ap=0x00000000
[03:08:51.408]    __traceout=0x00000000      (Trace Disabled)
[03:08:51.408]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:51.408]    __FlashAddr=0x00000000
[03:08:51.408]    __FlashLen=0x00000000
[03:08:51.408]    __FlashArg=0x00000000
[03:08:51.408]    __FlashOp=0x00000000
[03:08:51.408]    __Result=0x00000000
[03:08:51.408]  </debugvars>
[03:08:51.408]  
[03:08:51.408]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:51.408]    <block atomic="false" info="">
[03:08:51.408]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:51.408]        // -> [isSWJ <= 0x00000001]
[03:08:51.408]      __var hasDormant = __protocol & 0x00020000;
[03:08:51.408]        // -> [hasDormant <= 0x00000000]
[03:08:51.408]      __var protType   = __protocol & 0x0000FFFF;
[03:08:51.408]        // -> [protType <= 0x00000002]
[03:08:51.408]    </block>
[03:08:51.412]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:51.412]      // if-block "protType == 1"
[03:08:51.412]        // =>  FALSE
[03:08:51.412]      // skip if-block "protType == 1"
[03:08:51.412]    </control>
[03:08:51.412]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:51.412]      // if-block "protType == 2"
[03:08:51.412]        // =>  TRUE
[03:08:51.412]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:51.412]        // if-block "isSWJ"
[03:08:51.412]          // =>  TRUE
[03:08:51.412]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:51.412]          // if-block "hasDormant"
[03:08:51.412]            // =>  FALSE
[03:08:51.412]          // skip if-block "hasDormant"
[03:08:51.412]        </control>
[03:08:51.412]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:51.412]          // if-block "!hasDormant"
[03:08:51.412]            // =>  TRUE
[03:08:51.412]          <block atomic="false" info="">
[03:08:51.412]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:52.419]  
[03:08:52.419]  !!! E320 : DAP access error
[03:08:52.419]  
[03:08:52.428]          </block>
[03:08:52.428]          // end if-block "!hasDormant"
[03:08:52.428]        </control>
[03:08:52.428]        // end if-block "isSWJ"
[03:08:52.428]      </control>
[03:08:52.428]      // end if-block "protType == 2"
[03:08:52.428]    </control>
[03:08:52.428]  </sequence>
[03:08:52.428]  
[03:08:52.688]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:52.688]  
[03:08:52.688]  <debugvars>
[03:08:52.688]    // Pre-defined
[03:08:52.688]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:52.688]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:52.688]    __dp=0x00000000
[03:08:52.688]    __ap=0x00000000
[03:08:52.688]    __traceout=0x00000000      (Trace Disabled)
[03:08:52.688]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:52.688]    __FlashAddr=0x00000000
[03:08:52.688]    __FlashLen=0x00000000
[03:08:52.688]    __FlashArg=0x00000000
[03:08:52.688]    __FlashOp=0x00000000
[03:08:52.688]    __Result=0x00000000
[03:08:52.688]  </debugvars>
[03:08:52.688]  
[03:08:52.688]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:52.688]    <block atomic="false" info="">
[03:08:52.692]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:52.692]        // -> [isSWJ <= 0x00000001]
[03:08:52.692]      __var hasDormant = __protocol & 0x00020000;
[03:08:52.692]        // -> [hasDormant <= 0x00000000]
[03:08:52.692]      __var protType   = __protocol & 0x0000FFFF;
[03:08:52.692]        // -> [protType <= 0x00000002]
[03:08:52.692]    </block>
[03:08:52.692]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:52.692]      // if-block "protType == 1"
[03:08:52.692]        // =>  FALSE
[03:08:52.692]      // skip if-block "protType == 1"
[03:08:52.692]    </control>
[03:08:52.692]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:52.692]      // if-block "protType == 2"
[03:08:52.692]        // =>  TRUE
[03:08:52.692]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:52.692]        // if-block "isSWJ"
[03:08:52.692]          // =>  TRUE
[03:08:52.692]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:52.692]          // if-block "hasDormant"
[03:08:52.692]            // =>  FALSE
[03:08:52.692]          // skip if-block "hasDormant"
[03:08:52.692]        </control>
[03:08:52.692]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:52.692]          // if-block "!hasDormant"
[03:08:52.692]            // =>  TRUE
[03:08:52.692]          <block atomic="false" info="">
[03:08:52.692]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:53.704]  
[03:08:53.704]  !!! E320 : DAP access error
[03:08:53.704]  
[03:08:53.713]          </block>
[03:08:53.713]          // end if-block "!hasDormant"
[03:08:53.713]        </control>
[03:08:53.713]        // end if-block "isSWJ"
[03:08:53.713]      </control>
[03:08:53.713]      // end if-block "protType == 2"
[03:08:53.713]    </control>
[03:08:53.713]  </sequence>
[03:08:53.713]  
[03:08:53.966]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:53.966]  
[03:08:53.966]  <debugvars>
[03:08:53.966]    // Pre-defined
[03:08:53.966]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:53.966]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:53.967]    __dp=0x00000000
[03:08:53.967]    __ap=0x00000000
[03:08:53.968]    __traceout=0x00000000      (Trace Disabled)
[03:08:53.968]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:53.968]    __FlashAddr=0x00000000
[03:08:53.968]    __FlashLen=0x00000000
[03:08:53.968]    __FlashArg=0x00000000
[03:08:53.968]    __FlashOp=0x00000000
[03:08:53.968]    __Result=0x00000000
[03:08:53.968]  </debugvars>
[03:08:53.968]  
[03:08:53.968]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:53.968]    <block atomic="false" info="">
[03:08:53.968]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:53.968]        // -> [isSWJ <= 0x00000001]
[03:08:53.969]      __var hasDormant = __protocol & 0x00020000;
[03:08:53.969]        // -> [hasDormant <= 0x00000000]
[03:08:53.969]      __var protType   = __protocol & 0x0000FFFF;
[03:08:53.969]        // -> [protType <= 0x00000002]
[03:08:53.969]    </block>
[03:08:53.969]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:53.969]      // if-block "protType == 1"
[03:08:53.969]        // =>  FALSE
[03:08:53.969]      // skip if-block "protType == 1"
[03:08:53.969]    </control>
[03:08:53.969]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:53.969]      // if-block "protType == 2"
[03:08:53.971]        // =>  TRUE
[03:08:53.971]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:53.971]        // if-block "isSWJ"
[03:08:53.971]          // =>  TRUE
[03:08:53.971]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:53.971]          // if-block "hasDormant"
[03:08:53.971]            // =>  FALSE
[03:08:53.971]          // skip if-block "hasDormant"
[03:08:53.971]        </control>
[03:08:53.971]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:53.971]          // if-block "!hasDormant"
[03:08:53.971]            // =>  TRUE
[03:08:53.971]          <block atomic="false" info="">
[03:08:53.971]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:54.982]  
[03:08:54.982]  !!! E320 : DAP access error
[03:08:54.982]  
[03:08:54.991]          </block>
[03:08:54.991]          // end if-block "!hasDormant"
[03:08:54.991]        </control>
[03:08:54.991]        // end if-block "isSWJ"
[03:08:54.991]      </control>
[03:08:54.991]      // end if-block "protType == 2"
[03:08:54.991]    </control>
[03:08:54.991]  </sequence>
[03:08:54.991]  
[03:08:55.251]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:55.251]  
[03:08:55.259]  <debugvars>
[03:08:55.260]    // Pre-defined
[03:08:55.260]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:55.260]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:55.260]    __dp=0x00000000
[03:08:55.260]    __ap=0x00000000
[03:08:55.260]    __traceout=0x00000000      (Trace Disabled)
[03:08:55.260]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:55.260]    __FlashAddr=0x00000000
[03:08:55.260]    __FlashLen=0x00000000
[03:08:55.260]    __FlashArg=0x00000000
[03:08:55.260]    __FlashOp=0x00000000
[03:08:55.260]    __Result=0x00000000
[03:08:55.260]  </debugvars>
[03:08:55.260]  
[03:08:55.260]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:55.260]    <block atomic="false" info="">
[03:08:55.260]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:55.260]        // -> [isSWJ <= 0x00000001]
[03:08:55.260]      __var hasDormant = __protocol & 0x00020000;
[03:08:55.262]        // -> [hasDormant <= 0x00000000]
[03:08:55.262]      __var protType   = __protocol & 0x0000FFFF;
[03:08:55.262]        // -> [protType <= 0x00000002]
[03:08:55.262]    </block>
[03:08:55.262]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:55.262]      // if-block "protType == 1"
[03:08:55.262]        // =>  FALSE
[03:08:55.262]      // skip if-block "protType == 1"
[03:08:55.262]    </control>
[03:08:55.262]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:55.262]      // if-block "protType == 2"
[03:08:55.264]        // =>  TRUE
[03:08:55.264]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:55.264]        // if-block "isSWJ"
[03:08:55.264]          // =>  TRUE
[03:08:55.264]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:55.264]          // if-block "hasDormant"
[03:08:55.264]            // =>  FALSE
[03:08:55.264]          // skip if-block "hasDormant"
[03:08:55.264]        </control>
[03:08:55.264]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:55.264]          // if-block "!hasDormant"
[03:08:55.265]            // =>  TRUE
[03:08:55.265]          <block atomic="false" info="">
[03:08:55.265]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:56.275]  
[03:08:56.275]  !!! E320 : DAP access error
[03:08:56.275]  
[03:08:56.283]          </block>
[03:08:56.283]          // end if-block "!hasDormant"
[03:08:56.283]        </control>
[03:08:56.283]        // end if-block "isSWJ"
[03:08:56.283]      </control>
[03:08:56.283]      // end if-block "protType == 2"
[03:08:56.283]    </control>
[03:08:56.283]  </sequence>
[03:08:56.283]  
[03:08:56.534]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:56.534]  
[03:08:56.537]  <debugvars>
[03:08:56.537]    // Pre-defined
[03:08:56.537]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:56.537]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:56.537]    __dp=0x00000000
[03:08:56.537]    __ap=0x00000000
[03:08:56.537]    __traceout=0x00000000      (Trace Disabled)
[03:08:56.537]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:56.537]    __FlashAddr=0x00000000
[03:08:56.537]    __FlashLen=0x00000000
[03:08:56.537]    __FlashArg=0x00000000
[03:08:56.537]    __FlashOp=0x00000000
[03:08:56.537]    __Result=0x00000000
[03:08:56.538]  </debugvars>
[03:08:56.538]  
[03:08:56.538]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:56.538]    <block atomic="false" info="">
[03:08:56.538]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:56.538]        // -> [isSWJ <= 0x00000001]
[03:08:56.538]      __var hasDormant = __protocol & 0x00020000;
[03:08:56.538]        // -> [hasDormant <= 0x00000000]
[03:08:56.538]      __var protType   = __protocol & 0x0000FFFF;
[03:08:56.538]        // -> [protType <= 0x00000002]
[03:08:56.538]    </block>
[03:08:56.538]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:56.538]      // if-block "protType == 1"
[03:08:56.538]        // =>  FALSE
[03:08:56.538]      // skip if-block "protType == 1"
[03:08:56.538]    </control>
[03:08:56.538]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:56.538]      // if-block "protType == 2"
[03:08:56.538]        // =>  TRUE
[03:08:56.538]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:56.538]        // if-block "isSWJ"
[03:08:56.538]          // =>  TRUE
[03:08:56.538]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:56.538]          // if-block "hasDormant"
[03:08:56.538]            // =>  FALSE
[03:08:56.538]          // skip if-block "hasDormant"
[03:08:56.538]        </control>
[03:08:56.538]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:56.538]          // if-block "!hasDormant"
[03:08:56.538]            // =>  TRUE
[03:08:56.538]          <block atomic="false" info="">
[03:08:56.538]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:57.542]  
[03:08:57.542]  !!! E320 : DAP access error
[03:08:57.542]  
[03:08:57.542]          </block>
[03:08:57.542]          // end if-block "!hasDormant"
[03:08:57.542]        </control>
[03:08:57.542]        // end if-block "isSWJ"
[03:08:57.542]      </control>
[03:08:57.542]      // end if-block "protType == 2"
[03:08:57.542]    </control>
[03:08:57.544]  </sequence>
[03:08:57.544]  
[03:08:57.796]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:57.796]  
[03:08:57.796]  <debugvars>
[03:08:57.796]    // Pre-defined
[03:08:57.796]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:57.796]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:57.796]    __dp=0x00000000
[03:08:57.796]    __ap=0x00000000
[03:08:57.796]    __traceout=0x00000000      (Trace Disabled)
[03:08:57.796]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:57.796]    __FlashAddr=0x00000000
[03:08:57.796]    __FlashLen=0x00000000
[03:08:57.796]    __FlashArg=0x00000000
[03:08:57.796]    __FlashOp=0x00000000
[03:08:57.796]    __Result=0x00000000
[03:08:57.796]  </debugvars>
[03:08:57.796]  
[03:08:57.796]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:57.796]    <block atomic="false" info="">
[03:08:57.796]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:57.796]        // -> [isSWJ <= 0x00000001]
[03:08:57.796]      __var hasDormant = __protocol & 0x00020000;
[03:08:57.796]        // -> [hasDormant <= 0x00000000]
[03:08:57.796]      __var protType   = __protocol & 0x0000FFFF;
[03:08:57.796]        // -> [protType <= 0x00000002]
[03:08:57.796]    </block>
[03:08:57.796]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:57.796]      // if-block "protType == 1"
[03:08:57.800]        // =>  FALSE
[03:08:57.800]      // skip if-block "protType == 1"
[03:08:57.800]    </control>
[03:08:57.800]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:57.800]      // if-block "protType == 2"
[03:08:57.800]        // =>  TRUE
[03:08:57.800]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:57.800]        // if-block "isSWJ"
[03:08:57.800]          // =>  TRUE
[03:08:57.800]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:57.800]          // if-block "hasDormant"
[03:08:57.800]            // =>  FALSE
[03:08:57.800]          // skip if-block "hasDormant"
[03:08:57.800]        </control>
[03:08:57.800]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:57.800]          // if-block "!hasDormant"
[03:08:57.800]            // =>  TRUE
[03:08:57.800]          <block atomic="false" info="">
[03:08:57.800]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:08:58.803]  
[03:08:58.803]  !!! E320 : DAP access error
[03:08:58.803]  
[03:08:58.803]          </block>
[03:08:58.803]          // end if-block "!hasDormant"
[03:08:58.803]        </control>
[03:08:58.805]        // end if-block "isSWJ"
[03:08:58.805]      </control>
[03:08:58.805]      // end if-block "protType == 2"
[03:08:58.805]    </control>
[03:08:58.805]  </sequence>
[03:08:58.805]  
[03:08:59.059]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:08:59.059]  
[03:08:59.067]  <debugvars>
[03:08:59.067]    // Pre-defined
[03:08:59.067]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:08:59.067]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:08:59.067]    __dp=0x00000000
[03:08:59.067]    __ap=0x00000000
[03:08:59.067]    __traceout=0x00000000      (Trace Disabled)
[03:08:59.067]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:08:59.067]    __FlashAddr=0x00000000
[03:08:59.067]    __FlashLen=0x00000000
[03:08:59.067]    __FlashArg=0x00000000
[03:08:59.067]    __FlashOp=0x00000000
[03:08:59.067]    __Result=0x00000000
[03:08:59.067]  </debugvars>
[03:08:59.067]  
[03:08:59.067]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:08:59.067]    <block atomic="false" info="">
[03:08:59.067]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:08:59.067]        // -> [isSWJ <= 0x00000001]
[03:08:59.067]      __var hasDormant = __protocol & 0x00020000;
[03:08:59.067]        // -> [hasDormant <= 0x00000000]
[03:08:59.067]      __var protType   = __protocol & 0x0000FFFF;
[03:08:59.067]        // -> [protType <= 0x00000002]
[03:08:59.067]    </block>
[03:08:59.067]    <control if="protType == 1" while="" timeout="0" info="">
[03:08:59.067]      // if-block "protType == 1"
[03:08:59.067]        // =>  FALSE
[03:08:59.067]      // skip if-block "protType == 1"
[03:08:59.067]    </control>
[03:08:59.067]    <control if="protType == 2" while="" timeout="0" info="">
[03:08:59.067]      // if-block "protType == 2"
[03:08:59.067]        // =>  TRUE
[03:08:59.067]      <control if="isSWJ" while="" timeout="0" info="">
[03:08:59.071]        // if-block "isSWJ"
[03:08:59.071]          // =>  TRUE
[03:08:59.071]        <control if="hasDormant" while="" timeout="0" info="">
[03:08:59.072]          // if-block "hasDormant"
[03:08:59.072]            // =>  FALSE
[03:08:59.072]          // skip if-block "hasDormant"
[03:08:59.072]        </control>
[03:08:59.072]        <control if="!hasDormant" while="" timeout="0" info="">
[03:08:59.072]          // if-block "!hasDormant"
[03:08:59.072]            // =>  TRUE
[03:08:59.072]          <block atomic="false" info="">
[03:08:59.073]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:00.080]  
[03:09:00.080]  !!! E320 : DAP access error
[03:09:00.080]  
[03:09:00.090]          </block>
[03:09:00.090]          // end if-block "!hasDormant"
[03:09:00.090]        </control>
[03:09:00.090]        // end if-block "isSWJ"
[03:09:00.090]      </control>
[03:09:00.090]      // end if-block "protType == 2"
[03:09:00.090]    </control>
[03:09:00.090]  </sequence>
[03:09:00.090]  
[03:09:00.342]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:00.342]  
[03:09:00.342]  <debugvars>
[03:09:00.342]    // Pre-defined
[03:09:00.342]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:00.342]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:00.342]    __dp=0x00000000
[03:09:00.342]    __ap=0x00000000
[03:09:00.342]    __traceout=0x00000000      (Trace Disabled)
[03:09:00.342]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:00.342]    __FlashAddr=0x00000000
[03:09:00.342]    __FlashLen=0x00000000
[03:09:00.342]    __FlashArg=0x00000000
[03:09:00.342]    __FlashOp=0x00000000
[03:09:00.342]    __Result=0x00000000
[03:09:00.342]  </debugvars>
[03:09:00.342]  
[03:09:00.342]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:00.342]    <block atomic="false" info="">
[03:09:00.342]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:00.342]        // -> [isSWJ <= 0x00000001]
[03:09:00.342]      __var hasDormant = __protocol & 0x00020000;
[03:09:00.342]        // -> [hasDormant <= 0x00000000]
[03:09:00.342]      __var protType   = __protocol & 0x0000FFFF;
[03:09:00.342]        // -> [protType <= 0x00000002]
[03:09:00.342]    </block>
[03:09:00.342]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:00.342]      // if-block "protType == 1"
[03:09:00.342]        // =>  FALSE
[03:09:00.346]      // skip if-block "protType == 1"
[03:09:00.346]    </control>
[03:09:00.346]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:00.346]      // if-block "protType == 2"
[03:09:00.346]        // =>  TRUE
[03:09:00.346]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:00.346]        // if-block "isSWJ"
[03:09:00.346]          // =>  TRUE
[03:09:00.346]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:00.346]          // if-block "hasDormant"
[03:09:00.346]            // =>  FALSE
[03:09:00.346]          // skip if-block "hasDormant"
[03:09:00.346]        </control>
[03:09:00.347]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:00.347]          // if-block "!hasDormant"
[03:09:00.347]            // =>  TRUE
[03:09:00.347]          <block atomic="false" info="">
[03:09:00.347]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:01.348]  
[03:09:01.348]  !!! E320 : DAP access error
[03:09:01.348]  
[03:09:01.356]          </block>
[03:09:01.356]          // end if-block "!hasDormant"
[03:09:01.356]        </control>
[03:09:01.356]        // end if-block "isSWJ"
[03:09:01.356]      </control>
[03:09:01.356]      // end if-block "protType == 2"
[03:09:01.356]    </control>
[03:09:01.356]  </sequence>
[03:09:01.356]  
[03:09:01.613]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:01.613]  
[03:09:01.621]  <debugvars>
[03:09:01.621]    // Pre-defined
[03:09:01.621]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:01.621]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:01.621]    __dp=0x00000000
[03:09:01.621]    __ap=0x00000000
[03:09:01.621]    __traceout=0x00000000      (Trace Disabled)
[03:09:01.621]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:01.621]    __FlashAddr=0x00000000
[03:09:01.621]    __FlashLen=0x00000000
[03:09:01.621]    __FlashArg=0x00000000
[03:09:01.621]    __FlashOp=0x00000000
[03:09:01.621]    __Result=0x00000000
[03:09:01.621]  </debugvars>
[03:09:01.621]  
[03:09:01.621]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:01.621]    <block atomic="false" info="">
[03:09:01.621]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:01.621]        // -> [isSWJ <= 0x00000001]
[03:09:01.621]      __var hasDormant = __protocol & 0x00020000;
[03:09:01.621]        // -> [hasDormant <= 0x00000000]
[03:09:01.621]      __var protType   = __protocol & 0x0000FFFF;
[03:09:01.621]        // -> [protType <= 0x00000002]
[03:09:01.621]    </block>
[03:09:01.621]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:01.621]      // if-block "protType == 1"
[03:09:01.621]        // =>  FALSE
[03:09:01.621]      // skip if-block "protType == 1"
[03:09:01.621]    </control>
[03:09:01.621]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:01.621]      // if-block "protType == 2"
[03:09:01.621]        // =>  TRUE
[03:09:01.625]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:01.625]        // if-block "isSWJ"
[03:09:01.625]          // =>  TRUE
[03:09:01.625]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:01.625]          // if-block "hasDormant"
[03:09:01.625]            // =>  FALSE
[03:09:01.626]          // skip if-block "hasDormant"
[03:09:01.626]        </control>
[03:09:01.626]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:01.626]          // if-block "!hasDormant"
[03:09:01.626]            // =>  TRUE
[03:09:01.626]          <block atomic="false" info="">
[03:09:01.626]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:02.635]  
[03:09:02.635]  !!! E320 : DAP access error
[03:09:02.635]  
[03:09:02.643]          </block>
[03:09:02.643]          // end if-block "!hasDormant"
[03:09:02.643]        </control>
[03:09:02.643]        // end if-block "isSWJ"
[03:09:02.643]      </control>
[03:09:02.643]      // end if-block "protType == 2"
[03:09:02.643]    </control>
[03:09:02.643]  </sequence>
[03:09:02.643]  
[03:09:02.897]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:02.897]  
[03:09:02.906]  <debugvars>
[03:09:02.906]    // Pre-defined
[03:09:02.906]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:02.906]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:02.906]    __dp=0x00000000
[03:09:02.906]    __ap=0x00000000
[03:09:02.906]    __traceout=0x00000000      (Trace Disabled)
[03:09:02.906]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:02.906]    __FlashAddr=0x00000000
[03:09:02.906]    __FlashLen=0x00000000
[03:09:02.906]    __FlashArg=0x00000000
[03:09:02.906]    __FlashOp=0x00000000
[03:09:02.906]    __Result=0x00000000
[03:09:02.906]  </debugvars>
[03:09:02.906]  
[03:09:02.906]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:02.906]    <block atomic="false" info="">
[03:09:02.906]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:02.906]        // -> [isSWJ <= 0x00000001]
[03:09:02.906]      __var hasDormant = __protocol & 0x00020000;
[03:09:02.906]        // -> [hasDormant <= 0x00000000]
[03:09:02.906]      __var protType   = __protocol & 0x0000FFFF;
[03:09:02.906]        // -> [protType <= 0x00000002]
[03:09:02.906]    </block>
[03:09:02.906]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:02.906]      // if-block "protType == 1"
[03:09:02.906]        // =>  FALSE
[03:09:02.906]      // skip if-block "protType == 1"
[03:09:02.906]    </control>
[03:09:02.906]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:02.909]      // if-block "protType == 2"
[03:09:02.909]        // =>  TRUE
[03:09:02.910]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:02.910]        // if-block "isSWJ"
[03:09:02.910]          // =>  TRUE
[03:09:02.910]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:02.910]          // if-block "hasDormant"
[03:09:02.910]            // =>  FALSE
[03:09:02.910]          // skip if-block "hasDormant"
[03:09:02.911]        </control>
[03:09:02.911]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:02.911]          // if-block "!hasDormant"
[03:09:02.911]            // =>  TRUE
[03:09:02.911]          <block atomic="false" info="">
[03:09:02.911]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:03.917]  
[03:09:03.917]  !!! E320 : DAP access error
[03:09:03.917]  
[03:09:03.926]          </block>
[03:09:03.926]          // end if-block "!hasDormant"
[03:09:03.926]        </control>
[03:09:03.926]        // end if-block "isSWJ"
[03:09:03.926]      </control>
[03:09:03.926]      // end if-block "protType == 2"
[03:09:03.926]    </control>
[03:09:03.926]  </sequence>
[03:09:03.926]  
[03:09:04.178]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:04.178]  
[03:09:04.186]  <debugvars>
[03:09:04.186]    // Pre-defined
[03:09:04.186]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:04.186]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:04.186]    __dp=0x00000000
[03:09:04.186]    __ap=0x00000000
[03:09:04.186]    __traceout=0x00000000      (Trace Disabled)
[03:09:04.186]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:04.186]    __FlashAddr=0x00000000
[03:09:04.186]    __FlashLen=0x00000000
[03:09:04.186]    __FlashArg=0x00000000
[03:09:04.186]    __FlashOp=0x00000000
[03:09:04.186]    __Result=0x00000000
[03:09:04.186]  </debugvars>
[03:09:04.186]  
[03:09:04.186]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:04.186]    <block atomic="false" info="">
[03:09:04.186]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:04.186]        // -> [isSWJ <= 0x00000001]
[03:09:04.186]      __var hasDormant = __protocol & 0x00020000;
[03:09:04.186]        // -> [hasDormant <= 0x00000000]
[03:09:04.186]      __var protType   = __protocol & 0x0000FFFF;
[03:09:04.186]        // -> [protType <= 0x00000002]
[03:09:04.186]    </block>
[03:09:04.186]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:04.186]      // if-block "protType == 1"
[03:09:04.186]        // =>  FALSE
[03:09:04.186]      // skip if-block "protType == 1"
[03:09:04.186]    </control>
[03:09:04.186]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:04.190]      // if-block "protType == 2"
[03:09:04.190]        // =>  TRUE
[03:09:04.190]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:04.191]        // if-block "isSWJ"
[03:09:04.191]          // =>  TRUE
[03:09:04.191]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:04.191]          // if-block "hasDormant"
[03:09:04.191]            // =>  FALSE
[03:09:04.191]          // skip if-block "hasDormant"
[03:09:04.191]        </control>
[03:09:04.191]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:04.191]          // if-block "!hasDormant"
[03:09:04.191]            // =>  TRUE
[03:09:04.191]          <block atomic="false" info="">
[03:09:04.191]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:05.201]  
[03:09:05.201]  !!! E320 : DAP access error
[03:09:05.201]  
[03:09:05.210]          </block>
[03:09:05.210]          // end if-block "!hasDormant"
[03:09:05.210]        </control>
[03:09:05.210]        // end if-block "isSWJ"
[03:09:05.210]      </control>
[03:09:05.210]      // end if-block "protType == 2"
[03:09:05.210]    </control>
[03:09:05.210]  </sequence>
[03:09:05.210]  
[03:09:05.468]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:05.468]  
[03:09:05.476]  <debugvars>
[03:09:05.476]    // Pre-defined
[03:09:05.476]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:05.476]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:05.477]    __dp=0x00000000
[03:09:05.477]    __ap=0x00000000
[03:09:05.477]    __traceout=0x00000000      (Trace Disabled)
[03:09:05.477]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:05.477]    __FlashAddr=0x00000000
[03:09:05.477]    __FlashLen=0x00000000
[03:09:05.477]    __FlashArg=0x00000000
[03:09:05.477]    __FlashOp=0x00000000
[03:09:05.477]    __Result=0x00000000
[03:09:05.477]  </debugvars>
[03:09:05.477]  
[03:09:05.477]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:05.479]    <block atomic="false" info="">
[03:09:05.479]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:05.479]        // -> [isSWJ <= 0x00000001]
[03:09:05.479]      __var hasDormant = __protocol & 0x00020000;
[03:09:05.479]        // -> [hasDormant <= 0x00000000]
[03:09:05.479]      __var protType   = __protocol & 0x0000FFFF;
[03:09:05.479]        // -> [protType <= 0x00000002]
[03:09:05.479]    </block>
[03:09:05.479]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:05.479]      // if-block "protType == 1"
[03:09:05.479]        // =>  FALSE
[03:09:05.479]      // skip if-block "protType == 1"
[03:09:05.479]    </control>
[03:09:05.481]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:05.481]      // if-block "protType == 2"
[03:09:05.481]        // =>  TRUE
[03:09:05.481]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:05.481]        // if-block "isSWJ"
[03:09:05.481]          // =>  TRUE
[03:09:05.481]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:05.481]          // if-block "hasDormant"
[03:09:05.481]            // =>  FALSE
[03:09:05.481]          // skip if-block "hasDormant"
[03:09:05.482]        </control>
[03:09:05.482]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:05.482]          // if-block "!hasDormant"
[03:09:05.482]            // =>  TRUE
[03:09:05.482]          <block atomic="false" info="">
[03:09:05.482]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:06.483]  
[03:09:06.483]  !!! E320 : DAP access error
[03:09:06.483]  
[03:09:06.491]          </block>
[03:09:06.491]          // end if-block "!hasDormant"
[03:09:06.491]        </control>
[03:09:06.491]        // end if-block "isSWJ"
[03:09:06.491]      </control>
[03:09:06.491]      // end if-block "protType == 2"
[03:09:06.491]    </control>
[03:09:06.491]  </sequence>
[03:09:06.491]  
[03:09:06.745]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:06.745]  
[03:09:06.746]  <debugvars>
[03:09:06.746]    // Pre-defined
[03:09:06.746]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:06.746]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:06.746]    __dp=0x00000000
[03:09:06.746]    __ap=0x00000000
[03:09:06.746]    __traceout=0x00000000      (Trace Disabled)
[03:09:06.746]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:06.746]    __FlashAddr=0x00000000
[03:09:06.746]    __FlashLen=0x00000000
[03:09:06.746]    __FlashArg=0x00000000
[03:09:06.746]    __FlashOp=0x00000000
[03:09:06.746]    __Result=0x00000000
[03:09:06.746]  </debugvars>
[03:09:06.746]  
[03:09:06.746]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:06.746]    <block atomic="false" info="">
[03:09:06.746]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:06.749]        // -> [isSWJ <= 0x00000001]
[03:09:06.749]      __var hasDormant = __protocol & 0x00020000;
[03:09:06.749]        // -> [hasDormant <= 0x00000000]
[03:09:06.749]      __var protType   = __protocol & 0x0000FFFF;
[03:09:06.749]        // -> [protType <= 0x00000002]
[03:09:06.749]    </block>
[03:09:06.749]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:06.749]      // if-block "protType == 1"
[03:09:06.749]        // =>  FALSE
[03:09:06.749]      // skip if-block "protType == 1"
[03:09:06.749]    </control>
[03:09:06.749]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:06.749]      // if-block "protType == 2"
[03:09:06.749]        // =>  TRUE
[03:09:06.749]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:06.749]        // if-block "isSWJ"
[03:09:06.749]          // =>  TRUE
[03:09:06.749]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:06.749]          // if-block "hasDormant"
[03:09:06.749]            // =>  FALSE
[03:09:06.749]          // skip if-block "hasDormant"
[03:09:06.749]        </control>
[03:09:06.749]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:06.749]          // if-block "!hasDormant"
[03:09:06.749]            // =>  TRUE
[03:09:06.749]          <block atomic="false" info="">
[03:09:06.749]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:07.749]  
[03:09:07.749]  !!! E320 : DAP access error
[03:09:07.749]  
[03:09:07.749]          </block>
[03:09:07.749]          // end if-block "!hasDormant"
[03:09:07.749]        </control>
[03:09:07.749]        // end if-block "isSWJ"
[03:09:07.749]      </control>
[03:09:07.749]      // end if-block "protType == 2"
[03:09:07.749]    </control>
[03:09:07.749]  </sequence>
[03:09:07.749]  
[03:09:08.002]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:08.002]  
[03:09:08.011]  <debugvars>
[03:09:08.011]    // Pre-defined
[03:09:08.011]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:08.011]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:08.011]    __dp=0x00000000
[03:09:08.011]    __ap=0x00000000
[03:09:08.011]    __traceout=0x00000000      (Trace Disabled)
[03:09:08.011]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:08.011]    __FlashAddr=0x00000000
[03:09:08.011]    __FlashLen=0x00000000
[03:09:08.011]    __FlashArg=0x00000000
[03:09:08.011]    __FlashOp=0x00000000
[03:09:08.011]    __Result=0x00000000
[03:09:08.011]  </debugvars>
[03:09:08.011]  
[03:09:08.011]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:08.011]    <block atomic="false" info="">
[03:09:08.011]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:08.011]        // -> [isSWJ <= 0x00000001]
[03:09:08.011]      __var hasDormant = __protocol & 0x00020000;
[03:09:08.011]        // -> [hasDormant <= 0x00000000]
[03:09:08.011]      __var protType   = __protocol & 0x0000FFFF;
[03:09:08.011]        // -> [protType <= 0x00000002]
[03:09:08.011]    </block>
[03:09:08.011]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:08.014]      // if-block "protType == 1"
[03:09:08.014]        // =>  FALSE
[03:09:08.014]      // skip if-block "protType == 1"
[03:09:08.014]    </control>
[03:09:08.014]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:08.014]      // if-block "protType == 2"
[03:09:08.014]        // =>  TRUE
[03:09:08.014]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:08.014]        // if-block "isSWJ"
[03:09:08.014]          // =>  TRUE
[03:09:08.014]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:08.014]          // if-block "hasDormant"
[03:09:08.014]            // =>  FALSE
[03:09:08.014]          // skip if-block "hasDormant"
[03:09:08.014]        </control>
[03:09:08.014]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:08.014]          // if-block "!hasDormant"
[03:09:08.014]            // =>  TRUE
[03:09:08.014]          <block atomic="false" info="">
[03:09:08.014]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:09.024]  
[03:09:09.024]  !!! E320 : DAP access error
[03:09:09.024]  
[03:09:09.024]          </block>
[03:09:09.024]          // end if-block "!hasDormant"
[03:09:09.025]        </control>
[03:09:09.025]        // end if-block "isSWJ"
[03:09:09.025]      </control>
[03:09:09.025]      // end if-block "protType == 2"
[03:09:09.025]    </control>
[03:09:09.026]  </sequence>
[03:09:09.026]  
[03:09:09.278]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:09.278]  
[03:09:09.287]  <debugvars>
[03:09:09.287]    // Pre-defined
[03:09:09.287]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:09.287]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:09.287]    __dp=0x00000000
[03:09:09.287]    __ap=0x00000000
[03:09:09.287]    __traceout=0x00000000      (Trace Disabled)
[03:09:09.287]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:09.287]    __FlashAddr=0x00000000
[03:09:09.287]    __FlashLen=0x00000000
[03:09:09.287]    __FlashArg=0x00000000
[03:09:09.287]    __FlashOp=0x00000000
[03:09:09.287]    __Result=0x00000000
[03:09:09.287]  </debugvars>
[03:09:09.287]  
[03:09:09.287]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:09.287]    <block atomic="false" info="">
[03:09:09.287]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:09.287]        // -> [isSWJ <= 0x00000001]
[03:09:09.287]      __var hasDormant = __protocol & 0x00020000;
[03:09:09.287]        // -> [hasDormant <= 0x00000000]
[03:09:09.287]      __var protType   = __protocol & 0x0000FFFF;
[03:09:09.287]        // -> [protType <= 0x00000002]
[03:09:09.287]    </block>
[03:09:09.290]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:09.290]      // if-block "protType == 1"
[03:09:09.290]        // =>  FALSE
[03:09:09.290]      // skip if-block "protType == 1"
[03:09:09.290]    </control>
[03:09:09.290]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:09.290]      // if-block "protType == 2"
[03:09:09.290]        // =>  TRUE
[03:09:09.290]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:09.290]        // if-block "isSWJ"
[03:09:09.290]          // =>  TRUE
[03:09:09.290]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:09.290]          // if-block "hasDormant"
[03:09:09.290]            // =>  FALSE
[03:09:09.290]          // skip if-block "hasDormant"
[03:09:09.290]        </control>
[03:09:09.290]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:09.290]          // if-block "!hasDormant"
[03:09:09.290]            // =>  TRUE
[03:09:09.290]          <block atomic="false" info="">
[03:09:09.290]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:10.291]  
[03:09:10.291]  !!! E320 : DAP access error
[03:09:10.291]  
[03:09:10.291]          </block>
[03:09:10.291]          // end if-block "!hasDormant"
[03:09:10.292]        </control>
[03:09:10.292]        // end if-block "isSWJ"
[03:09:10.292]      </control>
[03:09:10.293]      // end if-block "protType == 2"
[03:09:10.293]    </control>
[03:09:10.293]  </sequence>
[03:09:10.293]  
[03:09:10.549]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:10.549]  
[03:09:10.558]  <debugvars>
[03:09:10.558]    // Pre-defined
[03:09:10.558]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:10.558]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:10.558]    __dp=0x00000000
[03:09:10.558]    __ap=0x00000000
[03:09:10.558]    __traceout=0x00000000      (Trace Disabled)
[03:09:10.558]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:10.558]    __FlashAddr=0x00000000
[03:09:10.558]    __FlashLen=0x00000000
[03:09:10.558]    __FlashArg=0x00000000
[03:09:10.558]    __FlashOp=0x00000000
[03:09:10.558]    __Result=0x00000000
[03:09:10.558]  </debugvars>
[03:09:10.558]  
[03:09:10.558]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:10.558]    <block atomic="false" info="">
[03:09:10.558]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:10.558]        // -> [isSWJ <= 0x00000001]
[03:09:10.558]      __var hasDormant = __protocol & 0x00020000;
[03:09:10.558]        // -> [hasDormant <= 0x00000000]
[03:09:10.558]      __var protType   = __protocol & 0x0000FFFF;
[03:09:10.558]        // -> [protType <= 0x00000002]
[03:09:10.558]    </block>
[03:09:10.558]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:10.558]      // if-block "protType == 1"
[03:09:10.558]        // =>  FALSE
[03:09:10.558]      // skip if-block "protType == 1"
[03:09:10.558]    </control>
[03:09:10.558]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:10.558]      // if-block "protType == 2"
[03:09:10.558]        // =>  TRUE
[03:09:10.558]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:10.558]        // if-block "isSWJ"
[03:09:10.558]          // =>  TRUE
[03:09:10.558]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:10.558]          // if-block "hasDormant"
[03:09:10.558]            // =>  FALSE
[03:09:10.562]          // skip if-block "hasDormant"
[03:09:10.562]        </control>
[03:09:10.562]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:10.562]          // if-block "!hasDormant"
[03:09:10.562]            // =>  TRUE
[03:09:10.562]          <block atomic="false" info="">
[03:09:10.562]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:11.565]  
[03:09:11.565]  !!! E320 : DAP access error
[03:09:11.565]  
[03:09:11.573]          </block>
[03:09:11.573]          // end if-block "!hasDormant"
[03:09:11.573]        </control>
[03:09:11.573]        // end if-block "isSWJ"
[03:09:11.573]      </control>
[03:09:11.573]      // end if-block "protType == 2"
[03:09:11.573]    </control>
[03:09:11.573]  </sequence>
[03:09:11.573]  
[03:09:11.829]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:11.829]  
[03:09:11.829]  <debugvars>
[03:09:11.829]    // Pre-defined
[03:09:11.829]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:11.829]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:11.829]    __dp=0x00000000
[03:09:11.829]    __ap=0x00000000
[03:09:11.829]    __traceout=0x00000000      (Trace Disabled)
[03:09:11.829]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:11.829]    __FlashAddr=0x00000000
[03:09:11.829]    __FlashLen=0x00000000
[03:09:11.829]    __FlashArg=0x00000000
[03:09:11.829]    __FlashOp=0x00000000
[03:09:11.829]    __Result=0x00000000
[03:09:11.829]  </debugvars>
[03:09:11.829]  
[03:09:11.829]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:11.829]    <block atomic="false" info="">
[03:09:11.829]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:11.829]        // -> [isSWJ <= 0x00000001]
[03:09:11.829]      __var hasDormant = __protocol & 0x00020000;
[03:09:11.829]        // -> [hasDormant <= 0x00000000]
[03:09:11.829]      __var protType   = __protocol & 0x0000FFFF;
[03:09:11.829]        // -> [protType <= 0x00000002]
[03:09:11.833]    </block>
[03:09:11.833]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:11.833]      // if-block "protType == 1"
[03:09:11.833]        // =>  FALSE
[03:09:11.833]      // skip if-block "protType == 1"
[03:09:11.833]    </control>
[03:09:11.833]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:11.833]      // if-block "protType == 2"
[03:09:11.833]        // =>  TRUE
[03:09:11.833]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:11.833]        // if-block "isSWJ"
[03:09:11.833]          // =>  TRUE
[03:09:11.833]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:11.833]          // if-block "hasDormant"
[03:09:11.833]            // =>  FALSE
[03:09:11.833]          // skip if-block "hasDormant"
[03:09:11.833]        </control>
[03:09:11.833]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:11.833]          // if-block "!hasDormant"
[03:09:11.833]            // =>  TRUE
[03:09:11.833]          <block atomic="false" info="">
[03:09:11.833]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:12.842]  
[03:09:12.842]  !!! E320 : DAP access error
[03:09:12.842]  
[03:09:12.850]          </block>
[03:09:12.850]          // end if-block "!hasDormant"
[03:09:12.850]        </control>
[03:09:12.850]        // end if-block "isSWJ"
[03:09:12.850]      </control>
[03:09:12.850]      // end if-block "protType == 2"
[03:09:12.850]    </control>
[03:09:12.850]  </sequence>
[03:09:12.850]  
[03:09:13.106]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:13.106]  
[03:09:13.106]  <debugvars>
[03:09:13.106]    // Pre-defined
[03:09:13.106]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:13.106]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:13.106]    __dp=0x00000000
[03:09:13.106]    __ap=0x00000000
[03:09:13.106]    __traceout=0x00000000      (Trace Disabled)
[03:09:13.106]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:13.106]    __FlashAddr=0x00000000
[03:09:13.106]    __FlashLen=0x00000000
[03:09:13.106]    __FlashArg=0x00000000
[03:09:13.106]    __FlashOp=0x00000000
[03:09:13.106]    __Result=0x00000000
[03:09:13.106]  </debugvars>
[03:09:13.106]  
[03:09:13.106]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:13.106]    <block atomic="false" info="">
[03:09:13.106]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:13.110]        // -> [isSWJ <= 0x00000001]
[03:09:13.110]      __var hasDormant = __protocol & 0x00020000;
[03:09:13.110]        // -> [hasDormant <= 0x00000000]
[03:09:13.110]      __var protType   = __protocol & 0x0000FFFF;
[03:09:13.110]        // -> [protType <= 0x00000002]
[03:09:13.110]    </block>
[03:09:13.110]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:13.110]      // if-block "protType == 1"
[03:09:13.110]        // =>  FALSE
[03:09:13.110]      // skip if-block "protType == 1"
[03:09:13.110]    </control>
[03:09:13.110]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:13.110]      // if-block "protType == 2"
[03:09:13.110]        // =>  TRUE
[03:09:13.110]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:13.110]        // if-block "isSWJ"
[03:09:13.110]          // =>  TRUE
[03:09:13.110]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:13.110]          // if-block "hasDormant"
[03:09:13.110]            // =>  FALSE
[03:09:13.110]          // skip if-block "hasDormant"
[03:09:13.110]        </control>
[03:09:13.110]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:13.110]          // if-block "!hasDormant"
[03:09:13.110]            // =>  TRUE
[03:09:13.110]          <block atomic="false" info="">
[03:09:13.110]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:14.114]  
[03:09:14.114]  !!! E320 : DAP access error
[03:09:14.114]  
[03:09:14.122]          </block>
[03:09:14.122]          // end if-block "!hasDormant"
[03:09:14.122]        </control>
[03:09:14.122]        // end if-block "isSWJ"
[03:09:14.122]      </control>
[03:09:14.122]      // end if-block "protType == 2"
[03:09:14.122]    </control>
[03:09:14.122]  </sequence>
[03:09:14.122]  
[03:09:14.378]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:14.378]  
[03:09:14.387]  <debugvars>
[03:09:14.387]    // Pre-defined
[03:09:14.387]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:14.387]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:14.387]    __dp=0x00000000
[03:09:14.387]    __ap=0x00000000
[03:09:14.387]    __traceout=0x00000000      (Trace Disabled)
[03:09:14.387]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:14.387]    __FlashAddr=0x00000000
[03:09:14.387]    __FlashLen=0x00000000
[03:09:14.387]    __FlashArg=0x00000000
[03:09:14.387]    __FlashOp=0x00000000
[03:09:14.387]    __Result=0x00000000
[03:09:14.387]  </debugvars>
[03:09:14.387]  
[03:09:14.387]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:14.387]    <block atomic="false" info="">
[03:09:14.387]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:14.387]        // -> [isSWJ <= 0x00000001]
[03:09:14.387]      __var hasDormant = __protocol & 0x00020000;
[03:09:14.387]        // -> [hasDormant <= 0x00000000]
[03:09:14.387]      __var protType   = __protocol & 0x0000FFFF;
[03:09:14.387]        // -> [protType <= 0x00000002]
[03:09:14.387]    </block>
[03:09:14.387]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:14.387]      // if-block "protType == 1"
[03:09:14.387]        // =>  FALSE
[03:09:14.387]      // skip if-block "protType == 1"
[03:09:14.387]    </control>
[03:09:14.387]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:14.387]      // if-block "protType == 2"
[03:09:14.387]        // =>  TRUE
[03:09:14.387]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:14.387]        // if-block "isSWJ"
[03:09:14.387]          // =>  TRUE
[03:09:14.387]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:14.391]          // if-block "hasDormant"
[03:09:14.391]            // =>  FALSE
[03:09:14.391]          // skip if-block "hasDormant"
[03:09:14.391]        </control>
[03:09:14.391]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:14.391]          // if-block "!hasDormant"
[03:09:14.391]            // =>  TRUE
[03:09:14.391]          <block atomic="false" info="">
[03:09:14.391]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:15.398]  
[03:09:15.398]  !!! E320 : DAP access error
[03:09:15.398]  
[03:09:15.406]          </block>
[03:09:15.406]          // end if-block "!hasDormant"
[03:09:15.406]        </control>
[03:09:15.406]        // end if-block "isSWJ"
[03:09:15.406]      </control>
[03:09:15.406]      // end if-block "protType == 2"
[03:09:15.406]    </control>
[03:09:15.406]  </sequence>
[03:09:15.406]  
[03:09:15.663]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:15.663]  
[03:09:15.671]  <debugvars>
[03:09:15.671]    // Pre-defined
[03:09:15.671]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:15.671]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:15.671]    __dp=0x00000000
[03:09:15.671]    __ap=0x00000000
[03:09:15.671]    __traceout=0x00000000      (Trace Disabled)
[03:09:15.671]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:15.671]    __FlashAddr=0x00000000
[03:09:15.671]    __FlashLen=0x00000000
[03:09:15.671]    __FlashArg=0x00000000
[03:09:15.671]    __FlashOp=0x00000000
[03:09:15.671]    __Result=0x00000000
[03:09:15.671]  </debugvars>
[03:09:15.671]  
[03:09:15.671]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:15.671]    <block atomic="false" info="">
[03:09:15.671]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:15.671]        // -> [isSWJ <= 0x00000001]
[03:09:15.671]      __var hasDormant = __protocol & 0x00020000;
[03:09:15.671]        // -> [hasDormant <= 0x00000000]
[03:09:15.671]      __var protType   = __protocol & 0x0000FFFF;
[03:09:15.671]        // -> [protType <= 0x00000002]
[03:09:15.671]    </block>
[03:09:15.671]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:15.671]      // if-block "protType == 1"
[03:09:15.671]        // =>  FALSE
[03:09:15.671]      // skip if-block "protType == 1"
[03:09:15.671]    </control>
[03:09:15.671]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:15.671]      // if-block "protType == 2"
[03:09:15.671]        // =>  TRUE
[03:09:15.671]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:15.671]        // if-block "isSWJ"
[03:09:15.671]          // =>  TRUE
[03:09:15.671]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:15.671]          // if-block "hasDormant"
[03:09:15.671]            // =>  FALSE
[03:09:15.671]          // skip if-block "hasDormant"
[03:09:15.675]        </control>
[03:09:15.675]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:15.675]          // if-block "!hasDormant"
[03:09:15.675]            // =>  TRUE
[03:09:15.675]          <block atomic="false" info="">
[03:09:15.675]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:16.677]  
[03:09:16.677]  !!! E320 : DAP access error
[03:09:16.677]  
[03:09:16.685]          </block>
[03:09:16.685]          // end if-block "!hasDormant"
[03:09:16.685]        </control>
[03:09:16.685]        // end if-block "isSWJ"
[03:09:16.685]      </control>
[03:09:16.685]      // end if-block "protType == 2"
[03:09:16.685]    </control>
[03:09:16.685]  </sequence>
[03:09:16.685]  
[03:09:16.938]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:16.938]  
[03:09:16.940]  <debugvars>
[03:09:16.940]    // Pre-defined
[03:09:16.940]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:16.940]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:16.940]    __dp=0x00000000
[03:09:16.940]    __ap=0x00000000
[03:09:16.941]    __traceout=0x00000000      (Trace Disabled)
[03:09:16.941]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:16.941]    __FlashAddr=0x00000000
[03:09:16.941]    __FlashLen=0x00000000
[03:09:16.941]    __FlashArg=0x00000000
[03:09:16.941]    __FlashOp=0x00000000
[03:09:16.941]    __Result=0x00000000
[03:09:16.941]  </debugvars>
[03:09:16.941]  
[03:09:16.941]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:16.941]    <block atomic="false" info="">
[03:09:16.941]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:16.941]        // -> [isSWJ <= 0x00000001]
[03:09:16.941]      __var hasDormant = __protocol & 0x00020000;
[03:09:16.942]        // -> [hasDormant <= 0x00000000]
[03:09:16.942]      __var protType   = __protocol & 0x0000FFFF;
[03:09:16.942]        // -> [protType <= 0x00000002]
[03:09:16.942]    </block>
[03:09:16.942]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:16.942]      // if-block "protType == 1"
[03:09:16.942]        // =>  FALSE
[03:09:16.942]      // skip if-block "protType == 1"
[03:09:16.942]    </control>
[03:09:16.943]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:16.943]      // if-block "protType == 2"
[03:09:16.943]        // =>  TRUE
[03:09:16.943]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:16.943]        // if-block "isSWJ"
[03:09:16.943]          // =>  TRUE
[03:09:16.944]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:16.944]          // if-block "hasDormant"
[03:09:16.944]            // =>  FALSE
[03:09:16.944]          // skip if-block "hasDormant"
[03:09:16.944]        </control>
[03:09:16.944]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:16.944]          // if-block "!hasDormant"
[03:09:16.944]            // =>  TRUE
[03:09:16.944]          <block atomic="false" info="">
[03:09:16.944]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:17.946]  
[03:09:17.946]  !!! E320 : DAP access error
[03:09:17.946]  
[03:09:17.954]          </block>
[03:09:17.954]          // end if-block "!hasDormant"
[03:09:17.954]        </control>
[03:09:17.954]        // end if-block "isSWJ"
[03:09:17.954]      </control>
[03:09:17.954]      // end if-block "protType == 2"
[03:09:17.954]    </control>
[03:09:17.954]  </sequence>
[03:09:17.954]  
[03:09:18.206]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:18.206]  
[03:09:18.206]  <debugvars>
[03:09:18.206]    // Pre-defined
[03:09:18.206]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:18.206]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:18.206]    __dp=0x00000000
[03:09:18.206]    __ap=0x00000000
[03:09:18.206]    __traceout=0x00000000      (Trace Disabled)
[03:09:18.206]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:18.206]    __FlashAddr=0x00000000
[03:09:18.206]    __FlashLen=0x00000000
[03:09:18.206]    __FlashArg=0x00000000
[03:09:18.206]    __FlashOp=0x00000000
[03:09:18.206]    __Result=0x00000000
[03:09:18.206]  </debugvars>
[03:09:18.206]  
[03:09:18.206]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:18.206]    <block atomic="false" info="">
[03:09:18.210]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:18.210]        // -> [isSWJ <= 0x00000001]
[03:09:18.210]      __var hasDormant = __protocol & 0x00020000;
[03:09:18.210]        // -> [hasDormant <= 0x00000000]
[03:09:18.210]      __var protType   = __protocol & 0x0000FFFF;
[03:09:18.210]        // -> [protType <= 0x00000002]
[03:09:18.210]    </block>
[03:09:18.210]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:18.210]      // if-block "protType == 1"
[03:09:18.210]        // =>  FALSE
[03:09:18.210]      // skip if-block "protType == 1"
[03:09:18.210]    </control>
[03:09:18.210]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:18.210]      // if-block "protType == 2"
[03:09:18.210]        // =>  TRUE
[03:09:18.210]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:18.210]        // if-block "isSWJ"
[03:09:18.210]          // =>  TRUE
[03:09:18.210]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:18.210]          // if-block "hasDormant"
[03:09:18.210]            // =>  FALSE
[03:09:18.210]          // skip if-block "hasDormant"
[03:09:18.210]        </control>
[03:09:18.210]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:18.210]          // if-block "!hasDormant"
[03:09:18.210]            // =>  TRUE
[03:09:18.210]          <block atomic="false" info="">
[03:09:18.210]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:19.218]  
[03:09:19.218]  !!! E320 : DAP access error
[03:09:19.218]  
[03:09:19.218]          </block>
[03:09:19.218]          // end if-block "!hasDormant"
[03:09:19.218]        </control>
[03:09:19.218]        // end if-block "isSWJ"
[03:09:19.218]      </control>
[03:09:19.218]      // end if-block "protType == 2"
[03:09:19.218]    </control>
[03:09:19.218]  </sequence>
[03:09:19.218]  
[03:09:19.473]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:19.473]  
[03:09:19.473]  <debugvars>
[03:09:19.473]    // Pre-defined
[03:09:19.473]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:19.473]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:19.473]    __dp=0x00000000
[03:09:19.473]    __ap=0x00000000
[03:09:19.473]    __traceout=0x00000000      (Trace Disabled)
[03:09:19.473]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:19.473]    __FlashAddr=0x00000000
[03:09:19.473]    __FlashLen=0x00000000
[03:09:19.473]    __FlashArg=0x00000000
[03:09:19.473]    __FlashOp=0x00000000
[03:09:19.473]    __Result=0x00000000
[03:09:19.473]  </debugvars>
[03:09:19.473]  
[03:09:19.473]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:19.473]    <block atomic="false" info="">
[03:09:19.473]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:19.473]        // -> [isSWJ <= 0x00000001]
[03:09:19.473]      __var hasDormant = __protocol & 0x00020000;
[03:09:19.473]        // -> [hasDormant <= 0x00000000]
[03:09:19.473]      __var protType   = __protocol & 0x0000FFFF;
[03:09:19.473]        // -> [protType <= 0x00000002]
[03:09:19.473]    </block>
[03:09:19.477]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:19.477]      // if-block "protType == 1"
[03:09:19.477]        // =>  FALSE
[03:09:19.477]      // skip if-block "protType == 1"
[03:09:19.477]    </control>
[03:09:19.477]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:19.477]      // if-block "protType == 2"
[03:09:19.477]        // =>  TRUE
[03:09:19.477]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:19.477]        // if-block "isSWJ"
[03:09:19.477]          // =>  TRUE
[03:09:19.477]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:19.477]          // if-block "hasDormant"
[03:09:19.477]            // =>  FALSE
[03:09:19.477]          // skip if-block "hasDormant"
[03:09:19.477]        </control>
[03:09:19.477]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:19.477]          // if-block "!hasDormant"
[03:09:19.477]            // =>  TRUE
[03:09:19.477]          <block atomic="false" info="">
[03:09:19.477]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:20.478]  
[03:09:20.478]  !!! E320 : DAP access error
[03:09:20.478]  
[03:09:20.486]          </block>
[03:09:20.486]          // end if-block "!hasDormant"
[03:09:20.486]        </control>
[03:09:20.486]        // end if-block "isSWJ"
[03:09:20.486]      </control>
[03:09:20.486]      // end if-block "protType == 2"
[03:09:20.486]    </control>
[03:09:20.486]  </sequence>
[03:09:20.486]  
[03:09:20.745]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:20.745]  
[03:09:20.754]  <debugvars>
[03:09:20.754]    // Pre-defined
[03:09:20.754]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:20.754]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:20.754]    __dp=0x00000000
[03:09:20.754]    __ap=0x00000000
[03:09:20.754]    __traceout=0x00000000      (Trace Disabled)
[03:09:20.754]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:20.755]    __FlashAddr=0x00000000
[03:09:20.755]    __FlashLen=0x00000000
[03:09:20.755]    __FlashArg=0x00000000
[03:09:20.755]    __FlashOp=0x00000000
[03:09:20.755]    __Result=0x00000000
[03:09:20.755]  </debugvars>
[03:09:20.755]  
[03:09:20.755]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:20.755]    <block atomic="false" info="">
[03:09:20.755]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:20.755]        // -> [isSWJ <= 0x00000001]
[03:09:20.755]      __var hasDormant = __protocol & 0x00020000;
[03:09:20.755]        // -> [hasDormant <= 0x00000000]
[03:09:20.755]      __var protType   = __protocol & 0x0000FFFF;
[03:09:20.757]        // -> [protType <= 0x00000002]
[03:09:20.757]    </block>
[03:09:20.757]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:20.757]      // if-block "protType == 1"
[03:09:20.758]        // =>  FALSE
[03:09:20.758]      // skip if-block "protType == 1"
[03:09:20.758]    </control>
[03:09:20.758]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:20.758]      // if-block "protType == 2"
[03:09:20.758]        // =>  TRUE
[03:09:20.758]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:20.758]        // if-block "isSWJ"
[03:09:20.758]          // =>  TRUE
[03:09:20.758]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:20.758]          // if-block "hasDormant"
[03:09:20.758]            // =>  FALSE
[03:09:20.758]          // skip if-block "hasDormant"
[03:09:20.758]        </control>
[03:09:20.758]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:20.758]          // if-block "!hasDormant"
[03:09:20.758]            // =>  TRUE
[03:09:20.758]          <block atomic="false" info="">
[03:09:20.758]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:21.758]  
[03:09:21.758]  !!! E320 : DAP access error
[03:09:21.758]  
[03:09:21.758]          </block>
[03:09:21.758]          // end if-block "!hasDormant"
[03:09:21.758]        </control>
[03:09:21.758]        // end if-block "isSWJ"
[03:09:21.758]      </control>
[03:09:21.758]      // end if-block "protType == 2"
[03:09:21.758]    </control>
[03:09:21.758]  </sequence>
[03:09:21.758]  
[03:09:22.012]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:22.012]  
[03:09:22.020]  <debugvars>
[03:09:22.020]    // Pre-defined
[03:09:22.020]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:22.020]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:22.020]    __dp=0x00000000
[03:09:22.020]    __ap=0x00000000
[03:09:22.020]    __traceout=0x00000000      (Trace Disabled)
[03:09:22.020]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:22.020]    __FlashAddr=0x00000000
[03:09:22.020]    __FlashLen=0x00000000
[03:09:22.020]    __FlashArg=0x00000000
[03:09:22.020]    __FlashOp=0x00000000
[03:09:22.020]    __Result=0x00000000
[03:09:22.020]  </debugvars>
[03:09:22.020]  
[03:09:22.020]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:22.020]    <block atomic="false" info="">
[03:09:22.020]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:22.020]        // -> [isSWJ <= 0x00000001]
[03:09:22.020]      __var hasDormant = __protocol & 0x00020000;
[03:09:22.020]        // -> [hasDormant <= 0x00000000]
[03:09:22.020]      __var protType   = __protocol & 0x0000FFFF;
[03:09:22.020]        // -> [protType <= 0x00000002]
[03:09:22.020]    </block>
[03:09:22.020]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:22.020]      // if-block "protType == 1"
[03:09:22.020]        // =>  FALSE
[03:09:22.020]      // skip if-block "protType == 1"
[03:09:22.020]    </control>
[03:09:22.020]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:22.020]      // if-block "protType == 2"
[03:09:22.020]        // =>  TRUE
[03:09:22.020]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:22.020]        // if-block "isSWJ"
[03:09:22.020]          // =>  TRUE
[03:09:22.020]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:22.020]          // if-block "hasDormant"
[03:09:22.020]            // =>  FALSE
[03:09:22.020]          // skip if-block "hasDormant"
[03:09:22.024]        </control>
[03:09:22.024]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:22.024]          // if-block "!hasDormant"
[03:09:22.024]            // =>  TRUE
[03:09:22.024]          <block atomic="false" info="">
[03:09:22.024]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:23.033]  
[03:09:23.033]  !!! E320 : DAP access error
[03:09:23.033]  
[03:09:23.042]          </block>
[03:09:23.042]          // end if-block "!hasDormant"
[03:09:23.042]        </control>
[03:09:23.042]        // end if-block "isSWJ"
[03:09:23.042]      </control>
[03:09:23.042]      // end if-block "protType == 2"
[03:09:23.042]    </control>
[03:09:23.042]  </sequence>
[03:09:23.042]  
[03:09:23.299]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:23.299]  
[03:09:23.308]  <debugvars>
[03:09:23.308]    // Pre-defined
[03:09:23.308]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:23.308]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:23.308]    __dp=0x00000000
[03:09:23.308]    __ap=0x00000000
[03:09:23.308]    __traceout=0x00000000      (Trace Disabled)
[03:09:23.308]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:23.308]    __FlashAddr=0x00000000
[03:09:23.308]    __FlashLen=0x00000000
[03:09:23.308]    __FlashArg=0x00000000
[03:09:23.308]    __FlashOp=0x00000000
[03:09:23.308]    __Result=0x00000000
[03:09:23.308]  </debugvars>
[03:09:23.308]  
[03:09:23.308]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:23.308]    <block atomic="false" info="">
[03:09:23.308]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:23.308]        // -> [isSWJ <= 0x00000001]
[03:09:23.308]      __var hasDormant = __protocol & 0x00020000;
[03:09:23.308]        // -> [hasDormant <= 0x00000000]
[03:09:23.308]      __var protType   = __protocol & 0x0000FFFF;
[03:09:23.308]        // -> [protType <= 0x00000002]
[03:09:23.311]    </block>
[03:09:23.311]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:23.311]      // if-block "protType == 1"
[03:09:23.311]        // =>  FALSE
[03:09:23.311]      // skip if-block "protType == 1"
[03:09:23.311]    </control>
[03:09:23.311]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:23.311]      // if-block "protType == 2"
[03:09:23.311]        // =>  TRUE
[03:09:23.311]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:23.311]        // if-block "isSWJ"
[03:09:23.311]          // =>  TRUE
[03:09:23.311]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:23.311]          // if-block "hasDormant"
[03:09:23.311]            // =>  FALSE
[03:09:23.311]          // skip if-block "hasDormant"
[03:09:23.311]        </control>
[03:09:23.311]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:23.311]          // if-block "!hasDormant"
[03:09:23.311]            // =>  TRUE
[03:09:23.311]          <block atomic="false" info="">
[03:09:23.311]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:24.319]  
[03:09:24.319]  !!! E320 : DAP access error
[03:09:24.319]  
[03:09:24.327]          </block>
[03:09:24.327]          // end if-block "!hasDormant"
[03:09:24.327]        </control>
[03:09:24.327]        // end if-block "isSWJ"
[03:09:24.327]      </control>
[03:09:24.327]      // end if-block "protType == 2"
[03:09:24.327]    </control>
[03:09:24.327]  </sequence>
[03:09:24.327]  
[03:09:24.588]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:24.588]  
[03:09:24.597]  <debugvars>
[03:09:24.597]    // Pre-defined
[03:09:24.597]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:24.597]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:24.597]    __dp=0x00000000
[03:09:24.597]    __ap=0x00000000
[03:09:24.597]    __traceout=0x00000000      (Trace Disabled)
[03:09:24.597]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:24.597]    __FlashAddr=0x00000000
[03:09:24.597]    __FlashLen=0x00000000
[03:09:24.597]    __FlashArg=0x00000000
[03:09:24.597]    __FlashOp=0x00000000
[03:09:24.597]    __Result=0x00000000
[03:09:24.597]  </debugvars>
[03:09:24.597]  
[03:09:24.597]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:24.597]    <block atomic="false" info="">
[03:09:24.597]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:24.597]        // -> [isSWJ <= 0x00000001]
[03:09:24.597]      __var hasDormant = __protocol & 0x00020000;
[03:09:24.597]        // -> [hasDormant <= 0x00000000]
[03:09:24.597]      __var protType   = __protocol & 0x0000FFFF;
[03:09:24.597]        // -> [protType <= 0x00000002]
[03:09:24.597]    </block>
[03:09:24.597]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:24.600]      // if-block "protType == 1"
[03:09:24.600]        // =>  FALSE
[03:09:24.600]      // skip if-block "protType == 1"
[03:09:24.600]    </control>
[03:09:24.600]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:24.600]      // if-block "protType == 2"
[03:09:24.600]        // =>  TRUE
[03:09:24.600]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:24.600]        // if-block "isSWJ"
[03:09:24.600]          // =>  TRUE
[03:09:24.600]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:24.600]          // if-block "hasDormant"
[03:09:24.600]            // =>  FALSE
[03:09:24.600]          // skip if-block "hasDormant"
[03:09:24.600]        </control>
[03:09:24.600]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:24.600]          // if-block "!hasDormant"
[03:09:24.600]            // =>  TRUE
[03:09:24.600]          <block atomic="false" info="">
[03:09:24.600]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:25.600]  
[03:09:25.600]  !!! E320 : DAP access error
[03:09:25.600]  
[03:09:25.609]          </block>
[03:09:25.609]          // end if-block "!hasDormant"
[03:09:25.609]        </control>
[03:09:25.609]        // end if-block "isSWJ"
[03:09:25.609]      </control>
[03:09:25.609]      // end if-block "protType == 2"
[03:09:25.609]    </control>
[03:09:25.609]  </sequence>
[03:09:25.609]  
[03:09:25.868]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:25.868]  
[03:09:25.877]  <debugvars>
[03:09:25.877]    // Pre-defined
[03:09:25.877]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:25.877]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:25.877]    __dp=0x00000000
[03:09:25.877]    __ap=0x00000000
[03:09:25.877]    __traceout=0x00000000      (Trace Disabled)
[03:09:25.877]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:25.877]    __FlashAddr=0x00000000
[03:09:25.877]    __FlashLen=0x00000000
[03:09:25.877]    __FlashArg=0x00000000
[03:09:25.877]    __FlashOp=0x00000000
[03:09:25.877]    __Result=0x00000000
[03:09:25.877]  </debugvars>
[03:09:25.877]  
[03:09:25.877]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:25.877]    <block atomic="false" info="">
[03:09:25.877]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:25.877]        // -> [isSWJ <= 0x00000001]
[03:09:25.877]      __var hasDormant = __protocol & 0x00020000;
[03:09:25.877]        // -> [hasDormant <= 0x00000000]
[03:09:25.877]      __var protType   = __protocol & 0x0000FFFF;
[03:09:25.877]        // -> [protType <= 0x00000002]
[03:09:25.877]    </block>
[03:09:25.880]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:25.880]      // if-block "protType == 1"
[03:09:25.880]        // =>  FALSE
[03:09:25.880]      // skip if-block "protType == 1"
[03:09:25.880]    </control>
[03:09:25.880]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:25.880]      // if-block "protType == 2"
[03:09:25.880]        // =>  TRUE
[03:09:25.880]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:25.880]        // if-block "isSWJ"
[03:09:25.881]          // =>  TRUE
[03:09:25.881]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:25.881]          // if-block "hasDormant"
[03:09:25.881]            // =>  FALSE
[03:09:25.881]          // skip if-block "hasDormant"
[03:09:25.881]        </control>
[03:09:25.881]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:25.881]          // if-block "!hasDormant"
[03:09:25.881]            // =>  TRUE
[03:09:25.881]          <block atomic="false" info="">
[03:09:25.881]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:26.886]  
[03:09:26.886]  !!! E320 : DAP access error
[03:09:26.886]  
[03:09:26.894]          </block>
[03:09:26.894]          // end if-block "!hasDormant"
[03:09:26.894]        </control>
[03:09:26.894]        // end if-block "isSWJ"
[03:09:26.894]      </control>
[03:09:26.894]      // end if-block "protType == 2"
[03:09:26.894]    </control>
[03:09:26.894]  </sequence>
[03:09:26.894]  
[03:09:27.151]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:27.151]  
[03:09:27.160]  <debugvars>
[03:09:27.160]    // Pre-defined
[03:09:27.160]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:27.160]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:27.160]    __dp=0x00000000
[03:09:27.160]    __ap=0x00000000
[03:09:27.160]    __traceout=0x00000000      (Trace Disabled)
[03:09:27.160]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:27.160]    __FlashAddr=0x00000000
[03:09:27.160]    __FlashLen=0x00000000
[03:09:27.160]    __FlashArg=0x00000000
[03:09:27.160]    __FlashOp=0x00000000
[03:09:27.160]    __Result=0x00000000
[03:09:27.160]  </debugvars>
[03:09:27.160]  
[03:09:27.160]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:27.160]    <block atomic="false" info="">
[03:09:27.160]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:27.160]        // -> [isSWJ <= 0x00000001]
[03:09:27.160]      __var hasDormant = __protocol & 0x00020000;
[03:09:27.160]        // -> [hasDormant <= 0x00000000]
[03:09:27.160]      __var protType   = __protocol & 0x0000FFFF;
[03:09:27.160]        // -> [protType <= 0x00000002]
[03:09:27.160]    </block>
[03:09:27.160]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:27.160]      // if-block "protType == 1"
[03:09:27.160]        // =>  FALSE
[03:09:27.160]      // skip if-block "protType == 1"
[03:09:27.160]    </control>
[03:09:27.163]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:27.163]      // if-block "protType == 2"
[03:09:27.163]        // =>  TRUE
[03:09:27.163]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:27.163]        // if-block "isSWJ"
[03:09:27.163]          // =>  TRUE
[03:09:27.163]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:27.163]          // if-block "hasDormant"
[03:09:27.163]            // =>  FALSE
[03:09:27.163]          // skip if-block "hasDormant"
[03:09:27.163]        </control>
[03:09:27.164]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:27.164]          // if-block "!hasDormant"
[03:09:27.165]            // =>  TRUE
[03:09:27.165]          <block atomic="false" info="">
[03:09:27.165]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:28.171]  
[03:09:28.171]  !!! E320 : DAP access error
[03:09:28.171]  
[03:09:28.171]          </block>
[03:09:28.171]          // end if-block "!hasDormant"
[03:09:28.171]        </control>
[03:09:28.171]        // end if-block "isSWJ"
[03:09:28.171]      </control>
[03:09:28.171]      // end if-block "protType == 2"
[03:09:28.171]    </control>
[03:09:28.171]  </sequence>
[03:09:28.171]  
[03:09:28.434]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:28.434]  
[03:09:28.441]  <debugvars>
[03:09:28.441]    // Pre-defined
[03:09:28.441]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:28.441]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:28.441]    __dp=0x00000000
[03:09:28.441]    __ap=0x00000000
[03:09:28.441]    __traceout=0x00000000      (Trace Disabled)
[03:09:28.441]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:28.441]    __FlashAddr=0x00000000
[03:09:28.441]    __FlashLen=0x00000000
[03:09:28.441]    __FlashArg=0x00000000
[03:09:28.441]    __FlashOp=0x00000000
[03:09:28.443]    __Result=0x00000000
[03:09:28.443]  </debugvars>
[03:09:28.443]  
[03:09:28.443]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:28.443]    <block atomic="false" info="">
[03:09:28.443]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:28.443]        // -> [isSWJ <= 0x00000001]
[03:09:28.443]      __var hasDormant = __protocol & 0x00020000;
[03:09:28.443]        // -> [hasDormant <= 0x00000000]
[03:09:28.443]      __var protType   = __protocol & 0x0000FFFF;
[03:09:28.443]        // -> [protType <= 0x00000002]
[03:09:28.445]    </block>
[03:09:28.445]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:28.445]      // if-block "protType == 1"
[03:09:28.445]        // =>  FALSE
[03:09:28.445]      // skip if-block "protType == 1"
[03:09:28.445]    </control>
[03:09:28.445]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:28.445]      // if-block "protType == 2"
[03:09:28.446]        // =>  TRUE
[03:09:28.446]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:28.446]        // if-block "isSWJ"
[03:09:28.446]          // =>  TRUE
[03:09:28.446]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:28.446]          // if-block "hasDormant"
[03:09:28.446]            // =>  FALSE
[03:09:28.446]          // skip if-block "hasDormant"
[03:09:28.446]        </control>
[03:09:28.446]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:28.446]          // if-block "!hasDormant"
[03:09:28.446]            // =>  TRUE
[03:09:28.446]          <block atomic="false" info="">
[03:09:28.446]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:29.457]  
[03:09:29.457]  !!! E320 : DAP access error
[03:09:29.457]  
[03:09:29.457]          </block>
[03:09:29.457]          // end if-block "!hasDormant"
[03:09:29.457]        </control>
[03:09:29.457]        // end if-block "isSWJ"
[03:09:29.457]      </control>
[03:09:29.457]      // end if-block "protType == 2"
[03:09:29.457]    </control>
[03:09:29.457]  </sequence>
[03:09:29.457]  
[03:09:29.716]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:29.716]  
[03:09:29.724]  <debugvars>
[03:09:29.724]    // Pre-defined
[03:09:29.724]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:29.724]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:29.724]    __dp=0x00000000
[03:09:29.724]    __ap=0x00000000
[03:09:29.724]    __traceout=0x00000000      (Trace Disabled)
[03:09:29.724]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:29.724]    __FlashAddr=0x00000000
[03:09:29.724]    __FlashLen=0x00000000
[03:09:29.724]    __FlashArg=0x00000000
[03:09:29.724]    __FlashOp=0x00000000
[03:09:29.724]    __Result=0x00000000
[03:09:29.724]  </debugvars>
[03:09:29.724]  
[03:09:29.724]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:29.724]    <block atomic="false" info="">
[03:09:29.724]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:29.724]        // -> [isSWJ <= 0x00000001]
[03:09:29.724]      __var hasDormant = __protocol & 0x00020000;
[03:09:29.724]        // -> [hasDormant <= 0x00000000]
[03:09:29.724]      __var protType   = __protocol & 0x0000FFFF;
[03:09:29.724]        // -> [protType <= 0x00000002]
[03:09:29.724]    </block>
[03:09:29.724]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:29.724]      // if-block "protType == 1"
[03:09:29.724]        // =>  FALSE
[03:09:29.724]      // skip if-block "protType == 1"
[03:09:29.724]    </control>
[03:09:29.724]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:29.724]      // if-block "protType == 2"
[03:09:29.724]        // =>  TRUE
[03:09:29.728]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:29.728]        // if-block "isSWJ"
[03:09:29.728]          // =>  TRUE
[03:09:29.728]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:29.728]          // if-block "hasDormant"
[03:09:29.728]            // =>  FALSE
[03:09:29.728]          // skip if-block "hasDormant"
[03:09:29.728]        </control>
[03:09:29.728]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:29.728]          // if-block "!hasDormant"
[03:09:29.728]            // =>  TRUE
[03:09:29.728]          <block atomic="false" info="">
[03:09:29.728]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:30.737]  
[03:09:30.737]  !!! E320 : DAP access error
[03:09:30.737]  
[03:09:30.745]          </block>
[03:09:30.745]          // end if-block "!hasDormant"
[03:09:30.745]        </control>
[03:09:30.745]        // end if-block "isSWJ"
[03:09:30.745]      </control>
[03:09:30.745]      // end if-block "protType == 2"
[03:09:30.745]    </control>
[03:09:30.745]  </sequence>
[03:09:30.745]  
[03:09:31.005]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:31.005]  
[03:09:31.013]  <debugvars>
[03:09:31.013]    // Pre-defined
[03:09:31.013]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:31.013]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:31.013]    __dp=0x00000000
[03:09:31.013]    __ap=0x00000000
[03:09:31.013]    __traceout=0x00000000      (Trace Disabled)
[03:09:31.013]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:31.013]    __FlashAddr=0x00000000
[03:09:31.013]    __FlashLen=0x00000000
[03:09:31.013]    __FlashArg=0x00000000
[03:09:31.013]    __FlashOp=0x00000000
[03:09:31.013]    __Result=0x00000000
[03:09:31.013]  </debugvars>
[03:09:31.013]  
[03:09:31.013]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:31.013]    <block atomic="false" info="">
[03:09:31.013]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:31.013]        // -> [isSWJ <= 0x00000001]
[03:09:31.013]      __var hasDormant = __protocol & 0x00020000;
[03:09:31.013]        // -> [hasDormant <= 0x00000000]
[03:09:31.013]      __var protType   = __protocol & 0x0000FFFF;
[03:09:31.013]        // -> [protType <= 0x00000002]
[03:09:31.013]    </block>
[03:09:31.013]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:31.013]      // if-block "protType == 1"
[03:09:31.013]        // =>  FALSE
[03:09:31.017]      // skip if-block "protType == 1"
[03:09:31.017]    </control>
[03:09:31.017]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:31.017]      // if-block "protType == 2"
[03:09:31.017]        // =>  TRUE
[03:09:31.017]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:31.017]        // if-block "isSWJ"
[03:09:31.017]          // =>  TRUE
[03:09:31.017]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:31.017]          // if-block "hasDormant"
[03:09:31.018]            // =>  FALSE
[03:09:31.018]          // skip if-block "hasDormant"
[03:09:31.018]        </control>
[03:09:31.018]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:31.018]          // if-block "!hasDormant"
[03:09:31.018]            // =>  TRUE
[03:09:31.018]          <block atomic="false" info="">
[03:09:31.018]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:32.020]  
[03:09:32.020]  !!! E320 : DAP access error
[03:09:32.020]  
[03:09:32.028]          </block>
[03:09:32.028]          // end if-block "!hasDormant"
[03:09:32.028]        </control>
[03:09:32.028]        // end if-block "isSWJ"
[03:09:32.028]      </control>
[03:09:32.028]      // end if-block "protType == 2"
[03:09:32.028]    </control>
[03:09:32.028]  </sequence>
[03:09:32.028]  
[03:09:32.280]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:32.280]  
[03:09:32.280]  <debugvars>
[03:09:32.280]    // Pre-defined
[03:09:32.280]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:32.280]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:32.281]    __dp=0x00000000
[03:09:32.281]    __ap=0x00000000
[03:09:32.281]    __traceout=0x00000000      (Trace Disabled)
[03:09:32.281]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:32.281]    __FlashAddr=0x00000000
[03:09:32.282]    __FlashLen=0x00000000
[03:09:32.282]    __FlashArg=0x00000000
[03:09:32.282]    __FlashOp=0x00000000
[03:09:32.282]    __Result=0x00000000
[03:09:32.282]  </debugvars>
[03:09:32.282]  
[03:09:32.282]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:32.282]    <block atomic="false" info="">
[03:09:32.282]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:32.282]        // -> [isSWJ <= 0x00000001]
[03:09:32.283]      __var hasDormant = __protocol & 0x00020000;
[03:09:32.283]        // -> [hasDormant <= 0x00000000]
[03:09:32.283]      __var protType   = __protocol & 0x0000FFFF;
[03:09:32.283]        // -> [protType <= 0x00000002]
[03:09:32.283]    </block>
[03:09:32.283]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:32.283]      // if-block "protType == 1"
[03:09:32.283]        // =>  FALSE
[03:09:32.283]      // skip if-block "protType == 1"
[03:09:32.283]    </control>
[03:09:32.283]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:32.285]      // if-block "protType == 2"
[03:09:32.285]        // =>  TRUE
[03:09:32.285]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:32.285]        // if-block "isSWJ"
[03:09:32.285]          // =>  TRUE
[03:09:32.285]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:32.285]          // if-block "hasDormant"
[03:09:32.285]            // =>  FALSE
[03:09:32.285]          // skip if-block "hasDormant"
[03:09:32.285]        </control>
[03:09:32.285]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:32.285]          // if-block "!hasDormant"
[03:09:32.285]            // =>  TRUE
[03:09:32.285]          <block atomic="false" info="">
[03:09:32.285]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:33.293]  
[03:09:33.293]  !!! E320 : DAP access error
[03:09:33.293]  
[03:09:33.301]          </block>
[03:09:33.301]          // end if-block "!hasDormant"
[03:09:33.301]        </control>
[03:09:33.301]        // end if-block "isSWJ"
[03:09:33.301]      </control>
[03:09:33.301]      // end if-block "protType == 2"
[03:09:33.301]    </control>
[03:09:33.301]  </sequence>
[03:09:33.301]  
[03:09:33.562]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:33.562]  
[03:09:33.562]  <debugvars>
[03:09:33.562]    // Pre-defined
[03:09:33.562]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:33.562]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:33.562]    __dp=0x00000000
[03:09:33.562]    __ap=0x00000000
[03:09:33.562]    __traceout=0x00000000      (Trace Disabled)
[03:09:33.562]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:33.562]    __FlashAddr=0x00000000
[03:09:33.562]    __FlashLen=0x00000000
[03:09:33.562]    __FlashArg=0x00000000
[03:09:33.562]    __FlashOp=0x00000000
[03:09:33.562]    __Result=0x00000000
[03:09:33.562]  </debugvars>
[03:09:33.562]  
[03:09:33.562]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:33.562]    <block atomic="false" info="">
[03:09:33.562]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:33.562]        // -> [isSWJ <= 0x00000001]
[03:09:33.562]      __var hasDormant = __protocol & 0x00020000;
[03:09:33.562]        // -> [hasDormant <= 0x00000000]
[03:09:33.562]      __var protType   = __protocol & 0x0000FFFF;
[03:09:33.562]        // -> [protType <= 0x00000002]
[03:09:33.562]    </block>
[03:09:33.562]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:33.562]      // if-block "protType == 1"
[03:09:33.562]        // =>  FALSE
[03:09:33.566]      // skip if-block "protType == 1"
[03:09:33.566]    </control>
[03:09:33.566]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:33.566]      // if-block "protType == 2"
[03:09:33.566]        // =>  TRUE
[03:09:33.566]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:33.566]        // if-block "isSWJ"
[03:09:33.566]          // =>  TRUE
[03:09:33.566]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:33.566]          // if-block "hasDormant"
[03:09:33.566]            // =>  FALSE
[03:09:33.566]          // skip if-block "hasDormant"
[03:09:33.566]        </control>
[03:09:33.566]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:33.566]          // if-block "!hasDormant"
[03:09:33.566]            // =>  TRUE
[03:09:33.566]          <block atomic="false" info="">
[03:09:33.566]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:34.570]  
[03:09:34.570]  !!! E320 : DAP access error
[03:09:34.570]  
[03:09:34.578]          </block>
[03:09:34.578]          // end if-block "!hasDormant"
[03:09:34.578]        </control>
[03:09:34.578]        // end if-block "isSWJ"
[03:09:34.578]      </control>
[03:09:34.578]      // end if-block "protType == 2"
[03:09:34.578]    </control>
[03:09:34.578]  </sequence>
[03:09:34.578]  
[03:09:34.840]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:34.840]  
[03:09:34.847]  <debugvars>
[03:09:34.847]    // Pre-defined
[03:09:34.847]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:34.847]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:34.847]    __dp=0x00000000
[03:09:34.847]    __ap=0x00000000
[03:09:34.847]    __traceout=0x00000000      (Trace Disabled)
[03:09:34.847]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:34.847]    __FlashAddr=0x00000000
[03:09:34.847]    __FlashLen=0x00000000
[03:09:34.847]    __FlashArg=0x00000000
[03:09:34.847]    __FlashOp=0x00000000
[03:09:34.847]    __Result=0x00000000
[03:09:34.847]  </debugvars>
[03:09:34.847]  
[03:09:34.847]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:34.847]    <block atomic="false" info="">
[03:09:34.847]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:34.847]        // -> [isSWJ <= 0x00000001]
[03:09:34.847]      __var hasDormant = __protocol & 0x00020000;
[03:09:34.847]        // -> [hasDormant <= 0x00000000]
[03:09:34.847]      __var protType   = __protocol & 0x0000FFFF;
[03:09:34.847]        // -> [protType <= 0x00000002]
[03:09:34.847]    </block>
[03:09:34.847]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:34.847]      // if-block "protType == 1"
[03:09:34.847]        // =>  FALSE
[03:09:34.847]      // skip if-block "protType == 1"
[03:09:34.847]    </control>
[03:09:34.851]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:34.851]      // if-block "protType == 2"
[03:09:34.851]        // =>  TRUE
[03:09:34.851]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:34.851]        // if-block "isSWJ"
[03:09:34.851]          // =>  TRUE
[03:09:34.851]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:34.851]          // if-block "hasDormant"
[03:09:34.851]            // =>  FALSE
[03:09:34.851]          // skip if-block "hasDormant"
[03:09:34.851]        </control>
[03:09:34.851]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:34.851]          // if-block "!hasDormant"
[03:09:34.851]            // =>  TRUE
[03:09:34.851]          <block atomic="false" info="">
[03:09:34.851]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:35.852]  
[03:09:35.852]  !!! E320 : DAP access error
[03:09:35.852]  
[03:09:35.861]          </block>
[03:09:35.861]          // end if-block "!hasDormant"
[03:09:35.861]        </control>
[03:09:35.861]        // end if-block "isSWJ"
[03:09:35.861]      </control>
[03:09:35.861]      // end if-block "protType == 2"
[03:09:35.861]    </control>
[03:09:35.861]  </sequence>
[03:09:35.861]  
[03:09:36.117]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:36.117]  
[03:09:36.126]  <debugvars>
[03:09:36.126]    // Pre-defined
[03:09:36.126]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:36.126]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:36.126]    __dp=0x00000000
[03:09:36.126]    __ap=0x00000000
[03:09:36.126]    __traceout=0x00000000      (Trace Disabled)
[03:09:36.126]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:36.126]    __FlashAddr=0x00000000
[03:09:36.126]    __FlashLen=0x00000000
[03:09:36.126]    __FlashArg=0x00000000
[03:09:36.126]    __FlashOp=0x00000000
[03:09:36.126]    __Result=0x00000000
[03:09:36.126]  </debugvars>
[03:09:36.126]  
[03:09:36.126]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:36.126]    <block atomic="false" info="">
[03:09:36.126]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:36.126]        // -> [isSWJ <= 0x00000001]
[03:09:36.126]      __var hasDormant = __protocol & 0x00020000;
[03:09:36.126]        // -> [hasDormant <= 0x00000000]
[03:09:36.126]      __var protType   = __protocol & 0x0000FFFF;
[03:09:36.126]        // -> [protType <= 0x00000002]
[03:09:36.126]    </block>
[03:09:36.129]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:36.129]      // if-block "protType == 1"
[03:09:36.129]        // =>  FALSE
[03:09:36.129]      // skip if-block "protType == 1"
[03:09:36.129]    </control>
[03:09:36.129]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:36.129]      // if-block "protType == 2"
[03:09:36.129]        // =>  TRUE
[03:09:36.129]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:36.129]        // if-block "isSWJ"
[03:09:36.129]          // =>  TRUE
[03:09:36.129]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:36.129]          // if-block "hasDormant"
[03:09:36.129]            // =>  FALSE
[03:09:36.129]          // skip if-block "hasDormant"
[03:09:36.129]        </control>
[03:09:36.129]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:36.129]          // if-block "!hasDormant"
[03:09:36.129]            // =>  TRUE
[03:09:36.129]          <block atomic="false" info="">
[03:09:36.129]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:37.136]  
[03:09:37.136]  !!! E320 : DAP access error
[03:09:37.136]  
[03:09:37.144]          </block>
[03:09:37.144]          // end if-block "!hasDormant"
[03:09:37.144]        </control>
[03:09:37.144]        // end if-block "isSWJ"
[03:09:37.144]      </control>
[03:09:37.144]      // end if-block "protType == 2"
[03:09:37.144]    </control>
[03:09:37.144]  </sequence>
[03:09:37.145]  
[03:09:37.407]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:37.407]  
[03:09:37.407]  <debugvars>
[03:09:37.407]    // Pre-defined
[03:09:37.407]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:37.407]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:37.407]    __dp=0x00000000
[03:09:37.407]    __ap=0x00000000
[03:09:37.407]    __traceout=0x00000000      (Trace Disabled)
[03:09:37.407]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:37.407]    __FlashAddr=0x00000000
[03:09:37.407]    __FlashLen=0x00000000
[03:09:37.407]    __FlashArg=0x00000000
[03:09:37.407]    __FlashOp=0x00000000
[03:09:37.407]    __Result=0x00000000
[03:09:37.407]  </debugvars>
[03:09:37.407]  
[03:09:37.407]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:37.407]    <block atomic="false" info="">
[03:09:37.407]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:37.407]        // -> [isSWJ <= 0x00000001]
[03:09:37.407]      __var hasDormant = __protocol & 0x00020000;
[03:09:37.407]        // -> [hasDormant <= 0x00000000]
[03:09:37.407]      __var protType   = __protocol & 0x0000FFFF;
[03:09:37.407]        // -> [protType <= 0x00000002]
[03:09:37.407]    </block>
[03:09:37.407]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:37.407]      // if-block "protType == 1"
[03:09:37.407]        // =>  FALSE
[03:09:37.407]      // skip if-block "protType == 1"
[03:09:37.407]    </control>
[03:09:37.407]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:37.407]      // if-block "protType == 2"
[03:09:37.407]        // =>  TRUE
[03:09:37.407]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:37.407]        // if-block "isSWJ"
[03:09:37.411]          // =>  TRUE
[03:09:37.411]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:37.411]          // if-block "hasDormant"
[03:09:37.411]            // =>  FALSE
[03:09:37.411]          // skip if-block "hasDormant"
[03:09:37.411]        </control>
[03:09:37.411]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:37.411]          // if-block "!hasDormant"
[03:09:37.411]            // =>  TRUE
[03:09:37.411]          <block atomic="false" info="">
[03:09:37.411]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:38.418]  
[03:09:38.418]  !!! E320 : DAP access error
[03:09:38.418]  
[03:09:38.418]          </block>
[03:09:38.418]          // end if-block "!hasDormant"
[03:09:38.418]        </control>
[03:09:38.418]        // end if-block "isSWJ"
[03:09:38.418]      </control>
[03:09:38.418]      // end if-block "protType == 2"
[03:09:38.418]    </control>
[03:09:38.418]  </sequence>
[03:09:38.418]  
[03:09:38.679]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:38.679]  
[03:09:38.679]  <debugvars>
[03:09:38.679]    // Pre-defined
[03:09:38.679]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:38.679]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:38.679]    __dp=0x00000000
[03:09:38.679]    __ap=0x00000000
[03:09:38.679]    __traceout=0x00000000      (Trace Disabled)
[03:09:38.679]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:38.679]    __FlashAddr=0x00000000
[03:09:38.679]    __FlashLen=0x00000000
[03:09:38.679]    __FlashArg=0x00000000
[03:09:38.679]    __FlashOp=0x00000000
[03:09:38.679]    __Result=0x00000000
[03:09:38.679]  </debugvars>
[03:09:38.679]  
[03:09:38.679]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:38.679]    <block atomic="false" info="">
[03:09:38.679]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:38.679]        // -> [isSWJ <= 0x00000001]
[03:09:38.679]      __var hasDormant = __protocol & 0x00020000;
[03:09:38.679]        // -> [hasDormant <= 0x00000000]
[03:09:38.679]      __var protType   = __protocol & 0x0000FFFF;
[03:09:38.679]        // -> [protType <= 0x00000002]
[03:09:38.679]    </block>
[03:09:38.683]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:38.683]      // if-block "protType == 1"
[03:09:38.683]        // =>  FALSE
[03:09:38.683]      // skip if-block "protType == 1"
[03:09:38.683]    </control>
[03:09:38.683]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:38.683]      // if-block "protType == 2"
[03:09:38.683]        // =>  TRUE
[03:09:38.683]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:38.683]        // if-block "isSWJ"
[03:09:38.683]          // =>  TRUE
[03:09:38.683]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:38.683]          // if-block "hasDormant"
[03:09:38.683]            // =>  FALSE
[03:09:38.683]          // skip if-block "hasDormant"
[03:09:38.683]        </control>
[03:09:38.683]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:38.683]          // if-block "!hasDormant"
[03:09:38.683]            // =>  TRUE
[03:09:38.683]          <block atomic="false" info="">
[03:09:38.683]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:39.685]  
[03:09:39.685]  !!! E320 : DAP access error
[03:09:39.685]  
[03:09:39.694]          </block>
[03:09:39.694]          // end if-block "!hasDormant"
[03:09:39.694]        </control>
[03:09:39.694]        // end if-block "isSWJ"
[03:09:39.694]      </control>
[03:09:39.694]      // end if-block "protType == 2"
[03:09:39.694]    </control>
[03:09:39.694]  </sequence>
[03:09:39.694]  
[03:09:39.954]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:39.954]  
[03:09:39.962]  <debugvars>
[03:09:39.962]    // Pre-defined
[03:09:39.962]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:39.962]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:39.962]    __dp=0x00000000
[03:09:39.962]    __ap=0x00000000
[03:09:39.962]    __traceout=0x00000000      (Trace Disabled)
[03:09:39.962]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:39.962]    __FlashAddr=0x00000000
[03:09:39.962]    __FlashLen=0x00000000
[03:09:39.962]    __FlashArg=0x00000000
[03:09:39.962]    __FlashOp=0x00000000
[03:09:39.962]    __Result=0x00000000
[03:09:39.962]  </debugvars>
[03:09:39.962]  
[03:09:39.962]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:39.962]    <block atomic="false" info="">
[03:09:39.962]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:39.962]        // -> [isSWJ <= 0x00000001]
[03:09:39.962]      __var hasDormant = __protocol & 0x00020000;
[03:09:39.962]        // -> [hasDormant <= 0x00000000]
[03:09:39.962]      __var protType   = __protocol & 0x0000FFFF;
[03:09:39.962]        // -> [protType <= 0x00000002]
[03:09:39.962]    </block>
[03:09:39.962]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:39.962]      // if-block "protType == 1"
[03:09:39.962]        // =>  FALSE
[03:09:39.962]      // skip if-block "protType == 1"
[03:09:39.962]    </control>
[03:09:39.962]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:39.962]      // if-block "protType == 2"
[03:09:39.962]        // =>  TRUE
[03:09:39.966]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:39.966]        // if-block "isSWJ"
[03:09:39.966]          // =>  TRUE
[03:09:39.966]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:39.966]          // if-block "hasDormant"
[03:09:39.966]            // =>  FALSE
[03:09:39.966]          // skip if-block "hasDormant"
[03:09:39.966]        </control>
[03:09:39.966]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:39.966]          // if-block "!hasDormant"
[03:09:39.966]            // =>  TRUE
[03:09:39.966]          <block atomic="false" info="">
[03:09:39.966]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:40.970]  
[03:09:40.970]  !!! E320 : DAP access error
[03:09:40.970]  
[03:09:40.979]          </block>
[03:09:40.979]          // end if-block "!hasDormant"
[03:09:40.979]        </control>
[03:09:40.979]        // end if-block "isSWJ"
[03:09:40.979]      </control>
[03:09:40.979]      // end if-block "protType == 2"
[03:09:40.979]    </control>
[03:09:40.979]  </sequence>
[03:09:40.979]  
[03:09:41.239]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:41.239]  
[03:09:41.247]  <debugvars>
[03:09:41.247]    // Pre-defined
[03:09:41.247]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:41.247]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:41.247]    __dp=0x00000000
[03:09:41.247]    __ap=0x00000000
[03:09:41.247]    __traceout=0x00000000      (Trace Disabled)
[03:09:41.247]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:41.247]    __FlashAddr=0x00000000
[03:09:41.247]    __FlashLen=0x00000000
[03:09:41.247]    __FlashArg=0x00000000
[03:09:41.247]    __FlashOp=0x00000000
[03:09:41.247]    __Result=0x00000000
[03:09:41.247]  </debugvars>
[03:09:41.247]  
[03:09:41.247]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:41.247]    <block atomic="false" info="">
[03:09:41.247]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:41.247]        // -> [isSWJ <= 0x00000001]
[03:09:41.247]      __var hasDormant = __protocol & 0x00020000;
[03:09:41.247]        // -> [hasDormant <= 0x00000000]
[03:09:41.247]      __var protType   = __protocol & 0x0000FFFF;
[03:09:41.247]        // -> [protType <= 0x00000002]
[03:09:41.247]    </block>
[03:09:41.247]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:41.247]      // if-block "protType == 1"
[03:09:41.247]        // =>  FALSE
[03:09:41.247]      // skip if-block "protType == 1"
[03:09:41.247]    </control>
[03:09:41.247]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:41.251]      // if-block "protType == 2"
[03:09:41.251]        // =>  TRUE
[03:09:41.251]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:41.251]        // if-block "isSWJ"
[03:09:41.251]          // =>  TRUE
[03:09:41.252]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:41.252]          // if-block "hasDormant"
[03:09:41.252]            // =>  FALSE
[03:09:41.252]          // skip if-block "hasDormant"
[03:09:41.252]        </control>
[03:09:41.252]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:41.252]          // if-block "!hasDormant"
[03:09:41.252]            // =>  TRUE
[03:09:41.252]          <block atomic="false" info="">
[03:09:41.252]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:42.263]  
[03:09:42.263]  !!! E320 : DAP access error
[03:09:42.263]  
[03:09:42.263]          </block>
[03:09:42.263]          // end if-block "!hasDormant"
[03:09:42.263]        </control>
[03:09:42.263]        // end if-block "isSWJ"
[03:09:42.263]      </control>
[03:09:42.263]      // end if-block "protType == 2"
[03:09:42.263]    </control>
[03:09:42.263]  </sequence>
[03:09:42.263]  
[03:09:42.515]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:42.515]  
[03:09:42.515]  <debugvars>
[03:09:42.515]    // Pre-defined
[03:09:42.515]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:42.515]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:42.515]    __dp=0x00000000
[03:09:42.515]    __ap=0x00000000
[03:09:42.515]    __traceout=0x00000000      (Trace Disabled)
[03:09:42.515]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:42.515]    __FlashAddr=0x00000000
[03:09:42.515]    __FlashLen=0x00000000
[03:09:42.515]    __FlashArg=0x00000000
[03:09:42.515]    __FlashOp=0x00000000
[03:09:42.515]    __Result=0x00000000
[03:09:42.515]  </debugvars>
[03:09:42.515]  
[03:09:42.515]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:42.515]    <block atomic="false" info="">
[03:09:42.515]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:42.515]        // -> [isSWJ <= 0x00000001]
[03:09:42.515]      __var hasDormant = __protocol & 0x00020000;
[03:09:42.515]        // -> [hasDormant <= 0x00000000]
[03:09:42.515]      __var protType   = __protocol & 0x0000FFFF;
[03:09:42.515]        // -> [protType <= 0x00000002]
[03:09:42.515]    </block>
[03:09:42.515]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:42.515]      // if-block "protType == 1"
[03:09:42.515]        // =>  FALSE
[03:09:42.515]      // skip if-block "protType == 1"
[03:09:42.515]    </control>
[03:09:42.515]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:42.515]      // if-block "protType == 2"
[03:09:42.515]        // =>  TRUE
[03:09:42.519]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:42.519]        // if-block "isSWJ"
[03:09:42.519]          // =>  TRUE
[03:09:42.519]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:42.519]          // if-block "hasDormant"
[03:09:42.519]            // =>  FALSE
[03:09:42.519]          // skip if-block "hasDormant"
[03:09:42.519]        </control>
[03:09:42.519]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:42.519]          // if-block "!hasDormant"
[03:09:42.519]            // =>  TRUE
[03:09:42.519]          <block atomic="false" info="">
[03:09:42.519]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:43.530]  
[03:09:43.530]  !!! E320 : DAP access error
[03:09:43.530]  
[03:09:43.530]          </block>
[03:09:43.530]          // end if-block "!hasDormant"
[03:09:43.530]        </control>
[03:09:43.530]        // end if-block "isSWJ"
[03:09:43.530]      </control>
[03:09:43.530]      // end if-block "protType == 2"
[03:09:43.530]    </control>
[03:09:43.530]  </sequence>
[03:09:43.530]  
[03:09:43.783]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:43.783]  
[03:09:43.793]  <debugvars>
[03:09:43.793]    // Pre-defined
[03:09:43.793]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:43.793]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:43.793]    __dp=0x00000000
[03:09:43.793]    __ap=0x00000000
[03:09:43.793]    __traceout=0x00000000      (Trace Disabled)
[03:09:43.793]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:43.793]    __FlashAddr=0x00000000
[03:09:43.793]    __FlashLen=0x00000000
[03:09:43.793]    __FlashArg=0x00000000
[03:09:43.793]    __FlashOp=0x00000000
[03:09:43.793]    __Result=0x00000000
[03:09:43.793]  </debugvars>
[03:09:43.793]  
[03:09:43.793]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:43.793]    <block atomic="false" info="">
[03:09:43.793]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:43.795]        // -> [isSWJ <= 0x00000001]
[03:09:43.795]      __var hasDormant = __protocol & 0x00020000;
[03:09:43.795]        // -> [hasDormant <= 0x00000000]
[03:09:43.795]      __var protType   = __protocol & 0x0000FFFF;
[03:09:43.795]        // -> [protType <= 0x00000002]
[03:09:43.795]    </block>
[03:09:43.795]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:43.795]      // if-block "protType == 1"
[03:09:43.795]        // =>  FALSE
[03:09:43.795]      // skip if-block "protType == 1"
[03:09:43.795]    </control>
[03:09:43.795]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:43.795]      // if-block "protType == 2"
[03:09:43.795]        // =>  TRUE
[03:09:43.795]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:43.795]        // if-block "isSWJ"
[03:09:43.795]          // =>  TRUE
[03:09:43.795]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:43.795]          // if-block "hasDormant"
[03:09:43.795]            // =>  FALSE
[03:09:43.795]          // skip if-block "hasDormant"
[03:09:43.795]        </control>
[03:09:43.795]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:43.795]          // if-block "!hasDormant"
[03:09:43.795]            // =>  TRUE
[03:09:43.795]          <block atomic="false" info="">
[03:09:43.795]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:44.802]  
[03:09:44.802]  !!! E320 : DAP access error
[03:09:44.802]  
[03:09:44.811]          </block>
[03:09:44.811]          // end if-block "!hasDormant"
[03:09:44.811]        </control>
[03:09:44.811]        // end if-block "isSWJ"
[03:09:44.811]      </control>
[03:09:44.811]      // end if-block "protType == 2"
[03:09:44.811]    </control>
[03:09:44.811]  </sequence>
[03:09:44.811]  
[03:09:45.061]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:45.061]  
[03:09:45.069]  <debugvars>
[03:09:45.069]    // Pre-defined
[03:09:45.069]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:45.069]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:45.069]    __dp=0x00000000
[03:09:45.070]    __ap=0x00000000
[03:09:45.070]    __traceout=0x00000000      (Trace Disabled)
[03:09:45.070]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:45.070]    __FlashAddr=0x00000000
[03:09:45.070]    __FlashLen=0x00000000
[03:09:45.070]    __FlashArg=0x00000000
[03:09:45.070]    __FlashOp=0x00000000
[03:09:45.070]    __Result=0x00000000
[03:09:45.070]  </debugvars>
[03:09:45.070]  
[03:09:45.071]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:45.071]    <block atomic="false" info="">
[03:09:45.071]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:45.071]        // -> [isSWJ <= 0x00000001]
[03:09:45.071]      __var hasDormant = __protocol & 0x00020000;
[03:09:45.071]        // -> [hasDormant <= 0x00000000]
[03:09:45.071]      __var protType   = __protocol & 0x0000FFFF;
[03:09:45.071]        // -> [protType <= 0x00000002]
[03:09:45.071]    </block>
[03:09:45.071]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:45.072]      // if-block "protType == 1"
[03:09:45.072]        // =>  FALSE
[03:09:45.072]      // skip if-block "protType == 1"
[03:09:45.072]    </control>
[03:09:45.072]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:45.072]      // if-block "protType == 2"
[03:09:45.072]        // =>  TRUE
[03:09:45.073]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:45.073]        // if-block "isSWJ"
[03:09:45.073]          // =>  TRUE
[03:09:45.073]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:45.073]          // if-block "hasDormant"
[03:09:45.073]            // =>  FALSE
[03:09:45.073]          // skip if-block "hasDormant"
[03:09:45.073]        </control>
[03:09:45.073]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:45.073]          // if-block "!hasDormant"
[03:09:45.073]            // =>  TRUE
[03:09:45.073]          <block atomic="false" info="">
[03:09:45.073]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:46.085]  
[03:09:46.085]  !!! E320 : DAP access error
[03:09:46.085]  
[03:09:46.093]          </block>
[03:09:46.093]          // end if-block "!hasDormant"
[03:09:46.093]        </control>
[03:09:46.093]        // end if-block "isSWJ"
[03:09:46.093]      </control>
[03:09:46.093]      // end if-block "protType == 2"
[03:09:46.093]    </control>
[03:09:46.093]  </sequence>
[03:09:46.093]  
[03:09:46.345]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:46.345]  
[03:09:46.353]  <debugvars>
[03:09:46.353]    // Pre-defined
[03:09:46.353]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:46.353]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:46.353]    __dp=0x00000000
[03:09:46.353]    __ap=0x00000000
[03:09:46.355]    __traceout=0x00000000      (Trace Disabled)
[03:09:46.355]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:46.355]    __FlashAddr=0x00000000
[03:09:46.355]    __FlashLen=0x00000000
[03:09:46.355]    __FlashArg=0x00000000
[03:09:46.355]    __FlashOp=0x00000000
[03:09:46.355]    __Result=0x00000000
[03:09:46.355]  </debugvars>
[03:09:46.355]  
[03:09:46.355]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:46.355]    <block atomic="false" info="">
[03:09:46.355]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:46.355]        // -> [isSWJ <= 0x00000001]
[03:09:46.355]      __var hasDormant = __protocol & 0x00020000;
[03:09:46.355]        // -> [hasDormant <= 0x00000000]
[03:09:46.357]      __var protType   = __protocol & 0x0000FFFF;
[03:09:46.357]        // -> [protType <= 0x00000002]
[03:09:46.357]    </block>
[03:09:46.357]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:46.357]      // if-block "protType == 1"
[03:09:46.357]        // =>  FALSE
[03:09:46.357]      // skip if-block "protType == 1"
[03:09:46.357]    </control>
[03:09:46.357]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:46.357]      // if-block "protType == 2"
[03:09:46.357]        // =>  TRUE
[03:09:46.358]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:46.358]        // if-block "isSWJ"
[03:09:46.358]          // =>  TRUE
[03:09:46.358]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:46.358]          // if-block "hasDormant"
[03:09:46.358]            // =>  FALSE
[03:09:46.358]          // skip if-block "hasDormant"
[03:09:46.358]        </control>
[03:09:46.359]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:46.359]          // if-block "!hasDormant"
[03:09:46.359]            // =>  TRUE
[03:09:46.359]          <block atomic="false" info="">
[03:09:46.359]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:47.361]  
[03:09:47.361]  !!! E320 : DAP access error
[03:09:47.361]  
[03:09:47.361]          </block>
[03:09:47.361]          // end if-block "!hasDormant"
[03:09:47.361]        </control>
[03:09:47.361]        // end if-block "isSWJ"
[03:09:47.361]      </control>
[03:09:47.361]      // end if-block "protType == 2"
[03:09:47.361]    </control>
[03:09:47.361]  </sequence>
[03:09:47.361]  
[03:09:47.614]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:47.614]  
[03:09:47.624]  <debugvars>
[03:09:47.624]    // Pre-defined
[03:09:47.624]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:47.624]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:47.624]    __dp=0x00000000
[03:09:47.624]    __ap=0x00000000
[03:09:47.624]    __traceout=0x00000000      (Trace Disabled)
[03:09:47.624]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:47.624]    __FlashAddr=0x00000000
[03:09:47.624]    __FlashLen=0x00000000
[03:09:47.624]    __FlashArg=0x00000000
[03:09:47.624]    __FlashOp=0x00000000
[03:09:47.624]    __Result=0x00000000
[03:09:47.624]  </debugvars>
[03:09:47.624]  
[03:09:47.624]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:47.624]    <block atomic="false" info="">
[03:09:47.624]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:47.624]        // -> [isSWJ <= 0x00000001]
[03:09:47.624]      __var hasDormant = __protocol & 0x00020000;
[03:09:47.626]        // -> [hasDormant <= 0x00000000]
[03:09:47.626]      __var protType   = __protocol & 0x0000FFFF;
[03:09:47.626]        // -> [protType <= 0x00000002]
[03:09:47.626]    </block>
[03:09:47.626]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:47.626]      // if-block "protType == 1"
[03:09:47.626]        // =>  FALSE
[03:09:47.626]      // skip if-block "protType == 1"
[03:09:47.626]    </control>
[03:09:47.626]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:47.626]      // if-block "protType == 2"
[03:09:47.626]        // =>  TRUE
[03:09:47.626]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:47.626]        // if-block "isSWJ"
[03:09:47.626]          // =>  TRUE
[03:09:47.626]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:47.626]          // if-block "hasDormant"
[03:09:47.626]            // =>  FALSE
[03:09:47.626]          // skip if-block "hasDormant"
[03:09:47.626]        </control>
[03:09:47.626]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:47.626]          // if-block "!hasDormant"
[03:09:47.626]            // =>  TRUE
[03:09:47.626]          <block atomic="false" info="">
[03:09:47.626]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:48.633]  
[03:09:48.633]  !!! E320 : DAP access error
[03:09:48.633]  
[03:09:48.633]          </block>
[03:09:48.633]          // end if-block "!hasDormant"
[03:09:48.633]        </control>
[03:09:48.633]        // end if-block "isSWJ"
[03:09:48.633]      </control>
[03:09:48.633]      // end if-block "protType == 2"
[03:09:48.633]    </control>
[03:09:48.636]  </sequence>
[03:09:48.636]  
[03:09:48.890]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:48.890]  
[03:09:48.899]  <debugvars>
[03:09:48.899]    // Pre-defined
[03:09:48.899]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:48.899]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:48.899]    __dp=0x00000000
[03:09:48.899]    __ap=0x00000000
[03:09:48.899]    __traceout=0x00000000      (Trace Disabled)
[03:09:48.899]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:48.899]    __FlashAddr=0x00000000
[03:09:48.899]    __FlashLen=0x00000000
[03:09:48.899]    __FlashArg=0x00000000
[03:09:48.899]    __FlashOp=0x00000000
[03:09:48.899]    __Result=0x00000000
[03:09:48.899]  </debugvars>
[03:09:48.899]  
[03:09:48.899]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:48.899]    <block atomic="false" info="">
[03:09:48.899]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:48.899]        // -> [isSWJ <= 0x00000001]
[03:09:48.899]      __var hasDormant = __protocol & 0x00020000;
[03:09:48.899]        // -> [hasDormant <= 0x00000000]
[03:09:48.899]      __var protType   = __protocol & 0x0000FFFF;
[03:09:48.899]        // -> [protType <= 0x00000002]
[03:09:48.899]    </block>
[03:09:48.899]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:48.899]      // if-block "protType == 1"
[03:09:48.899]        // =>  FALSE
[03:09:48.899]      // skip if-block "protType == 1"
[03:09:48.902]    </control>
[03:09:48.902]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:48.902]      // if-block "protType == 2"
[03:09:48.902]        // =>  TRUE
[03:09:48.902]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:48.902]        // if-block "isSWJ"
[03:09:48.902]          // =>  TRUE
[03:09:48.902]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:48.902]          // if-block "hasDormant"
[03:09:48.902]            // =>  FALSE
[03:09:48.902]          // skip if-block "hasDormant"
[03:09:48.902]        </control>
[03:09:48.902]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:48.902]          // if-block "!hasDormant"
[03:09:48.902]            // =>  TRUE
[03:09:48.902]          <block atomic="false" info="">
[03:09:48.902]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:49.908]  
[03:09:49.908]  !!! E320 : DAP access error
[03:09:49.908]  
[03:09:49.908]          </block>
[03:09:49.909]          // end if-block "!hasDormant"
[03:09:49.909]        </control>
[03:09:49.909]        // end if-block "isSWJ"
[03:09:49.909]      </control>
[03:09:49.909]      // end if-block "protType == 2"
[03:09:49.909]    </control>
[03:09:49.909]  </sequence>
[03:09:49.909]  
[03:09:50.170]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:50.170]  
[03:09:50.180]  <debugvars>
[03:09:50.180]    // Pre-defined
[03:09:50.180]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:50.180]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:50.180]    __dp=0x00000000
[03:09:50.180]    __ap=0x00000000
[03:09:50.180]    __traceout=0x00000000      (Trace Disabled)
[03:09:50.180]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:50.180]    __FlashAddr=0x00000000
[03:09:50.180]    __FlashLen=0x00000000
[03:09:50.180]    __FlashArg=0x00000000
[03:09:50.180]    __FlashOp=0x00000000
[03:09:50.180]    __Result=0x00000000
[03:09:50.180]  </debugvars>
[03:09:50.180]  
[03:09:50.180]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:50.180]    <block atomic="false" info="">
[03:09:50.180]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:50.180]        // -> [isSWJ <= 0x00000001]
[03:09:50.180]      __var hasDormant = __protocol & 0x00020000;
[03:09:50.180]        // -> [hasDormant <= 0x00000000]
[03:09:50.180]      __var protType   = __protocol & 0x0000FFFF;
[03:09:50.180]        // -> [protType <= 0x00000002]
[03:09:50.180]    </block>
[03:09:50.180]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:50.180]      // if-block "protType == 1"
[03:09:50.180]        // =>  FALSE
[03:09:50.180]      // skip if-block "protType == 1"
[03:09:50.180]    </control>
[03:09:50.180]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:50.183]      // if-block "protType == 2"
[03:09:50.183]        // =>  TRUE
[03:09:50.183]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:50.183]        // if-block "isSWJ"
[03:09:50.183]          // =>  TRUE
[03:09:50.183]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:50.183]          // if-block "hasDormant"
[03:09:50.183]            // =>  FALSE
[03:09:50.183]          // skip if-block "hasDormant"
[03:09:50.183]        </control>
[03:09:50.183]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:50.183]          // if-block "!hasDormant"
[03:09:50.183]            // =>  TRUE
[03:09:50.183]          <block atomic="false" info="">
[03:09:50.183]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:51.189]  
[03:09:51.189]  !!! E320 : DAP access error
[03:09:51.189]  
[03:09:51.197]          </block>
[03:09:51.198]          // end if-block "!hasDormant"
[03:09:51.198]        </control>
[03:09:51.198]        // end if-block "isSWJ"
[03:09:51.198]      </control>
[03:09:51.198]      // end if-block "protType == 2"
[03:09:51.198]    </control>
[03:09:51.198]  </sequence>
[03:09:51.198]  
[03:09:51.448]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:51.448]  
[03:09:51.457]  <debugvars>
[03:09:51.457]    // Pre-defined
[03:09:51.457]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:51.457]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:51.457]    __dp=0x00000000
[03:09:51.457]    __ap=0x00000000
[03:09:51.457]    __traceout=0x00000000      (Trace Disabled)
[03:09:51.457]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:51.457]    __FlashAddr=0x00000000
[03:09:51.457]    __FlashLen=0x00000000
[03:09:51.457]    __FlashArg=0x00000000
[03:09:51.457]    __FlashOp=0x00000000
[03:09:51.457]    __Result=0x00000000
[03:09:51.457]  </debugvars>
[03:09:51.457]  
[03:09:51.457]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:51.457]    <block atomic="false" info="">
[03:09:51.457]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:51.457]        // -> [isSWJ <= 0x00000001]
[03:09:51.457]      __var hasDormant = __protocol & 0x00020000;
[03:09:51.457]        // -> [hasDormant <= 0x00000000]
[03:09:51.457]      __var protType   = __protocol & 0x0000FFFF;
[03:09:51.457]        // -> [protType <= 0x00000002]
[03:09:51.457]    </block>
[03:09:51.457]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:51.457]      // if-block "protType == 1"
[03:09:51.457]        // =>  FALSE
[03:09:51.457]      // skip if-block "protType == 1"
[03:09:51.457]    </control>
[03:09:51.460]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:51.460]      // if-block "protType == 2"
[03:09:51.460]        // =>  TRUE
[03:09:51.460]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:51.460]        // if-block "isSWJ"
[03:09:51.460]          // =>  TRUE
[03:09:51.460]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:51.460]          // if-block "hasDormant"
[03:09:51.460]            // =>  FALSE
[03:09:51.460]          // skip if-block "hasDormant"
[03:09:51.460]        </control>
[03:09:51.460]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:51.460]          // if-block "!hasDormant"
[03:09:51.460]            // =>  TRUE
[03:09:51.460]          <block atomic="false" info="">
[03:09:51.460]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:52.467]  
[03:09:52.467]  !!! E320 : DAP access error
[03:09:52.467]  
[03:09:52.469]          </block>
[03:09:52.469]          // end if-block "!hasDormant"
[03:09:52.469]        </control>
[03:09:52.469]        // end if-block "isSWJ"
[03:09:52.469]      </control>
[03:09:52.469]      // end if-block "protType == 2"
[03:09:52.469]    </control>
[03:09:52.469]  </sequence>
[03:09:52.469]  
[03:09:52.720]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:52.720]  
[03:09:52.720]  <debugvars>
[03:09:52.720]    // Pre-defined
[03:09:52.720]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:52.720]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:52.720]    __dp=0x00000000
[03:09:52.720]    __ap=0x00000000
[03:09:52.720]    __traceout=0x00000000      (Trace Disabled)
[03:09:52.720]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:52.720]    __FlashAddr=0x00000000
[03:09:52.720]    __FlashLen=0x00000000
[03:09:52.720]    __FlashArg=0x00000000
[03:09:52.720]    __FlashOp=0x00000000
[03:09:52.720]    __Result=0x00000000
[03:09:52.720]  </debugvars>
[03:09:52.720]  
[03:09:52.720]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:52.720]    <block atomic="false" info="">
[03:09:52.720]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:52.720]        // -> [isSWJ <= 0x00000001]
[03:09:52.720]      __var hasDormant = __protocol & 0x00020000;
[03:09:52.720]        // -> [hasDormant <= 0x00000000]
[03:09:52.720]      __var protType   = __protocol & 0x0000FFFF;
[03:09:52.724]        // -> [protType <= 0x00000002]
[03:09:52.724]    </block>
[03:09:52.724]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:52.724]      // if-block "protType == 1"
[03:09:52.724]        // =>  FALSE
[03:09:52.724]      // skip if-block "protType == 1"
[03:09:52.724]    </control>
[03:09:52.724]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:52.724]      // if-block "protType == 2"
[03:09:52.724]        // =>  TRUE
[03:09:52.724]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:52.724]        // if-block "isSWJ"
[03:09:52.724]          // =>  TRUE
[03:09:52.724]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:52.724]          // if-block "hasDormant"
[03:09:52.724]            // =>  FALSE
[03:09:52.724]          // skip if-block "hasDormant"
[03:09:52.724]        </control>
[03:09:52.724]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:52.724]          // if-block "!hasDormant"
[03:09:52.724]            // =>  TRUE
[03:09:52.724]          <block atomic="false" info="">
[03:09:52.724]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:53.734]  
[03:09:53.734]  !!! E320 : DAP access error
[03:09:53.734]  
[03:09:53.734]          </block>
[03:09:53.734]          // end if-block "!hasDormant"
[03:09:53.734]        </control>
[03:09:53.734]        // end if-block "isSWJ"
[03:09:53.734]      </control>
[03:09:53.734]      // end if-block "protType == 2"
[03:09:53.734]    </control>
[03:09:53.734]  </sequence>
[03:09:53.734]  
[03:09:53.991]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:53.991]  
[03:09:53.991]  <debugvars>
[03:09:53.991]    // Pre-defined
[03:09:53.991]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:53.993]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:53.993]    __dp=0x00000000
[03:09:53.993]    __ap=0x00000000
[03:09:53.993]    __traceout=0x00000000      (Trace Disabled)
[03:09:53.993]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:53.993]    __FlashAddr=0x00000000
[03:09:53.993]    __FlashLen=0x00000000
[03:09:53.994]    __FlashArg=0x00000000
[03:09:53.994]    __FlashOp=0x00000000
[03:09:53.994]    __Result=0x00000000
[03:09:53.994]  </debugvars>
[03:09:53.994]  
[03:09:53.994]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:53.994]    <block atomic="false" info="">
[03:09:53.994]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:53.995]        // -> [isSWJ <= 0x00000001]
[03:09:53.995]      __var hasDormant = __protocol & 0x00020000;
[03:09:53.995]        // -> [hasDormant <= 0x00000000]
[03:09:53.995]      __var protType   = __protocol & 0x0000FFFF;
[03:09:53.995]        // -> [protType <= 0x00000002]
[03:09:53.995]    </block>
[03:09:53.995]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:53.995]      // if-block "protType == 1"
[03:09:53.995]        // =>  FALSE
[03:09:53.995]      // skip if-block "protType == 1"
[03:09:53.995]    </control>
[03:09:53.995]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:53.995]      // if-block "protType == 2"
[03:09:53.995]        // =>  TRUE
[03:09:53.995]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:53.995]        // if-block "isSWJ"
[03:09:53.995]          // =>  TRUE
[03:09:53.995]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:53.995]          // if-block "hasDormant"
[03:09:53.995]            // =>  FALSE
[03:09:53.995]          // skip if-block "hasDormant"
[03:09:53.995]        </control>
[03:09:53.995]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:53.995]          // if-block "!hasDormant"
[03:09:53.995]            // =>  TRUE
[03:09:53.995]          <block atomic="false" info="">
[03:09:53.995]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:54.996]  
[03:09:54.996]  !!! E320 : DAP access error
[03:09:54.996]  
[03:09:55.005]          </block>
[03:09:55.005]          // end if-block "!hasDormant"
[03:09:55.005]        </control>
[03:09:55.005]        // end if-block "isSWJ"
[03:09:55.005]      </control>
[03:09:55.005]      // end if-block "protType == 2"
[03:09:55.005]    </control>
[03:09:55.005]  </sequence>
[03:09:55.005]  
[03:09:55.265]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:55.265]  
[03:09:55.273]  <debugvars>
[03:09:55.273]    // Pre-defined
[03:09:55.273]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:55.273]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:55.273]    __dp=0x00000000
[03:09:55.273]    __ap=0x00000000
[03:09:55.273]    __traceout=0x00000000      (Trace Disabled)
[03:09:55.273]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:55.273]    __FlashAddr=0x00000000
[03:09:55.273]    __FlashLen=0x00000000
[03:09:55.273]    __FlashArg=0x00000000
[03:09:55.273]    __FlashOp=0x00000000
[03:09:55.273]    __Result=0x00000000
[03:09:55.273]  </debugvars>
[03:09:55.273]  
[03:09:55.273]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:55.273]    <block atomic="false" info="">
[03:09:55.273]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:55.273]        // -> [isSWJ <= 0x00000001]
[03:09:55.273]      __var hasDormant = __protocol & 0x00020000;
[03:09:55.273]        // -> [hasDormant <= 0x00000000]
[03:09:55.273]      __var protType   = __protocol & 0x0000FFFF;
[03:09:55.273]        // -> [protType <= 0x00000002]
[03:09:55.273]    </block>
[03:09:55.273]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:55.273]      // if-block "protType == 1"
[03:09:55.273]        // =>  FALSE
[03:09:55.273]      // skip if-block "protType == 1"
[03:09:55.273]    </control>
[03:09:55.273]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:55.277]      // if-block "protType == 2"
[03:09:55.277]        // =>  TRUE
[03:09:55.277]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:55.277]        // if-block "isSWJ"
[03:09:55.277]          // =>  TRUE
[03:09:55.277]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:55.277]          // if-block "hasDormant"
[03:09:55.277]            // =>  FALSE
[03:09:55.279]          // skip if-block "hasDormant"
[03:09:55.279]        </control>
[03:09:55.279]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:55.279]          // if-block "!hasDormant"
[03:09:55.279]            // =>  TRUE
[03:09:55.279]          <block atomic="false" info="">
[03:09:55.279]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:56.291]  
[03:09:56.291]  !!! E320 : DAP access error
[03:09:56.291]  
[03:09:56.300]          </block>
[03:09:56.300]          // end if-block "!hasDormant"
[03:09:56.300]        </control>
[03:09:56.300]        // end if-block "isSWJ"
[03:09:56.300]      </control>
[03:09:56.300]      // end if-block "protType == 2"
[03:09:56.300]    </control>
[03:09:56.300]  </sequence>
[03:09:56.300]  
[03:09:56.554]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:56.554]  
[03:09:56.563]  <debugvars>
[03:09:56.563]    // Pre-defined
[03:09:56.563]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:56.563]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:56.563]    __dp=0x00000000
[03:09:56.563]    __ap=0x00000000
[03:09:56.563]    __traceout=0x00000000      (Trace Disabled)
[03:09:56.563]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:56.563]    __FlashAddr=0x00000000
[03:09:56.563]    __FlashLen=0x00000000
[03:09:56.563]    __FlashArg=0x00000000
[03:09:56.563]    __FlashOp=0x00000000
[03:09:56.563]    __Result=0x00000000
[03:09:56.563]  </debugvars>
[03:09:56.563]  
[03:09:56.563]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:56.563]    <block atomic="false" info="">
[03:09:56.563]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:56.563]        // -> [isSWJ <= 0x00000001]
[03:09:56.563]      __var hasDormant = __protocol & 0x00020000;
[03:09:56.563]        // -> [hasDormant <= 0x00000000]
[03:09:56.563]      __var protType   = __protocol & 0x0000FFFF;
[03:09:56.563]        // -> [protType <= 0x00000002]
[03:09:56.566]    </block>
[03:09:56.566]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:56.566]      // if-block "protType == 1"
[03:09:56.566]        // =>  FALSE
[03:09:56.566]      // skip if-block "protType == 1"
[03:09:56.566]    </control>
[03:09:56.567]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:56.567]      // if-block "protType == 2"
[03:09:56.567]        // =>  TRUE
[03:09:56.567]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:56.567]        // if-block "isSWJ"
[03:09:56.567]          // =>  TRUE
[03:09:56.567]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:56.567]          // if-block "hasDormant"
[03:09:56.567]            // =>  FALSE
[03:09:56.567]          // skip if-block "hasDormant"
[03:09:56.567]        </control>
[03:09:56.567]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:56.567]          // if-block "!hasDormant"
[03:09:56.568]            // =>  TRUE
[03:09:56.568]          <block atomic="false" info="">
[03:09:56.568]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:57.572]  
[03:09:57.572]  !!! E320 : DAP access error
[03:09:57.572]  
[03:09:57.581]          </block>
[03:09:57.581]          // end if-block "!hasDormant"
[03:09:57.581]        </control>
[03:09:57.581]        // end if-block "isSWJ"
[03:09:57.581]      </control>
[03:09:57.581]      // end if-block "protType == 2"
[03:09:57.581]    </control>
[03:09:57.581]  </sequence>
[03:09:57.581]  
[03:09:57.843]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:57.843]  
[03:09:57.851]  <debugvars>
[03:09:57.851]    // Pre-defined
[03:09:57.851]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:57.851]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:57.851]    __dp=0x00000000
[03:09:57.852]    __ap=0x00000000
[03:09:57.852]    __traceout=0x00000000      (Trace Disabled)
[03:09:57.852]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:57.852]    __FlashAddr=0x00000000
[03:09:57.852]    __FlashLen=0x00000000
[03:09:57.852]    __FlashArg=0x00000000
[03:09:57.853]    __FlashOp=0x00000000
[03:09:57.853]    __Result=0x00000000
[03:09:57.853]  </debugvars>
[03:09:57.853]  
[03:09:57.853]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:57.853]    <block atomic="false" info="">
[03:09:57.853]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:57.853]        // -> [isSWJ <= 0x00000001]
[03:09:57.853]      __var hasDormant = __protocol & 0x00020000;
[03:09:57.853]        // -> [hasDormant <= 0x00000000]
[03:09:57.853]      __var protType   = __protocol & 0x0000FFFF;
[03:09:57.853]        // -> [protType <= 0x00000002]
[03:09:57.853]    </block>
[03:09:57.853]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:57.853]      // if-block "protType == 1"
[03:09:57.853]        // =>  FALSE
[03:09:57.853]      // skip if-block "protType == 1"
[03:09:57.853]    </control>
[03:09:57.853]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:57.853]      // if-block "protType == 2"
[03:09:57.853]        // =>  TRUE
[03:09:57.853]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:57.853]        // if-block "isSWJ"
[03:09:57.853]          // =>  TRUE
[03:09:57.853]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:57.856]          // if-block "hasDormant"
[03:09:57.856]            // =>  FALSE
[03:09:57.856]          // skip if-block "hasDormant"
[03:09:57.856]        </control>
[03:09:57.856]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:57.856]          // if-block "!hasDormant"
[03:09:57.856]            // =>  TRUE
[03:09:57.856]          <block atomic="false" info="">
[03:09:57.856]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:09:58.865]  
[03:09:58.865]  !!! E320 : DAP access error
[03:09:58.865]  
[03:09:58.875]          </block>
[03:09:58.875]          // end if-block "!hasDormant"
[03:09:58.875]        </control>
[03:09:58.875]        // end if-block "isSWJ"
[03:09:58.875]      </control>
[03:09:58.875]      // end if-block "protType == 2"
[03:09:58.875]    </control>
[03:09:58.875]  </sequence>
[03:09:58.875]  
[03:09:59.127]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:09:59.127]  
[03:09:59.127]  <debugvars>
[03:09:59.127]    // Pre-defined
[03:09:59.127]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:09:59.127]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:09:59.127]    __dp=0x00000000
[03:09:59.127]    __ap=0x00000000
[03:09:59.127]    __traceout=0x00000000      (Trace Disabled)
[03:09:59.127]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:09:59.129]    __FlashAddr=0x00000000
[03:09:59.129]    __FlashLen=0x00000000
[03:09:59.129]    __FlashArg=0x00000000
[03:09:59.129]    __FlashOp=0x00000000
[03:09:59.129]    __Result=0x00000000
[03:09:59.129]  </debugvars>
[03:09:59.129]  
[03:09:59.129]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:09:59.129]    <block atomic="false" info="">
[03:09:59.129]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:09:59.129]        // -> [isSWJ <= 0x00000001]
[03:09:59.131]      __var hasDormant = __protocol & 0x00020000;
[03:09:59.131]        // -> [hasDormant <= 0x00000000]
[03:09:59.131]      __var protType   = __protocol & 0x0000FFFF;
[03:09:59.131]        // -> [protType <= 0x00000002]
[03:09:59.131]    </block>
[03:09:59.131]    <control if="protType == 1" while="" timeout="0" info="">
[03:09:59.131]      // if-block "protType == 1"
[03:09:59.131]        // =>  FALSE
[03:09:59.132]      // skip if-block "protType == 1"
[03:09:59.132]    </control>
[03:09:59.132]    <control if="protType == 2" while="" timeout="0" info="">
[03:09:59.132]      // if-block "protType == 2"
[03:09:59.132]        // =>  TRUE
[03:09:59.132]      <control if="isSWJ" while="" timeout="0" info="">
[03:09:59.132]        // if-block "isSWJ"
[03:09:59.132]          // =>  TRUE
[03:09:59.132]        <control if="hasDormant" while="" timeout="0" info="">
[03:09:59.132]          // if-block "hasDormant"
[03:09:59.132]            // =>  FALSE
[03:09:59.132]          // skip if-block "hasDormant"
[03:09:59.132]        </control>
[03:09:59.132]        <control if="!hasDormant" while="" timeout="0" info="">
[03:09:59.132]          // if-block "!hasDormant"
[03:09:59.132]            // =>  TRUE
[03:09:59.132]          <block atomic="false" info="">
[03:09:59.132]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:00.136]  
[03:10:00.136]  !!! E320 : DAP access error
[03:10:00.136]  
[03:10:00.136]          </block>
[03:10:00.136]          // end if-block "!hasDormant"
[03:10:00.136]        </control>
[03:10:00.136]        // end if-block "isSWJ"
[03:10:00.136]      </control>
[03:10:00.136]      // end if-block "protType == 2"
[03:10:00.136]    </control>
[03:10:00.136]  </sequence>
[03:10:00.136]  
[03:10:00.393]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:00.393]  
[03:10:00.393]  <debugvars>
[03:10:00.393]    // Pre-defined
[03:10:00.393]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:00.393]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:00.394]    __dp=0x00000000
[03:10:00.394]    __ap=0x00000000
[03:10:00.394]    __traceout=0x00000000      (Trace Disabled)
[03:10:00.394]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:00.394]    __FlashAddr=0x00000000
[03:10:00.394]    __FlashLen=0x00000000
[03:10:00.394]    __FlashArg=0x00000000
[03:10:00.394]    __FlashOp=0x00000000
[03:10:00.394]    __Result=0x00000000
[03:10:00.394]  </debugvars>
[03:10:00.394]  
[03:10:00.394]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:00.394]    <block atomic="false" info="">
[03:10:00.394]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:00.394]        // -> [isSWJ <= 0x00000001]
[03:10:00.394]      __var hasDormant = __protocol & 0x00020000;
[03:10:00.394]        // -> [hasDormant <= 0x00000000]
[03:10:00.394]      __var protType   = __protocol & 0x0000FFFF;
[03:10:00.394]        // -> [protType <= 0x00000002]
[03:10:00.394]    </block>
[03:10:00.394]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:00.394]      // if-block "protType == 1"
[03:10:00.396]        // =>  FALSE
[03:10:00.396]      // skip if-block "protType == 1"
[03:10:00.396]    </control>
[03:10:00.396]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:00.396]      // if-block "protType == 2"
[03:10:00.397]        // =>  TRUE
[03:10:00.397]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:00.397]        // if-block "isSWJ"
[03:10:00.397]          // =>  TRUE
[03:10:00.397]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:00.397]          // if-block "hasDormant"
[03:10:00.397]            // =>  FALSE
[03:10:00.397]          // skip if-block "hasDormant"
[03:10:00.398]        </control>
[03:10:00.398]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:00.398]          // if-block "!hasDormant"
[03:10:00.398]            // =>  TRUE
[03:10:00.398]          <block atomic="false" info="">
[03:10:00.398]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:01.407]  
[03:10:01.407]  !!! E320 : DAP access error
[03:10:01.407]  
[03:10:01.416]          </block>
[03:10:01.416]          // end if-block "!hasDormant"
[03:10:01.416]        </control>
[03:10:01.416]        // end if-block "isSWJ"
[03:10:01.416]      </control>
[03:10:01.416]      // end if-block "protType == 2"
[03:10:01.416]    </control>
[03:10:01.416]  </sequence>
[03:10:01.416]  
[03:10:01.676]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:01.676]  
[03:10:01.686]  <debugvars>
[03:10:01.686]    // Pre-defined
[03:10:01.686]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:01.686]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:01.686]    __dp=0x00000000
[03:10:01.686]    __ap=0x00000000
[03:10:01.686]    __traceout=0x00000000      (Trace Disabled)
[03:10:01.686]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:01.686]    __FlashAddr=0x00000000
[03:10:01.686]    __FlashLen=0x00000000
[03:10:01.686]    __FlashArg=0x00000000
[03:10:01.686]    __FlashOp=0x00000000
[03:10:01.686]    __Result=0x00000000
[03:10:01.686]  </debugvars>
[03:10:01.686]  
[03:10:01.686]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:01.686]    <block atomic="false" info="">
[03:10:01.686]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:01.688]        // -> [isSWJ <= 0x00000001]
[03:10:01.688]      __var hasDormant = __protocol & 0x00020000;
[03:10:01.688]        // -> [hasDormant <= 0x00000000]
[03:10:01.688]      __var protType   = __protocol & 0x0000FFFF;
[03:10:01.688]        // -> [protType <= 0x00000002]
[03:10:01.688]    </block>
[03:10:01.688]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:01.688]      // if-block "protType == 1"
[03:10:01.688]        // =>  FALSE
[03:10:01.688]      // skip if-block "protType == 1"
[03:10:01.688]    </control>
[03:10:01.688]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:01.688]      // if-block "protType == 2"
[03:10:01.688]        // =>  TRUE
[03:10:01.688]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:01.688]        // if-block "isSWJ"
[03:10:01.688]          // =>  TRUE
[03:10:01.688]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:01.688]          // if-block "hasDormant"
[03:10:01.688]            // =>  FALSE
[03:10:01.688]          // skip if-block "hasDormant"
[03:10:01.688]        </control>
[03:10:01.688]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:01.688]          // if-block "!hasDormant"
[03:10:01.688]            // =>  TRUE
[03:10:01.688]          <block atomic="false" info="">
[03:10:01.688]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:02.690]  
[03:10:02.690]  !!! E320 : DAP access error
[03:10:02.690]  
[03:10:02.698]          </block>
[03:10:02.698]          // end if-block "!hasDormant"
[03:10:02.698]        </control>
[03:10:02.698]        // end if-block "isSWJ"
[03:10:02.698]      </control>
[03:10:02.698]      // end if-block "protType == 2"
[03:10:02.698]    </control>
[03:10:02.698]  </sequence>
[03:10:02.698]  
[03:10:02.952]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:02.952]  
[03:10:02.960]  <debugvars>
[03:10:02.960]    // Pre-defined
[03:10:02.960]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:02.960]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:02.960]    __dp=0x00000000
[03:10:02.960]    __ap=0x00000000
[03:10:02.960]    __traceout=0x00000000      (Trace Disabled)
[03:10:02.960]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:02.960]    __FlashAddr=0x00000000
[03:10:02.960]    __FlashLen=0x00000000
[03:10:02.960]    __FlashArg=0x00000000
[03:10:02.960]    __FlashOp=0x00000000
[03:10:02.960]    __Result=0x00000000
[03:10:02.960]  </debugvars>
[03:10:02.960]  
[03:10:02.960]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:02.960]    <block atomic="false" info="">
[03:10:02.960]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:02.960]        // -> [isSWJ <= 0x00000001]
[03:10:02.960]      __var hasDormant = __protocol & 0x00020000;
[03:10:02.960]        // -> [hasDormant <= 0x00000000]
[03:10:02.960]      __var protType   = __protocol & 0x0000FFFF;
[03:10:02.963]        // -> [protType <= 0x00000002]
[03:10:02.963]    </block>
[03:10:02.963]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:02.963]      // if-block "protType == 1"
[03:10:02.963]        // =>  FALSE
[03:10:02.963]      // skip if-block "protType == 1"
[03:10:02.963]    </control>
[03:10:02.963]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:02.963]      // if-block "protType == 2"
[03:10:02.963]        // =>  TRUE
[03:10:02.963]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:02.963]        // if-block "isSWJ"
[03:10:02.963]          // =>  TRUE
[03:10:02.964]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:02.964]          // if-block "hasDormant"
[03:10:02.964]            // =>  FALSE
[03:10:02.964]          // skip if-block "hasDormant"
[03:10:02.964]        </control>
[03:10:02.964]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:02.964]          // if-block "!hasDormant"
[03:10:02.964]            // =>  TRUE
[03:10:02.964]          <block atomic="false" info="">
[03:10:02.964]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:03.972]  
[03:10:03.972]  !!! E320 : DAP access error
[03:10:03.972]  
[03:10:03.980]          </block>
[03:10:03.980]          // end if-block "!hasDormant"
[03:10:03.980]        </control>
[03:10:03.980]        // end if-block "isSWJ"
[03:10:03.980]      </control>
[03:10:03.980]      // end if-block "protType == 2"
[03:10:03.980]    </control>
[03:10:03.980]  </sequence>
[03:10:03.980]  
[03:10:04.234]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:04.234]  
[03:10:04.242]  <debugvars>
[03:10:04.242]    // Pre-defined
[03:10:04.242]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:04.242]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:04.242]    __dp=0x00000000
[03:10:04.242]    __ap=0x00000000
[03:10:04.242]    __traceout=0x00000000      (Trace Disabled)
[03:10:04.242]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:04.242]    __FlashAddr=0x00000000
[03:10:04.242]    __FlashLen=0x00000000
[03:10:04.242]    __FlashArg=0x00000000
[03:10:04.242]    __FlashOp=0x00000000
[03:10:04.242]    __Result=0x00000000
[03:10:04.242]  </debugvars>
[03:10:04.242]  
[03:10:04.242]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:04.242]    <block atomic="false" info="">
[03:10:04.242]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:04.242]        // -> [isSWJ <= 0x00000001]
[03:10:04.242]      __var hasDormant = __protocol & 0x00020000;
[03:10:04.242]        // -> [hasDormant <= 0x00000000]
[03:10:04.242]      __var protType   = __protocol & 0x0000FFFF;
[03:10:04.242]        // -> [protType <= 0x00000002]
[03:10:04.242]    </block>
[03:10:04.242]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:04.242]      // if-block "protType == 1"
[03:10:04.242]        // =>  FALSE
[03:10:04.242]      // skip if-block "protType == 1"
[03:10:04.242]    </control>
[03:10:04.242]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:04.242]      // if-block "protType == 2"
[03:10:04.242]        // =>  TRUE
[03:10:04.242]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:04.242]        // if-block "isSWJ"
[03:10:04.242]          // =>  TRUE
[03:10:04.242]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:04.242]          // if-block "hasDormant"
[03:10:04.242]            // =>  FALSE
[03:10:04.246]          // skip if-block "hasDormant"
[03:10:04.246]        </control>
[03:10:04.246]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:04.246]          // if-block "!hasDormant"
[03:10:04.246]            // =>  TRUE
[03:10:04.247]          <block atomic="false" info="">
[03:10:04.247]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:05.259]  
[03:10:05.259]  !!! E320 : DAP access error
[03:10:05.259]  
[03:10:05.259]          </block>
[03:10:05.259]          // end if-block "!hasDormant"
[03:10:05.259]        </control>
[03:10:05.259]        // end if-block "isSWJ"
[03:10:05.259]      </control>
[03:10:05.259]      // end if-block "protType == 2"
[03:10:05.259]    </control>
[03:10:05.259]  </sequence>
[03:10:05.259]  
[03:10:05.519]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:05.519]  
[03:10:05.528]  <debugvars>
[03:10:05.528]    // Pre-defined
[03:10:05.528]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:05.528]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:05.528]    __dp=0x00000000
[03:10:05.528]    __ap=0x00000000
[03:10:05.528]    __traceout=0x00000000      (Trace Disabled)
[03:10:05.529]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:05.529]    __FlashAddr=0x00000000
[03:10:05.529]    __FlashLen=0x00000000
[03:10:05.529]    __FlashArg=0x00000000
[03:10:05.529]    __FlashOp=0x00000000
[03:10:05.529]    __Result=0x00000000
[03:10:05.529]  </debugvars>
[03:10:05.529]  
[03:10:05.529]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:05.529]    <block atomic="false" info="">
[03:10:05.529]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:05.529]        // -> [isSWJ <= 0x00000001]
[03:10:05.531]      __var hasDormant = __protocol & 0x00020000;
[03:10:05.531]        // -> [hasDormant <= 0x00000000]
[03:10:05.532]      __var protType   = __protocol & 0x0000FFFF;
[03:10:05.532]        // -> [protType <= 0x00000002]
[03:10:05.532]    </block>
[03:10:05.532]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:05.532]      // if-block "protType == 1"
[03:10:05.532]        // =>  FALSE
[03:10:05.532]      // skip if-block "protType == 1"
[03:10:05.532]    </control>
[03:10:05.532]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:05.532]      // if-block "protType == 2"
[03:10:05.532]        // =>  TRUE
[03:10:05.532]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:05.533]        // if-block "isSWJ"
[03:10:05.533]          // =>  TRUE
[03:10:05.533]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:05.533]          // if-block "hasDormant"
[03:10:05.533]            // =>  FALSE
[03:10:05.533]          // skip if-block "hasDormant"
[03:10:05.533]        </control>
[03:10:05.533]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:05.533]          // if-block "!hasDormant"
[03:10:05.533]            // =>  TRUE
[03:10:05.533]          <block atomic="false" info="">
[03:10:05.533]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:06.546]  
[03:10:06.546]  !!! E320 : DAP access error
[03:10:06.546]  
[03:10:06.546]          </block>
[03:10:06.546]          // end if-block "!hasDormant"
[03:10:06.546]        </control>
[03:10:06.546]        // end if-block "isSWJ"
[03:10:06.546]      </control>
[03:10:06.546]      // end if-block "protType == 2"
[03:10:06.546]    </control>
[03:10:06.546]  </sequence>
[03:10:06.546]  
[03:10:06.807]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:06.807]  
[03:10:06.815]  <debugvars>
[03:10:06.815]    // Pre-defined
[03:10:06.815]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:06.815]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:06.815]    __dp=0x00000000
[03:10:06.815]    __ap=0x00000000
[03:10:06.815]    __traceout=0x00000000      (Trace Disabled)
[03:10:06.815]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:06.815]    __FlashAddr=0x00000000
[03:10:06.815]    __FlashLen=0x00000000
[03:10:06.815]    __FlashArg=0x00000000
[03:10:06.815]    __FlashOp=0x00000000
[03:10:06.815]    __Result=0x00000000
[03:10:06.815]  </debugvars>
[03:10:06.815]  
[03:10:06.815]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:06.815]    <block atomic="false" info="">
[03:10:06.815]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:06.815]        // -> [isSWJ <= 0x00000001]
[03:10:06.815]      __var hasDormant = __protocol & 0x00020000;
[03:10:06.815]        // -> [hasDormant <= 0x00000000]
[03:10:06.815]      __var protType   = __protocol & 0x0000FFFF;
[03:10:06.815]        // -> [protType <= 0x00000002]
[03:10:06.815]    </block>
[03:10:06.815]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:06.815]      // if-block "protType == 1"
[03:10:06.815]        // =>  FALSE
[03:10:06.815]      // skip if-block "protType == 1"
[03:10:06.815]    </control>
[03:10:06.815]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:06.815]      // if-block "protType == 2"
[03:10:06.815]        // =>  TRUE
[03:10:06.815]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:06.819]        // if-block "isSWJ"
[03:10:06.819]          // =>  TRUE
[03:10:06.819]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:06.819]          // if-block "hasDormant"
[03:10:06.819]            // =>  FALSE
[03:10:06.819]          // skip if-block "hasDormant"
[03:10:06.819]        </control>
[03:10:06.819]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:06.819]          // if-block "!hasDormant"
[03:10:06.819]            // =>  TRUE
[03:10:06.819]          <block atomic="false" info="">
[03:10:06.820]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:07.832]  
[03:10:07.832]  !!! E320 : DAP access error
[03:10:07.832]  
[03:10:07.840]          </block>
[03:10:07.840]          // end if-block "!hasDormant"
[03:10:07.840]        </control>
[03:10:07.840]        // end if-block "isSWJ"
[03:10:07.840]      </control>
[03:10:07.840]      // end if-block "protType == 2"
[03:10:07.840]    </control>
[03:10:07.840]  </sequence>
[03:10:07.840]  
[03:10:08.099]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:08.099]  
[03:10:08.108]  <debugvars>
[03:10:08.108]    // Pre-defined
[03:10:08.108]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:08.108]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:08.108]    __dp=0x00000000
[03:10:08.108]    __ap=0x00000000
[03:10:08.108]    __traceout=0x00000000      (Trace Disabled)
[03:10:08.108]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:08.108]    __FlashAddr=0x00000000
[03:10:08.108]    __FlashLen=0x00000000
[03:10:08.108]    __FlashArg=0x00000000
[03:10:08.108]    __FlashOp=0x00000000
[03:10:08.108]    __Result=0x00000000
[03:10:08.108]  </debugvars>
[03:10:08.108]  
[03:10:08.108]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:08.108]    <block atomic="false" info="">
[03:10:08.108]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:08.108]        // -> [isSWJ <= 0x00000001]
[03:10:08.111]      __var hasDormant = __protocol & 0x00020000;
[03:10:08.111]        // -> [hasDormant <= 0x00000000]
[03:10:08.111]      __var protType   = __protocol & 0x0000FFFF;
[03:10:08.111]        // -> [protType <= 0x00000002]
[03:10:08.111]    </block>
[03:10:08.111]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:08.111]      // if-block "protType == 1"
[03:10:08.111]        // =>  FALSE
[03:10:08.111]      // skip if-block "protType == 1"
[03:10:08.111]    </control>
[03:10:08.111]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:08.111]      // if-block "protType == 2"
[03:10:08.111]        // =>  TRUE
[03:10:08.111]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:08.111]        // if-block "isSWJ"
[03:10:08.111]          // =>  TRUE
[03:10:08.111]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:08.111]          // if-block "hasDormant"
[03:10:08.111]            // =>  FALSE
[03:10:08.111]          // skip if-block "hasDormant"
[03:10:08.111]        </control>
[03:10:08.111]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:08.111]          // if-block "!hasDormant"
[03:10:08.111]            // =>  TRUE
[03:10:08.111]          <block atomic="false" info="">
[03:10:08.111]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:09.114]  
[03:10:09.114]  !!! E320 : DAP access error
[03:10:09.114]  
[03:10:09.114]          </block>
[03:10:09.114]          // end if-block "!hasDormant"
[03:10:09.114]        </control>
[03:10:09.114]        // end if-block "isSWJ"
[03:10:09.114]      </control>
[03:10:09.114]      // end if-block "protType == 2"
[03:10:09.114]    </control>
[03:10:09.114]  </sequence>
[03:10:09.114]  
[03:10:09.373]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:09.373]  
[03:10:09.382]  <debugvars>
[03:10:09.382]    // Pre-defined
[03:10:09.382]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:09.382]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:09.382]    __dp=0x00000000
[03:10:09.382]    __ap=0x00000000
[03:10:09.382]    __traceout=0x00000000      (Trace Disabled)
[03:10:09.382]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:09.382]    __FlashAddr=0x00000000
[03:10:09.382]    __FlashLen=0x00000000
[03:10:09.382]    __FlashArg=0x00000000
[03:10:09.382]    __FlashOp=0x00000000
[03:10:09.382]    __Result=0x00000000
[03:10:09.382]  </debugvars>
[03:10:09.382]  
[03:10:09.382]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:09.382]    <block atomic="false" info="">
[03:10:09.382]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:09.382]        // -> [isSWJ <= 0x00000001]
[03:10:09.382]      __var hasDormant = __protocol & 0x00020000;
[03:10:09.382]        // -> [hasDormant <= 0x00000000]
[03:10:09.382]      __var protType   = __protocol & 0x0000FFFF;
[03:10:09.382]        // -> [protType <= 0x00000002]
[03:10:09.382]    </block>
[03:10:09.382]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:09.382]      // if-block "protType == 1"
[03:10:09.382]        // =>  FALSE
[03:10:09.382]      // skip if-block "protType == 1"
[03:10:09.385]    </control>
[03:10:09.385]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:09.385]      // if-block "protType == 2"
[03:10:09.385]        // =>  TRUE
[03:10:09.385]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:09.385]        // if-block "isSWJ"
[03:10:09.385]          // =>  TRUE
[03:10:09.385]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:09.385]          // if-block "hasDormant"
[03:10:09.385]            // =>  FALSE
[03:10:09.385]          // skip if-block "hasDormant"
[03:10:09.385]        </control>
[03:10:09.385]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:09.385]          // if-block "!hasDormant"
[03:10:09.385]            // =>  TRUE
[03:10:09.385]          <block atomic="false" info="">
[03:10:09.385]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:10.388]  
[03:10:10.388]  !!! E320 : DAP access error
[03:10:10.388]  
[03:10:10.388]          </block>
[03:10:10.388]          // end if-block "!hasDormant"
[03:10:10.388]        </control>
[03:10:10.388]        // end if-block "isSWJ"
[03:10:10.388]      </control>
[03:10:10.388]      // end if-block "protType == 2"
[03:10:10.388]    </control>
[03:10:10.388]  </sequence>
[03:10:10.388]  
[03:10:10.640]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:10.640]  
[03:10:10.650]  <debugvars>
[03:10:10.650]    // Pre-defined
[03:10:10.650]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:10.650]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:10.650]    __dp=0x00000000
[03:10:10.650]    __ap=0x00000000
[03:10:10.650]    __traceout=0x00000000      (Trace Disabled)
[03:10:10.650]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:10.650]    __FlashAddr=0x00000000
[03:10:10.650]    __FlashLen=0x00000000
[03:10:10.650]    __FlashArg=0x00000000
[03:10:10.650]    __FlashOp=0x00000000
[03:10:10.650]    __Result=0x00000000
[03:10:10.650]  </debugvars>
[03:10:10.650]  
[03:10:10.650]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:10.650]    <block atomic="false" info="">
[03:10:10.650]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:10.653]        // -> [isSWJ <= 0x00000001]
[03:10:10.653]      __var hasDormant = __protocol & 0x00020000;
[03:10:10.653]        // -> [hasDormant <= 0x00000000]
[03:10:10.653]      __var protType   = __protocol & 0x0000FFFF;
[03:10:10.653]        // -> [protType <= 0x00000002]
[03:10:10.653]    </block>
[03:10:10.653]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:10.653]      // if-block "protType == 1"
[03:10:10.654]        // =>  FALSE
[03:10:10.654]      // skip if-block "protType == 1"
[03:10:10.654]    </control>
[03:10:10.654]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:10.654]      // if-block "protType == 2"
[03:10:10.654]        // =>  TRUE
[03:10:10.654]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:10.654]        // if-block "isSWJ"
[03:10:10.654]          // =>  TRUE
[03:10:10.654]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:10.654]          // if-block "hasDormant"
[03:10:10.654]            // =>  FALSE
[03:10:10.654]          // skip if-block "hasDormant"
[03:10:10.654]        </control>
[03:10:10.654]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:10.654]          // if-block "!hasDormant"
[03:10:10.654]            // =>  TRUE
[03:10:10.654]          <block atomic="false" info="">
[03:10:10.654]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:11.658]  
[03:10:11.658]  !!! E320 : DAP access error
[03:10:11.658]  
[03:10:11.658]          </block>
[03:10:11.658]          // end if-block "!hasDormant"
[03:10:11.658]        </control>
[03:10:11.658]        // end if-block "isSWJ"
[03:10:11.658]      </control>
[03:10:11.658]      // end if-block "protType == 2"
[03:10:11.658]    </control>
[03:10:11.658]  </sequence>
[03:10:11.658]  
[03:10:11.914]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:11.914]  
[03:10:11.924]  <debugvars>
[03:10:11.924]    // Pre-defined
[03:10:11.924]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:11.924]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:11.924]    __dp=0x00000000
[03:10:11.924]    __ap=0x00000000
[03:10:11.924]    __traceout=0x00000000      (Trace Disabled)
[03:10:11.924]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:11.924]    __FlashAddr=0x00000000
[03:10:11.924]    __FlashLen=0x00000000
[03:10:11.924]    __FlashArg=0x00000000
[03:10:11.924]    __FlashOp=0x00000000
[03:10:11.924]    __Result=0x00000000
[03:10:11.924]  </debugvars>
[03:10:11.924]  
[03:10:11.926]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:11.926]    <block atomic="false" info="">
[03:10:11.926]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:11.926]        // -> [isSWJ <= 0x00000001]
[03:10:11.926]      __var hasDormant = __protocol & 0x00020000;
[03:10:11.926]        // -> [hasDormant <= 0x00000000]
[03:10:11.926]      __var protType   = __protocol & 0x0000FFFF;
[03:10:11.926]        // -> [protType <= 0x00000002]
[03:10:11.926]    </block>
[03:10:11.926]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:11.926]      // if-block "protType == 1"
[03:10:11.926]        // =>  FALSE
[03:10:11.926]      // skip if-block "protType == 1"
[03:10:11.926]    </control>
[03:10:11.926]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:11.926]      // if-block "protType == 2"
[03:10:11.928]        // =>  TRUE
[03:10:11.928]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:11.928]        // if-block "isSWJ"
[03:10:11.928]          // =>  TRUE
[03:10:11.928]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:11.929]          // if-block "hasDormant"
[03:10:11.929]            // =>  FALSE
[03:10:11.929]          // skip if-block "hasDormant"
[03:10:11.929]        </control>
[03:10:11.929]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:11.929]          // if-block "!hasDormant"
[03:10:11.929]            // =>  TRUE
[03:10:11.929]          <block atomic="false" info="">
[03:10:11.929]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:12.939]  
[03:10:12.939]  !!! E320 : DAP access error
[03:10:12.939]  
[03:10:12.947]          </block>
[03:10:12.947]          // end if-block "!hasDormant"
[03:10:12.947]        </control>
[03:10:12.947]        // end if-block "isSWJ"
[03:10:12.947]      </control>
[03:10:12.947]      // end if-block "protType == 2"
[03:10:12.947]    </control>
[03:10:12.947]  </sequence>
[03:10:12.947]  
[03:10:13.206]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:13.206]  
[03:10:13.206]  <debugvars>
[03:10:13.206]    // Pre-defined
[03:10:13.206]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:13.206]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:13.206]    __dp=0x00000000
[03:10:13.206]    __ap=0x00000000
[03:10:13.206]    __traceout=0x00000000      (Trace Disabled)
[03:10:13.206]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:13.206]    __FlashAddr=0x00000000
[03:10:13.206]    __FlashLen=0x00000000
[03:10:13.206]    __FlashArg=0x00000000
[03:10:13.206]    __FlashOp=0x00000000
[03:10:13.206]    __Result=0x00000000
[03:10:13.206]  </debugvars>
[03:10:13.206]  
[03:10:13.206]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:13.206]    <block atomic="false" info="">
[03:10:13.206]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:13.210]        // -> [isSWJ <= 0x00000001]
[03:10:13.210]      __var hasDormant = __protocol & 0x00020000;
[03:10:13.210]        // -> [hasDormant <= 0x00000000]
[03:10:13.210]      __var protType   = __protocol & 0x0000FFFF;
[03:10:13.210]        // -> [protType <= 0x00000002]
[03:10:13.210]    </block>
[03:10:13.210]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:13.210]      // if-block "protType == 1"
[03:10:13.210]        // =>  FALSE
[03:10:13.210]      // skip if-block "protType == 1"
[03:10:13.210]    </control>
[03:10:13.210]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:13.210]      // if-block "protType == 2"
[03:10:13.210]        // =>  TRUE
[03:10:13.210]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:13.210]        // if-block "isSWJ"
[03:10:13.210]          // =>  TRUE
[03:10:13.210]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:13.210]          // if-block "hasDormant"
[03:10:13.210]            // =>  FALSE
[03:10:13.210]          // skip if-block "hasDormant"
[03:10:13.210]        </control>
[03:10:13.210]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:13.210]          // if-block "!hasDormant"
[03:10:13.210]            // =>  TRUE
[03:10:13.210]          <block atomic="false" info="">
[03:10:13.210]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:14.211]  
[03:10:14.211]  !!! E320 : DAP access error
[03:10:14.211]  
[03:10:14.220]          </block>
[03:10:14.220]          // end if-block "!hasDormant"
[03:10:14.220]        </control>
[03:10:14.220]        // end if-block "isSWJ"
[03:10:14.220]      </control>
[03:10:14.220]      // end if-block "protType == 2"
[03:10:14.220]    </control>
[03:10:14.220]  </sequence>
[03:10:14.220]  
[03:10:14.476]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:14.476]  
[03:10:14.476]  <debugvars>
[03:10:14.476]    // Pre-defined
[03:10:14.476]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:14.476]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:14.476]    __dp=0x00000000
[03:10:14.476]    __ap=0x00000000
[03:10:14.476]    __traceout=0x00000000      (Trace Disabled)
[03:10:14.476]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:14.476]    __FlashAddr=0x00000000
[03:10:14.476]    __FlashLen=0x00000000
[03:10:14.476]    __FlashArg=0x00000000
[03:10:14.476]    __FlashOp=0x00000000
[03:10:14.476]    __Result=0x00000000
[03:10:14.476]  </debugvars>
[03:10:14.476]  
[03:10:14.476]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:14.476]    <block atomic="false" info="">
[03:10:14.476]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:14.476]        // -> [isSWJ <= 0x00000001]
[03:10:14.480]      __var hasDormant = __protocol & 0x00020000;
[03:10:14.480]        // -> [hasDormant <= 0x00000000]
[03:10:14.480]      __var protType   = __protocol & 0x0000FFFF;
[03:10:14.480]        // -> [protType <= 0x00000002]
[03:10:14.480]    </block>
[03:10:14.480]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:14.480]      // if-block "protType == 1"
[03:10:14.480]        // =>  FALSE
[03:10:14.480]      // skip if-block "protType == 1"
[03:10:14.480]    </control>
[03:10:14.480]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:14.480]      // if-block "protType == 2"
[03:10:14.480]        // =>  TRUE
[03:10:14.480]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:14.480]        // if-block "isSWJ"
[03:10:14.480]          // =>  TRUE
[03:10:14.480]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:14.480]          // if-block "hasDormant"
[03:10:14.480]            // =>  FALSE
[03:10:14.480]          // skip if-block "hasDormant"
[03:10:14.480]        </control>
[03:10:14.480]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:14.480]          // if-block "!hasDormant"
[03:10:14.480]            // =>  TRUE
[03:10:14.480]          <block atomic="false" info="">
[03:10:14.480]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:15.492]  
[03:10:15.492]  !!! E320 : DAP access error
[03:10:15.492]  
[03:10:15.500]          </block>
[03:10:15.500]          // end if-block "!hasDormant"
[03:10:15.500]        </control>
[03:10:15.500]        // end if-block "isSWJ"
[03:10:15.500]      </control>
[03:10:15.500]      // end if-block "protType == 2"
[03:10:15.500]    </control>
[03:10:15.500]  </sequence>
[03:10:15.500]  
[03:10:15.757]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:15.757]  
[03:10:15.757]  <debugvars>
[03:10:15.757]    // Pre-defined
[03:10:15.757]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:15.757]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:15.757]    __dp=0x00000000
[03:10:15.757]    __ap=0x00000000
[03:10:15.757]    __traceout=0x00000000      (Trace Disabled)
[03:10:15.757]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:15.757]    __FlashAddr=0x00000000
[03:10:15.757]    __FlashLen=0x00000000
[03:10:15.757]    __FlashArg=0x00000000
[03:10:15.757]    __FlashOp=0x00000000
[03:10:15.757]    __Result=0x00000000
[03:10:15.757]  </debugvars>
[03:10:15.757]  
[03:10:15.757]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:15.757]    <block atomic="false" info="">
[03:10:15.757]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:15.757]        // -> [isSWJ <= 0x00000001]
[03:10:15.757]      __var hasDormant = __protocol & 0x00020000;
[03:10:15.757]        // -> [hasDormant <= 0x00000000]
[03:10:15.761]      __var protType   = __protocol & 0x0000FFFF;
[03:10:15.761]        // -> [protType <= 0x00000002]
[03:10:15.761]    </block>
[03:10:15.761]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:15.761]      // if-block "protType == 1"
[03:10:15.761]        // =>  FALSE
[03:10:15.761]      // skip if-block "protType == 1"
[03:10:15.761]    </control>
[03:10:15.761]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:15.761]      // if-block "protType == 2"
[03:10:15.761]        // =>  TRUE
[03:10:15.761]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:15.761]        // if-block "isSWJ"
[03:10:15.761]          // =>  TRUE
[03:10:15.761]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:15.761]          // if-block "hasDormant"
[03:10:15.761]            // =>  FALSE
[03:10:15.761]          // skip if-block "hasDormant"
[03:10:15.761]        </control>
[03:10:15.761]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:15.761]          // if-block "!hasDormant"
[03:10:15.761]            // =>  TRUE
[03:10:15.761]          <block atomic="false" info="">
[03:10:15.761]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:15.897]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:15.897]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:15.909]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:15.909]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:15.917]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:15.917]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:15.921]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:15.921]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:15.925]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:15.925]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:15.926]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:15.926]          </block>
[03:10:15.926]          // end if-block "!hasDormant"
[03:10:15.926]        </control>
[03:10:15.926]        // end if-block "isSWJ"
[03:10:15.926]      </control>
[03:10:15.926]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:15.926]        // if-block "!isSWJ"
[03:10:15.926]          // =>  FALSE
[03:10:15.926]        // skip if-block "!isSWJ"
[03:10:15.926]      </control>
[03:10:15.926]      <block atomic="false" info="">
[03:10:15.926]        ReadDP(0x0);
[03:10:15.929]  
[03:10:15.929]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:15.929]  
[03:10:15.929]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:15.929]      </block>
[03:10:15.929]      // end if-block "protType == 2"
[03:10:15.929]    </control>
[03:10:15.929]  </sequence>
[03:10:15.929]  
[03:10:16.189]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:16.189]  
[03:10:16.198]  <debugvars>
[03:10:16.198]    // Pre-defined
[03:10:16.198]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:16.198]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:16.198]    __dp=0x00000000
[03:10:16.198]    __ap=0x00000000
[03:10:16.198]    __traceout=0x00000000      (Trace Disabled)
[03:10:16.198]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:16.198]    __FlashAddr=0x00000000
[03:10:16.198]    __FlashLen=0x00000000
[03:10:16.198]    __FlashArg=0x00000000
[03:10:16.198]    __FlashOp=0x00000000
[03:10:16.198]    __Result=0x00000000
[03:10:16.198]  </debugvars>
[03:10:16.198]  
[03:10:16.198]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:16.198]    <block atomic="false" info="">
[03:10:16.198]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:16.198]        // -> [isSWJ <= 0x00000001]
[03:10:16.198]      __var hasDormant = __protocol & 0x00020000;
[03:10:16.198]        // -> [hasDormant <= 0x00000000]
[03:10:16.198]      __var protType   = __protocol & 0x0000FFFF;
[03:10:16.198]        // -> [protType <= 0x00000002]
[03:10:16.198]    </block>
[03:10:16.201]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:16.201]      // if-block "protType == 1"
[03:10:16.201]        // =>  FALSE
[03:10:16.201]      // skip if-block "protType == 1"
[03:10:16.201]    </control>
[03:10:16.201]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:16.201]      // if-block "protType == 2"
[03:10:16.201]        // =>  TRUE
[03:10:16.201]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:16.201]        // if-block "isSWJ"
[03:10:16.201]          // =>  TRUE
[03:10:16.201]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:16.201]          // if-block "hasDormant"
[03:10:16.201]            // =>  FALSE
[03:10:16.201]          // skip if-block "hasDormant"
[03:10:16.201]        </control>
[03:10:16.201]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:16.201]          // if-block "!hasDormant"
[03:10:16.201]            // =>  TRUE
[03:10:16.201]          <block atomic="false" info="">
[03:10:16.201]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:16.205]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.205]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:16.205]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:16.205]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:16.209]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.209]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:16.209]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:16.209]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:16.213]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.213]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:16.217]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:16.217]          </block>
[03:10:16.217]          // end if-block "!hasDormant"
[03:10:16.217]        </control>
[03:10:16.217]        // end if-block "isSWJ"
[03:10:16.217]      </control>
[03:10:16.217]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:16.217]        // if-block "!isSWJ"
[03:10:16.217]          // =>  FALSE
[03:10:16.217]        // skip if-block "!isSWJ"
[03:10:16.217]      </control>
[03:10:16.221]      <block atomic="false" info="">
[03:10:16.221]        ReadDP(0x0);
[03:10:16.221]  
[03:10:16.221]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:16.221]  
[03:10:16.225]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:16.225]      </block>
[03:10:16.225]      // end if-block "protType == 2"
[03:10:16.225]    </control>
[03:10:16.225]  </sequence>
[03:10:16.225]  
[03:10:16.478]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:16.478]  
[03:10:16.487]  <debugvars>
[03:10:16.487]    // Pre-defined
[03:10:16.487]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:16.487]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:16.487]    __dp=0x00000000
[03:10:16.487]    __ap=0x00000000
[03:10:16.487]    __traceout=0x00000000      (Trace Disabled)
[03:10:16.487]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:16.487]    __FlashAddr=0x00000000
[03:10:16.487]    __FlashLen=0x00000000
[03:10:16.487]    __FlashArg=0x00000000
[03:10:16.487]    __FlashOp=0x00000000
[03:10:16.487]    __Result=0x00000000
[03:10:16.487]  </debugvars>
[03:10:16.487]  
[03:10:16.487]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:16.487]    <block atomic="false" info="">
[03:10:16.487]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:16.487]        // -> [isSWJ <= 0x00000001]
[03:10:16.487]      __var hasDormant = __protocol & 0x00020000;
[03:10:16.487]        // -> [hasDormant <= 0x00000000]
[03:10:16.487]      __var protType   = __protocol & 0x0000FFFF;
[03:10:16.487]        // -> [protType <= 0x00000002]
[03:10:16.490]    </block>
[03:10:16.490]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:16.490]      // if-block "protType == 1"
[03:10:16.490]        // =>  FALSE
[03:10:16.490]      // skip if-block "protType == 1"
[03:10:16.490]    </control>
[03:10:16.490]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:16.490]      // if-block "protType == 2"
[03:10:16.490]        // =>  TRUE
[03:10:16.490]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:16.490]        // if-block "isSWJ"
[03:10:16.490]          // =>  TRUE
[03:10:16.490]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:16.490]          // if-block "hasDormant"
[03:10:16.490]            // =>  FALSE
[03:10:16.490]          // skip if-block "hasDormant"
[03:10:16.490]        </control>
[03:10:16.490]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:16.490]          // if-block "!hasDormant"
[03:10:16.490]            // =>  TRUE
[03:10:16.490]          <block atomic="false" info="">
[03:10:16.490]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:16.494]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.494]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:16.498]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:16.498]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:16.498]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.498]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:16.503]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:16.503]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:16.510]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.510]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:16.522]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:16.522]          </block>
[03:10:16.522]          // end if-block "!hasDormant"
[03:10:16.522]        </control>
[03:10:16.522]        // end if-block "isSWJ"
[03:10:16.522]      </control>
[03:10:16.522]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:16.522]        // if-block "!isSWJ"
[03:10:16.522]          // =>  FALSE
[03:10:16.522]        // skip if-block "!isSWJ"
[03:10:16.522]      </control>
[03:10:16.522]      <block atomic="false" info="">
[03:10:16.522]        ReadDP(0x0);
[03:10:16.526]  
[03:10:16.526]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:16.526]  
[03:10:16.526]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:16.526]      </block>
[03:10:16.526]      // end if-block "protType == 2"
[03:10:16.526]    </control>
[03:10:16.526]  </sequence>
[03:10:16.526]  
[03:10:16.777]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:16.777]  
[03:10:16.785]  <debugvars>
[03:10:16.785]    // Pre-defined
[03:10:16.785]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:16.785]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:16.785]    __dp=0x00000000
[03:10:16.785]    __ap=0x00000000
[03:10:16.785]    __traceout=0x00000000      (Trace Disabled)
[03:10:16.785]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:16.785]    __FlashAddr=0x00000000
[03:10:16.785]    __FlashLen=0x00000000
[03:10:16.785]    __FlashArg=0x00000000
[03:10:16.785]    __FlashOp=0x00000000
[03:10:16.787]    __Result=0x00000000
[03:10:16.787]  </debugvars>
[03:10:16.787]  
[03:10:16.787]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:16.787]    <block atomic="false" info="">
[03:10:16.787]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:16.787]        // -> [isSWJ <= 0x00000001]
[03:10:16.787]      __var hasDormant = __protocol & 0x00020000;
[03:10:16.787]        // -> [hasDormant <= 0x00000000]
[03:10:16.787]      __var protType   = __protocol & 0x0000FFFF;
[03:10:16.787]        // -> [protType <= 0x00000002]
[03:10:16.787]    </block>
[03:10:16.787]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:16.787]      // if-block "protType == 1"
[03:10:16.789]        // =>  FALSE
[03:10:16.789]      // skip if-block "protType == 1"
[03:10:16.789]    </control>
[03:10:16.789]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:16.789]      // if-block "protType == 2"
[03:10:16.789]        // =>  TRUE
[03:10:16.789]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:16.789]        // if-block "isSWJ"
[03:10:16.790]          // =>  TRUE
[03:10:16.790]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:16.790]          // if-block "hasDormant"
[03:10:16.790]            // =>  FALSE
[03:10:16.790]          // skip if-block "hasDormant"
[03:10:16.790]        </control>
[03:10:16.790]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:16.790]          // if-block "!hasDormant"
[03:10:16.790]            // =>  TRUE
[03:10:16.790]          <block atomic="false" info="">
[03:10:16.790]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:16.793]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.793]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:16.801]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:16.801]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:16.802]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.803]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:16.809]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:16.809]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:16.813]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:16.813]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:16.815]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:16.817]          </block>
[03:10:16.817]          // end if-block "!hasDormant"
[03:10:16.817]        </control>
[03:10:16.817]        // end if-block "isSWJ"
[03:10:16.817]      </control>
[03:10:16.817]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:16.817]        // if-block "!isSWJ"
[03:10:16.817]          // =>  FALSE
[03:10:16.817]        // skip if-block "!isSWJ"
[03:10:16.817]      </control>
[03:10:16.817]      <block atomic="false" info="">
[03:10:16.817]        ReadDP(0x0);
[03:10:16.817]  
[03:10:16.817]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:16.817]  
[03:10:16.817]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:16.821]      </block>
[03:10:16.821]      // end if-block "protType == 2"
[03:10:16.821]    </control>
[03:10:16.821]  </sequence>
[03:10:16.821]  
[03:10:17.082]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:17.082]  
[03:10:17.090]  <debugvars>
[03:10:17.090]    // Pre-defined
[03:10:17.090]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:17.090]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:17.090]    __dp=0x00000000
[03:10:17.090]    __ap=0x00000000
[03:10:17.090]    __traceout=0x00000000      (Trace Disabled)
[03:10:17.090]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:17.090]    __FlashAddr=0x00000000
[03:10:17.090]    __FlashLen=0x00000000
[03:10:17.090]    __FlashArg=0x00000000
[03:10:17.090]    __FlashOp=0x00000000
[03:10:17.090]    __Result=0x00000000
[03:10:17.090]  </debugvars>
[03:10:17.090]  
[03:10:17.090]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:17.090]    <block atomic="false" info="">
[03:10:17.090]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:17.090]        // -> [isSWJ <= 0x00000001]
[03:10:17.090]      __var hasDormant = __protocol & 0x00020000;
[03:10:17.090]        // -> [hasDormant <= 0x00000000]
[03:10:17.090]      __var protType   = __protocol & 0x0000FFFF;
[03:10:17.090]        // -> [protType <= 0x00000002]
[03:10:17.090]    </block>
[03:10:17.090]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:17.090]      // if-block "protType == 1"
[03:10:17.090]        // =>  FALSE
[03:10:17.090]      // skip if-block "protType == 1"
[03:10:17.090]    </control>
[03:10:17.090]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:17.090]      // if-block "protType == 2"
[03:10:17.090]        // =>  TRUE
[03:10:17.094]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:17.094]        // if-block "isSWJ"
[03:10:17.094]          // =>  TRUE
[03:10:17.094]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:17.094]          // if-block "hasDormant"
[03:10:17.094]            // =>  FALSE
[03:10:17.094]          // skip if-block "hasDormant"
[03:10:17.094]        </control>
[03:10:17.094]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:17.094]          // if-block "!hasDormant"
[03:10:17.094]            // =>  TRUE
[03:10:17.094]          <block atomic="false" info="">
[03:10:17.094]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:17.094]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.098]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:17.102]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:17.102]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:17.106]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.106]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:17.106]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:17.108]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:17.110]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.110]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:17.114]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:17.114]          </block>
[03:10:17.114]          // end if-block "!hasDormant"
[03:10:17.114]        </control>
[03:10:17.114]        // end if-block "isSWJ"
[03:10:17.114]      </control>
[03:10:17.114]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:17.114]        // if-block "!isSWJ"
[03:10:17.114]          // =>  FALSE
[03:10:17.114]        // skip if-block "!isSWJ"
[03:10:17.114]      </control>
[03:10:17.114]      <block atomic="false" info="">
[03:10:17.114]        ReadDP(0x0);
[03:10:17.126]  
[03:10:17.126]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:17.126]  
[03:10:17.126]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:17.126]      </block>
[03:10:17.126]      // end if-block "protType == 2"
[03:10:17.126]    </control>
[03:10:17.126]  </sequence>
[03:10:17.126]  
[03:10:17.385]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:17.385]  
[03:10:17.385]  <debugvars>
[03:10:17.385]    // Pre-defined
[03:10:17.387]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:17.387]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:17.387]    __dp=0x00000000
[03:10:17.387]    __ap=0x00000000
[03:10:17.387]    __traceout=0x00000000      (Trace Disabled)
[03:10:17.387]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:17.387]    __FlashAddr=0x00000000
[03:10:17.387]    __FlashLen=0x00000000
[03:10:17.387]    __FlashArg=0x00000000
[03:10:17.387]    __FlashOp=0x00000000
[03:10:17.387]    __Result=0x00000000
[03:10:17.387]  </debugvars>
[03:10:17.387]  
[03:10:17.387]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:17.387]    <block atomic="false" info="">
[03:10:17.387]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:17.387]        // -> [isSWJ <= 0x00000001]
[03:10:17.387]      __var hasDormant = __protocol & 0x00020000;
[03:10:17.387]        // -> [hasDormant <= 0x00000000]
[03:10:17.387]      __var protType   = __protocol & 0x0000FFFF;
[03:10:17.387]        // -> [protType <= 0x00000002]
[03:10:17.387]    </block>
[03:10:17.387]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:17.387]      // if-block "protType == 1"
[03:10:17.387]        // =>  FALSE
[03:10:17.387]      // skip if-block "protType == 1"
[03:10:17.387]    </control>
[03:10:17.390]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:17.390]      // if-block "protType == 2"
[03:10:17.390]        // =>  TRUE
[03:10:17.390]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:17.390]        // if-block "isSWJ"
[03:10:17.390]          // =>  TRUE
[03:10:17.390]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:17.390]          // if-block "hasDormant"
[03:10:17.390]            // =>  FALSE
[03:10:17.390]          // skip if-block "hasDormant"
[03:10:17.390]        </control>
[03:10:17.390]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:17.390]          // if-block "!hasDormant"
[03:10:17.390]            // =>  TRUE
[03:10:17.390]          <block atomic="false" info="">
[03:10:17.390]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:17.390]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.390]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:17.394]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:17.394]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:17.398]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.398]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:17.402]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:17.402]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:17.406]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.406]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:17.406]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:17.406]          </block>
[03:10:17.406]          // end if-block "!hasDormant"
[03:10:17.406]        </control>
[03:10:17.406]        // end if-block "isSWJ"
[03:10:17.406]      </control>
[03:10:17.406]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:17.406]        // if-block "!isSWJ"
[03:10:17.406]          // =>  FALSE
[03:10:17.406]        // skip if-block "!isSWJ"
[03:10:17.406]      </control>
[03:10:17.406]      <block atomic="false" info="">
[03:10:17.406]        ReadDP(0x0);
[03:10:17.410]  
[03:10:17.410]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:17.410]  
[03:10:17.410]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:17.410]      </block>
[03:10:17.410]      // end if-block "protType == 2"
[03:10:17.410]    </control>
[03:10:17.410]  </sequence>
[03:10:17.410]  
[03:10:17.661]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:17.661]  
[03:10:17.670]  <debugvars>
[03:10:17.670]    // Pre-defined
[03:10:17.670]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:17.670]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:17.670]    __dp=0x00000000
[03:10:17.670]    __ap=0x00000000
[03:10:17.670]    __traceout=0x00000000      (Trace Disabled)
[03:10:17.670]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:17.670]    __FlashAddr=0x00000000
[03:10:17.670]    __FlashLen=0x00000000
[03:10:17.670]    __FlashArg=0x00000000
[03:10:17.670]    __FlashOp=0x00000000
[03:10:17.670]    __Result=0x00000000
[03:10:17.670]  </debugvars>
[03:10:17.670]  
[03:10:17.670]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:17.670]    <block atomic="false" info="">
[03:10:17.670]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:17.670]        // -> [isSWJ <= 0x00000001]
[03:10:17.670]      __var hasDormant = __protocol & 0x00020000;
[03:10:17.670]        // -> [hasDormant <= 0x00000000]
[03:10:17.670]      __var protType   = __protocol & 0x0000FFFF;
[03:10:17.670]        // -> [protType <= 0x00000002]
[03:10:17.673]    </block>
[03:10:17.673]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:17.673]      // if-block "protType == 1"
[03:10:17.673]        // =>  FALSE
[03:10:17.673]      // skip if-block "protType == 1"
[03:10:17.673]    </control>
[03:10:17.673]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:17.673]      // if-block "protType == 2"
[03:10:17.674]        // =>  TRUE
[03:10:17.674]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:17.674]        // if-block "isSWJ"
[03:10:17.674]          // =>  TRUE
[03:10:17.674]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:17.674]          // if-block "hasDormant"
[03:10:17.674]            // =>  FALSE
[03:10:17.674]          // skip if-block "hasDormant"
[03:10:17.674]        </control>
[03:10:17.674]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:17.674]          // if-block "!hasDormant"
[03:10:17.674]            // =>  TRUE
[03:10:17.674]          <block atomic="false" info="">
[03:10:17.674]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:17.681]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.681]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:17.681]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:17.681]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:17.686]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.686]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:17.686]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:17.686]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:17.689]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.689]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:17.693]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:17.693]          </block>
[03:10:17.693]          // end if-block "!hasDormant"
[03:10:17.693]        </control>
[03:10:17.693]        // end if-block "isSWJ"
[03:10:17.693]      </control>
[03:10:17.693]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:17.693]        // if-block "!isSWJ"
[03:10:17.693]          // =>  FALSE
[03:10:17.693]        // skip if-block "!isSWJ"
[03:10:17.693]      </control>
[03:10:17.693]      <block atomic="false" info="">
[03:10:17.693]        ReadDP(0x0);
[03:10:17.697]  
[03:10:17.697]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:17.697]  
[03:10:17.697]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:17.697]      </block>
[03:10:17.697]      // end if-block "protType == 2"
[03:10:17.697]    </control>
[03:10:17.698]  </sequence>
[03:10:17.698]  
[03:10:17.955]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:17.955]  
[03:10:17.964]  <debugvars>
[03:10:17.964]    // Pre-defined
[03:10:17.964]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:17.964]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:17.964]    __dp=0x00000000
[03:10:17.964]    __ap=0x00000000
[03:10:17.964]    __traceout=0x00000000      (Trace Disabled)
[03:10:17.964]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:17.964]    __FlashAddr=0x00000000
[03:10:17.964]    __FlashLen=0x00000000
[03:10:17.964]    __FlashArg=0x00000000
[03:10:17.964]    __FlashOp=0x00000000
[03:10:17.964]    __Result=0x00000000
[03:10:17.964]  </debugvars>
[03:10:17.964]  
[03:10:17.964]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:17.964]    <block atomic="false" info="">
[03:10:17.964]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:17.964]        // -> [isSWJ <= 0x00000001]
[03:10:17.964]      __var hasDormant = __protocol & 0x00020000;
[03:10:17.964]        // -> [hasDormant <= 0x00000000]
[03:10:17.964]      __var protType   = __protocol & 0x0000FFFF;
[03:10:17.967]        // -> [protType <= 0x00000002]
[03:10:17.967]    </block>
[03:10:17.967]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:17.967]      // if-block "protType == 1"
[03:10:17.967]        // =>  FALSE
[03:10:17.967]      // skip if-block "protType == 1"
[03:10:17.967]    </control>
[03:10:17.967]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:17.967]      // if-block "protType == 2"
[03:10:17.967]        // =>  TRUE
[03:10:17.967]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:17.967]        // if-block "isSWJ"
[03:10:17.967]          // =>  TRUE
[03:10:17.967]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:17.967]          // if-block "hasDormant"
[03:10:17.967]            // =>  FALSE
[03:10:17.967]          // skip if-block "hasDormant"
[03:10:17.967]        </control>
[03:10:17.967]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:17.969]          // if-block "!hasDormant"
[03:10:17.969]            // =>  TRUE
[03:10:17.969]          <block atomic="false" info="">
[03:10:17.969]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:17.970]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.970]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:17.972]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:17.972]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:17.973]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.973]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:17.976]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:17.976]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:17.976]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:17.976]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:17.976]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:17.976]          </block>
[03:10:17.976]          // end if-block "!hasDormant"
[03:10:17.976]        </control>
[03:10:17.976]        // end if-block "isSWJ"
[03:10:17.976]      </control>
[03:10:17.980]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:17.980]        // if-block "!isSWJ"
[03:10:17.980]          // =>  FALSE
[03:10:17.980]        // skip if-block "!isSWJ"
[03:10:17.980]      </control>
[03:10:17.980]      <block atomic="false" info="">
[03:10:17.980]        ReadDP(0x0);
[03:10:17.980]  
[03:10:17.980]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:17.980]  
[03:10:17.980]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:17.980]      </block>
[03:10:17.980]      // end if-block "protType == 2"
[03:10:17.980]    </control>
[03:10:17.980]  </sequence>
[03:10:17.980]  
[03:10:18.239]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:18.239]  
[03:10:18.241]  <debugvars>
[03:10:18.241]    // Pre-defined
[03:10:18.241]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:18.241]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:18.241]    __dp=0x00000000
[03:10:18.241]    __ap=0x00000000
[03:10:18.241]    __traceout=0x00000000      (Trace Disabled)
[03:10:18.241]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:18.241]    __FlashAddr=0x00000000
[03:10:18.241]    __FlashLen=0x00000000
[03:10:18.243]    __FlashArg=0x00000000
[03:10:18.243]    __FlashOp=0x00000000
[03:10:18.243]    __Result=0x00000000
[03:10:18.243]  </debugvars>
[03:10:18.243]  
[03:10:18.243]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:18.243]    <block atomic="false" info="">
[03:10:18.243]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:18.243]        // -> [isSWJ <= 0x00000001]
[03:10:18.243]      __var hasDormant = __protocol & 0x00020000;
[03:10:18.243]        // -> [hasDormant <= 0x00000000]
[03:10:18.243]      __var protType   = __protocol & 0x0000FFFF;
[03:10:18.243]        // -> [protType <= 0x00000002]
[03:10:18.243]    </block>
[03:10:18.243]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:18.243]      // if-block "protType == 1"
[03:10:18.243]        // =>  FALSE
[03:10:18.243]      // skip if-block "protType == 1"
[03:10:18.243]    </control>
[03:10:18.243]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:18.243]      // if-block "protType == 2"
[03:10:18.243]        // =>  TRUE
[03:10:18.243]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:18.243]        // if-block "isSWJ"
[03:10:18.243]          // =>  TRUE
[03:10:18.243]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:18.243]          // if-block "hasDormant"
[03:10:18.243]            // =>  FALSE
[03:10:18.243]          // skip if-block "hasDormant"
[03:10:18.243]        </control>
[03:10:18.243]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:18.243]          // if-block "!hasDormant"
[03:10:18.243]            // =>  TRUE
[03:10:18.247]          <block atomic="false" info="">
[03:10:18.247]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:18.247]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.247]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:18.251]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:18.251]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:18.255]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.255]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:18.255]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:18.255]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:18.259]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.259]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:18.259]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:18.259]          </block>
[03:10:18.259]          // end if-block "!hasDormant"
[03:10:18.259]        </control>
[03:10:18.259]        // end if-block "isSWJ"
[03:10:18.259]      </control>
[03:10:18.259]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:18.259]        // if-block "!isSWJ"
[03:10:18.259]          // =>  FALSE
[03:10:18.259]        // skip if-block "!isSWJ"
[03:10:18.259]      </control>
[03:10:18.259]      <block atomic="false" info="">
[03:10:18.259]        ReadDP(0x0);
[03:10:18.263]  
[03:10:18.263]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:18.263]  
[03:10:18.263]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:18.263]      </block>
[03:10:18.263]      // end if-block "protType == 2"
[03:10:18.263]    </control>
[03:10:18.263]  </sequence>
[03:10:18.263]  
[03:10:18.515]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:18.515]  
[03:10:18.515]  <debugvars>
[03:10:18.515]    // Pre-defined
[03:10:18.515]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:18.515]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:18.515]    __dp=0x00000000
[03:10:18.515]    __ap=0x00000000
[03:10:18.515]    __traceout=0x00000000      (Trace Disabled)
[03:10:18.515]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:18.515]    __FlashAddr=0x00000000
[03:10:18.515]    __FlashLen=0x00000000
[03:10:18.515]    __FlashArg=0x00000000
[03:10:18.515]    __FlashOp=0x00000000
[03:10:18.515]    __Result=0x00000000
[03:10:18.515]  </debugvars>
[03:10:18.515]  
[03:10:18.515]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:18.515]    <block atomic="false" info="">
[03:10:18.515]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:18.515]        // -> [isSWJ <= 0x00000001]
[03:10:18.515]      __var hasDormant = __protocol & 0x00020000;
[03:10:18.515]        // -> [hasDormant <= 0x00000000]
[03:10:18.515]      __var protType   = __protocol & 0x0000FFFF;
[03:10:18.515]        // -> [protType <= 0x00000002]
[03:10:18.515]    </block>
[03:10:18.515]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:18.515]      // if-block "protType == 1"
[03:10:18.515]        // =>  FALSE
[03:10:18.515]      // skip if-block "protType == 1"
[03:10:18.515]    </control>
[03:10:18.515]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:18.519]      // if-block "protType == 2"
[03:10:18.519]        // =>  TRUE
[03:10:18.519]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:18.519]        // if-block "isSWJ"
[03:10:18.519]          // =>  TRUE
[03:10:18.519]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:18.519]          // if-block "hasDormant"
[03:10:18.519]            // =>  FALSE
[03:10:18.519]          // skip if-block "hasDormant"
[03:10:18.519]        </control>
[03:10:18.519]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:18.519]          // if-block "!hasDormant"
[03:10:18.519]            // =>  TRUE
[03:10:18.519]          <block atomic="false" info="">
[03:10:18.519]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:18.519]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.519]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:18.523]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:18.523]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:18.523]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.523]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:18.523]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:18.527]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:18.527]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.527]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:18.527]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:18.527]          </block>
[03:10:18.527]          // end if-block "!hasDormant"
[03:10:18.527]        </control>
[03:10:18.527]        // end if-block "isSWJ"
[03:10:18.531]      </control>
[03:10:18.531]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:18.531]        // if-block "!isSWJ"
[03:10:18.531]          // =>  FALSE
[03:10:18.531]        // skip if-block "!isSWJ"
[03:10:18.531]      </control>
[03:10:18.531]      <block atomic="false" info="">
[03:10:18.531]        ReadDP(0x0);
[03:10:18.531]  
[03:10:18.531]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:18.531]  
[03:10:18.531]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:18.531]      </block>
[03:10:18.531]      // end if-block "protType == 2"
[03:10:18.531]    </control>
[03:10:18.531]  </sequence>
[03:10:18.531]  
[03:10:18.783]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:18.783]  
[03:10:18.784]  <debugvars>
[03:10:18.784]    // Pre-defined
[03:10:18.784]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:18.784]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:18.784]    __dp=0x00000000
[03:10:18.784]    __ap=0x00000000
[03:10:18.784]    __traceout=0x00000000      (Trace Disabled)
[03:10:18.784]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:18.784]    __FlashAddr=0x00000000
[03:10:18.784]    __FlashLen=0x00000000
[03:10:18.785]    __FlashArg=0x00000000
[03:10:18.785]    __FlashOp=0x00000000
[03:10:18.785]    __Result=0x00000000
[03:10:18.785]  </debugvars>
[03:10:18.785]  
[03:10:18.785]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:18.785]    <block atomic="false" info="">
[03:10:18.785]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:18.785]        // -> [isSWJ <= 0x00000001]
[03:10:18.785]      __var hasDormant = __protocol & 0x00020000;
[03:10:18.785]        // -> [hasDormant <= 0x00000000]
[03:10:18.785]      __var protType   = __protocol & 0x0000FFFF;
[03:10:18.786]        // -> [protType <= 0x00000002]
[03:10:18.786]    </block>
[03:10:18.787]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:18.787]      // if-block "protType == 1"
[03:10:18.787]        // =>  FALSE
[03:10:18.787]      // skip if-block "protType == 1"
[03:10:18.787]    </control>
[03:10:18.787]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:18.787]      // if-block "protType == 2"
[03:10:18.787]        // =>  TRUE
[03:10:18.787]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:18.787]        // if-block "isSWJ"
[03:10:18.787]          // =>  TRUE
[03:10:18.787]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:18.787]          // if-block "hasDormant"
[03:10:18.787]            // =>  FALSE
[03:10:18.787]          // skip if-block "hasDormant"
[03:10:18.787]        </control>
[03:10:18.787]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:18.787]          // if-block "!hasDormant"
[03:10:18.787]            // =>  TRUE
[03:10:18.787]          <block atomic="false" info="">
[03:10:18.787]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:18.790]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.790]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:18.791]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:18.792]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:18.792]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.792]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:18.795]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:18.795]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:18.797]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:18.797]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:18.797]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:18.799]          </block>
[03:10:18.799]          // end if-block "!hasDormant"
[03:10:18.799]        </control>
[03:10:18.799]        // end if-block "isSWJ"
[03:10:18.799]      </control>
[03:10:18.799]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:18.799]        // if-block "!isSWJ"
[03:10:18.800]          // =>  FALSE
[03:10:18.800]        // skip if-block "!isSWJ"
[03:10:18.800]      </control>
[03:10:18.800]      <block atomic="false" info="">
[03:10:18.800]        ReadDP(0x0);
[03:10:18.801]  
[03:10:18.801]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:18.801]  
[03:10:18.801]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:18.801]      </block>
[03:10:18.801]      // end if-block "protType == 2"
[03:10:18.801]    </control>
[03:10:18.801]  </sequence>
[03:10:18.801]  
[03:10:19.061]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:19.061]  
[03:10:19.063]  <debugvars>
[03:10:19.063]    // Pre-defined
[03:10:19.063]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:19.063]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:19.063]    __dp=0x00000000
[03:10:19.063]    __ap=0x00000000
[03:10:19.063]    __traceout=0x00000000      (Trace Disabled)
[03:10:19.063]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:19.063]    __FlashAddr=0x00000000
[03:10:19.063]    __FlashLen=0x00000000
[03:10:19.063]    __FlashArg=0x00000000
[03:10:19.063]    __FlashOp=0x00000000
[03:10:19.063]    __Result=0x00000000
[03:10:19.063]  </debugvars>
[03:10:19.063]  
[03:10:19.063]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:19.063]    <block atomic="false" info="">
[03:10:19.063]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:19.063]        // -> [isSWJ <= 0x00000001]
[03:10:19.063]      __var hasDormant = __protocol & 0x00020000;
[03:10:19.063]        // -> [hasDormant <= 0x00000000]
[03:10:19.063]      __var protType   = __protocol & 0x0000FFFF;
[03:10:19.063]        // -> [protType <= 0x00000002]
[03:10:19.063]    </block>
[03:10:19.063]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:19.063]      // if-block "protType == 1"
[03:10:19.063]        // =>  FALSE
[03:10:19.063]      // skip if-block "protType == 1"
[03:10:19.063]    </control>
[03:10:19.063]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:19.066]      // if-block "protType == 2"
[03:10:19.066]        // =>  TRUE
[03:10:19.066]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:19.066]        // if-block "isSWJ"
[03:10:19.066]          // =>  TRUE
[03:10:19.066]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:19.066]          // if-block "hasDormant"
[03:10:19.066]            // =>  FALSE
[03:10:19.066]          // skip if-block "hasDormant"
[03:10:19.066]        </control>
[03:10:19.066]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:19.066]          // if-block "!hasDormant"
[03:10:19.066]            // =>  TRUE
[03:10:19.066]          <block atomic="false" info="">
[03:10:19.066]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:19.070]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.070]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:19.070]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:19.070]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:19.075]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.075]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:19.076]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:19.078]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:19.078]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.078]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:19.078]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:19.078]          </block>
[03:10:19.078]          // end if-block "!hasDormant"
[03:10:19.078]        </control>
[03:10:19.078]        // end if-block "isSWJ"
[03:10:19.078]      </control>
[03:10:19.078]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:19.078]        // if-block "!isSWJ"
[03:10:19.078]          // =>  FALSE
[03:10:19.082]        // skip if-block "!isSWJ"
[03:10:19.082]      </control>
[03:10:19.082]      <block atomic="false" info="">
[03:10:19.082]        ReadDP(0x0);
[03:10:19.087]  
[03:10:19.087]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:19.087]  
[03:10:19.087]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:19.087]      </block>
[03:10:19.087]      // end if-block "protType == 2"
[03:10:19.087]    </control>
[03:10:19.087]  </sequence>
[03:10:19.087]  
[03:10:19.345]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:19.345]  
[03:10:19.346]  <debugvars>
[03:10:19.346]    // Pre-defined
[03:10:19.346]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:19.346]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:19.346]    __dp=0x00000000
[03:10:19.346]    __ap=0x00000000
[03:10:19.346]    __traceout=0x00000000      (Trace Disabled)
[03:10:19.346]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:19.346]    __FlashAddr=0x00000000
[03:10:19.346]    __FlashLen=0x00000000
[03:10:19.346]    __FlashArg=0x00000000
[03:10:19.346]    __FlashOp=0x00000000
[03:10:19.346]    __Result=0x00000000
[03:10:19.346]  </debugvars>
[03:10:19.346]  
[03:10:19.346]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:19.346]    <block atomic="false" info="">
[03:10:19.346]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:19.346]        // -> [isSWJ <= 0x00000001]
[03:10:19.346]      __var hasDormant = __protocol & 0x00020000;
[03:10:19.346]        // -> [hasDormant <= 0x00000000]
[03:10:19.346]      __var protType   = __protocol & 0x0000FFFF;
[03:10:19.346]        // -> [protType <= 0x00000002]
[03:10:19.346]    </block>
[03:10:19.346]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:19.346]      // if-block "protType == 1"
[03:10:19.346]        // =>  FALSE
[03:10:19.346]      // skip if-block "protType == 1"
[03:10:19.346]    </control>
[03:10:19.349]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:19.349]      // if-block "protType == 2"
[03:10:19.349]        // =>  TRUE
[03:10:19.349]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:19.349]        // if-block "isSWJ"
[03:10:19.349]          // =>  TRUE
[03:10:19.349]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:19.349]          // if-block "hasDormant"
[03:10:19.349]            // =>  FALSE
[03:10:19.349]          // skip if-block "hasDormant"
[03:10:19.349]        </control>
[03:10:19.349]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:19.349]          // if-block "!hasDormant"
[03:10:19.349]            // =>  TRUE
[03:10:19.349]          <block atomic="false" info="">
[03:10:19.349]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:19.349]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.349]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:19.353]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:19.353]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:19.353]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.353]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:19.357]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:19.357]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:19.357]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.357]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:19.357]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:19.357]          </block>
[03:10:19.357]          // end if-block "!hasDormant"
[03:10:19.357]        </control>
[03:10:19.357]        // end if-block "isSWJ"
[03:10:19.357]      </control>
[03:10:19.357]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:19.357]        // if-block "!isSWJ"
[03:10:19.361]          // =>  FALSE
[03:10:19.361]        // skip if-block "!isSWJ"
[03:10:19.361]      </control>
[03:10:19.361]      <block atomic="false" info="">
[03:10:19.361]        ReadDP(0x0);
[03:10:19.361]  
[03:10:19.361]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:19.361]  
[03:10:19.361]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:19.361]      </block>
[03:10:19.361]      // end if-block "protType == 2"
[03:10:19.361]    </control>
[03:10:19.361]  </sequence>
[03:10:19.361]  
[03:10:19.618]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:19.618]  
[03:10:19.620]  <debugvars>
[03:10:19.620]    // Pre-defined
[03:10:19.620]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:19.621]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:19.621]    __dp=0x00000000
[03:10:19.621]    __ap=0x00000000
[03:10:19.621]    __traceout=0x00000000      (Trace Disabled)
[03:10:19.621]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:19.621]    __FlashAddr=0x00000000
[03:10:19.621]    __FlashLen=0x00000000
[03:10:19.621]    __FlashArg=0x00000000
[03:10:19.621]    __FlashOp=0x00000000
[03:10:19.621]    __Result=0x00000000
[03:10:19.621]  </debugvars>
[03:10:19.621]  
[03:10:19.621]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:19.621]    <block atomic="false" info="">
[03:10:19.621]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:19.621]        // -> [isSWJ <= 0x00000001]
[03:10:19.622]      __var hasDormant = __protocol & 0x00020000;
[03:10:19.622]        // -> [hasDormant <= 0x00000000]
[03:10:19.622]      __var protType   = __protocol & 0x0000FFFF;
[03:10:19.622]        // -> [protType <= 0x00000002]
[03:10:19.622]    </block>
[03:10:19.622]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:19.622]      // if-block "protType == 1"
[03:10:19.622]        // =>  FALSE
[03:10:19.622]      // skip if-block "protType == 1"
[03:10:19.622]    </control>
[03:10:19.622]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:19.622]      // if-block "protType == 2"
[03:10:19.622]        // =>  TRUE
[03:10:19.622]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:19.622]        // if-block "isSWJ"
[03:10:19.622]          // =>  TRUE
[03:10:19.622]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:19.622]          // if-block "hasDormant"
[03:10:19.622]            // =>  FALSE
[03:10:19.622]          // skip if-block "hasDormant"
[03:10:19.622]        </control>
[03:10:19.622]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:19.622]          // if-block "!hasDormant"
[03:10:19.622]            // =>  TRUE
[03:10:19.622]          <block atomic="false" info="">
[03:10:19.622]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:19.626]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.626]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:19.626]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:19.626]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:19.632]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.632]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:19.635]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:19.635]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:19.635]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.635]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:19.638]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:19.638]          </block>
[03:10:19.638]          // end if-block "!hasDormant"
[03:10:19.638]        </control>
[03:10:19.638]        // end if-block "isSWJ"
[03:10:19.638]      </control>
[03:10:19.638]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:19.638]        // if-block "!isSWJ"
[03:10:19.639]          // =>  FALSE
[03:10:19.639]        // skip if-block "!isSWJ"
[03:10:19.639]      </control>
[03:10:19.639]      <block atomic="false" info="">
[03:10:19.639]        ReadDP(0x0);
[03:10:19.643]  
[03:10:19.643]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:19.643]  
[03:10:19.643]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:19.643]      </block>
[03:10:19.643]      // end if-block "protType == 2"
[03:10:19.643]    </control>
[03:10:19.643]  </sequence>
[03:10:19.643]  
[03:10:19.903]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:19.903]  
[03:10:19.903]  <debugvars>
[03:10:19.903]    // Pre-defined
[03:10:19.903]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:19.903]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:19.903]    __dp=0x00000000
[03:10:19.903]    __ap=0x00000000
[03:10:19.903]    __traceout=0x00000000      (Trace Disabled)
[03:10:19.903]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:19.903]    __FlashAddr=0x00000000
[03:10:19.903]    __FlashLen=0x00000000
[03:10:19.903]    __FlashArg=0x00000000
[03:10:19.903]    __FlashOp=0x00000000
[03:10:19.903]    __Result=0x00000000
[03:10:19.903]  </debugvars>
[03:10:19.903]  
[03:10:19.903]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:19.903]    <block atomic="false" info="">
[03:10:19.903]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:19.903]        // -> [isSWJ <= 0x00000001]
[03:10:19.903]      __var hasDormant = __protocol & 0x00020000;
[03:10:19.906]        // -> [hasDormant <= 0x00000000]
[03:10:19.906]      __var protType   = __protocol & 0x0000FFFF;
[03:10:19.906]        // -> [protType <= 0x00000002]
[03:10:19.906]    </block>
[03:10:19.906]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:19.906]      // if-block "protType == 1"
[03:10:19.906]        // =>  FALSE
[03:10:19.906]      // skip if-block "protType == 1"
[03:10:19.906]    </control>
[03:10:19.906]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:19.906]      // if-block "protType == 2"
[03:10:19.906]        // =>  TRUE
[03:10:19.906]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:19.906]        // if-block "isSWJ"
[03:10:19.906]          // =>  TRUE
[03:10:19.906]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:19.907]          // if-block "hasDormant"
[03:10:19.907]            // =>  FALSE
[03:10:19.907]          // skip if-block "hasDormant"
[03:10:19.907]        </control>
[03:10:19.907]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:19.907]          // if-block "!hasDormant"
[03:10:19.907]            // =>  TRUE
[03:10:19.907]          <block atomic="false" info="">
[03:10:19.907]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:19.911]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.911]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:19.911]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:19.911]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:19.915]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.915]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:19.915]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:19.915]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:19.915]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:19.915]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:19.920]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:19.920]          </block>
[03:10:19.920]          // end if-block "!hasDormant"
[03:10:19.920]        </control>
[03:10:19.920]        // end if-block "isSWJ"
[03:10:19.920]      </control>
[03:10:19.920]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:19.920]        // if-block "!isSWJ"
[03:10:19.920]          // =>  FALSE
[03:10:19.920]        // skip if-block "!isSWJ"
[03:10:19.920]      </control>
[03:10:19.920]      <block atomic="false" info="">
[03:10:19.920]        ReadDP(0x0);
[03:10:19.922]  
[03:10:19.922]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:19.922]  
[03:10:19.923]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:19.923]      </block>
[03:10:19.923]      // end if-block "protType == 2"
[03:10:19.923]    </control>
[03:10:19.923]  </sequence>
[03:10:19.923]  
[03:10:20.185]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:20.185]  
[03:10:20.187]  <debugvars>
[03:10:20.187]    // Pre-defined
[03:10:20.187]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:20.187]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:20.187]    __dp=0x00000000
[03:10:20.187]    __ap=0x00000000
[03:10:20.187]    __traceout=0x00000000      (Trace Disabled)
[03:10:20.187]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:20.187]    __FlashAddr=0x00000000
[03:10:20.187]    __FlashLen=0x00000000
[03:10:20.187]    __FlashArg=0x00000000
[03:10:20.187]    __FlashOp=0x00000000
[03:10:20.187]    __Result=0x00000000
[03:10:20.187]  </debugvars>
[03:10:20.187]  
[03:10:20.190]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:20.190]    <block atomic="false" info="">
[03:10:20.190]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:20.190]        // -> [isSWJ <= 0x00000001]
[03:10:20.190]      __var hasDormant = __protocol & 0x00020000;
[03:10:20.190]        // -> [hasDormant <= 0x00000000]
[03:10:20.190]      __var protType   = __protocol & 0x0000FFFF;
[03:10:20.190]        // -> [protType <= 0x00000002]
[03:10:20.190]    </block>
[03:10:20.190]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:20.190]      // if-block "protType == 1"
[03:10:20.190]        // =>  FALSE
[03:10:20.190]      // skip if-block "protType == 1"
[03:10:20.190]    </control>
[03:10:20.190]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:20.190]      // if-block "protType == 2"
[03:10:20.190]        // =>  TRUE
[03:10:20.190]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:20.190]        // if-block "isSWJ"
[03:10:20.190]          // =>  TRUE
[03:10:20.190]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:20.190]          // if-block "hasDormant"
[03:10:20.190]            // =>  FALSE
[03:10:20.190]          // skip if-block "hasDormant"
[03:10:20.190]        </control>
[03:10:20.190]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:20.190]          // if-block "!hasDormant"
[03:10:20.190]            // =>  TRUE
[03:10:20.190]          <block atomic="false" info="">
[03:10:20.190]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:20.202]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.202]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:20.202]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:20.202]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:20.206]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.206]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:20.206]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:20.206]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:20.210]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.210]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:20.210]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:20.210]          </block>
[03:10:20.210]          // end if-block "!hasDormant"
[03:10:20.210]        </control>
[03:10:20.210]        // end if-block "isSWJ"
[03:10:20.210]      </control>
[03:10:20.210]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:20.210]        // if-block "!isSWJ"
[03:10:20.210]          // =>  FALSE
[03:10:20.210]        // skip if-block "!isSWJ"
[03:10:20.210]      </control>
[03:10:20.210]      <block atomic="false" info="">
[03:10:20.214]        ReadDP(0x0);
[03:10:20.214]  
[03:10:20.214]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:20.214]  
[03:10:20.214]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:20.214]      </block>
[03:10:20.214]      // end if-block "protType == 2"
[03:10:20.214]    </control>
[03:10:20.214]  </sequence>
[03:10:20.214]  
[03:10:20.465]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:20.465]  
[03:10:20.468]  <debugvars>
[03:10:20.468]    // Pre-defined
[03:10:20.468]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:20.468]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:20.468]    __dp=0x00000000
[03:10:20.468]    __ap=0x00000000
[03:10:20.468]    __traceout=0x00000000      (Trace Disabled)
[03:10:20.468]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:20.468]    __FlashAddr=0x00000000
[03:10:20.468]    __FlashLen=0x00000000
[03:10:20.468]    __FlashArg=0x00000000
[03:10:20.468]    __FlashOp=0x00000000
[03:10:20.468]    __Result=0x00000000
[03:10:20.470]  </debugvars>
[03:10:20.470]  
[03:10:20.470]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:20.470]    <block atomic="false" info="">
[03:10:20.470]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:20.470]        // -> [isSWJ <= 0x00000001]
[03:10:20.470]      __var hasDormant = __protocol & 0x00020000;
[03:10:20.470]        // -> [hasDormant <= 0x00000000]
[03:10:20.470]      __var protType   = __protocol & 0x0000FFFF;
[03:10:20.470]        // -> [protType <= 0x00000002]
[03:10:20.470]    </block>
[03:10:20.470]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:20.470]      // if-block "protType == 1"
[03:10:20.470]        // =>  FALSE
[03:10:20.470]      // skip if-block "protType == 1"
[03:10:20.470]    </control>
[03:10:20.470]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:20.470]      // if-block "protType == 2"
[03:10:20.470]        // =>  TRUE
[03:10:20.470]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:20.470]        // if-block "isSWJ"
[03:10:20.470]          // =>  TRUE
[03:10:20.470]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:20.470]          // if-block "hasDormant"
[03:10:20.470]            // =>  FALSE
[03:10:20.470]          // skip if-block "hasDormant"
[03:10:20.470]        </control>
[03:10:20.470]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:20.470]          // if-block "!hasDormant"
[03:10:20.470]            // =>  TRUE
[03:10:20.470]          <block atomic="false" info="">
[03:10:20.470]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:20.478]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.478]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:20.478]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:20.478]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:20.482]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.482]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:20.486]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:20.486]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:20.486]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.486]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:20.490]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:20.490]          </block>
[03:10:20.490]          // end if-block "!hasDormant"
[03:10:20.490]        </control>
[03:10:20.490]        // end if-block "isSWJ"
[03:10:20.490]      </control>
[03:10:20.490]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:20.490]        // if-block "!isSWJ"
[03:10:20.491]          // =>  FALSE
[03:10:20.491]        // skip if-block "!isSWJ"
[03:10:20.491]      </control>
[03:10:20.491]      <block atomic="false" info="">
[03:10:20.491]        ReadDP(0x0);
[03:10:20.491]  
[03:10:20.491]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:20.491]  
[03:10:20.491]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:20.491]      </block>
[03:10:20.494]      // end if-block "protType == 2"
[03:10:20.494]    </control>
[03:10:20.494]  </sequence>
[03:10:20.494]  
[03:10:20.744]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:20.744]  
[03:10:20.746]  <debugvars>
[03:10:20.746]    // Pre-defined
[03:10:20.746]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:20.746]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:20.746]    __dp=0x00000000
[03:10:20.746]    __ap=0x00000000
[03:10:20.746]    __traceout=0x00000000      (Trace Disabled)
[03:10:20.746]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:20.746]    __FlashAddr=0x00000000
[03:10:20.746]    __FlashLen=0x00000000
[03:10:20.746]    __FlashArg=0x00000000
[03:10:20.746]    __FlashOp=0x00000000
[03:10:20.746]    __Result=0x00000000
[03:10:20.746]  </debugvars>
[03:10:20.746]  
[03:10:20.746]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:20.746]    <block atomic="false" info="">
[03:10:20.748]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:20.748]        // -> [isSWJ <= 0x00000001]
[03:10:20.748]      __var hasDormant = __protocol & 0x00020000;
[03:10:20.748]        // -> [hasDormant <= 0x00000000]
[03:10:20.748]      __var protType   = __protocol & 0x0000FFFF;
[03:10:20.748]        // -> [protType <= 0x00000002]
[03:10:20.748]    </block>
[03:10:20.748]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:20.748]      // if-block "protType == 1"
[03:10:20.748]        // =>  FALSE
[03:10:20.748]      // skip if-block "protType == 1"
[03:10:20.748]    </control>
[03:10:20.748]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:20.748]      // if-block "protType == 2"
[03:10:20.748]        // =>  TRUE
[03:10:20.748]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:20.748]        // if-block "isSWJ"
[03:10:20.748]          // =>  TRUE
[03:10:20.748]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:20.748]          // if-block "hasDormant"
[03:10:20.748]            // =>  FALSE
[03:10:20.748]          // skip if-block "hasDormant"
[03:10:20.748]        </control>
[03:10:20.748]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:20.748]          // if-block "!hasDormant"
[03:10:20.748]            // =>  TRUE
[03:10:20.748]          <block atomic="false" info="">
[03:10:20.748]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:20.752]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.752]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:20.752]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:20.752]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:20.756]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.757]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:20.757]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:20.757]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:20.760]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:20.760]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:20.760]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:20.762]          </block>
[03:10:20.762]          // end if-block "!hasDormant"
[03:10:20.762]        </control>
[03:10:20.762]        // end if-block "isSWJ"
[03:10:20.762]      </control>
[03:10:20.762]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:20.762]        // if-block "!isSWJ"
[03:10:20.762]          // =>  FALSE
[03:10:20.762]        // skip if-block "!isSWJ"
[03:10:20.762]      </control>
[03:10:20.762]      <block atomic="false" info="">
[03:10:20.762]        ReadDP(0x0);
[03:10:20.765]  
[03:10:20.765]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:20.765]  
[03:10:20.765]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:20.765]      </block>
[03:10:20.765]      // end if-block "protType == 2"
[03:10:20.765]    </control>
[03:10:20.765]  </sequence>
[03:10:20.765]  
[03:10:21.025]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:21.025]  
[03:10:21.026]  <debugvars>
[03:10:21.026]    // Pre-defined
[03:10:21.026]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:21.026]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:21.026]    __dp=0x00000000
[03:10:21.026]    __ap=0x00000000
[03:10:21.026]    __traceout=0x00000000      (Trace Disabled)
[03:10:21.026]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:21.026]    __FlashAddr=0x00000000
[03:10:21.026]    __FlashLen=0x00000000
[03:10:21.026]    __FlashArg=0x00000000
[03:10:21.026]    __FlashOp=0x00000000
[03:10:21.026]    __Result=0x00000000
[03:10:21.026]  </debugvars>
[03:10:21.026]  
[03:10:21.026]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:21.026]    <block atomic="false" info="">
[03:10:21.026]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:21.029]        // -> [isSWJ <= 0x00000001]
[03:10:21.029]      __var hasDormant = __protocol & 0x00020000;
[03:10:21.029]        // -> [hasDormant <= 0x00000000]
[03:10:21.029]      __var protType   = __protocol & 0x0000FFFF;
[03:10:21.029]        // -> [protType <= 0x00000002]
[03:10:21.029]    </block>
[03:10:21.029]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:21.029]      // if-block "protType == 1"
[03:10:21.029]        // =>  FALSE
[03:10:21.029]      // skip if-block "protType == 1"
[03:10:21.029]    </control>
[03:10:21.029]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:21.029]      // if-block "protType == 2"
[03:10:21.029]        // =>  TRUE
[03:10:21.029]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:21.029]        // if-block "isSWJ"
[03:10:21.029]          // =>  TRUE
[03:10:21.029]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:21.029]          // if-block "hasDormant"
[03:10:21.029]            // =>  FALSE
[03:10:21.029]          // skip if-block "hasDormant"
[03:10:21.029]        </control>
[03:10:21.029]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:21.029]          // if-block "!hasDormant"
[03:10:21.029]            // =>  TRUE
[03:10:21.029]          <block atomic="false" info="">
[03:10:21.029]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:21.033]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.033]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:21.037]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:21.037]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:21.037]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.037]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:21.041]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:21.041]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:21.041]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.041]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:21.041]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:21.045]          </block>
[03:10:21.045]          // end if-block "!hasDormant"
[03:10:21.045]        </control>
[03:10:21.045]        // end if-block "isSWJ"
[03:10:21.045]      </control>
[03:10:21.045]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:21.045]        // if-block "!isSWJ"
[03:10:21.045]          // =>  FALSE
[03:10:21.045]        // skip if-block "!isSWJ"
[03:10:21.045]      </control>
[03:10:21.045]      <block atomic="false" info="">
[03:10:21.045]        ReadDP(0x0);
[03:10:21.045]  
[03:10:21.045]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:21.045]  
[03:10:21.045]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:21.045]      </block>
[03:10:21.045]      // end if-block "protType == 2"
[03:10:21.045]    </control>
[03:10:21.045]  </sequence>
[03:10:21.045]  
[03:10:21.306]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:21.306]  
[03:10:21.306]  <debugvars>
[03:10:21.306]    // Pre-defined
[03:10:21.306]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:21.306]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:21.306]    __dp=0x00000000
[03:10:21.306]    __ap=0x00000000
[03:10:21.306]    __traceout=0x00000000      (Trace Disabled)
[03:10:21.309]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:21.309]    __FlashAddr=0x00000000
[03:10:21.309]    __FlashLen=0x00000000
[03:10:21.309]    __FlashArg=0x00000000
[03:10:21.309]    __FlashOp=0x00000000
[03:10:21.309]    __Result=0x00000000
[03:10:21.309]  </debugvars>
[03:10:21.309]  
[03:10:21.309]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:21.309]    <block atomic="false" info="">
[03:10:21.309]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:21.309]        // -> [isSWJ <= 0x00000001]
[03:10:21.309]      __var hasDormant = __protocol & 0x00020000;
[03:10:21.310]        // -> [hasDormant <= 0x00000000]
[03:10:21.310]      __var protType   = __protocol & 0x0000FFFF;
[03:10:21.311]        // -> [protType <= 0x00000002]
[03:10:21.311]    </block>
[03:10:21.311]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:21.311]      // if-block "protType == 1"
[03:10:21.311]        // =>  FALSE
[03:10:21.311]      // skip if-block "protType == 1"
[03:10:21.311]    </control>
[03:10:21.311]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:21.311]      // if-block "protType == 2"
[03:10:21.311]        // =>  TRUE
[03:10:21.311]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:21.311]        // if-block "isSWJ"
[03:10:21.311]          // =>  TRUE
[03:10:21.311]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:21.311]          // if-block "hasDormant"
[03:10:21.311]            // =>  FALSE
[03:10:21.311]          // skip if-block "hasDormant"
[03:10:21.311]        </control>
[03:10:21.311]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:21.311]          // if-block "!hasDormant"
[03:10:21.311]            // =>  TRUE
[03:10:21.311]          <block atomic="false" info="">
[03:10:21.311]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:21.314]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.314]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:21.314]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:21.314]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:21.314]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.318]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:21.319]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:21.319]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:21.321]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.321]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:21.323]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:21.323]          </block>
[03:10:21.323]          // end if-block "!hasDormant"
[03:10:21.323]        </control>
[03:10:21.323]        // end if-block "isSWJ"
[03:10:21.323]      </control>
[03:10:21.323]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:21.323]        // if-block "!isSWJ"
[03:10:21.323]          // =>  FALSE
[03:10:21.325]        // skip if-block "!isSWJ"
[03:10:21.325]      </control>
[03:10:21.325]      <block atomic="false" info="">
[03:10:21.325]        ReadDP(0x0);
[03:10:21.325]  
[03:10:21.325]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:21.325]  
[03:10:21.327]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:21.327]      </block>
[03:10:21.327]      // end if-block "protType == 2"
[03:10:21.327]    </control>
[03:10:21.327]  </sequence>
[03:10:21.327]  
[03:10:21.589]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:21.589]  
[03:10:21.590]  <debugvars>
[03:10:21.590]    // Pre-defined
[03:10:21.590]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:21.590]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:21.590]    __dp=0x00000000
[03:10:21.590]    __ap=0x00000000
[03:10:21.590]    __traceout=0x00000000      (Trace Disabled)
[03:10:21.590]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:21.590]    __FlashAddr=0x00000000
[03:10:21.590]    __FlashLen=0x00000000
[03:10:21.590]    __FlashArg=0x00000000
[03:10:21.592]    __FlashOp=0x00000000
[03:10:21.592]    __Result=0x00000000
[03:10:21.592]  </debugvars>
[03:10:21.592]  
[03:10:21.592]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:21.592]    <block atomic="false" info="">
[03:10:21.592]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:21.592]        // -> [isSWJ <= 0x00000001]
[03:10:21.592]      __var hasDormant = __protocol & 0x00020000;
[03:10:21.592]        // -> [hasDormant <= 0x00000000]
[03:10:21.592]      __var protType   = __protocol & 0x0000FFFF;
[03:10:21.592]        // -> [protType <= 0x00000002]
[03:10:21.592]    </block>
[03:10:21.592]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:21.592]      // if-block "protType == 1"
[03:10:21.592]        // =>  FALSE
[03:10:21.592]      // skip if-block "protType == 1"
[03:10:21.592]    </control>
[03:10:21.592]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:21.594]      // if-block "protType == 2"
[03:10:21.594]        // =>  TRUE
[03:10:21.594]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:21.594]        // if-block "isSWJ"
[03:10:21.594]          // =>  TRUE
[03:10:21.594]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:21.594]          // if-block "hasDormant"
[03:10:21.594]            // =>  FALSE
[03:10:21.594]          // skip if-block "hasDormant"
[03:10:21.594]        </control>
[03:10:21.594]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:21.596]          // if-block "!hasDormant"
[03:10:21.596]            // =>  TRUE
[03:10:21.596]          <block atomic="false" info="">
[03:10:21.596]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:21.597]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.597]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:21.599]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:21.599]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:21.601]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.601]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:21.602]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:21.602]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:21.604]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.604]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:21.605]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:21.605]          </block>
[03:10:21.605]          // end if-block "!hasDormant"
[03:10:21.605]        </control>
[03:10:21.605]        // end if-block "isSWJ"
[03:10:21.605]      </control>
[03:10:21.605]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:21.605]        // if-block "!isSWJ"
[03:10:21.605]          // =>  FALSE
[03:10:21.605]        // skip if-block "!isSWJ"
[03:10:21.605]      </control>
[03:10:21.607]      <block atomic="false" info="">
[03:10:21.607]        ReadDP(0x0);
[03:10:21.608]  
[03:10:21.608]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:21.608]  
[03:10:21.608]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:21.608]      </block>
[03:10:21.608]      // end if-block "protType == 2"
[03:10:21.608]    </control>
[03:10:21.608]  </sequence>
[03:10:21.608]  
[03:10:21.861]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:21.861]  
[03:10:21.861]  <debugvars>
[03:10:21.861]    // Pre-defined
[03:10:21.861]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:21.861]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:21.861]    __dp=0x00000000
[03:10:21.861]    __ap=0x00000000
[03:10:21.861]    __traceout=0x00000000      (Trace Disabled)
[03:10:21.861]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:21.861]    __FlashAddr=0x00000000
[03:10:21.861]    __FlashLen=0x00000000
[03:10:21.861]    __FlashArg=0x00000000
[03:10:21.861]    __FlashOp=0x00000000
[03:10:21.861]    __Result=0x00000000
[03:10:21.861]  </debugvars>
[03:10:21.861]  
[03:10:21.865]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:21.865]    <block atomic="false" info="">
[03:10:21.865]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:21.865]        // -> [isSWJ <= 0x00000001]
[03:10:21.865]      __var hasDormant = __protocol & 0x00020000;
[03:10:21.865]        // -> [hasDormant <= 0x00000000]
[03:10:21.865]      __var protType   = __protocol & 0x0000FFFF;
[03:10:21.865]        // -> [protType <= 0x00000002]
[03:10:21.865]    </block>
[03:10:21.867]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:21.867]      // if-block "protType == 1"
[03:10:21.867]        // =>  FALSE
[03:10:21.867]      // skip if-block "protType == 1"
[03:10:21.867]    </control>
[03:10:21.867]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:21.867]      // if-block "protType == 2"
[03:10:21.867]        // =>  TRUE
[03:10:21.867]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:21.868]        // if-block "isSWJ"
[03:10:21.868]          // =>  TRUE
[03:10:21.868]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:21.868]          // if-block "hasDormant"
[03:10:21.868]            // =>  FALSE
[03:10:21.868]          // skip if-block "hasDormant"
[03:10:21.868]        </control>
[03:10:21.868]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:21.868]          // if-block "!hasDormant"
[03:10:21.868]            // =>  TRUE
[03:10:21.868]          <block atomic="false" info="">
[03:10:21.868]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:21.870]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.870]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:21.872]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:21.872]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:21.874]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.874]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:21.874]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:21.874]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:21.878]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:21.880]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:21.881]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:21.881]          </block>
[03:10:21.881]          // end if-block "!hasDormant"
[03:10:21.881]        </control>
[03:10:21.881]        // end if-block "isSWJ"
[03:10:21.881]      </control>
[03:10:21.881]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:21.881]        // if-block "!isSWJ"
[03:10:21.882]          // =>  FALSE
[03:10:21.882]        // skip if-block "!isSWJ"
[03:10:21.882]      </control>
[03:10:21.882]      <block atomic="false" info="">
[03:10:21.882]        ReadDP(0x0);
[03:10:21.883]  
[03:10:21.883]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:21.883]  
[03:10:21.883]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:21.883]      </block>
[03:10:21.883]      // end if-block "protType == 2"
[03:10:21.883]    </control>
[03:10:21.883]  </sequence>
[03:10:21.883]  
[03:10:22.144]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:22.144]  
[03:10:22.146]  <debugvars>
[03:10:22.146]    // Pre-defined
[03:10:22.146]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:22.146]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:22.146]    __dp=0x00000000
[03:10:22.146]    __ap=0x00000000
[03:10:22.146]    __traceout=0x00000000      (Trace Disabled)
[03:10:22.146]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:22.146]    __FlashAddr=0x00000000
[03:10:22.146]    __FlashLen=0x00000000
[03:10:22.146]    __FlashArg=0x00000000
[03:10:22.146]    __FlashOp=0x00000000
[03:10:22.146]    __Result=0x00000000
[03:10:22.148]  </debugvars>
[03:10:22.148]  
[03:10:22.148]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:22.148]    <block atomic="false" info="">
[03:10:22.148]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:22.148]        // -> [isSWJ <= 0x00000001]
[03:10:22.148]      __var hasDormant = __protocol & 0x00020000;
[03:10:22.148]        // -> [hasDormant <= 0x00000000]
[03:10:22.149]      __var protType   = __protocol & 0x0000FFFF;
[03:10:22.149]        // -> [protType <= 0x00000002]
[03:10:22.149]    </block>
[03:10:22.149]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:22.149]      // if-block "protType == 1"
[03:10:22.149]        // =>  FALSE
[03:10:22.149]      // skip if-block "protType == 1"
[03:10:22.149]    </control>
[03:10:22.149]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:22.149]      // if-block "protType == 2"
[03:10:22.149]        // =>  TRUE
[03:10:22.149]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:22.149]        // if-block "isSWJ"
[03:10:22.149]          // =>  TRUE
[03:10:22.149]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:22.149]          // if-block "hasDormant"
[03:10:22.151]            // =>  FALSE
[03:10:22.151]          // skip if-block "hasDormant"
[03:10:22.151]        </control>
[03:10:22.151]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:22.151]          // if-block "!hasDormant"
[03:10:22.151]            // =>  TRUE
[03:10:22.151]          <block atomic="false" info="">
[03:10:22.151]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:22.153]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.153]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:22.153]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:22.153]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:22.161]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.161]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:22.161]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:22.161]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:22.165]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.165]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:22.169]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:22.169]          </block>
[03:10:22.169]          // end if-block "!hasDormant"
[03:10:22.169]        </control>
[03:10:22.169]        // end if-block "isSWJ"
[03:10:22.169]      </control>
[03:10:22.170]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:22.170]        // if-block "!isSWJ"
[03:10:22.170]          // =>  FALSE
[03:10:22.170]        // skip if-block "!isSWJ"
[03:10:22.170]      </control>
[03:10:22.170]      <block atomic="false" info="">
[03:10:22.170]        ReadDP(0x0);
[03:10:22.172]  
[03:10:22.172]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:22.172]  
[03:10:22.172]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:22.172]      </block>
[03:10:22.172]      // end if-block "protType == 2"
[03:10:22.172]    </control>
[03:10:22.172]  </sequence>
[03:10:22.173]  
[03:10:22.426]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:22.426]  
[03:10:22.426]  <debugvars>
[03:10:22.426]    // Pre-defined
[03:10:22.426]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:22.426]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:22.426]    __dp=0x00000000
[03:10:22.427]    __ap=0x00000000
[03:10:22.427]    __traceout=0x00000000      (Trace Disabled)
[03:10:22.427]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:22.427]    __FlashAddr=0x00000000
[03:10:22.427]    __FlashLen=0x00000000
[03:10:22.427]    __FlashArg=0x00000000
[03:10:22.427]    __FlashOp=0x00000000
[03:10:22.427]    __Result=0x00000000
[03:10:22.427]  </debugvars>
[03:10:22.427]  
[03:10:22.427]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:22.427]    <block atomic="false" info="">
[03:10:22.429]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:22.429]        // -> [isSWJ <= 0x00000001]
[03:10:22.429]      __var hasDormant = __protocol & 0x00020000;
[03:10:22.429]        // -> [hasDormant <= 0x00000000]
[03:10:22.429]      __var protType   = __protocol & 0x0000FFFF;
[03:10:22.429]        // -> [protType <= 0x00000002]
[03:10:22.429]    </block>
[03:10:22.429]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:22.429]      // if-block "protType == 1"
[03:10:22.429]        // =>  FALSE
[03:10:22.429]      // skip if-block "protType == 1"
[03:10:22.429]    </control>
[03:10:22.429]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:22.429]      // if-block "protType == 2"
[03:10:22.429]        // =>  TRUE
[03:10:22.429]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:22.429]        // if-block "isSWJ"
[03:10:22.429]          // =>  TRUE
[03:10:22.429]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:22.429]          // if-block "hasDormant"
[03:10:22.429]            // =>  FALSE
[03:10:22.431]          // skip if-block "hasDormant"
[03:10:22.431]        </control>
[03:10:22.431]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:22.431]          // if-block "!hasDormant"
[03:10:22.431]            // =>  TRUE
[03:10:22.431]          <block atomic="false" info="">
[03:10:22.431]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:22.434]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.434]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:22.434]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:22.434]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:22.437]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.437]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:22.437]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:22.437]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:22.437]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.437]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:22.441]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:22.441]          </block>
[03:10:22.441]          // end if-block "!hasDormant"
[03:10:22.441]        </control>
[03:10:22.441]        // end if-block "isSWJ"
[03:10:22.441]      </control>
[03:10:22.441]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:22.441]        // if-block "!isSWJ"
[03:10:22.441]          // =>  FALSE
[03:10:22.441]        // skip if-block "!isSWJ"
[03:10:22.441]      </control>
[03:10:22.441]      <block atomic="false" info="">
[03:10:22.441]        ReadDP(0x0);
[03:10:22.453]  
[03:10:22.453]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:22.453]  
[03:10:22.453]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:22.453]      </block>
[03:10:22.453]      // end if-block "protType == 2"
[03:10:22.453]    </control>
[03:10:22.453]  </sequence>
[03:10:22.453]  
[03:10:22.713]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:22.713]  
[03:10:22.714]  <debugvars>
[03:10:22.714]    // Pre-defined
[03:10:22.714]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:22.714]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:22.714]    __dp=0x00000000
[03:10:22.714]    __ap=0x00000000
[03:10:22.714]    __traceout=0x00000000      (Trace Disabled)
[03:10:22.714]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:22.714]    __FlashAddr=0x00000000
[03:10:22.714]    __FlashLen=0x00000000
[03:10:22.714]    __FlashArg=0x00000000
[03:10:22.714]    __FlashOp=0x00000000
[03:10:22.714]    __Result=0x00000000
[03:10:22.714]  </debugvars>
[03:10:22.714]  
[03:10:22.714]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:22.714]    <block atomic="false" info="">
[03:10:22.714]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:22.714]        // -> [isSWJ <= 0x00000001]
[03:10:22.714]      __var hasDormant = __protocol & 0x00020000;
[03:10:22.714]        // -> [hasDormant <= 0x00000000]
[03:10:22.714]      __var protType   = __protocol & 0x0000FFFF;
[03:10:22.714]        // -> [protType <= 0x00000002]
[03:10:22.714]    </block>
[03:10:22.717]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:22.717]      // if-block "protType == 1"
[03:10:22.717]        // =>  FALSE
[03:10:22.718]      // skip if-block "protType == 1"
[03:10:22.718]    </control>
[03:10:22.718]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:22.718]      // if-block "protType == 2"
[03:10:22.718]        // =>  TRUE
[03:10:22.718]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:22.718]        // if-block "isSWJ"
[03:10:22.718]          // =>  TRUE
[03:10:22.718]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:22.718]          // if-block "hasDormant"
[03:10:22.718]            // =>  FALSE
[03:10:22.718]          // skip if-block "hasDormant"
[03:10:22.718]        </control>
[03:10:22.718]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:22.719]          // if-block "!hasDormant"
[03:10:22.719]            // =>  TRUE
[03:10:22.719]          <block atomic="false" info="">
[03:10:22.719]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:22.719]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.719]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:22.722]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:22.722]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:22.722]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.722]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:22.726]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:22.726]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:22.726]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.726]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:22.728]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:22.728]          </block>
[03:10:22.728]          // end if-block "!hasDormant"
[03:10:22.728]        </control>
[03:10:22.728]        // end if-block "isSWJ"
[03:10:22.728]      </control>
[03:10:22.728]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:22.730]        // if-block "!isSWJ"
[03:10:22.730]          // =>  FALSE
[03:10:22.730]        // skip if-block "!isSWJ"
[03:10:22.730]      </control>
[03:10:22.730]      <block atomic="false" info="">
[03:10:22.730]        ReadDP(0x0);
[03:10:22.732]  
[03:10:22.732]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:22.732]  
[03:10:22.732]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:22.732]      </block>
[03:10:22.732]      // end if-block "protType == 2"
[03:10:22.732]    </control>
[03:10:22.732]  </sequence>
[03:10:22.732]  
[03:10:22.988]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:22.988]  
[03:10:22.990]  <debugvars>
[03:10:22.990]    // Pre-defined
[03:10:22.990]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:22.990]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:22.990]    __dp=0x00000000
[03:10:22.990]    __ap=0x00000000
[03:10:22.990]    __traceout=0x00000000      (Trace Disabled)
[03:10:22.990]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:22.990]    __FlashAddr=0x00000000
[03:10:22.990]    __FlashLen=0x00000000
[03:10:22.990]    __FlashArg=0x00000000
[03:10:22.990]    __FlashOp=0x00000000
[03:10:22.990]    __Result=0x00000000
[03:10:22.990]  </debugvars>
[03:10:22.990]  
[03:10:22.990]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:22.990]    <block atomic="false" info="">
[03:10:22.990]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:22.990]        // -> [isSWJ <= 0x00000001]
[03:10:22.990]      __var hasDormant = __protocol & 0x00020000;
[03:10:22.990]        // -> [hasDormant <= 0x00000000]
[03:10:22.990]      __var protType   = __protocol & 0x0000FFFF;
[03:10:22.990]        // -> [protType <= 0x00000002]
[03:10:22.990]    </block>
[03:10:22.990]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:22.990]      // if-block "protType == 1"
[03:10:22.990]        // =>  FALSE
[03:10:22.990]      // skip if-block "protType == 1"
[03:10:22.993]    </control>
[03:10:22.993]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:22.993]      // if-block "protType == 2"
[03:10:22.993]        // =>  TRUE
[03:10:22.993]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:22.993]        // if-block "isSWJ"
[03:10:22.993]          // =>  TRUE
[03:10:22.993]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:22.993]          // if-block "hasDormant"
[03:10:22.993]            // =>  FALSE
[03:10:22.993]          // skip if-block "hasDormant"
[03:10:22.993]        </control>
[03:10:22.993]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:22.993]          // if-block "!hasDormant"
[03:10:22.993]            // =>  TRUE
[03:10:22.993]          <block atomic="false" info="">
[03:10:22.993]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:22.997]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:22.997]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:23.001]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:23.001]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:23.001]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.001]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:23.005]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:23.005]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:23.005]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.005]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:23.009]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:23.009]          </block>
[03:10:23.009]          // end if-block "!hasDormant"
[03:10:23.009]        </control>
[03:10:23.009]        // end if-block "isSWJ"
[03:10:23.009]      </control>
[03:10:23.009]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:23.009]        // if-block "!isSWJ"
[03:10:23.009]          // =>  FALSE
[03:10:23.009]        // skip if-block "!isSWJ"
[03:10:23.009]      </control>
[03:10:23.009]      <block atomic="false" info="">
[03:10:23.009]        ReadDP(0x0);
[03:10:23.013]  
[03:10:23.013]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:23.013]  
[03:10:23.013]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:23.013]      </block>
[03:10:23.013]      // end if-block "protType == 2"
[03:10:23.013]    </control>
[03:10:23.013]  </sequence>
[03:10:23.013]  
[03:10:23.272]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:23.272]  
[03:10:23.272]  <debugvars>
[03:10:23.272]    // Pre-defined
[03:10:23.272]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:23.272]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:23.272]    __dp=0x00000000
[03:10:23.272]    __ap=0x00000000
[03:10:23.274]    __traceout=0x00000000      (Trace Disabled)
[03:10:23.274]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:23.274]    __FlashAddr=0x00000000
[03:10:23.275]    __FlashLen=0x00000000
[03:10:23.275]    __FlashArg=0x00000000
[03:10:23.275]    __FlashOp=0x00000000
[03:10:23.275]    __Result=0x00000000
[03:10:23.275]  </debugvars>
[03:10:23.275]  
[03:10:23.275]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:23.275]    <block atomic="false" info="">
[03:10:23.275]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:23.275]        // -> [isSWJ <= 0x00000001]
[03:10:23.275]      __var hasDormant = __protocol & 0x00020000;
[03:10:23.275]        // -> [hasDormant <= 0x00000000]
[03:10:23.275]      __var protType   = __protocol & 0x0000FFFF;
[03:10:23.275]        // -> [protType <= 0x00000002]
[03:10:23.275]    </block>
[03:10:23.275]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:23.275]      // if-block "protType == 1"
[03:10:23.275]        // =>  FALSE
[03:10:23.275]      // skip if-block "protType == 1"
[03:10:23.277]    </control>
[03:10:23.277]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:23.277]      // if-block "protType == 2"
[03:10:23.277]        // =>  TRUE
[03:10:23.277]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:23.277]        // if-block "isSWJ"
[03:10:23.277]          // =>  TRUE
[03:10:23.277]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:23.277]          // if-block "hasDormant"
[03:10:23.277]            // =>  FALSE
[03:10:23.277]          // skip if-block "hasDormant"
[03:10:23.277]        </control>
[03:10:23.277]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:23.277]          // if-block "!hasDormant"
[03:10:23.277]            // =>  TRUE
[03:10:23.277]          <block atomic="false" info="">
[03:10:23.277]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:23.277]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.277]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:23.281]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:23.281]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:23.281]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.281]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:23.285]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:23.285]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:23.286]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.286]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:23.286]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:23.286]          </block>
[03:10:23.286]          // end if-block "!hasDormant"
[03:10:23.286]        </control>
[03:10:23.286]        // end if-block "isSWJ"
[03:10:23.289]      </control>
[03:10:23.289]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:23.289]        // if-block "!isSWJ"
[03:10:23.289]          // =>  FALSE
[03:10:23.289]        // skip if-block "!isSWJ"
[03:10:23.289]      </control>
[03:10:23.289]      <block atomic="false" info="">
[03:10:23.289]        ReadDP(0x0);
[03:10:23.289]  
[03:10:23.289]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:23.289]  
[03:10:23.289]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:23.289]      </block>
[03:10:23.289]      // end if-block "protType == 2"
[03:10:23.289]    </control>
[03:10:23.289]  </sequence>
[03:10:23.289]  
[03:10:23.547]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:23.547]  
[03:10:23.549]  <debugvars>
[03:10:23.549]    // Pre-defined
[03:10:23.549]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:23.549]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:23.549]    __dp=0x00000000
[03:10:23.549]    __ap=0x00000000
[03:10:23.549]    __traceout=0x00000000      (Trace Disabled)
[03:10:23.549]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:23.549]    __FlashAddr=0x00000000
[03:10:23.549]    __FlashLen=0x00000000
[03:10:23.549]    __FlashArg=0x00000000
[03:10:23.549]    __FlashOp=0x00000000
[03:10:23.549]    __Result=0x00000000
[03:10:23.549]  </debugvars>
[03:10:23.549]  
[03:10:23.549]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:23.549]    <block atomic="false" info="">
[03:10:23.549]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:23.549]        // -> [isSWJ <= 0x00000001]
[03:10:23.549]      __var hasDormant = __protocol & 0x00020000;
[03:10:23.549]        // -> [hasDormant <= 0x00000000]
[03:10:23.549]      __var protType   = __protocol & 0x0000FFFF;
[03:10:23.549]        // -> [protType <= 0x00000002]
[03:10:23.552]    </block>
[03:10:23.552]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:23.552]      // if-block "protType == 1"
[03:10:23.552]        // =>  FALSE
[03:10:23.552]      // skip if-block "protType == 1"
[03:10:23.552]    </control>
[03:10:23.552]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:23.552]      // if-block "protType == 2"
[03:10:23.552]        // =>  TRUE
[03:10:23.552]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:23.552]        // if-block "isSWJ"
[03:10:23.552]          // =>  TRUE
[03:10:23.552]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:23.552]          // if-block "hasDormant"
[03:10:23.552]            // =>  FALSE
[03:10:23.552]          // skip if-block "hasDormant"
[03:10:23.552]        </control>
[03:10:23.552]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:23.552]          // if-block "!hasDormant"
[03:10:23.552]            // =>  TRUE
[03:10:23.552]          <block atomic="false" info="">
[03:10:23.552]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:23.552]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.556]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:23.556]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:23.556]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:23.556]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.556]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:23.560]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:23.560]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:23.560]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.560]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:23.560]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:23.564]          </block>
[03:10:23.564]          // end if-block "!hasDormant"
[03:10:23.564]        </control>
[03:10:23.564]        // end if-block "isSWJ"
[03:10:23.564]      </control>
[03:10:23.564]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:23.564]        // if-block "!isSWJ"
[03:10:23.564]          // =>  FALSE
[03:10:23.564]        // skip if-block "!isSWJ"
[03:10:23.564]      </control>
[03:10:23.564]      <block atomic="false" info="">
[03:10:23.564]        ReadDP(0x0);
[03:10:23.564]  
[03:10:23.564]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:23.564]  
[03:10:23.564]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:23.564]      </block>
[03:10:23.564]      // end if-block "protType == 2"
[03:10:23.564]    </control>
[03:10:23.564]  </sequence>
[03:10:23.567]  
[03:10:23.820]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:23.820]  
[03:10:23.822]  <debugvars>
[03:10:23.822]    // Pre-defined
[03:10:23.822]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:23.822]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:23.822]    __dp=0x00000000
[03:10:23.822]    __ap=0x00000000
[03:10:23.822]    __traceout=0x00000000      (Trace Disabled)
[03:10:23.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:23.822]    __FlashAddr=0x00000000
[03:10:23.822]    __FlashLen=0x00000000
[03:10:23.822]    __FlashArg=0x00000000
[03:10:23.822]    __FlashOp=0x00000000
[03:10:23.822]    __Result=0x00000000
[03:10:23.822]  </debugvars>
[03:10:23.822]  
[03:10:23.822]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:23.822]    <block atomic="false" info="">
[03:10:23.824]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:23.824]        // -> [isSWJ <= 0x00000001]
[03:10:23.824]      __var hasDormant = __protocol & 0x00020000;
[03:10:23.824]        // -> [hasDormant <= 0x00000000]
[03:10:23.824]      __var protType   = __protocol & 0x0000FFFF;
[03:10:23.824]        // -> [protType <= 0x00000002]
[03:10:23.824]    </block>
[03:10:23.824]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:23.824]      // if-block "protType == 1"
[03:10:23.824]        // =>  FALSE
[03:10:23.824]      // skip if-block "protType == 1"
[03:10:23.824]    </control>
[03:10:23.824]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:23.824]      // if-block "protType == 2"
[03:10:23.824]        // =>  TRUE
[03:10:23.824]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:23.824]        // if-block "isSWJ"
[03:10:23.826]          // =>  TRUE
[03:10:23.826]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:23.826]          // if-block "hasDormant"
[03:10:23.826]            // =>  FALSE
[03:10:23.826]          // skip if-block "hasDormant"
[03:10:23.826]        </control>
[03:10:23.826]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:23.826]          // if-block "!hasDormant"
[03:10:23.826]            // =>  TRUE
[03:10:23.826]          <block atomic="false" info="">
[03:10:23.826]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:23.828]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.828]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:23.828]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:23.828]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:23.828]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.828]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:23.832]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:23.832]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:23.832]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:23.832]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:23.832]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:23.832]          </block>
[03:10:23.836]          // end if-block "!hasDormant"
[03:10:23.836]        </control>
[03:10:23.836]        // end if-block "isSWJ"
[03:10:23.836]      </control>
[03:10:23.836]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:23.836]        // if-block "!isSWJ"
[03:10:23.836]          // =>  FALSE
[03:10:23.836]        // skip if-block "!isSWJ"
[03:10:23.836]      </control>
[03:10:23.836]      <block atomic="false" info="">
[03:10:23.836]        ReadDP(0x0);
[03:10:23.839]  
[03:10:23.839]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:23.839]  
[03:10:23.839]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:23.839]      </block>
[03:10:23.839]      // end if-block "protType == 2"
[03:10:23.839]    </control>
[03:10:23.839]  </sequence>
[03:10:23.839]  
[03:10:24.102]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:24.102]  
[03:10:24.102]  <debugvars>
[03:10:24.102]    // Pre-defined
[03:10:24.102]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:24.102]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:24.102]    __dp=0x00000000
[03:10:24.102]    __ap=0x00000000
[03:10:24.102]    __traceout=0x00000000      (Trace Disabled)
[03:10:24.102]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:24.102]    __FlashAddr=0x00000000
[03:10:24.102]    __FlashLen=0x00000000
[03:10:24.102]    __FlashArg=0x00000000
[03:10:24.102]    __FlashOp=0x00000000
[03:10:24.102]    __Result=0x00000000
[03:10:24.102]  </debugvars>
[03:10:24.102]  
[03:10:24.102]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:24.102]    <block atomic="false" info="">
[03:10:24.102]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:24.102]        // -> [isSWJ <= 0x00000001]
[03:10:24.102]      __var hasDormant = __protocol & 0x00020000;
[03:10:24.102]        // -> [hasDormant <= 0x00000000]
[03:10:24.102]      __var protType   = __protocol & 0x0000FFFF;
[03:10:24.102]        // -> [protType <= 0x00000002]
[03:10:24.105]    </block>
[03:10:24.105]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:24.105]      // if-block "protType == 1"
[03:10:24.106]        // =>  FALSE
[03:10:24.106]      // skip if-block "protType == 1"
[03:10:24.106]    </control>
[03:10:24.106]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:24.106]      // if-block "protType == 2"
[03:10:24.106]        // =>  TRUE
[03:10:24.106]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:24.106]        // if-block "isSWJ"
[03:10:24.106]          // =>  TRUE
[03:10:24.106]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:24.106]          // if-block "hasDormant"
[03:10:24.106]            // =>  FALSE
[03:10:24.106]          // skip if-block "hasDormant"
[03:10:24.107]        </control>
[03:10:24.107]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:24.107]          // if-block "!hasDormant"
[03:10:24.107]            // =>  TRUE
[03:10:24.107]          <block atomic="false" info="">
[03:10:24.107]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:24.107]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.107]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:24.110]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:24.110]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:24.110]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.110]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:24.114]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:24.114]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:24.115]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.115]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:24.117]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:24.117]          </block>
[03:10:24.117]          // end if-block "!hasDormant"
[03:10:24.117]        </control>
[03:10:24.117]        // end if-block "isSWJ"
[03:10:24.117]      </control>
[03:10:24.117]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:24.117]        // if-block "!isSWJ"
[03:10:24.117]          // =>  FALSE
[03:10:24.117]        // skip if-block "!isSWJ"
[03:10:24.117]      </control>
[03:10:24.117]      <block atomic="false" info="">
[03:10:24.117]        ReadDP(0x0);
[03:10:24.121]  
[03:10:24.121]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:24.121]  
[03:10:24.121]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:24.121]      </block>
[03:10:24.121]      // end if-block "protType == 2"
[03:10:24.121]    </control>
[03:10:24.121]  </sequence>
[03:10:24.121]  
[03:10:24.382]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:24.382]  
[03:10:24.383]  <debugvars>
[03:10:24.383]    // Pre-defined
[03:10:24.383]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:24.383]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:24.383]    __dp=0x00000000
[03:10:24.383]    __ap=0x00000000
[03:10:24.383]    __traceout=0x00000000      (Trace Disabled)
[03:10:24.383]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:24.383]    __FlashAddr=0x00000000
[03:10:24.383]    __FlashLen=0x00000000
[03:10:24.383]    __FlashArg=0x00000000
[03:10:24.383]    __FlashOp=0x00000000
[03:10:24.383]    __Result=0x00000000
[03:10:24.383]  </debugvars>
[03:10:24.383]  
[03:10:24.383]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:24.383]    <block atomic="false" info="">
[03:10:24.383]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:24.383]        // -> [isSWJ <= 0x00000001]
[03:10:24.383]      __var hasDormant = __protocol & 0x00020000;
[03:10:24.383]        // -> [hasDormant <= 0x00000000]
[03:10:24.383]      __var protType   = __protocol & 0x0000FFFF;
[03:10:24.383]        // -> [protType <= 0x00000002]
[03:10:24.383]    </block>
[03:10:24.383]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:24.383]      // if-block "protType == 1"
[03:10:24.383]        // =>  FALSE
[03:10:24.383]      // skip if-block "protType == 1"
[03:10:24.386]    </control>
[03:10:24.386]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:24.386]      // if-block "protType == 2"
[03:10:24.386]        // =>  TRUE
[03:10:24.386]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:24.386]        // if-block "isSWJ"
[03:10:24.386]          // =>  TRUE
[03:10:24.386]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:24.386]          // if-block "hasDormant"
[03:10:24.386]            // =>  FALSE
[03:10:24.386]          // skip if-block "hasDormant"
[03:10:24.386]        </control>
[03:10:24.386]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:24.386]          // if-block "!hasDormant"
[03:10:24.386]            // =>  TRUE
[03:10:24.386]          <block atomic="false" info="">
[03:10:24.386]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:24.390]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.390]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:24.390]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:24.394]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:24.398]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.398]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:24.398]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:24.398]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:24.402]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.402]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:24.402]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:24.402]          </block>
[03:10:24.402]          // end if-block "!hasDormant"
[03:10:24.402]        </control>
[03:10:24.402]        // end if-block "isSWJ"
[03:10:24.402]      </control>
[03:10:24.402]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:24.402]        // if-block "!isSWJ"
[03:10:24.402]          // =>  FALSE
[03:10:24.402]        // skip if-block "!isSWJ"
[03:10:24.402]      </control>
[03:10:24.402]      <block atomic="false" info="">
[03:10:24.402]        ReadDP(0x0);
[03:10:24.406]  
[03:10:24.406]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:24.406]  
[03:10:24.406]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:24.406]      </block>
[03:10:24.406]      // end if-block "protType == 2"
[03:10:24.406]    </control>
[03:10:24.406]  </sequence>
[03:10:24.406]  
[03:10:24.661]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:24.661]  
[03:10:24.663]  <debugvars>
[03:10:24.663]    // Pre-defined
[03:10:24.663]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:24.663]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:24.663]    __dp=0x00000000
[03:10:24.663]    __ap=0x00000000
[03:10:24.663]    __traceout=0x00000000      (Trace Disabled)
[03:10:24.663]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:24.663]    __FlashAddr=0x00000000
[03:10:24.663]    __FlashLen=0x00000000
[03:10:24.663]    __FlashArg=0x00000000
[03:10:24.663]    __FlashOp=0x00000000
[03:10:24.663]    __Result=0x00000000
[03:10:24.663]  </debugvars>
[03:10:24.663]  
[03:10:24.663]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:24.663]    <block atomic="false" info="">
[03:10:24.663]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:24.663]        // -> [isSWJ <= 0x00000001]
[03:10:24.663]      __var hasDormant = __protocol & 0x00020000;
[03:10:24.663]        // -> [hasDormant <= 0x00000000]
[03:10:24.663]      __var protType   = __protocol & 0x0000FFFF;
[03:10:24.663]        // -> [protType <= 0x00000002]
[03:10:24.663]    </block>
[03:10:24.663]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:24.663]      // if-block "protType == 1"
[03:10:24.666]        // =>  FALSE
[03:10:24.666]      // skip if-block "protType == 1"
[03:10:24.666]    </control>
[03:10:24.666]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:24.666]      // if-block "protType == 2"
[03:10:24.666]        // =>  TRUE
[03:10:24.666]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:24.666]        // if-block "isSWJ"
[03:10:24.666]          // =>  TRUE
[03:10:24.666]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:24.666]          // if-block "hasDormant"
[03:10:24.666]            // =>  FALSE
[03:10:24.666]          // skip if-block "hasDormant"
[03:10:24.666]        </control>
[03:10:24.666]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:24.666]          // if-block "!hasDormant"
[03:10:24.666]            // =>  TRUE
[03:10:24.666]          <block atomic="false" info="">
[03:10:24.666]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:24.666]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.666]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:24.670]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:24.670]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:24.678]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.678]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:24.678]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:24.678]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:24.682]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.682]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:24.682]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:24.682]          </block>
[03:10:24.682]          // end if-block "!hasDormant"
[03:10:24.682]        </control>
[03:10:24.682]        // end if-block "isSWJ"
[03:10:24.682]      </control>
[03:10:24.682]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:24.682]        // if-block "!isSWJ"
[03:10:24.682]          // =>  FALSE
[03:10:24.682]        // skip if-block "!isSWJ"
[03:10:24.682]      </control>
[03:10:24.682]      <block atomic="false" info="">
[03:10:24.682]        ReadDP(0x0);
[03:10:24.686]  
[03:10:24.686]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:24.686]  
[03:10:24.686]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:24.686]      </block>
[03:10:24.686]      // end if-block "protType == 2"
[03:10:24.686]    </control>
[03:10:24.686]  </sequence>
[03:10:24.686]  
[03:10:24.939]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:24.939]  
[03:10:24.941]  <debugvars>
[03:10:24.941]    // Pre-defined
[03:10:24.941]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:24.941]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:24.942]    __dp=0x00000000
[03:10:24.942]    __ap=0x00000000
[03:10:24.942]    __traceout=0x00000000      (Trace Disabled)
[03:10:24.942]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:24.942]    __FlashAddr=0x00000000
[03:10:24.942]    __FlashLen=0x00000000
[03:10:24.942]    __FlashArg=0x00000000
[03:10:24.942]    __FlashOp=0x00000000
[03:10:24.942]    __Result=0x00000000
[03:10:24.942]  </debugvars>
[03:10:24.942]  
[03:10:24.943]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:24.943]    <block atomic="false" info="">
[03:10:24.943]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:24.943]        // -> [isSWJ <= 0x00000001]
[03:10:24.943]      __var hasDormant = __protocol & 0x00020000;
[03:10:24.943]        // -> [hasDormant <= 0x00000000]
[03:10:24.943]      __var protType   = __protocol & 0x0000FFFF;
[03:10:24.943]        // -> [protType <= 0x00000002]
[03:10:24.943]    </block>
[03:10:24.943]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:24.943]      // if-block "protType == 1"
[03:10:24.943]        // =>  FALSE
[03:10:24.943]      // skip if-block "protType == 1"
[03:10:24.943]    </control>
[03:10:24.943]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:24.943]      // if-block "protType == 2"
[03:10:24.943]        // =>  TRUE
[03:10:24.943]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:24.943]        // if-block "isSWJ"
[03:10:24.943]          // =>  TRUE
[03:10:24.943]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:24.943]          // if-block "hasDormant"
[03:10:24.943]            // =>  FALSE
[03:10:24.943]          // skip if-block "hasDormant"
[03:10:24.943]        </control>
[03:10:24.943]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:24.943]          // if-block "!hasDormant"
[03:10:24.943]            // =>  TRUE
[03:10:24.943]          <block atomic="false" info="">
[03:10:24.943]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:24.947]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.947]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:24.947]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:24.947]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:24.951]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.951]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:24.951]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:24.951]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:24.955]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:24.955]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:24.955]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:24.955]          </block>
[03:10:24.955]          // end if-block "!hasDormant"
[03:10:24.955]        </control>
[03:10:24.955]        // end if-block "isSWJ"
[03:10:24.955]      </control>
[03:10:24.955]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:24.955]        // if-block "!isSWJ"
[03:10:24.955]          // =>  FALSE
[03:10:24.955]        // skip if-block "!isSWJ"
[03:10:24.955]      </control>
[03:10:24.955]      <block atomic="false" info="">
[03:10:24.955]        ReadDP(0x0);
[03:10:24.959]  
[03:10:24.959]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:24.959]  
[03:10:24.959]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:24.959]      </block>
[03:10:24.959]      // end if-block "protType == 2"
[03:10:24.959]    </control>
[03:10:24.959]  </sequence>
[03:10:24.959]  
[03:10:25.217]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:25.217]  
[03:10:25.219]  <debugvars>
[03:10:25.219]    // Pre-defined
[03:10:25.219]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:25.219]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:25.219]    __dp=0x00000000
[03:10:25.219]    __ap=0x00000000
[03:10:25.219]    __traceout=0x00000000      (Trace Disabled)
[03:10:25.219]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:25.219]    __FlashAddr=0x00000000
[03:10:25.219]    __FlashLen=0x00000000
[03:10:25.219]    __FlashArg=0x00000000
[03:10:25.219]    __FlashOp=0x00000000
[03:10:25.219]    __Result=0x00000000
[03:10:25.219]  </debugvars>
[03:10:25.219]  
[03:10:25.219]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:25.219]    <block atomic="false" info="">
[03:10:25.219]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:25.219]        // -> [isSWJ <= 0x00000001]
[03:10:25.219]      __var hasDormant = __protocol & 0x00020000;
[03:10:25.219]        // -> [hasDormant <= 0x00000000]
[03:10:25.219]      __var protType   = __protocol & 0x0000FFFF;
[03:10:25.219]        // -> [protType <= 0x00000002]
[03:10:25.222]    </block>
[03:10:25.222]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:25.222]      // if-block "protType == 1"
[03:10:25.222]        // =>  FALSE
[03:10:25.222]      // skip if-block "protType == 1"
[03:10:25.222]    </control>
[03:10:25.222]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:25.222]      // if-block "protType == 2"
[03:10:25.222]        // =>  TRUE
[03:10:25.222]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:25.222]        // if-block "isSWJ"
[03:10:25.222]          // =>  TRUE
[03:10:25.222]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:25.222]          // if-block "hasDormant"
[03:10:25.222]            // =>  FALSE
[03:10:25.222]          // skip if-block "hasDormant"
[03:10:25.222]        </control>
[03:10:25.222]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:25.222]          // if-block "!hasDormant"
[03:10:25.222]            // =>  TRUE
[03:10:25.222]          <block atomic="false" info="">
[03:10:25.222]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:25.226]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.226]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:25.226]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:25.226]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:25.231]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.231]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:25.234]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:25.234]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:25.234]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.234]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:25.238]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:25.238]          </block>
[03:10:25.238]          // end if-block "!hasDormant"
[03:10:25.238]        </control>
[03:10:25.238]        // end if-block "isSWJ"
[03:10:25.238]      </control>
[03:10:25.238]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:25.238]        // if-block "!isSWJ"
[03:10:25.238]          // =>  FALSE
[03:10:25.238]        // skip if-block "!isSWJ"
[03:10:25.238]      </control>
[03:10:25.238]      <block atomic="false" info="">
[03:10:25.238]        ReadDP(0x0);
[03:10:25.238]  
[03:10:25.238]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:25.238]  
[03:10:25.238]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:25.238]      </block>
[03:10:25.238]      // end if-block "protType == 2"
[03:10:25.238]    </control>
[03:10:25.242]  </sequence>
[03:10:25.242]  
[03:10:25.496]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:25.496]  
[03:10:25.498]  <debugvars>
[03:10:25.498]    // Pre-defined
[03:10:25.498]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:25.498]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:25.498]    __dp=0x00000000
[03:10:25.498]    __ap=0x00000000
[03:10:25.498]    __traceout=0x00000000      (Trace Disabled)
[03:10:25.498]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:25.498]    __FlashAddr=0x00000000
[03:10:25.498]    __FlashLen=0x00000000
[03:10:25.498]    __FlashArg=0x00000000
[03:10:25.498]    __FlashOp=0x00000000
[03:10:25.498]    __Result=0x00000000
[03:10:25.498]  </debugvars>
[03:10:25.498]  
[03:10:25.498]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:25.498]    <block atomic="false" info="">
[03:10:25.498]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:25.498]        // -> [isSWJ <= 0x00000001]
[03:10:25.498]      __var hasDormant = __protocol & 0x00020000;
[03:10:25.498]        // -> [hasDormant <= 0x00000000]
[03:10:25.498]      __var protType   = __protocol & 0x0000FFFF;
[03:10:25.498]        // -> [protType <= 0x00000002]
[03:10:25.498]    </block>
[03:10:25.498]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:25.498]      // if-block "protType == 1"
[03:10:25.498]        // =>  FALSE
[03:10:25.501]      // skip if-block "protType == 1"
[03:10:25.501]    </control>
[03:10:25.501]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:25.501]      // if-block "protType == 2"
[03:10:25.501]        // =>  TRUE
[03:10:25.501]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:25.501]        // if-block "isSWJ"
[03:10:25.501]          // =>  TRUE
[03:10:25.501]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:25.501]          // if-block "hasDormant"
[03:10:25.502]            // =>  FALSE
[03:10:25.502]          // skip if-block "hasDormant"
[03:10:25.502]        </control>
[03:10:25.502]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:25.502]          // if-block "!hasDormant"
[03:10:25.502]            // =>  TRUE
[03:10:25.502]          <block atomic="false" info="">
[03:10:25.502]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:25.504]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.504]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:25.506]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:25.506]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:25.510]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.510]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:25.517]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:25.517]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:25.521]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.521]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:25.525]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:25.525]          </block>
[03:10:25.525]          // end if-block "!hasDormant"
[03:10:25.525]        </control>
[03:10:25.525]        // end if-block "isSWJ"
[03:10:25.525]      </control>
[03:10:25.525]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:25.525]        // if-block "!isSWJ"
[03:10:25.525]          // =>  FALSE
[03:10:25.525]        // skip if-block "!isSWJ"
[03:10:25.525]      </control>
[03:10:25.525]      <block atomic="false" info="">
[03:10:25.525]        ReadDP(0x0);
[03:10:25.529]  
[03:10:25.529]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:25.529]  
[03:10:25.529]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:25.529]      </block>
[03:10:25.529]      // end if-block "protType == 2"
[03:10:25.529]    </control>
[03:10:25.529]  </sequence>
[03:10:25.529]  
[03:10:25.785]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:25.785]  
[03:10:25.785]  <debugvars>
[03:10:25.785]    // Pre-defined
[03:10:25.785]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:25.785]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:25.785]    __dp=0x00000000
[03:10:25.785]    __ap=0x00000000
[03:10:25.785]    __traceout=0x00000000      (Trace Disabled)
[03:10:25.785]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:25.785]    __FlashAddr=0x00000000
[03:10:25.785]    __FlashLen=0x00000000
[03:10:25.787]    __FlashArg=0x00000000
[03:10:25.787]    __FlashOp=0x00000000
[03:10:25.787]    __Result=0x00000000
[03:10:25.787]  </debugvars>
[03:10:25.787]  
[03:10:25.787]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:25.787]    <block atomic="false" info="">
[03:10:25.787]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:25.787]        // -> [isSWJ <= 0x00000001]
[03:10:25.787]      __var hasDormant = __protocol & 0x00020000;
[03:10:25.787]        // -> [hasDormant <= 0x00000000]
[03:10:25.787]      __var protType   = __protocol & 0x0000FFFF;
[03:10:25.787]        // -> [protType <= 0x00000002]
[03:10:25.787]    </block>
[03:10:25.787]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:25.787]      // if-block "protType == 1"
[03:10:25.787]        // =>  FALSE
[03:10:25.787]      // skip if-block "protType == 1"
[03:10:25.787]    </control>
[03:10:25.787]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:25.787]      // if-block "protType == 2"
[03:10:25.787]        // =>  TRUE
[03:10:25.787]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:25.787]        // if-block "isSWJ"
[03:10:25.787]          // =>  TRUE
[03:10:25.790]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:25.790]          // if-block "hasDormant"
[03:10:25.790]            // =>  FALSE
[03:10:25.790]          // skip if-block "hasDormant"
[03:10:25.790]        </control>
[03:10:25.790]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:25.790]          // if-block "!hasDormant"
[03:10:25.790]            // =>  TRUE
[03:10:25.790]          <block atomic="false" info="">
[03:10:25.790]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:25.791]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.791]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:25.794]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:25.794]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:25.796]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.796]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:25.797]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:25.797]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:25.799]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:25.799]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:25.799]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:25.799]          </block>
[03:10:25.799]          // end if-block "!hasDormant"
[03:10:25.799]        </control>
[03:10:25.799]        // end if-block "isSWJ"
[03:10:25.799]      </control>
[03:10:25.799]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:25.799]        // if-block "!isSWJ"
[03:10:25.799]          // =>  FALSE
[03:10:25.799]        // skip if-block "!isSWJ"
[03:10:25.799]      </control>
[03:10:25.799]      <block atomic="false" info="">
[03:10:25.799]        ReadDP(0x0);
[03:10:25.802]  
[03:10:25.802]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:25.802]  
[03:10:25.806]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:25.806]      </block>
[03:10:25.806]      // end if-block "protType == 2"
[03:10:25.806]    </control>
[03:10:25.806]  </sequence>
[03:10:25.806]  
[03:10:26.065]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:26.065]  
[03:10:26.067]  <debugvars>
[03:10:26.067]    // Pre-defined
[03:10:26.067]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:26.067]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:26.067]    __dp=0x00000000
[03:10:26.067]    __ap=0x00000000
[03:10:26.067]    __traceout=0x00000000      (Trace Disabled)
[03:10:26.067]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:26.067]    __FlashAddr=0x00000000
[03:10:26.067]    __FlashLen=0x00000000
[03:10:26.067]    __FlashArg=0x00000000
[03:10:26.067]    __FlashOp=0x00000000
[03:10:26.067]    __Result=0x00000000
[03:10:26.067]  </debugvars>
[03:10:26.067]  
[03:10:26.067]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:26.067]    <block atomic="false" info="">
[03:10:26.067]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:26.067]        // -> [isSWJ <= 0x00000001]
[03:10:26.067]      __var hasDormant = __protocol & 0x00020000;
[03:10:26.067]        // -> [hasDormant <= 0x00000000]
[03:10:26.067]      __var protType   = __protocol & 0x0000FFFF;
[03:10:26.067]        // -> [protType <= 0x00000002]
[03:10:26.070]    </block>
[03:10:26.070]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:26.070]      // if-block "protType == 1"
[03:10:26.070]        // =>  FALSE
[03:10:26.070]      // skip if-block "protType == 1"
[03:10:26.070]    </control>
[03:10:26.070]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:26.070]      // if-block "protType == 2"
[03:10:26.070]        // =>  TRUE
[03:10:26.070]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:26.070]        // if-block "isSWJ"
[03:10:26.070]          // =>  TRUE
[03:10:26.070]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:26.070]          // if-block "hasDormant"
[03:10:26.070]            // =>  FALSE
[03:10:26.070]          // skip if-block "hasDormant"
[03:10:26.070]        </control>
[03:10:26.070]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:26.070]          // if-block "!hasDormant"
[03:10:26.070]            // =>  TRUE
[03:10:26.070]          <block atomic="false" info="">
[03:10:26.070]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:26.078]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.078]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:26.090]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:26.090]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:26.091]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.091]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:26.094]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:26.094]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:26.094]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.094]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:26.094]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:26.094]          </block>
[03:10:26.094]          // end if-block "!hasDormant"
[03:10:26.094]        </control>
[03:10:26.094]        // end if-block "isSWJ"
[03:10:26.094]      </control>
[03:10:26.094]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:26.094]        // if-block "!isSWJ"
[03:10:26.094]          // =>  FALSE
[03:10:26.094]        // skip if-block "!isSWJ"
[03:10:26.098]      </control>
[03:10:26.098]      <block atomic="false" info="">
[03:10:26.098]        ReadDP(0x0);
[03:10:26.098]  
[03:10:26.098]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:26.098]  
[03:10:26.098]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:26.098]      </block>
[03:10:26.098]      // end if-block "protType == 2"
[03:10:26.098]    </control>
[03:10:26.098]  </sequence>
[03:10:26.098]  
[03:10:26.357]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:26.357]  
[03:10:26.357]  <debugvars>
[03:10:26.357]    // Pre-defined
[03:10:26.357]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:26.357]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:26.357]    __dp=0x00000000
[03:10:26.357]    __ap=0x00000000
[03:10:26.357]    __traceout=0x00000000      (Trace Disabled)
[03:10:26.357]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:26.357]    __FlashAddr=0x00000000
[03:10:26.357]    __FlashLen=0x00000000
[03:10:26.357]    __FlashArg=0x00000000
[03:10:26.357]    __FlashOp=0x00000000
[03:10:26.357]    __Result=0x00000000
[03:10:26.357]  </debugvars>
[03:10:26.357]  
[03:10:26.357]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:26.357]    <block atomic="false" info="">
[03:10:26.357]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:26.357]        // -> [isSWJ <= 0x00000001]
[03:10:26.357]      __var hasDormant = __protocol & 0x00020000;
[03:10:26.357]        // -> [hasDormant <= 0x00000000]
[03:10:26.357]      __var protType   = __protocol & 0x0000FFFF;
[03:10:26.357]        // -> [protType <= 0x00000002]
[03:10:26.357]    </block>
[03:10:26.361]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:26.361]      // if-block "protType == 1"
[03:10:26.361]        // =>  FALSE
[03:10:26.361]      // skip if-block "protType == 1"
[03:10:26.361]    </control>
[03:10:26.361]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:26.361]      // if-block "protType == 2"
[03:10:26.361]        // =>  TRUE
[03:10:26.361]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:26.361]        // if-block "isSWJ"
[03:10:26.361]          // =>  TRUE
[03:10:26.361]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:26.361]          // if-block "hasDormant"
[03:10:26.361]            // =>  FALSE
[03:10:26.361]          // skip if-block "hasDormant"
[03:10:26.361]        </control>
[03:10:26.361]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:26.361]          // if-block "!hasDormant"
[03:10:26.361]            // =>  TRUE
[03:10:26.361]          <block atomic="false" info="">
[03:10:26.361]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:26.361]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.365]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:26.365]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:26.365]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:26.365]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.365]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:26.369]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:26.369]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:26.369]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.369]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:26.369]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:26.369]          </block>
[03:10:26.369]          // end if-block "!hasDormant"
[03:10:26.369]        </control>
[03:10:26.369]        // end if-block "isSWJ"
[03:10:26.373]      </control>
[03:10:26.373]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:26.373]        // if-block "!isSWJ"
[03:10:26.373]          // =>  FALSE
[03:10:26.373]        // skip if-block "!isSWJ"
[03:10:26.373]      </control>
[03:10:26.373]      <block atomic="false" info="">
[03:10:26.373]        ReadDP(0x0);
[03:10:26.373]  
[03:10:26.373]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:26.373]  
[03:10:26.373]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:26.373]      </block>
[03:10:26.373]      // end if-block "protType == 2"
[03:10:26.373]    </control>
[03:10:26.373]  </sequence>
[03:10:26.373]  
[03:10:26.630]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:26.630]  
[03:10:26.632]  <debugvars>
[03:10:26.632]    // Pre-defined
[03:10:26.632]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:26.632]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:26.632]    __dp=0x00000000
[03:10:26.632]    __ap=0x00000000
[03:10:26.632]    __traceout=0x00000000      (Trace Disabled)
[03:10:26.632]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:26.632]    __FlashAddr=0x00000000
[03:10:26.632]    __FlashLen=0x00000000
[03:10:26.632]    __FlashArg=0x00000000
[03:10:26.632]    __FlashOp=0x00000000
[03:10:26.632]    __Result=0x00000000
[03:10:26.632]  </debugvars>
[03:10:26.632]  
[03:10:26.632]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:26.634]    <block atomic="false" info="">
[03:10:26.634]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:26.634]        // -> [isSWJ <= 0x00000001]
[03:10:26.634]      __var hasDormant = __protocol & 0x00020000;
[03:10:26.634]        // -> [hasDormant <= 0x00000000]
[03:10:26.634]      __var protType   = __protocol & 0x0000FFFF;
[03:10:26.634]        // -> [protType <= 0x00000002]
[03:10:26.634]    </block>
[03:10:26.634]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:26.634]      // if-block "protType == 1"
[03:10:26.634]        // =>  FALSE
[03:10:26.634]      // skip if-block "protType == 1"
[03:10:26.634]    </control>
[03:10:26.634]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:26.634]      // if-block "protType == 2"
[03:10:26.634]        // =>  TRUE
[03:10:26.634]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:26.634]        // if-block "isSWJ"
[03:10:26.634]          // =>  TRUE
[03:10:26.634]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:26.634]          // if-block "hasDormant"
[03:10:26.634]            // =>  FALSE
[03:10:26.634]          // skip if-block "hasDormant"
[03:10:26.634]        </control>
[03:10:26.634]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:26.634]          // if-block "!hasDormant"
[03:10:26.634]            // =>  TRUE
[03:10:26.634]          <block atomic="false" info="">
[03:10:26.634]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:26.638]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.638]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:26.638]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:26.638]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:26.638]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.638]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:26.642]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:26.642]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:26.642]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:26.642]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:26.646]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:26.646]          </block>
[03:10:26.646]          // end if-block "!hasDormant"
[03:10:26.646]        </control>
[03:10:26.646]        // end if-block "isSWJ"
[03:10:26.646]      </control>
[03:10:26.646]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:26.646]        // if-block "!isSWJ"
[03:10:26.646]          // =>  FALSE
[03:10:26.646]        // skip if-block "!isSWJ"
[03:10:26.646]      </control>
[03:10:26.650]      <block atomic="false" info="">
[03:10:26.650]        ReadDP(0x0);
[03:10:26.650]  
[03:10:26.650]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:26.650]  
[03:10:26.650]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:26.650]      </block>
[03:10:26.650]      // end if-block "protType == 2"
[03:10:26.650]    </control>
[03:10:26.654]  </sequence>
[03:10:26.654]  
[03:10:26.906]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:26.906]  
[03:10:26.908]  <debugvars>
[03:10:26.908]    // Pre-defined
[03:10:26.908]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:26.908]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:26.908]    __dp=0x00000000
[03:10:26.908]    __ap=0x00000000
[03:10:26.908]    __traceout=0x00000000      (Trace Disabled)
[03:10:26.908]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:26.908]    __FlashAddr=0x00000000
[03:10:26.908]    __FlashLen=0x00000000
[03:10:26.908]    __FlashArg=0x00000000
[03:10:26.908]    __FlashOp=0x00000000
[03:10:26.908]    __Result=0x00000000
[03:10:26.908]  </debugvars>
[03:10:26.908]  
[03:10:26.908]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:26.908]    <block atomic="false" info="">
[03:10:26.908]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:26.908]        // -> [isSWJ <= 0x00000001]
[03:10:26.908]      __var hasDormant = __protocol & 0x00020000;
[03:10:26.908]        // -> [hasDormant <= 0x00000000]
[03:10:26.908]      __var protType   = __protocol & 0x0000FFFF;
[03:10:26.908]        // -> [protType <= 0x00000002]
[03:10:26.908]    </block>
[03:10:26.908]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:26.908]      // if-block "protType == 1"
[03:10:26.908]        // =>  FALSE
[03:10:26.911]      // skip if-block "protType == 1"
[03:10:26.911]    </control>
[03:10:26.911]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:26.911]      // if-block "protType == 2"
[03:10:26.911]        // =>  TRUE
[03:10:26.911]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:26.911]        // if-block "isSWJ"
[03:10:26.911]          // =>  TRUE
[03:10:26.911]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:26.911]          // if-block "hasDormant"
[03:10:26.911]            // =>  FALSE
[03:10:26.911]          // skip if-block "hasDormant"
[03:10:26.911]        </control>
[03:10:26.911]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:26.911]          // if-block "!hasDormant"
[03:10:26.911]            // =>  TRUE
[03:10:26.911]          <block atomic="false" info="">
[03:10:26.911]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:27.926]  
[03:10:27.926]  !!! E320 : DAP access error
[03:10:27.926]  
[03:10:27.934]          </block>
[03:10:27.934]          // end if-block "!hasDormant"
[03:10:27.934]        </control>
[03:10:27.934]        // end if-block "isSWJ"
[03:10:27.934]      </control>
[03:10:27.934]      // end if-block "protType == 2"
[03:10:27.934]    </control>
[03:10:27.934]  </sequence>
[03:10:27.934]  
[03:10:28.185]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:28.185]  
[03:10:28.186]  <debugvars>
[03:10:28.186]    // Pre-defined
[03:10:28.186]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:28.186]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:28.186]    __dp=0x00000000
[03:10:28.186]    __ap=0x00000000
[03:10:28.186]    __traceout=0x00000000      (Trace Disabled)
[03:10:28.186]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:28.186]    __FlashAddr=0x00000000
[03:10:28.186]    __FlashLen=0x00000000
[03:10:28.186]    __FlashArg=0x00000000
[03:10:28.186]    __FlashOp=0x00000000
[03:10:28.186]    __Result=0x00000000
[03:10:28.186]  </debugvars>
[03:10:28.186]  
[03:10:28.186]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:28.186]    <block atomic="false" info="">
[03:10:28.186]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:28.186]        // -> [isSWJ <= 0x00000001]
[03:10:28.186]      __var hasDormant = __protocol & 0x00020000;
[03:10:28.186]        // -> [hasDormant <= 0x00000000]
[03:10:28.186]      __var protType   = __protocol & 0x0000FFFF;
[03:10:28.186]        // -> [protType <= 0x00000002]
[03:10:28.186]    </block>
[03:10:28.186]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:28.186]      // if-block "protType == 1"
[03:10:28.186]        // =>  FALSE
[03:10:28.186]      // skip if-block "protType == 1"
[03:10:28.186]    </control>
[03:10:28.186]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:28.186]      // if-block "protType == 2"
[03:10:28.189]        // =>  TRUE
[03:10:28.189]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:28.189]        // if-block "isSWJ"
[03:10:28.189]          // =>  TRUE
[03:10:28.189]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:28.189]          // if-block "hasDormant"
[03:10:28.189]            // =>  FALSE
[03:10:28.189]          // skip if-block "hasDormant"
[03:10:28.189]        </control>
[03:10:28.189]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:28.189]          // if-block "!hasDormant"
[03:10:28.189]            // =>  TRUE
[03:10:28.189]          <block atomic="false" info="">
[03:10:28.189]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:29.200]  
[03:10:29.200]  !!! E320 : DAP access error
[03:10:29.200]  
[03:10:29.210]          </block>
[03:10:29.210]          // end if-block "!hasDormant"
[03:10:29.210]        </control>
[03:10:29.210]        // end if-block "isSWJ"
[03:10:29.210]      </control>
[03:10:29.210]      // end if-block "protType == 2"
[03:10:29.210]    </control>
[03:10:29.210]  </sequence>
[03:10:29.210]  
[03:10:29.465]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:29.465]  
[03:10:29.465]  <debugvars>
[03:10:29.465]    // Pre-defined
[03:10:29.465]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:29.465]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:29.465]    __dp=0x00000000
[03:10:29.465]    __ap=0x00000000
[03:10:29.465]    __traceout=0x00000000      (Trace Disabled)
[03:10:29.465]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:29.465]    __FlashAddr=0x00000000
[03:10:29.465]    __FlashLen=0x00000000
[03:10:29.465]    __FlashArg=0x00000000
[03:10:29.465]    __FlashOp=0x00000000
[03:10:29.465]    __Result=0x00000000
[03:10:29.465]  </debugvars>
[03:10:29.465]  
[03:10:29.465]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:29.465]    <block atomic="false" info="">
[03:10:29.465]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:29.465]        // -> [isSWJ <= 0x00000001]
[03:10:29.465]      __var hasDormant = __protocol & 0x00020000;
[03:10:29.465]        // -> [hasDormant <= 0x00000000]
[03:10:29.465]      __var protType   = __protocol & 0x0000FFFF;
[03:10:29.465]        // -> [protType <= 0x00000002]
[03:10:29.465]    </block>
[03:10:29.465]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:29.465]      // if-block "protType == 1"
[03:10:29.465]        // =>  FALSE
[03:10:29.465]      // skip if-block "protType == 1"
[03:10:29.465]    </control>
[03:10:29.465]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:29.465]      // if-block "protType == 2"
[03:10:29.465]        // =>  TRUE
[03:10:29.469]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:29.469]        // if-block "isSWJ"
[03:10:29.470]          // =>  TRUE
[03:10:29.470]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:29.470]          // if-block "hasDormant"
[03:10:29.470]            // =>  FALSE
[03:10:29.470]          // skip if-block "hasDormant"
[03:10:29.470]        </control>
[03:10:29.470]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:29.470]          // if-block "!hasDormant"
[03:10:29.470]            // =>  TRUE
[03:10:29.470]          <block atomic="false" info="">
[03:10:29.470]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:30.476]  
[03:10:30.476]  !!! E320 : DAP access error
[03:10:30.476]  
[03:10:30.485]          </block>
[03:10:30.485]          // end if-block "!hasDormant"
[03:10:30.485]        </control>
[03:10:30.485]        // end if-block "isSWJ"
[03:10:30.485]      </control>
[03:10:30.485]      // end if-block "protType == 2"
[03:10:30.485]    </control>
[03:10:30.485]  </sequence>
[03:10:30.485]  
[03:10:30.742]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:30.742]  
[03:10:30.742]  <debugvars>
[03:10:30.742]    // Pre-defined
[03:10:30.742]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:30.742]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:30.742]    __dp=0x00000000
[03:10:30.742]    __ap=0x00000000
[03:10:30.742]    __traceout=0x00000000      (Trace Disabled)
[03:10:30.742]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:30.742]    __FlashAddr=0x00000000
[03:10:30.742]    __FlashLen=0x00000000
[03:10:30.742]    __FlashArg=0x00000000
[03:10:30.742]    __FlashOp=0x00000000
[03:10:30.742]    __Result=0x00000000
[03:10:30.742]  </debugvars>
[03:10:30.742]  
[03:10:30.742]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:30.742]    <block atomic="false" info="">
[03:10:30.742]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:30.742]        // -> [isSWJ <= 0x00000001]
[03:10:30.742]      __var hasDormant = __protocol & 0x00020000;
[03:10:30.742]        // -> [hasDormant <= 0x00000000]
[03:10:30.742]      __var protType   = __protocol & 0x0000FFFF;
[03:10:30.746]        // -> [protType <= 0x00000002]
[03:10:30.746]    </block>
[03:10:30.746]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:30.746]      // if-block "protType == 1"
[03:10:30.746]        // =>  FALSE
[03:10:30.746]      // skip if-block "protType == 1"
[03:10:30.746]    </control>
[03:10:30.746]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:30.746]      // if-block "protType == 2"
[03:10:30.746]        // =>  TRUE
[03:10:30.746]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:30.746]        // if-block "isSWJ"
[03:10:30.746]          // =>  TRUE
[03:10:30.746]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:30.746]          // if-block "hasDormant"
[03:10:30.746]            // =>  FALSE
[03:10:30.746]          // skip if-block "hasDormant"
[03:10:30.746]        </control>
[03:10:30.746]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:30.746]          // if-block "!hasDormant"
[03:10:30.746]            // =>  TRUE
[03:10:30.746]          <block atomic="false" info="">
[03:10:30.746]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:31.757]  
[03:10:31.757]  !!! E320 : DAP access error
[03:10:31.757]  
[03:10:31.767]          </block>
[03:10:31.767]          // end if-block "!hasDormant"
[03:10:31.767]        </control>
[03:10:31.767]        // end if-block "isSWJ"
[03:10:31.767]      </control>
[03:10:31.767]      // end if-block "protType == 2"
[03:10:31.767]    </control>
[03:10:31.767]  </sequence>
[03:10:31.767]  
[03:10:32.022]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:32.022]  
[03:10:32.030]  <debugvars>
[03:10:32.030]    // Pre-defined
[03:10:32.030]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:32.030]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:32.030]    __dp=0x00000000
[03:10:32.030]    __ap=0x00000000
[03:10:32.030]    __traceout=0x00000000      (Trace Disabled)
[03:10:32.030]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:32.030]    __FlashAddr=0x00000000
[03:10:32.030]    __FlashLen=0x00000000
[03:10:32.030]    __FlashArg=0x00000000
[03:10:32.030]    __FlashOp=0x00000000
[03:10:32.030]    __Result=0x00000000
[03:10:32.030]  </debugvars>
[03:10:32.030]  
[03:10:32.030]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:32.030]    <block atomic="false" info="">
[03:10:32.030]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:32.030]        // -> [isSWJ <= 0x00000001]
[03:10:32.030]      __var hasDormant = __protocol & 0x00020000;
[03:10:32.030]        // -> [hasDormant <= 0x00000000]
[03:10:32.030]      __var protType   = __protocol & 0x0000FFFF;
[03:10:32.030]        // -> [protType <= 0x00000002]
[03:10:32.030]    </block>
[03:10:32.030]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:32.030]      // if-block "protType == 1"
[03:10:32.030]        // =>  FALSE
[03:10:32.030]      // skip if-block "protType == 1"
[03:10:32.030]    </control>
[03:10:32.030]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:32.030]      // if-block "protType == 2"
[03:10:32.030]        // =>  TRUE
[03:10:32.030]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:32.034]        // if-block "isSWJ"
[03:10:32.034]          // =>  TRUE
[03:10:32.034]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:32.034]          // if-block "hasDormant"
[03:10:32.034]            // =>  FALSE
[03:10:32.034]          // skip if-block "hasDormant"
[03:10:32.034]        </control>
[03:10:32.034]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:32.034]          // if-block "!hasDormant"
[03:10:32.034]            // =>  TRUE
[03:10:32.034]          <block atomic="false" info="">
[03:10:32.034]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:33.046]  
[03:10:33.046]  !!! E320 : DAP access error
[03:10:33.046]  
[03:10:33.054]          </block>
[03:10:33.054]          // end if-block "!hasDormant"
[03:10:33.054]        </control>
[03:10:33.054]        // end if-block "isSWJ"
[03:10:33.054]      </control>
[03:10:33.054]      // end if-block "protType == 2"
[03:10:33.054]    </control>
[03:10:33.054]  </sequence>
[03:10:33.054]  
[03:10:33.311]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:33.311]  
[03:10:33.319]  <debugvars>
[03:10:33.319]    // Pre-defined
[03:10:33.319]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:33.319]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:33.319]    __dp=0x00000000
[03:10:33.319]    __ap=0x00000000
[03:10:33.319]    __traceout=0x00000000      (Trace Disabled)
[03:10:33.319]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:33.319]    __FlashAddr=0x00000000
[03:10:33.319]    __FlashLen=0x00000000
[03:10:33.319]    __FlashArg=0x00000000
[03:10:33.319]    __FlashOp=0x00000000
[03:10:33.319]    __Result=0x00000000
[03:10:33.319]  </debugvars>
[03:10:33.319]  
[03:10:33.319]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:33.319]    <block atomic="false" info="">
[03:10:33.319]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:33.319]        // -> [isSWJ <= 0x00000001]
[03:10:33.319]      __var hasDormant = __protocol & 0x00020000;
[03:10:33.319]        // -> [hasDormant <= 0x00000000]
[03:10:33.319]      __var protType   = __protocol & 0x0000FFFF;
[03:10:33.319]        // -> [protType <= 0x00000002]
[03:10:33.319]    </block>
[03:10:33.319]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:33.319]      // if-block "protType == 1"
[03:10:33.319]        // =>  FALSE
[03:10:33.319]      // skip if-block "protType == 1"
[03:10:33.319]    </control>
[03:10:33.319]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:33.319]      // if-block "protType == 2"
[03:10:33.319]        // =>  TRUE
[03:10:33.319]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:33.319]        // if-block "isSWJ"
[03:10:33.323]          // =>  TRUE
[03:10:33.323]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:33.323]          // if-block "hasDormant"
[03:10:33.323]            // =>  FALSE
[03:10:33.323]          // skip if-block "hasDormant"
[03:10:33.323]        </control>
[03:10:33.323]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:33.323]          // if-block "!hasDormant"
[03:10:33.323]            // =>  TRUE
[03:10:33.323]          <block atomic="false" info="">
[03:10:33.323]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:34.326]  
[03:10:34.326]  !!! E320 : DAP access error
[03:10:34.326]  
[03:10:34.326]          </block>
[03:10:34.326]          // end if-block "!hasDormant"
[03:10:34.326]        </control>
[03:10:34.326]        // end if-block "isSWJ"
[03:10:34.326]      </control>
[03:10:34.326]      // end if-block "protType == 2"
[03:10:34.326]    </control>
[03:10:34.328]  </sequence>
[03:10:34.328]  
[03:10:34.579]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:34.579]  
[03:10:34.587]  <debugvars>
[03:10:34.587]    // Pre-defined
[03:10:34.587]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:34.587]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:34.587]    __dp=0x00000000
[03:10:34.587]    __ap=0x00000000
[03:10:34.587]    __traceout=0x00000000      (Trace Disabled)
[03:10:34.587]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:34.587]    __FlashAddr=0x00000000
[03:10:34.587]    __FlashLen=0x00000000
[03:10:34.587]    __FlashArg=0x00000000
[03:10:34.587]    __FlashOp=0x00000000
[03:10:34.587]    __Result=0x00000000
[03:10:34.587]  </debugvars>
[03:10:34.587]  
[03:10:34.587]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:34.587]    <block atomic="false" info="">
[03:10:34.587]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:34.587]        // -> [isSWJ <= 0x00000001]
[03:10:34.587]      __var hasDormant = __protocol & 0x00020000;
[03:10:34.587]        // -> [hasDormant <= 0x00000000]
[03:10:34.587]      __var protType   = __protocol & 0x0000FFFF;
[03:10:34.587]        // -> [protType <= 0x00000002]
[03:10:34.587]    </block>
[03:10:34.587]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:34.587]      // if-block "protType == 1"
[03:10:34.587]        // =>  FALSE
[03:10:34.587]      // skip if-block "protType == 1"
[03:10:34.587]    </control>
[03:10:34.587]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:34.587]      // if-block "protType == 2"
[03:10:34.587]        // =>  TRUE
[03:10:34.587]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:34.587]        // if-block "isSWJ"
[03:10:34.587]          // =>  TRUE
[03:10:34.587]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:34.587]          // if-block "hasDormant"
[03:10:34.587]            // =>  FALSE
[03:10:34.587]          // skip if-block "hasDormant"
[03:10:34.591]        </control>
[03:10:34.591]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:34.591]          // if-block "!hasDormant"
[03:10:34.591]            // =>  TRUE
[03:10:34.591]          <block atomic="false" info="">
[03:10:34.591]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:35.595]  
[03:10:35.595]  !!! E320 : DAP access error
[03:10:35.595]  
[03:10:35.595]          </block>
[03:10:35.595]          // end if-block "!hasDormant"
[03:10:35.595]        </control>
[03:10:35.595]        // end if-block "isSWJ"
[03:10:35.595]      </control>
[03:10:35.595]      // end if-block "protType == 2"
[03:10:35.595]    </control>
[03:10:35.595]  </sequence>
[03:10:35.595]  
[03:10:35.849]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:35.849]  
[03:10:35.849]  <debugvars>
[03:10:35.849]    // Pre-defined
[03:10:35.849]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:35.849]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:35.849]    __dp=0x00000000
[03:10:35.849]    __ap=0x00000000
[03:10:35.849]    __traceout=0x00000000      (Trace Disabled)
[03:10:35.849]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:35.849]    __FlashAddr=0x00000000
[03:10:35.849]    __FlashLen=0x00000000
[03:10:35.849]    __FlashArg=0x00000000
[03:10:35.849]    __FlashOp=0x00000000
[03:10:35.849]    __Result=0x00000000
[03:10:35.849]  </debugvars>
[03:10:35.849]  
[03:10:35.849]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:35.849]    <block atomic="false" info="">
[03:10:35.849]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:35.849]        // -> [isSWJ <= 0x00000001]
[03:10:35.849]      __var hasDormant = __protocol & 0x00020000;
[03:10:35.849]        // -> [hasDormant <= 0x00000000]
[03:10:35.849]      __var protType   = __protocol & 0x0000FFFF;
[03:10:35.849]        // -> [protType <= 0x00000002]
[03:10:35.849]    </block>
[03:10:35.849]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:35.849]      // if-block "protType == 1"
[03:10:35.849]        // =>  FALSE
[03:10:35.849]      // skip if-block "protType == 1"
[03:10:35.849]    </control>
[03:10:35.853]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:35.853]      // if-block "protType == 2"
[03:10:35.853]        // =>  TRUE
[03:10:35.853]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:35.853]        // if-block "isSWJ"
[03:10:35.853]          // =>  TRUE
[03:10:35.853]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:35.853]          // if-block "hasDormant"
[03:10:35.853]            // =>  FALSE
[03:10:35.853]          // skip if-block "hasDormant"
[03:10:35.853]        </control>
[03:10:35.853]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:35.853]          // if-block "!hasDormant"
[03:10:35.853]            // =>  TRUE
[03:10:35.853]          <block atomic="false" info="">
[03:10:35.853]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:36.861]  
[03:10:36.861]  !!! E320 : DAP access error
[03:10:36.861]  
[03:10:36.869]          </block>
[03:10:36.869]          // end if-block "!hasDormant"
[03:10:36.869]        </control>
[03:10:36.869]        // end if-block "isSWJ"
[03:10:36.869]      </control>
[03:10:36.869]      // end if-block "protType == 2"
[03:10:36.869]    </control>
[03:10:36.869]  </sequence>
[03:10:36.869]  
[03:10:37.127]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:37.127]  
[03:10:37.136]  <debugvars>
[03:10:37.136]    // Pre-defined
[03:10:37.136]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:37.136]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:37.136]    __dp=0x00000000
[03:10:37.136]    __ap=0x00000000
[03:10:37.136]    __traceout=0x00000000      (Trace Disabled)
[03:10:37.136]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:37.136]    __FlashAddr=0x00000000
[03:10:37.136]    __FlashLen=0x00000000
[03:10:37.136]    __FlashArg=0x00000000
[03:10:37.136]    __FlashOp=0x00000000
[03:10:37.136]    __Result=0x00000000
[03:10:37.136]  </debugvars>
[03:10:37.136]  
[03:10:37.136]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:37.136]    <block atomic="false" info="">
[03:10:37.138]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:37.138]        // -> [isSWJ <= 0x00000001]
[03:10:37.138]      __var hasDormant = __protocol & 0x00020000;
[03:10:37.138]        // -> [hasDormant <= 0x00000000]
[03:10:37.139]      __var protType   = __protocol & 0x0000FFFF;
[03:10:37.139]        // -> [protType <= 0x00000002]
[03:10:37.139]    </block>
[03:10:37.139]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:37.139]      // if-block "protType == 1"
[03:10:37.139]        // =>  FALSE
[03:10:37.139]      // skip if-block "protType == 1"
[03:10:37.139]    </control>
[03:10:37.139]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:37.140]      // if-block "protType == 2"
[03:10:37.140]        // =>  TRUE
[03:10:37.140]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:37.140]        // if-block "isSWJ"
[03:10:37.140]          // =>  TRUE
[03:10:37.140]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:37.140]          // if-block "hasDormant"
[03:10:37.140]            // =>  FALSE
[03:10:37.140]          // skip if-block "hasDormant"
[03:10:37.140]        </control>
[03:10:37.140]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:37.140]          // if-block "!hasDormant"
[03:10:37.141]            // =>  TRUE
[03:10:37.141]          <block atomic="false" info="">
[03:10:37.141]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:38.153]  
[03:10:38.153]  !!! E320 : DAP access error
[03:10:38.153]  
[03:10:38.161]          </block>
[03:10:38.161]          // end if-block "!hasDormant"
[03:10:38.161]        </control>
[03:10:38.161]        // end if-block "isSWJ"
[03:10:38.161]      </control>
[03:10:38.161]      // end if-block "protType == 2"
[03:10:38.161]    </control>
[03:10:38.161]  </sequence>
[03:10:38.161]  
[03:10:38.418]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:38.418]  
[03:10:38.427]  <debugvars>
[03:10:38.427]    // Pre-defined
[03:10:38.427]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:38.427]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:38.427]    __dp=0x00000000
[03:10:38.427]    __ap=0x00000000
[03:10:38.427]    __traceout=0x00000000      (Trace Disabled)
[03:10:38.427]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:38.427]    __FlashAddr=0x00000000
[03:10:38.427]    __FlashLen=0x00000000
[03:10:38.427]    __FlashArg=0x00000000
[03:10:38.427]    __FlashOp=0x00000000
[03:10:38.427]    __Result=0x00000000
[03:10:38.427]  </debugvars>
[03:10:38.427]  
[03:10:38.427]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:38.427]    <block atomic="false" info="">
[03:10:38.427]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:38.427]        // -> [isSWJ <= 0x00000001]
[03:10:38.427]      __var hasDormant = __protocol & 0x00020000;
[03:10:38.427]        // -> [hasDormant <= 0x00000000]
[03:10:38.427]      __var protType   = __protocol & 0x0000FFFF;
[03:10:38.427]        // -> [protType <= 0x00000002]
[03:10:38.427]    </block>
[03:10:38.427]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:38.427]      // if-block "protType == 1"
[03:10:38.427]        // =>  FALSE
[03:10:38.427]      // skip if-block "protType == 1"
[03:10:38.427]    </control>
[03:10:38.430]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:38.430]      // if-block "protType == 2"
[03:10:38.431]        // =>  TRUE
[03:10:38.431]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:38.431]        // if-block "isSWJ"
[03:10:38.431]          // =>  TRUE
[03:10:38.431]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:38.431]          // if-block "hasDormant"
[03:10:38.431]            // =>  FALSE
[03:10:38.431]          // skip if-block "hasDormant"
[03:10:38.431]        </control>
[03:10:38.431]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:38.431]          // if-block "!hasDormant"
[03:10:38.431]            // =>  TRUE
[03:10:38.431]          <block atomic="false" info="">
[03:10:38.431]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:39.431]  
[03:10:39.431]  !!! E320 : DAP access error
[03:10:39.431]  
[03:10:39.441]          </block>
[03:10:39.441]          // end if-block "!hasDormant"
[03:10:39.441]        </control>
[03:10:39.441]        // end if-block "isSWJ"
[03:10:39.441]      </control>
[03:10:39.441]      // end if-block "protType == 2"
[03:10:39.441]    </control>
[03:10:39.441]  </sequence>
[03:10:39.441]  
[03:10:39.691]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:39.691]  
[03:10:39.700]  <debugvars>
[03:10:39.700]    // Pre-defined
[03:10:39.700]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:39.700]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:39.700]    __dp=0x00000000
[03:10:39.700]    __ap=0x00000000
[03:10:39.700]    __traceout=0x00000000      (Trace Disabled)
[03:10:39.700]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:39.700]    __FlashAddr=0x00000000
[03:10:39.700]    __FlashLen=0x00000000
[03:10:39.700]    __FlashArg=0x00000000
[03:10:39.700]    __FlashOp=0x00000000
[03:10:39.700]    __Result=0x00000000
[03:10:39.700]  </debugvars>
[03:10:39.700]  
[03:10:39.700]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:39.700]    <block atomic="false" info="">
[03:10:39.700]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:39.700]        // -> [isSWJ <= 0x00000001]
[03:10:39.700]      __var hasDormant = __protocol & 0x00020000;
[03:10:39.700]        // -> [hasDormant <= 0x00000000]
[03:10:39.700]      __var protType   = __protocol & 0x0000FFFF;
[03:10:39.700]        // -> [protType <= 0x00000002]
[03:10:39.700]    </block>
[03:10:39.700]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:39.700]      // if-block "protType == 1"
[03:10:39.703]        // =>  FALSE
[03:10:39.703]      // skip if-block "protType == 1"
[03:10:39.703]    </control>
[03:10:39.703]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:39.703]      // if-block "protType == 2"
[03:10:39.703]        // =>  TRUE
[03:10:39.703]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:39.703]        // if-block "isSWJ"
[03:10:39.703]          // =>  TRUE
[03:10:39.703]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:39.703]          // if-block "hasDormant"
[03:10:39.703]            // =>  FALSE
[03:10:39.703]          // skip if-block "hasDormant"
[03:10:39.703]        </control>
[03:10:39.703]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:39.703]          // if-block "!hasDormant"
[03:10:39.703]            // =>  TRUE
[03:10:39.703]          <block atomic="false" info="">
[03:10:39.703]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:40.705]  
[03:10:40.705]  !!! E320 : DAP access error
[03:10:40.705]  
[03:10:40.714]          </block>
[03:10:40.714]          // end if-block "!hasDormant"
[03:10:40.714]        </control>
[03:10:40.714]        // end if-block "isSWJ"
[03:10:40.714]      </control>
[03:10:40.714]      // end if-block "protType == 2"
[03:10:40.714]    </control>
[03:10:40.714]  </sequence>
[03:10:40.714]  
[03:10:40.974]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:40.974]  
[03:10:40.982]  <debugvars>
[03:10:40.982]    // Pre-defined
[03:10:40.982]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:40.982]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:40.982]    __dp=0x00000000
[03:10:40.982]    __ap=0x00000000
[03:10:40.982]    __traceout=0x00000000      (Trace Disabled)
[03:10:40.982]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:40.982]    __FlashAddr=0x00000000
[03:10:40.982]    __FlashLen=0x00000000
[03:10:40.982]    __FlashArg=0x00000000
[03:10:40.982]    __FlashOp=0x00000000
[03:10:40.982]    __Result=0x00000000
[03:10:40.982]  </debugvars>
[03:10:40.982]  
[03:10:40.982]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:40.982]    <block atomic="false" info="">
[03:10:40.982]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:40.982]        // -> [isSWJ <= 0x00000001]
[03:10:40.982]      __var hasDormant = __protocol & 0x00020000;
[03:10:40.982]        // -> [hasDormant <= 0x00000000]
[03:10:40.982]      __var protType   = __protocol & 0x0000FFFF;
[03:10:40.982]        // -> [protType <= 0x00000002]
[03:10:40.982]    </block>
[03:10:40.982]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:40.982]      // if-block "protType == 1"
[03:10:40.982]        // =>  FALSE
[03:10:40.982]      // skip if-block "protType == 1"
[03:10:40.982]    </control>
[03:10:40.982]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:40.982]      // if-block "protType == 2"
[03:10:40.982]        // =>  TRUE
[03:10:40.986]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:40.986]        // if-block "isSWJ"
[03:10:40.986]          // =>  TRUE
[03:10:40.986]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:40.986]          // if-block "hasDormant"
[03:10:40.986]            // =>  FALSE
[03:10:40.986]          // skip if-block "hasDormant"
[03:10:40.986]        </control>
[03:10:40.986]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:40.987]          // if-block "!hasDormant"
[03:10:40.987]            // =>  TRUE
[03:10:40.987]          <block atomic="false" info="">
[03:10:40.987]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:41.992]  
[03:10:41.992]  !!! E320 : DAP access error
[03:10:41.992]  
[03:10:42.001]          </block>
[03:10:42.001]          // end if-block "!hasDormant"
[03:10:42.001]        </control>
[03:10:42.001]        // end if-block "isSWJ"
[03:10:42.001]      </control>
[03:10:42.001]      // end if-block "protType == 2"
[03:10:42.001]    </control>
[03:10:42.001]  </sequence>
[03:10:42.001]  
[03:10:42.259]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:42.259]  
[03:10:42.259]  <debugvars>
[03:10:42.259]    // Pre-defined
[03:10:42.259]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:42.259]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:42.259]    __dp=0x00000000
[03:10:42.259]    __ap=0x00000000
[03:10:42.259]    __traceout=0x00000000      (Trace Disabled)
[03:10:42.259]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:42.259]    __FlashAddr=0x00000000
[03:10:42.259]    __FlashLen=0x00000000
[03:10:42.259]    __FlashArg=0x00000000
[03:10:42.259]    __FlashOp=0x00000000
[03:10:42.259]    __Result=0x00000000
[03:10:42.259]  </debugvars>
[03:10:42.259]  
[03:10:42.259]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:42.259]    <block atomic="false" info="">
[03:10:42.259]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:42.259]        // -> [isSWJ <= 0x00000001]
[03:10:42.263]      __var hasDormant = __protocol & 0x00020000;
[03:10:42.263]        // -> [hasDormant <= 0x00000000]
[03:10:42.263]      __var protType   = __protocol & 0x0000FFFF;
[03:10:42.263]        // -> [protType <= 0x00000002]
[03:10:42.263]    </block>
[03:10:42.263]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:42.263]      // if-block "protType == 1"
[03:10:42.263]        // =>  FALSE
[03:10:42.263]      // skip if-block "protType == 1"
[03:10:42.263]    </control>
[03:10:42.263]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:42.263]      // if-block "protType == 2"
[03:10:42.263]        // =>  TRUE
[03:10:42.263]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:42.263]        // if-block "isSWJ"
[03:10:42.263]          // =>  TRUE
[03:10:42.263]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:42.263]          // if-block "hasDormant"
[03:10:42.263]            // =>  FALSE
[03:10:42.263]          // skip if-block "hasDormant"
[03:10:42.263]        </control>
[03:10:42.263]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:42.263]          // if-block "!hasDormant"
[03:10:42.263]            // =>  TRUE
[03:10:42.263]          <block atomic="false" info="">
[03:10:42.263]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:43.269]  
[03:10:43.269]  !!! E320 : DAP access error
[03:10:43.269]  
[03:10:43.277]          </block>
[03:10:43.277]          // end if-block "!hasDormant"
[03:10:43.277]        </control>
[03:10:43.277]        // end if-block "isSWJ"
[03:10:43.277]      </control>
[03:10:43.277]      // end if-block "protType == 2"
[03:10:43.277]    </control>
[03:10:43.277]  </sequence>
[03:10:43.277]  
[03:10:43.539]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:43.539]  
[03:10:43.549]  <debugvars>
[03:10:43.549]    // Pre-defined
[03:10:43.549]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:43.549]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:43.549]    __dp=0x00000000
[03:10:43.549]    __ap=0x00000000
[03:10:43.549]    __traceout=0x00000000      (Trace Disabled)
[03:10:43.549]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:43.549]    __FlashAddr=0x00000000
[03:10:43.549]    __FlashLen=0x00000000
[03:10:43.549]    __FlashArg=0x00000000
[03:10:43.549]    __FlashOp=0x00000000
[03:10:43.549]    __Result=0x00000000
[03:10:43.549]  </debugvars>
[03:10:43.549]  
[03:10:43.549]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:43.549]    <block atomic="false" info="">
[03:10:43.549]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:43.549]        // -> [isSWJ <= 0x00000001]
[03:10:43.551]      __var hasDormant = __protocol & 0x00020000;
[03:10:43.551]        // -> [hasDormant <= 0x00000000]
[03:10:43.551]      __var protType   = __protocol & 0x0000FFFF;
[03:10:43.551]        // -> [protType <= 0x00000002]
[03:10:43.551]    </block>
[03:10:43.551]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:43.551]      // if-block "protType == 1"
[03:10:43.552]        // =>  FALSE
[03:10:43.552]      // skip if-block "protType == 1"
[03:10:43.552]    </control>
[03:10:43.552]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:43.552]      // if-block "protType == 2"
[03:10:43.552]        // =>  TRUE
[03:10:43.552]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:43.552]        // if-block "isSWJ"
[03:10:43.552]          // =>  TRUE
[03:10:43.552]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:43.552]          // if-block "hasDormant"
[03:10:43.552]            // =>  FALSE
[03:10:43.552]          // skip if-block "hasDormant"
[03:10:43.552]        </control>
[03:10:43.552]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:43.554]          // if-block "!hasDormant"
[03:10:43.554]            // =>  TRUE
[03:10:43.554]          <block atomic="false" info="">
[03:10:43.554]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:44.563]  
[03:10:44.563]  !!! E320 : DAP access error
[03:10:44.563]  
[03:10:44.563]          </block>
[03:10:44.563]          // end if-block "!hasDormant"
[03:10:44.563]        </control>
[03:10:44.563]        // end if-block "isSWJ"
[03:10:44.563]      </control>
[03:10:44.563]      // end if-block "protType == 2"
[03:10:44.563]    </control>
[03:10:44.563]  </sequence>
[03:10:44.563]  
[03:10:44.816]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:44.816]  
[03:10:44.826]  <debugvars>
[03:10:44.826]    // Pre-defined
[03:10:44.826]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:44.826]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:44.826]    __dp=0x00000000
[03:10:44.826]    __ap=0x00000000
[03:10:44.826]    __traceout=0x00000000      (Trace Disabled)
[03:10:44.826]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:44.826]    __FlashAddr=0x00000000
[03:10:44.826]    __FlashLen=0x00000000
[03:10:44.826]    __FlashArg=0x00000000
[03:10:44.826]    __FlashOp=0x00000000
[03:10:44.826]    __Result=0x00000000
[03:10:44.826]  </debugvars>
[03:10:44.826]  
[03:10:44.826]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:44.826]    <block atomic="false" info="">
[03:10:44.826]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:44.826]        // -> [isSWJ <= 0x00000001]
[03:10:44.826]      __var hasDormant = __protocol & 0x00020000;
[03:10:44.828]        // -> [hasDormant <= 0x00000000]
[03:10:44.828]      __var protType   = __protocol & 0x0000FFFF;
[03:10:44.828]        // -> [protType <= 0x00000002]
[03:10:44.828]    </block>
[03:10:44.828]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:44.828]      // if-block "protType == 1"
[03:10:44.828]        // =>  FALSE
[03:10:44.828]      // skip if-block "protType == 1"
[03:10:44.828]    </control>
[03:10:44.828]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:44.828]      // if-block "protType == 2"
[03:10:44.828]        // =>  TRUE
[03:10:44.828]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:44.828]        // if-block "isSWJ"
[03:10:44.830]          // =>  TRUE
[03:10:44.830]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:44.830]          // if-block "hasDormant"
[03:10:44.830]            // =>  FALSE
[03:10:44.830]          // skip if-block "hasDormant"
[03:10:44.830]        </control>
[03:10:44.830]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:44.830]          // if-block "!hasDormant"
[03:10:44.830]            // =>  TRUE
[03:10:44.831]          <block atomic="false" info="">
[03:10:44.831]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:45.832]  
[03:10:45.832]  !!! E320 : DAP access error
[03:10:45.832]  
[03:10:45.832]          </block>
[03:10:45.832]          // end if-block "!hasDormant"
[03:10:45.832]        </control>
[03:10:45.832]        // end if-block "isSWJ"
[03:10:45.832]      </control>
[03:10:45.832]      // end if-block "protType == 2"
[03:10:45.832]    </control>
[03:10:45.832]  </sequence>
[03:10:45.832]  
[03:10:46.090]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:46.090]  
[03:10:46.099]  <debugvars>
[03:10:46.099]    // Pre-defined
[03:10:46.099]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:46.099]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:46.099]    __dp=0x00000000
[03:10:46.099]    __ap=0x00000000
[03:10:46.099]    __traceout=0x00000000      (Trace Disabled)
[03:10:46.099]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:46.099]    __FlashAddr=0x00000000
[03:10:46.099]    __FlashLen=0x00000000
[03:10:46.099]    __FlashArg=0x00000000
[03:10:46.099]    __FlashOp=0x00000000
[03:10:46.099]    __Result=0x00000000
[03:10:46.099]  </debugvars>
[03:10:46.099]  
[03:10:46.099]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:46.099]    <block atomic="false" info="">
[03:10:46.099]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:46.099]        // -> [isSWJ <= 0x00000001]
[03:10:46.099]      __var hasDormant = __protocol & 0x00020000;
[03:10:46.099]        // -> [hasDormant <= 0x00000000]
[03:10:46.099]      __var protType   = __protocol & 0x0000FFFF;
[03:10:46.099]        // -> [protType <= 0x00000002]
[03:10:46.099]    </block>
[03:10:46.099]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:46.099]      // if-block "protType == 1"
[03:10:46.102]        // =>  FALSE
[03:10:46.102]      // skip if-block "protType == 1"
[03:10:46.102]    </control>
[03:10:46.102]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:46.102]      // if-block "protType == 2"
[03:10:46.102]        // =>  TRUE
[03:10:46.102]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:46.102]        // if-block "isSWJ"
[03:10:46.102]          // =>  TRUE
[03:10:46.102]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:46.102]          // if-block "hasDormant"
[03:10:46.102]            // =>  FALSE
[03:10:46.102]          // skip if-block "hasDormant"
[03:10:46.102]        </control>
[03:10:46.102]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:46.102]          // if-block "!hasDormant"
[03:10:46.102]            // =>  TRUE
[03:10:46.102]          <block atomic="false" info="">
[03:10:46.102]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:47.107]  
[03:10:47.107]  !!! E320 : DAP access error
[03:10:47.107]  
[03:10:47.107]          </block>
[03:10:47.107]          // end if-block "!hasDormant"
[03:10:47.107]        </control>
[03:10:47.107]        // end if-block "isSWJ"
[03:10:47.107]      </control>
[03:10:47.107]      // end if-block "protType == 2"
[03:10:47.107]    </control>
[03:10:47.107]  </sequence>
[03:10:47.107]  
[03:10:47.367]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:47.367]  
[03:10:47.367]  <debugvars>
[03:10:47.367]    // Pre-defined
[03:10:47.367]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:47.367]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:47.367]    __dp=0x00000000
[03:10:47.367]    __ap=0x00000000
[03:10:47.367]    __traceout=0x00000000      (Trace Disabled)
[03:10:47.370]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:47.370]    __FlashAddr=0x00000000
[03:10:47.370]    __FlashLen=0x00000000
[03:10:47.370]    __FlashArg=0x00000000
[03:10:47.370]    __FlashOp=0x00000000
[03:10:47.370]    __Result=0x00000000
[03:10:47.370]  </debugvars>
[03:10:47.370]  
[03:10:47.370]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:47.370]    <block atomic="false" info="">
[03:10:47.370]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:47.370]        // -> [isSWJ <= 0x00000001]
[03:10:47.370]      __var hasDormant = __protocol & 0x00020000;
[03:10:47.370]        // -> [hasDormant <= 0x00000000]
[03:10:47.370]      __var protType   = __protocol & 0x0000FFFF;
[03:10:47.372]        // -> [protType <= 0x00000002]
[03:10:47.372]    </block>
[03:10:47.372]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:47.372]      // if-block "protType == 1"
[03:10:47.372]        // =>  FALSE
[03:10:47.372]      // skip if-block "protType == 1"
[03:10:47.372]    </control>
[03:10:47.372]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:47.372]      // if-block "protType == 2"
[03:10:47.372]        // =>  TRUE
[03:10:47.372]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:47.372]        // if-block "isSWJ"
[03:10:47.372]          // =>  TRUE
[03:10:47.372]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:47.372]          // if-block "hasDormant"
[03:10:47.372]            // =>  FALSE
[03:10:47.372]          // skip if-block "hasDormant"
[03:10:47.372]        </control>
[03:10:47.372]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:47.372]          // if-block "!hasDormant"
[03:10:47.372]            // =>  TRUE
[03:10:47.372]          <block atomic="false" info="">
[03:10:47.372]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:48.373]  
[03:10:48.373]  !!! E320 : DAP access error
[03:10:48.373]  
[03:10:48.383]          </block>
[03:10:48.383]          // end if-block "!hasDormant"
[03:10:48.383]        </control>
[03:10:48.383]        // end if-block "isSWJ"
[03:10:48.383]      </control>
[03:10:48.383]      // end if-block "protType == 2"
[03:10:48.383]    </control>
[03:10:48.383]  </sequence>
[03:10:48.383]  
[03:10:48.638]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:48.638]  
[03:10:48.638]  <debugvars>
[03:10:48.638]    // Pre-defined
[03:10:48.638]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:48.638]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:48.638]    __dp=0x00000000
[03:10:48.638]    __ap=0x00000000
[03:10:48.638]    __traceout=0x00000000      (Trace Disabled)
[03:10:48.638]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:48.638]    __FlashAddr=0x00000000
[03:10:48.638]    __FlashLen=0x00000000
[03:10:48.638]    __FlashArg=0x00000000
[03:10:48.638]    __FlashOp=0x00000000
[03:10:48.638]    __Result=0x00000000
[03:10:48.638]  </debugvars>
[03:10:48.638]  
[03:10:48.638]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:48.638]    <block atomic="false" info="">
[03:10:48.638]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:48.638]        // -> [isSWJ <= 0x00000001]
[03:10:48.638]      __var hasDormant = __protocol & 0x00020000;
[03:10:48.638]        // -> [hasDormant <= 0x00000000]
[03:10:48.638]      __var protType   = __protocol & 0x0000FFFF;
[03:10:48.638]        // -> [protType <= 0x00000002]
[03:10:48.642]    </block>
[03:10:48.642]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:48.642]      // if-block "protType == 1"
[03:10:48.642]        // =>  FALSE
[03:10:48.642]      // skip if-block "protType == 1"
[03:10:48.642]    </control>
[03:10:48.642]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:48.642]      // if-block "protType == 2"
[03:10:48.642]        // =>  TRUE
[03:10:48.642]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:48.642]        // if-block "isSWJ"
[03:10:48.642]          // =>  TRUE
[03:10:48.642]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:48.642]          // if-block "hasDormant"
[03:10:48.642]            // =>  FALSE
[03:10:48.642]          // skip if-block "hasDormant"
[03:10:48.642]        </control>
[03:10:48.642]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:48.642]          // if-block "!hasDormant"
[03:10:48.642]            // =>  TRUE
[03:10:48.642]          <block atomic="false" info="">
[03:10:48.642]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:49.644]  
[03:10:49.644]  !!! E320 : DAP access error
[03:10:49.644]  
[03:10:49.653]          </block>
[03:10:49.653]          // end if-block "!hasDormant"
[03:10:49.653]        </control>
[03:10:49.653]        // end if-block "isSWJ"
[03:10:49.653]      </control>
[03:10:49.653]      // end if-block "protType == 2"
[03:10:49.653]    </control>
[03:10:49.653]  </sequence>
[03:10:49.653]  
[03:10:49.908]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:49.908]  
[03:10:49.908]  <debugvars>
[03:10:49.908]    // Pre-defined
[03:10:49.908]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:49.908]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:49.908]    __dp=0x00000000
[03:10:49.908]    __ap=0x00000000
[03:10:49.908]    __traceout=0x00000000      (Trace Disabled)
[03:10:49.908]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:49.908]    __FlashAddr=0x00000000
[03:10:49.908]    __FlashLen=0x00000000
[03:10:49.908]    __FlashArg=0x00000000
[03:10:49.908]    __FlashOp=0x00000000
[03:10:49.908]    __Result=0x00000000
[03:10:49.908]  </debugvars>
[03:10:49.908]  
[03:10:49.908]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:49.908]    <block atomic="false" info="">
[03:10:49.908]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:49.908]        // -> [isSWJ <= 0x00000001]
[03:10:49.908]      __var hasDormant = __protocol & 0x00020000;
[03:10:49.908]        // -> [hasDormant <= 0x00000000]
[03:10:49.912]      __var protType   = __protocol & 0x0000FFFF;
[03:10:49.912]        // -> [protType <= 0x00000002]
[03:10:49.912]    </block>
[03:10:49.912]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:49.912]      // if-block "protType == 1"
[03:10:49.912]        // =>  FALSE
[03:10:49.912]      // skip if-block "protType == 1"
[03:10:49.912]    </control>
[03:10:49.912]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:49.912]      // if-block "protType == 2"
[03:10:49.912]        // =>  TRUE
[03:10:49.912]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:49.912]        // if-block "isSWJ"
[03:10:49.912]          // =>  TRUE
[03:10:49.912]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:49.912]          // if-block "hasDormant"
[03:10:49.912]            // =>  FALSE
[03:10:49.912]          // skip if-block "hasDormant"
[03:10:49.912]        </control>
[03:10:49.912]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:49.912]          // if-block "!hasDormant"
[03:10:49.912]            // =>  TRUE
[03:10:49.912]          <block atomic="false" info="">
[03:10:49.912]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:50.919]  
[03:10:50.919]  !!! E320 : DAP access error
[03:10:50.919]  
[03:10:50.928]          </block>
[03:10:50.928]          // end if-block "!hasDormant"
[03:10:50.928]        </control>
[03:10:50.928]        // end if-block "isSWJ"
[03:10:50.928]      </control>
[03:10:50.928]      // end if-block "protType == 2"
[03:10:50.928]    </control>
[03:10:50.928]  </sequence>
[03:10:50.928]  
[03:10:51.186]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:51.186]  
[03:10:51.186]  <debugvars>
[03:10:51.186]    // Pre-defined
[03:10:51.186]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:51.186]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:51.186]    __dp=0x00000000
[03:10:51.186]    __ap=0x00000000
[03:10:51.186]    __traceout=0x00000000      (Trace Disabled)
[03:10:51.186]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:51.186]    __FlashAddr=0x00000000
[03:10:51.186]    __FlashLen=0x00000000
[03:10:51.186]    __FlashArg=0x00000000
[03:10:51.186]    __FlashOp=0x00000000
[03:10:51.186]    __Result=0x00000000
[03:10:51.186]  </debugvars>
[03:10:51.186]  
[03:10:51.186]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:51.186]    <block atomic="false" info="">
[03:10:51.186]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:51.186]        // -> [isSWJ <= 0x00000001]
[03:10:51.186]      __var hasDormant = __protocol & 0x00020000;
[03:10:51.186]        // -> [hasDormant <= 0x00000000]
[03:10:51.186]      __var protType   = __protocol & 0x0000FFFF;
[03:10:51.186]        // -> [protType <= 0x00000002]
[03:10:51.186]    </block>
[03:10:51.186]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:51.190]      // if-block "protType == 1"
[03:10:51.190]        // =>  FALSE
[03:10:51.190]      // skip if-block "protType == 1"
[03:10:51.190]    </control>
[03:10:51.190]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:51.190]      // if-block "protType == 2"
[03:10:51.190]        // =>  TRUE
[03:10:51.190]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:51.190]        // if-block "isSWJ"
[03:10:51.190]          // =>  TRUE
[03:10:51.190]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:51.190]          // if-block "hasDormant"
[03:10:51.190]            // =>  FALSE
[03:10:51.190]          // skip if-block "hasDormant"
[03:10:51.190]        </control>
[03:10:51.190]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:51.190]          // if-block "!hasDormant"
[03:10:51.190]            // =>  TRUE
[03:10:51.190]          <block atomic="false" info="">
[03:10:51.190]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:52.196]  
[03:10:52.196]  !!! E320 : DAP access error
[03:10:52.196]  
[03:10:52.204]          </block>
[03:10:52.204]          // end if-block "!hasDormant"
[03:10:52.204]        </control>
[03:10:52.204]        // end if-block "isSWJ"
[03:10:52.204]      </control>
[03:10:52.204]      // end if-block "protType == 2"
[03:10:52.204]    </control>
[03:10:52.204]  </sequence>
[03:10:52.204]  
[03:10:52.467]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:52.467]  
[03:10:52.467]  <debugvars>
[03:10:52.467]    // Pre-defined
[03:10:52.467]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:52.467]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:52.467]    __dp=0x00000000
[03:10:52.467]    __ap=0x00000000
[03:10:52.467]    __traceout=0x00000000      (Trace Disabled)
[03:10:52.467]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:52.467]    __FlashAddr=0x00000000
[03:10:52.467]    __FlashLen=0x00000000
[03:10:52.467]    __FlashArg=0x00000000
[03:10:52.467]    __FlashOp=0x00000000
[03:10:52.467]    __Result=0x00000000
[03:10:52.467]  </debugvars>
[03:10:52.467]  
[03:10:52.467]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:52.467]    <block atomic="false" info="">
[03:10:52.467]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:52.467]        // -> [isSWJ <= 0x00000001]
[03:10:52.467]      __var hasDormant = __protocol & 0x00020000;
[03:10:52.467]        // -> [hasDormant <= 0x00000000]
[03:10:52.467]      __var protType   = __protocol & 0x0000FFFF;
[03:10:52.467]        // -> [protType <= 0x00000002]
[03:10:52.467]    </block>
[03:10:52.467]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:52.471]      // if-block "protType == 1"
[03:10:52.471]        // =>  FALSE
[03:10:52.471]      // skip if-block "protType == 1"
[03:10:52.471]    </control>
[03:10:52.471]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:52.471]      // if-block "protType == 2"
[03:10:52.471]        // =>  TRUE
[03:10:52.471]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:52.471]        // if-block "isSWJ"
[03:10:52.471]          // =>  TRUE
[03:10:52.471]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:52.471]          // if-block "hasDormant"
[03:10:52.471]            // =>  FALSE
[03:10:52.471]          // skip if-block "hasDormant"
[03:10:52.471]        </control>
[03:10:52.471]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:52.471]          // if-block "!hasDormant"
[03:10:52.471]            // =>  TRUE
[03:10:52.471]          <block atomic="false" info="">
[03:10:52.471]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:53.483]  
[03:10:53.483]  !!! E320 : DAP access error
[03:10:53.483]  
[03:10:53.492]          </block>
[03:10:53.492]          // end if-block "!hasDormant"
[03:10:53.492]        </control>
[03:10:53.492]        // end if-block "isSWJ"
[03:10:53.492]      </control>
[03:10:53.492]      // end if-block "protType == 2"
[03:10:53.492]    </control>
[03:10:53.492]  </sequence>
[03:10:53.492]  
[03:10:53.748]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:53.748]  
[03:10:53.756]  <debugvars>
[03:10:53.756]    // Pre-defined
[03:10:53.756]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:53.756]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:53.756]    __dp=0x00000000
[03:10:53.756]    __ap=0x00000000
[03:10:53.756]    __traceout=0x00000000      (Trace Disabled)
[03:10:53.756]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:53.756]    __FlashAddr=0x00000000
[03:10:53.757]    __FlashLen=0x00000000
[03:10:53.757]    __FlashArg=0x00000000
[03:10:53.757]    __FlashOp=0x00000000
[03:10:53.757]    __Result=0x00000000
[03:10:53.757]  </debugvars>
[03:10:53.757]  
[03:10:53.757]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:53.757]    <block atomic="false" info="">
[03:10:53.757]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:53.757]        // -> [isSWJ <= 0x00000001]
[03:10:53.757]      __var hasDormant = __protocol & 0x00020000;
[03:10:53.758]        // -> [hasDormant <= 0x00000000]
[03:10:53.758]      __var protType   = __protocol & 0x0000FFFF;
[03:10:53.758]        // -> [protType <= 0x00000002]
[03:10:53.758]    </block>
[03:10:53.758]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:53.758]      // if-block "protType == 1"
[03:10:53.758]        // =>  FALSE
[03:10:53.758]      // skip if-block "protType == 1"
[03:10:53.758]    </control>
[03:10:53.758]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:53.758]      // if-block "protType == 2"
[03:10:53.758]        // =>  TRUE
[03:10:53.759]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:53.759]        // if-block "isSWJ"
[03:10:53.759]          // =>  TRUE
[03:10:53.759]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:53.759]          // if-block "hasDormant"
[03:10:53.759]            // =>  FALSE
[03:10:53.759]          // skip if-block "hasDormant"
[03:10:53.759]        </control>
[03:10:53.760]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:53.760]          // if-block "!hasDormant"
[03:10:53.760]            // =>  TRUE
[03:10:53.760]          <block atomic="false" info="">
[03:10:53.760]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:54.763]  
[03:10:54.763]  !!! E320 : DAP access error
[03:10:54.763]  
[03:10:54.771]          </block>
[03:10:54.771]          // end if-block "!hasDormant"
[03:10:54.771]        </control>
[03:10:54.771]        // end if-block "isSWJ"
[03:10:54.772]      </control>
[03:10:54.772]      // end if-block "protType == 2"
[03:10:54.772]    </control>
[03:10:54.772]  </sequence>
[03:10:54.772]  
[03:10:55.034]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:55.034]  
[03:10:55.042]  <debugvars>
[03:10:55.042]    // Pre-defined
[03:10:55.042]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:55.042]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:55.042]    __dp=0x00000000
[03:10:55.042]    __ap=0x00000000
[03:10:55.042]    __traceout=0x00000000      (Trace Disabled)
[03:10:55.042]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:55.042]    __FlashAddr=0x00000000
[03:10:55.042]    __FlashLen=0x00000000
[03:10:55.042]    __FlashArg=0x00000000
[03:10:55.042]    __FlashOp=0x00000000
[03:10:55.042]    __Result=0x00000000
[03:10:55.042]  </debugvars>
[03:10:55.042]  
[03:10:55.042]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:55.042]    <block atomic="false" info="">
[03:10:55.042]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:55.042]        // -> [isSWJ <= 0x00000001]
[03:10:55.042]      __var hasDormant = __protocol & 0x00020000;
[03:10:55.042]        // -> [hasDormant <= 0x00000000]
[03:10:55.042]      __var protType   = __protocol & 0x0000FFFF;
[03:10:55.042]        // -> [protType <= 0x00000002]
[03:10:55.042]    </block>
[03:10:55.042]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:55.042]      // if-block "protType == 1"
[03:10:55.042]        // =>  FALSE
[03:10:55.042]      // skip if-block "protType == 1"
[03:10:55.042]    </control>
[03:10:55.042]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:55.042]      // if-block "protType == 2"
[03:10:55.042]        // =>  TRUE
[03:10:55.042]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:55.042]        // if-block "isSWJ"
[03:10:55.042]          // =>  TRUE
[03:10:55.046]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:55.046]          // if-block "hasDormant"
[03:10:55.046]            // =>  FALSE
[03:10:55.046]          // skip if-block "hasDormant"
[03:10:55.046]        </control>
[03:10:55.046]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:55.046]          // if-block "!hasDormant"
[03:10:55.046]            // =>  TRUE
[03:10:55.046]          <block atomic="false" info="">
[03:10:55.046]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:55.046]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:55.046]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:55.046]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:55.046]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:55.050]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:55.050]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:55.050]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:55.050]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:55.058]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:55.058]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:55.058]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:55.058]          </block>
[03:10:55.058]          // end if-block "!hasDormant"
[03:10:55.058]        </control>
[03:10:55.058]        // end if-block "isSWJ"
[03:10:55.058]      </control>
[03:10:55.058]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:55.058]        // if-block "!isSWJ"
[03:10:55.058]          // =>  FALSE
[03:10:55.058]        // skip if-block "!isSWJ"
[03:10:55.058]      </control>
[03:10:55.058]      <block atomic="false" info="">
[03:10:55.058]        ReadDP(0x0);
[03:10:55.058]  
[03:10:55.058]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:55.058]  
[03:10:55.058]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:55.058]      </block>
[03:10:55.062]      // end if-block "protType == 2"
[03:10:55.062]    </control>
[03:10:55.062]  </sequence>
[03:10:55.062]  
[03:10:55.323]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:55.323]  
[03:10:55.323]  <debugvars>
[03:10:55.323]    // Pre-defined
[03:10:55.323]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:55.323]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:55.323]    __dp=0x00000000
[03:10:55.323]    __ap=0x00000000
[03:10:55.323]    __traceout=0x00000000      (Trace Disabled)
[03:10:55.323]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:55.323]    __FlashAddr=0x00000000
[03:10:55.323]    __FlashLen=0x00000000
[03:10:55.323]    __FlashArg=0x00000000
[03:10:55.323]    __FlashOp=0x00000000
[03:10:55.323]    __Result=0x00000000
[03:10:55.323]  </debugvars>
[03:10:55.323]  
[03:10:55.323]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:55.323]    <block atomic="false" info="">
[03:10:55.323]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:55.323]        // -> [isSWJ <= 0x00000001]
[03:10:55.323]      __var hasDormant = __protocol & 0x00020000;
[03:10:55.323]        // -> [hasDormant <= 0x00000000]
[03:10:55.323]      __var protType   = __protocol & 0x0000FFFF;
[03:10:55.327]        // -> [protType <= 0x00000002]
[03:10:55.327]    </block>
[03:10:55.327]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:55.327]      // if-block "protType == 1"
[03:10:55.327]        // =>  FALSE
[03:10:55.327]      // skip if-block "protType == 1"
[03:10:55.327]    </control>
[03:10:55.327]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:55.327]      // if-block "protType == 2"
[03:10:55.327]        // =>  TRUE
[03:10:55.327]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:55.327]        // if-block "isSWJ"
[03:10:55.327]          // =>  TRUE
[03:10:55.327]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:55.327]          // if-block "hasDormant"
[03:10:55.327]            // =>  FALSE
[03:10:55.327]          // skip if-block "hasDormant"
[03:10:55.327]        </control>
[03:10:55.327]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:55.327]          // if-block "!hasDormant"
[03:10:55.327]            // =>  TRUE
[03:10:55.327]          <block atomic="false" info="">
[03:10:55.327]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:55.327]  
[03:10:55.327]  !!! E320 : DAP access error
[03:10:55.327]  
[03:10:55.327]          </block>
[03:10:55.327]          // end if-block "!hasDormant"
[03:10:55.327]        </control>
[03:10:55.327]        // end if-block "isSWJ"
[03:10:55.327]      </control>
[03:10:55.331]      // end if-block "protType == 2"
[03:10:55.331]    </control>
[03:10:55.331]  </sequence>
[03:10:55.331]  
[03:10:55.587]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:55.587]  
[03:10:55.596]  <debugvars>
[03:10:55.596]    // Pre-defined
[03:10:55.596]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:55.596]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:55.596]    __dp=0x00000000
[03:10:55.596]    __ap=0x00000000
[03:10:55.596]    __traceout=0x00000000      (Trace Disabled)
[03:10:55.596]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:55.596]    __FlashAddr=0x00000000
[03:10:55.596]    __FlashLen=0x00000000
[03:10:55.596]    __FlashArg=0x00000000
[03:10:55.596]    __FlashOp=0x00000000
[03:10:55.596]    __Result=0x00000000
[03:10:55.596]  </debugvars>
[03:10:55.596]  
[03:10:55.596]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:55.596]    <block atomic="false" info="">
[03:10:55.596]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:55.596]        // -> [isSWJ <= 0x00000001]
[03:10:55.596]      __var hasDormant = __protocol & 0x00020000;
[03:10:55.596]        // -> [hasDormant <= 0x00000000]
[03:10:55.596]      __var protType   = __protocol & 0x0000FFFF;
[03:10:55.596]        // -> [protType <= 0x00000002]
[03:10:55.596]    </block>
[03:10:55.596]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:55.596]      // if-block "protType == 1"
[03:10:55.599]        // =>  FALSE
[03:10:55.599]      // skip if-block "protType == 1"
[03:10:55.599]    </control>
[03:10:55.599]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:55.599]      // if-block "protType == 2"
[03:10:55.599]        // =>  TRUE
[03:10:55.599]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:55.599]        // if-block "isSWJ"
[03:10:55.599]          // =>  TRUE
[03:10:55.599]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:55.599]          // if-block "hasDormant"
[03:10:55.599]            // =>  FALSE
[03:10:55.599]          // skip if-block "hasDormant"
[03:10:55.599]        </control>
[03:10:55.599]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:55.599]          // if-block "!hasDormant"
[03:10:55.599]            // =>  TRUE
[03:10:55.599]          <block atomic="false" info="">
[03:10:55.599]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:55.599]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:55.599]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:55.599]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:55.599]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:55.603]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:55.603]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:55.603]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:55.603]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:55.603]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:55.603]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:55.603]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:55.603]          </block>
[03:10:55.603]          // end if-block "!hasDormant"
[03:10:55.603]        </control>
[03:10:55.603]        // end if-block "isSWJ"
[03:10:55.603]      </control>
[03:10:55.603]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:55.603]        // if-block "!isSWJ"
[03:10:55.603]          // =>  FALSE
[03:10:55.603]        // skip if-block "!isSWJ"
[03:10:55.603]      </control>
[03:10:55.607]      <block atomic="false" info="">
[03:10:55.607]        ReadDP(0x0);
[03:10:55.607]  
[03:10:55.607]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:55.607]  
[03:10:55.607]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:55.607]      </block>
[03:10:55.607]      // end if-block "protType == 2"
[03:10:55.607]    </control>
[03:10:55.607]  </sequence>
[03:10:55.607]  
[03:10:55.860]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:55.860]  
[03:10:55.868]  <debugvars>
[03:10:55.868]    // Pre-defined
[03:10:55.868]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:55.868]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:55.868]    __dp=0x00000000
[03:10:55.868]    __ap=0x00000000
[03:10:55.868]    __traceout=0x00000000      (Trace Disabled)
[03:10:55.868]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:55.868]    __FlashAddr=0x00000000
[03:10:55.868]    __FlashLen=0x00000000
[03:10:55.868]    __FlashArg=0x00000000
[03:10:55.868]    __FlashOp=0x00000000
[03:10:55.868]    __Result=0x00000000
[03:10:55.868]  </debugvars>
[03:10:55.868]  
[03:10:55.868]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:55.868]    <block atomic="false" info="">
[03:10:55.868]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:55.868]        // -> [isSWJ <= 0x00000001]
[03:10:55.868]      __var hasDormant = __protocol & 0x00020000;
[03:10:55.868]        // -> [hasDormant <= 0x00000000]
[03:10:55.868]      __var protType   = __protocol & 0x0000FFFF;
[03:10:55.868]        // -> [protType <= 0x00000002]
[03:10:55.868]    </block>
[03:10:55.868]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:55.868]      // if-block "protType == 1"
[03:10:55.868]        // =>  FALSE
[03:10:55.868]      // skip if-block "protType == 1"
[03:10:55.868]    </control>
[03:10:55.868]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:55.868]      // if-block "protType == 2"
[03:10:55.868]        // =>  TRUE
[03:10:55.868]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:55.872]        // if-block "isSWJ"
[03:10:55.872]          // =>  TRUE
[03:10:55.872]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:55.872]          // if-block "hasDormant"
[03:10:55.872]            // =>  FALSE
[03:10:55.872]          // skip if-block "hasDormant"
[03:10:55.872]        </control>
[03:10:55.872]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:55.872]          // if-block "!hasDormant"
[03:10:55.872]            // =>  TRUE
[03:10:55.872]          <block atomic="false" info="">
[03:10:55.872]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:55.872]  
[03:10:55.872]  !!! E320 : DAP access error
[03:10:55.872]  
[03:10:55.872]          </block>
[03:10:55.872]          // end if-block "!hasDormant"
[03:10:55.872]        </control>
[03:10:55.872]        // end if-block "isSWJ"
[03:10:55.872]      </control>
[03:10:55.872]      // end if-block "protType == 2"
[03:10:55.872]    </control>
[03:10:55.872]  </sequence>
[03:10:55.872]  
[03:10:56.131]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:56.131]  
[03:10:56.139]  <debugvars>
[03:10:56.139]    // Pre-defined
[03:10:56.139]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:56.139]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:56.140]    __dp=0x00000000
[03:10:56.140]    __ap=0x00000000
[03:10:56.140]    __traceout=0x00000000      (Trace Disabled)
[03:10:56.140]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:56.140]    __FlashAddr=0x00000000
[03:10:56.140]    __FlashLen=0x00000000
[03:10:56.140]    __FlashArg=0x00000000
[03:10:56.140]    __FlashOp=0x00000000
[03:10:56.140]    __Result=0x00000000
[03:10:56.140]  </debugvars>
[03:10:56.140]  
[03:10:56.140]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:56.140]    <block atomic="false" info="">
[03:10:56.140]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:56.140]        // -> [isSWJ <= 0x00000001]
[03:10:56.140]      __var hasDormant = __protocol & 0x00020000;
[03:10:56.140]        // -> [hasDormant <= 0x00000000]
[03:10:56.140]      __var protType   = __protocol & 0x0000FFFF;
[03:10:56.140]        // -> [protType <= 0x00000002]
[03:10:56.140]    </block>
[03:10:56.140]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:56.140]      // if-block "protType == 1"
[03:10:56.140]        // =>  FALSE
[03:10:56.140]      // skip if-block "protType == 1"
[03:10:56.140]    </control>
[03:10:56.140]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:56.140]      // if-block "protType == 2"
[03:10:56.140]        // =>  TRUE
[03:10:56.143]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:56.143]        // if-block "isSWJ"
[03:10:56.143]          // =>  TRUE
[03:10:56.143]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:56.143]          // if-block "hasDormant"
[03:10:56.143]            // =>  FALSE
[03:10:56.143]          // skip if-block "hasDormant"
[03:10:56.143]        </control>
[03:10:56.144]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:56.144]          // if-block "!hasDormant"
[03:10:56.144]            // =>  TRUE
[03:10:56.144]          <block atomic="false" info="">
[03:10:56.144]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:56.144]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:56.144]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:56.146]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:56.146]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:56.146]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:56.146]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:56.147]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:56.148]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:56.148]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:56.148]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:56.150]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:56.150]          </block>
[03:10:56.150]          // end if-block "!hasDormant"
[03:10:56.150]        </control>
[03:10:56.150]        // end if-block "isSWJ"
[03:10:56.150]      </control>
[03:10:56.150]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:56.150]        // if-block "!isSWJ"
[03:10:56.150]          // =>  FALSE
[03:10:56.151]        // skip if-block "!isSWJ"
[03:10:56.151]      </control>
[03:10:56.151]      <block atomic="false" info="">
[03:10:56.151]        ReadDP(0x0);
[03:10:56.151]  
[03:10:56.151]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:56.151]  
[03:10:56.151]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:56.151]      </block>
[03:10:56.152]      // end if-block "protType == 2"
[03:10:56.152]    </control>
[03:10:56.152]  </sequence>
[03:10:56.152]  
[03:10:56.413]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:56.413]  
[03:10:56.422]  <debugvars>
[03:10:56.422]    // Pre-defined
[03:10:56.422]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:56.422]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:56.422]    __dp=0x00000000
[03:10:56.422]    __ap=0x00000000
[03:10:56.422]    __traceout=0x00000000      (Trace Disabled)
[03:10:56.422]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:56.422]    __FlashAddr=0x00000000
[03:10:56.423]    __FlashLen=0x00000000
[03:10:56.423]    __FlashArg=0x00000000
[03:10:56.423]    __FlashOp=0x00000000
[03:10:56.423]    __Result=0x00000000
[03:10:56.423]  </debugvars>
[03:10:56.423]  
[03:10:56.423]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:56.423]    <block atomic="false" info="">
[03:10:56.423]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:56.423]        // -> [isSWJ <= 0x00000001]
[03:10:56.423]      __var hasDormant = __protocol & 0x00020000;
[03:10:56.423]        // -> [hasDormant <= 0x00000000]
[03:10:56.424]      __var protType   = __protocol & 0x0000FFFF;
[03:10:56.424]        // -> [protType <= 0x00000002]
[03:10:56.424]    </block>
[03:10:56.424]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:56.424]      // if-block "protType == 1"
[03:10:56.424]        // =>  FALSE
[03:10:56.425]      // skip if-block "protType == 1"
[03:10:56.425]    </control>
[03:10:56.426]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:56.426]      // if-block "protType == 2"
[03:10:56.426]        // =>  TRUE
[03:10:56.426]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:56.426]        // if-block "isSWJ"
[03:10:56.426]          // =>  TRUE
[03:10:56.426]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:56.426]          // if-block "hasDormant"
[03:10:56.426]            // =>  FALSE
[03:10:56.426]          // skip if-block "hasDormant"
[03:10:56.426]        </control>
[03:10:56.426]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:56.426]          // if-block "!hasDormant"
[03:10:56.426]            // =>  TRUE
[03:10:56.426]          <block atomic="false" info="">
[03:10:56.426]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:56.426]  
[03:10:56.426]  !!! E320 : DAP access error
[03:10:56.426]  
[03:10:56.426]          </block>
[03:10:56.426]          // end if-block "!hasDormant"
[03:10:56.426]        </control>
[03:10:56.426]        // end if-block "isSWJ"
[03:10:56.426]      </control>
[03:10:56.426]      // end if-block "protType == 2"
[03:10:56.426]    </control>
[03:10:56.426]  </sequence>
[03:10:56.426]  
[03:10:56.691]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:56.691]  
[03:10:56.691]  <debugvars>
[03:10:56.691]    // Pre-defined
[03:10:56.691]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:56.691]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:56.691]    __dp=0x00000000
[03:10:56.691]    __ap=0x00000000
[03:10:56.691]    __traceout=0x00000000      (Trace Disabled)
[03:10:56.693]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:56.693]    __FlashAddr=0x00000000
[03:10:56.693]    __FlashLen=0x00000000
[03:10:56.693]    __FlashArg=0x00000000
[03:10:56.693]    __FlashOp=0x00000000
[03:10:56.693]    __Result=0x00000000
[03:10:56.693]  </debugvars>
[03:10:56.695]  
[03:10:56.695]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:56.695]    <block atomic="false" info="">
[03:10:56.695]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:56.695]        // -> [isSWJ <= 0x00000001]
[03:10:56.695]      __var hasDormant = __protocol & 0x00020000;
[03:10:56.695]        // -> [hasDormant <= 0x00000000]
[03:10:56.695]      __var protType   = __protocol & 0x0000FFFF;
[03:10:56.695]        // -> [protType <= 0x00000002]
[03:10:56.695]    </block>
[03:10:56.695]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:56.695]      // if-block "protType == 1"
[03:10:56.695]        // =>  FALSE
[03:10:56.695]      // skip if-block "protType == 1"
[03:10:56.695]    </control>
[03:10:56.696]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:56.696]      // if-block "protType == 2"
[03:10:56.696]        // =>  TRUE
[03:10:56.696]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:56.696]        // if-block "isSWJ"
[03:10:56.696]          // =>  TRUE
[03:10:56.696]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:56.696]          // if-block "hasDormant"
[03:10:56.696]            // =>  FALSE
[03:10:56.696]          // skip if-block "hasDormant"
[03:10:56.696]        </control>
[03:10:56.696]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:56.696]          // if-block "!hasDormant"
[03:10:56.696]            // =>  TRUE
[03:10:56.696]          <block atomic="false" info="">
[03:10:56.696]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:56.698]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:56.698]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:56.702]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:56.702]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:56.702]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:56.702]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:56.704]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:56.704]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:56.704]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:56.704]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:56.704]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:56.704]          </block>
[03:10:56.704]          // end if-block "!hasDormant"
[03:10:56.704]        </control>
[03:10:56.704]        // end if-block "isSWJ"
[03:10:56.704]      </control>
[03:10:56.704]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:56.704]        // if-block "!isSWJ"
[03:10:56.704]          // =>  FALSE
[03:10:56.704]        // skip if-block "!isSWJ"
[03:10:56.704]      </control>
[03:10:56.708]      <block atomic="false" info="">
[03:10:56.708]        ReadDP(0x0);
[03:10:56.708]  
[03:10:56.708]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:56.708]  
[03:10:56.708]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:56.708]      </block>
[03:10:56.708]      // end if-block "protType == 2"
[03:10:56.708]    </control>
[03:10:56.708]  </sequence>
[03:10:56.708]  
[03:10:56.962]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:56.962]  
[03:10:56.971]  <debugvars>
[03:10:56.971]    // Pre-defined
[03:10:56.971]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:56.971]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:56.971]    __dp=0x00000000
[03:10:56.971]    __ap=0x00000000
[03:10:56.971]    __traceout=0x00000000      (Trace Disabled)
[03:10:56.971]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:56.971]    __FlashAddr=0x00000000
[03:10:56.971]    __FlashLen=0x00000000
[03:10:56.971]    __FlashArg=0x00000000
[03:10:56.971]    __FlashOp=0x00000000
[03:10:56.971]    __Result=0x00000000
[03:10:56.971]  </debugvars>
[03:10:56.971]  
[03:10:56.971]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:56.971]    <block atomic="false" info="">
[03:10:56.971]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:56.971]        // -> [isSWJ <= 0x00000001]
[03:10:56.971]      __var hasDormant = __protocol & 0x00020000;
[03:10:56.971]        // -> [hasDormant <= 0x00000000]
[03:10:56.971]      __var protType   = __protocol & 0x0000FFFF;
[03:10:56.971]        // -> [protType <= 0x00000002]
[03:10:56.971]    </block>
[03:10:56.971]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:56.971]      // if-block "protType == 1"
[03:10:56.971]        // =>  FALSE
[03:10:56.971]      // skip if-block "protType == 1"
[03:10:56.974]    </control>
[03:10:56.974]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:56.974]      // if-block "protType == 2"
[03:10:56.974]        // =>  TRUE
[03:10:56.974]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:56.974]        // if-block "isSWJ"
[03:10:56.974]          // =>  TRUE
[03:10:56.974]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:56.974]          // if-block "hasDormant"
[03:10:56.974]            // =>  FALSE
[03:10:56.974]          // skip if-block "hasDormant"
[03:10:56.974]        </control>
[03:10:56.974]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:56.974]          // if-block "!hasDormant"
[03:10:56.974]            // =>  TRUE
[03:10:56.974]          <block atomic="false" info="">
[03:10:56.974]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:56.974]  
[03:10:56.974]  !!! E320 : DAP access error
[03:10:56.974]  
[03:10:56.974]          </block>
[03:10:56.974]          // end if-block "!hasDormant"
[03:10:56.974]        </control>
[03:10:56.974]        // end if-block "isSWJ"
[03:10:56.974]      </control>
[03:10:56.974]      // end if-block "protType == 2"
[03:10:56.974]    </control>
[03:10:56.974]  </sequence>
[03:10:56.974]  
[03:10:57.237]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:57.237]  
[03:10:57.239]  <debugvars>
[03:10:57.239]    // Pre-defined
[03:10:57.239]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:57.239]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:57.239]    __dp=0x00000000
[03:10:57.239]    __ap=0x00000000
[03:10:57.239]    __traceout=0x00000000      (Trace Disabled)
[03:10:57.239]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:57.239]    __FlashAddr=0x00000000
[03:10:57.239]    __FlashLen=0x00000000
[03:10:57.239]    __FlashArg=0x00000000
[03:10:57.239]    __FlashOp=0x00000000
[03:10:57.239]    __Result=0x00000000
[03:10:57.239]  </debugvars>
[03:10:57.239]  
[03:10:57.239]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:57.239]    <block atomic="false" info="">
[03:10:57.239]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:57.241]        // -> [isSWJ <= 0x00000001]
[03:10:57.241]      __var hasDormant = __protocol & 0x00020000;
[03:10:57.241]        // -> [hasDormant <= 0x00000000]
[03:10:57.241]      __var protType   = __protocol & 0x0000FFFF;
[03:10:57.241]        // -> [protType <= 0x00000002]
[03:10:57.241]    </block>
[03:10:57.241]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:57.241]      // if-block "protType == 1"
[03:10:57.241]        // =>  FALSE
[03:10:57.241]      // skip if-block "protType == 1"
[03:10:57.241]    </control>
[03:10:57.241]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:57.241]      // if-block "protType == 2"
[03:10:57.241]        // =>  TRUE
[03:10:57.241]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:57.241]        // if-block "isSWJ"
[03:10:57.241]          // =>  TRUE
[03:10:57.241]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:57.241]          // if-block "hasDormant"
[03:10:57.241]            // =>  FALSE
[03:10:57.241]          // skip if-block "hasDormant"
[03:10:57.241]        </control>
[03:10:57.241]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:57.241]          // if-block "!hasDormant"
[03:10:57.241]            // =>  TRUE
[03:10:57.241]          <block atomic="false" info="">
[03:10:57.241]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:57.241]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:57.241]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:57.245]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:57.245]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:57.245]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:57.245]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:57.245]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:57.245]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:57.245]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:57.245]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:57.249]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:57.249]          </block>
[03:10:57.249]          // end if-block "!hasDormant"
[03:10:57.249]        </control>
[03:10:57.249]        // end if-block "isSWJ"
[03:10:57.249]      </control>
[03:10:57.249]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:57.249]        // if-block "!isSWJ"
[03:10:57.249]          // =>  FALSE
[03:10:57.249]        // skip if-block "!isSWJ"
[03:10:57.249]      </control>
[03:10:57.249]      <block atomic="false" info="">
[03:10:57.249]        ReadDP(0x0);
[03:10:57.249]  
[03:10:57.249]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:57.249]  
[03:10:57.249]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:57.249]      </block>
[03:10:57.249]      // end if-block "protType == 2"
[03:10:57.249]    </control>
[03:10:57.249]  </sequence>
[03:10:57.249]  
[03:10:57.506]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:57.506]  
[03:10:57.506]  <debugvars>
[03:10:57.506]    // Pre-defined
[03:10:57.507]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:57.507]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:57.507]    __dp=0x00000000
[03:10:57.507]    __ap=0x00000000
[03:10:57.507]    __traceout=0x00000000      (Trace Disabled)
[03:10:57.507]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:57.507]    __FlashAddr=0x00000000
[03:10:57.507]    __FlashLen=0x00000000
[03:10:57.507]    __FlashArg=0x00000000
[03:10:57.507]    __FlashOp=0x00000000
[03:10:57.507]    __Result=0x00000000
[03:10:57.507]  </debugvars>
[03:10:57.507]  
[03:10:57.508]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:57.508]    <block atomic="false" info="">
[03:10:57.508]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:57.508]        // -> [isSWJ <= 0x00000001]
[03:10:57.508]      __var hasDormant = __protocol & 0x00020000;
[03:10:57.508]        // -> [hasDormant <= 0x00000000]
[03:10:57.508]      __var protType   = __protocol & 0x0000FFFF;
[03:10:57.508]        // -> [protType <= 0x00000002]
[03:10:57.508]    </block>
[03:10:57.508]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:57.508]      // if-block "protType == 1"
[03:10:57.508]        // =>  FALSE
[03:10:57.508]      // skip if-block "protType == 1"
[03:10:57.508]    </control>
[03:10:57.508]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:57.508]      // if-block "protType == 2"
[03:10:57.508]        // =>  TRUE
[03:10:57.510]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:57.510]        // if-block "isSWJ"
[03:10:57.510]          // =>  TRUE
[03:10:57.510]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:57.510]          // if-block "hasDormant"
[03:10:57.510]            // =>  FALSE
[03:10:57.510]          // skip if-block "hasDormant"
[03:10:57.510]        </control>
[03:10:57.510]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:57.510]          // if-block "!hasDormant"
[03:10:57.510]            // =>  TRUE
[03:10:57.511]          <block atomic="false" info="">
[03:10:57.511]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:57.511]  
[03:10:57.511]  !!! E320 : DAP access error
[03:10:57.511]  
[03:10:57.511]          </block>
[03:10:57.511]          // end if-block "!hasDormant"
[03:10:57.511]        </control>
[03:10:57.511]        // end if-block "isSWJ"
[03:10:57.511]      </control>
[03:10:57.511]      // end if-block "protType == 2"
[03:10:57.511]    </control>
[03:10:57.511]  </sequence>
[03:10:57.511]  
[03:10:57.762]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:57.762]  
[03:10:57.765]  <debugvars>
[03:10:57.765]    // Pre-defined
[03:10:57.765]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:57.765]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:57.765]    __dp=0x00000000
[03:10:57.765]    __ap=0x00000000
[03:10:57.765]    __traceout=0x00000000      (Trace Disabled)
[03:10:57.765]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:57.765]    __FlashAddr=0x00000000
[03:10:57.765]    __FlashLen=0x00000000
[03:10:57.766]    __FlashArg=0x00000000
[03:10:57.766]    __FlashOp=0x00000000
[03:10:57.766]    __Result=0x00000000
[03:10:57.766]  </debugvars>
[03:10:57.766]  
[03:10:57.766]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:57.766]    <block atomic="false" info="">
[03:10:57.766]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:57.766]        // -> [isSWJ <= 0x00000001]
[03:10:57.766]      __var hasDormant = __protocol & 0x00020000;
[03:10:57.766]        // -> [hasDormant <= 0x00000000]
[03:10:57.766]      __var protType   = __protocol & 0x0000FFFF;
[03:10:57.766]        // -> [protType <= 0x00000002]
[03:10:57.766]    </block>
[03:10:57.766]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:57.766]      // if-block "protType == 1"
[03:10:57.766]        // =>  FALSE
[03:10:57.766]      // skip if-block "protType == 1"
[03:10:57.766]    </control>
[03:10:57.766]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:57.766]      // if-block "protType == 2"
[03:10:57.766]        // =>  TRUE
[03:10:57.766]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:57.766]        // if-block "isSWJ"
[03:10:57.766]          // =>  TRUE
[03:10:57.766]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:57.766]          // if-block "hasDormant"
[03:10:57.766]            // =>  FALSE
[03:10:57.766]          // skip if-block "hasDormant"
[03:10:57.766]        </control>
[03:10:57.766]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:57.766]          // if-block "!hasDormant"
[03:10:57.766]            // =>  TRUE
[03:10:57.766]          <block atomic="false" info="">
[03:10:57.766]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:57.766]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:57.770]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:57.770]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:57.770]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:57.770]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:57.770]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:57.774]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:57.774]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:57.774]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:57.774]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:57.778]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:57.778]          </block>
[03:10:57.778]          // end if-block "!hasDormant"
[03:10:57.778]        </control>
[03:10:57.778]        // end if-block "isSWJ"
[03:10:57.778]      </control>
[03:10:57.778]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:57.778]        // if-block "!isSWJ"
[03:10:57.778]          // =>  FALSE
[03:10:57.778]        // skip if-block "!isSWJ"
[03:10:57.778]      </control>
[03:10:57.778]      <block atomic="false" info="">
[03:10:57.778]        ReadDP(0x0);
[03:10:57.778]  
[03:10:57.778]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:57.778]  
[03:10:57.778]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:57.778]      </block>
[03:10:57.778]      // end if-block "protType == 2"
[03:10:57.778]    </control>
[03:10:57.778]  </sequence>
[03:10:57.778]  
[03:10:58.039]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:58.039]  
[03:10:58.039]  <debugvars>
[03:10:58.039]    // Pre-defined
[03:10:58.039]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:58.039]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:58.039]    __dp=0x00000000
[03:10:58.039]    __ap=0x00000000
[03:10:58.039]    __traceout=0x00000000      (Trace Disabled)
[03:10:58.039]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:58.039]    __FlashAddr=0x00000000
[03:10:58.039]    __FlashLen=0x00000000
[03:10:58.039]    __FlashArg=0x00000000
[03:10:58.039]    __FlashOp=0x00000000
[03:10:58.039]    __Result=0x00000000
[03:10:58.039]  </debugvars>
[03:10:58.039]  
[03:10:58.039]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:58.039]    <block atomic="false" info="">
[03:10:58.039]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:58.039]        // -> [isSWJ <= 0x00000001]
[03:10:58.039]      __var hasDormant = __protocol & 0x00020000;
[03:10:58.039]        // -> [hasDormant <= 0x00000000]
[03:10:58.039]      __var protType   = __protocol & 0x0000FFFF;
[03:10:58.039]        // -> [protType <= 0x00000002]
[03:10:58.039]    </block>
[03:10:58.039]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:58.039]      // if-block "protType == 1"
[03:10:58.039]        // =>  FALSE
[03:10:58.043]      // skip if-block "protType == 1"
[03:10:58.043]    </control>
[03:10:58.043]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:58.043]      // if-block "protType == 2"
[03:10:58.043]        // =>  TRUE
[03:10:58.043]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:58.043]        // if-block "isSWJ"
[03:10:58.043]          // =>  TRUE
[03:10:58.043]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:58.043]          // if-block "hasDormant"
[03:10:58.043]            // =>  FALSE
[03:10:58.043]          // skip if-block "hasDormant"
[03:10:58.043]        </control>
[03:10:58.043]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:58.043]          // if-block "!hasDormant"
[03:10:58.043]            // =>  TRUE
[03:10:58.043]          <block atomic="false" info="">
[03:10:58.043]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:58.043]  
[03:10:58.043]  !!! E320 : DAP access error
[03:10:58.043]  
[03:10:58.043]          </block>
[03:10:58.043]          // end if-block "!hasDormant"
[03:10:58.043]        </control>
[03:10:58.043]        // end if-block "isSWJ"
[03:10:58.043]      </control>
[03:10:58.043]      // end if-block "protType == 2"
[03:10:58.043]    </control>
[03:10:58.043]  </sequence>
[03:10:58.043]  
[03:10:58.297]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:58.297]  
[03:10:58.298]  <debugvars>
[03:10:58.298]    // Pre-defined
[03:10:58.298]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:58.298]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:58.298]    __dp=0x00000000
[03:10:58.298]    __ap=0x00000000
[03:10:58.298]    __traceout=0x00000000      (Trace Disabled)
[03:10:58.298]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:58.298]    __FlashAddr=0x00000000
[03:10:58.298]    __FlashLen=0x00000000
[03:10:58.298]    __FlashArg=0x00000000
[03:10:58.298]    __FlashOp=0x00000000
[03:10:58.298]    __Result=0x00000000
[03:10:58.298]  </debugvars>
[03:10:58.298]  
[03:10:58.298]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:58.298]    <block atomic="false" info="">
[03:10:58.298]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:58.298]        // -> [isSWJ <= 0x00000001]
[03:10:58.298]      __var hasDormant = __protocol & 0x00020000;
[03:10:58.298]        // -> [hasDormant <= 0x00000000]
[03:10:58.298]      __var protType   = __protocol & 0x0000FFFF;
[03:10:58.298]        // -> [protType <= 0x00000002]
[03:10:58.298]    </block>
[03:10:58.298]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:58.301]      // if-block "protType == 1"
[03:10:58.301]        // =>  FALSE
[03:10:58.301]      // skip if-block "protType == 1"
[03:10:58.301]    </control>
[03:10:58.301]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:58.301]      // if-block "protType == 2"
[03:10:58.301]        // =>  TRUE
[03:10:58.301]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:58.301]        // if-block "isSWJ"
[03:10:58.301]          // =>  TRUE
[03:10:58.301]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:58.301]          // if-block "hasDormant"
[03:10:58.301]            // =>  FALSE
[03:10:58.301]          // skip if-block "hasDormant"
[03:10:58.301]        </control>
[03:10:58.301]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:58.301]          // if-block "!hasDormant"
[03:10:58.301]            // =>  TRUE
[03:10:58.301]          <block atomic="false" info="">
[03:10:58.301]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:58.301]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:58.301]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:58.306]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:58.306]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:58.309]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:58.309]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:58.310]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:58.310]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:58.310]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:58.310]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:58.310]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:58.310]          </block>
[03:10:58.310]          // end if-block "!hasDormant"
[03:10:58.313]        </control>
[03:10:58.313]        // end if-block "isSWJ"
[03:10:58.313]      </control>
[03:10:58.313]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:58.313]        // if-block "!isSWJ"
[03:10:58.313]          // =>  FALSE
[03:10:58.313]        // skip if-block "!isSWJ"
[03:10:58.313]      </control>
[03:10:58.313]      <block atomic="false" info="">
[03:10:58.313]        ReadDP(0x0);
[03:10:58.313]  
[03:10:58.313]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:58.313]  
[03:10:58.313]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:58.313]      </block>
[03:10:58.313]      // end if-block "protType == 2"
[03:10:58.313]    </control>
[03:10:58.313]  </sequence>
[03:10:58.313]  
[03:10:58.566]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:58.566]  
[03:10:58.568]  <debugvars>
[03:10:58.568]    // Pre-defined
[03:10:58.568]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:58.568]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:58.568]    __dp=0x00000000
[03:10:58.568]    __ap=0x00000000
[03:10:58.568]    __traceout=0x00000000      (Trace Disabled)
[03:10:58.568]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:58.568]    __FlashAddr=0x00000000
[03:10:58.568]    __FlashLen=0x00000000
[03:10:58.568]    __FlashArg=0x00000000
[03:10:58.568]    __FlashOp=0x00000000
[03:10:58.568]    __Result=0x00000000
[03:10:58.568]  </debugvars>
[03:10:58.568]  
[03:10:58.568]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:58.568]    <block atomic="false" info="">
[03:10:58.568]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:58.568]        // -> [isSWJ <= 0x00000001]
[03:10:58.568]      __var hasDormant = __protocol & 0x00020000;
[03:10:58.568]        // -> [hasDormant <= 0x00000000]
[03:10:58.568]      __var protType   = __protocol & 0x0000FFFF;
[03:10:58.568]        // -> [protType <= 0x00000002]
[03:10:58.571]    </block>
[03:10:58.571]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:58.571]      // if-block "protType == 1"
[03:10:58.571]        // =>  FALSE
[03:10:58.571]      // skip if-block "protType == 1"
[03:10:58.571]    </control>
[03:10:58.571]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:58.571]      // if-block "protType == 2"
[03:10:58.571]        // =>  TRUE
[03:10:58.571]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:58.571]        // if-block "isSWJ"
[03:10:58.571]          // =>  TRUE
[03:10:58.571]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:58.571]          // if-block "hasDormant"
[03:10:58.571]            // =>  FALSE
[03:10:58.571]          // skip if-block "hasDormant"
[03:10:58.571]        </control>
[03:10:58.571]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:58.571]          // if-block "!hasDormant"
[03:10:58.571]            // =>  TRUE
[03:10:58.571]          <block atomic="false" info="">
[03:10:58.571]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:58.571]  
[03:10:58.571]  !!! E320 : DAP access error
[03:10:58.571]  
[03:10:58.571]          </block>
[03:10:58.571]          // end if-block "!hasDormant"
[03:10:58.571]        </control>
[03:10:58.571]        // end if-block "isSWJ"
[03:10:58.571]      </control>
[03:10:58.571]      // end if-block "protType == 2"
[03:10:58.571]    </control>
[03:10:58.571]  </sequence>
[03:10:58.571]  
[03:10:58.832]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:58.832]  
[03:10:58.834]  <debugvars>
[03:10:58.834]    // Pre-defined
[03:10:58.834]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:58.834]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:58.834]    __dp=0x00000000
[03:10:58.834]    __ap=0x00000000
[03:10:58.834]    __traceout=0x00000000      (Trace Disabled)
[03:10:58.834]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:58.834]    __FlashAddr=0x00000000
[03:10:58.834]    __FlashLen=0x00000000
[03:10:58.834]    __FlashArg=0x00000000
[03:10:58.834]    __FlashOp=0x00000000
[03:10:58.834]    __Result=0x00000000
[03:10:58.834]  </debugvars>
[03:10:58.834]  
[03:10:58.834]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:58.834]    <block atomic="false" info="">
[03:10:58.834]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:58.834]        // -> [isSWJ <= 0x00000001]
[03:10:58.834]      __var hasDormant = __protocol & 0x00020000;
[03:10:58.836]        // -> [hasDormant <= 0x00000000]
[03:10:58.836]      __var protType   = __protocol & 0x0000FFFF;
[03:10:58.836]        // -> [protType <= 0x00000002]
[03:10:58.836]    </block>
[03:10:58.836]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:58.836]      // if-block "protType == 1"
[03:10:58.836]        // =>  FALSE
[03:10:58.836]      // skip if-block "protType == 1"
[03:10:58.836]    </control>
[03:10:58.836]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:58.836]      // if-block "protType == 2"
[03:10:58.836]        // =>  TRUE
[03:10:58.836]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:58.836]        // if-block "isSWJ"
[03:10:58.836]          // =>  TRUE
[03:10:58.836]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:58.836]          // if-block "hasDormant"
[03:10:58.836]            // =>  FALSE
[03:10:58.836]          // skip if-block "hasDormant"
[03:10:58.836]        </control>
[03:10:58.836]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:58.836]          // if-block "!hasDormant"
[03:10:58.836]            // =>  TRUE
[03:10:58.836]          <block atomic="false" info="">
[03:10:58.836]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:58.836]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:58.836]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:58.840]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:58.840]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:58.840]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:58.840]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:58.840]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:58.840]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:58.840]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:58.844]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:58.844]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:58.848]          </block>
[03:10:58.848]          // end if-block "!hasDormant"
[03:10:58.848]        </control>
[03:10:58.848]        // end if-block "isSWJ"
[03:10:58.848]      </control>
[03:10:58.848]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:58.848]        // if-block "!isSWJ"
[03:10:58.848]          // =>  FALSE
[03:10:58.848]        // skip if-block "!isSWJ"
[03:10:58.848]      </control>
[03:10:58.848]      <block atomic="false" info="">
[03:10:58.848]        ReadDP(0x0);
[03:10:58.848]  
[03:10:58.848]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:58.848]  
[03:10:58.848]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:58.848]      </block>
[03:10:58.852]      // end if-block "protType == 2"
[03:10:58.852]    </control>
[03:10:58.852]  </sequence>
[03:10:58.852]  
[03:10:59.111]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:59.111]  
[03:10:59.111]  <debugvars>
[03:10:59.111]    // Pre-defined
[03:10:59.111]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:59.111]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:59.111]    __dp=0x00000000
[03:10:59.111]    __ap=0x00000000
[03:10:59.111]    __traceout=0x00000000      (Trace Disabled)
[03:10:59.111]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:59.111]    __FlashAddr=0x00000000
[03:10:59.111]    __FlashLen=0x00000000
[03:10:59.111]    __FlashArg=0x00000000
[03:10:59.111]    __FlashOp=0x00000000
[03:10:59.111]    __Result=0x00000000
[03:10:59.111]  </debugvars>
[03:10:59.111]  
[03:10:59.111]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:59.111]    <block atomic="false" info="">
[03:10:59.111]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:59.111]        // -> [isSWJ <= 0x00000001]
[03:10:59.111]      __var hasDormant = __protocol & 0x00020000;
[03:10:59.115]        // -> [hasDormant <= 0x00000000]
[03:10:59.115]      __var protType   = __protocol & 0x0000FFFF;
[03:10:59.115]        // -> [protType <= 0x00000002]
[03:10:59.115]    </block>
[03:10:59.115]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:59.115]      // if-block "protType == 1"
[03:10:59.115]        // =>  FALSE
[03:10:59.115]      // skip if-block "protType == 1"
[03:10:59.115]    </control>
[03:10:59.115]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:59.115]      // if-block "protType == 2"
[03:10:59.115]        // =>  TRUE
[03:10:59.115]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:59.115]        // if-block "isSWJ"
[03:10:59.115]          // =>  TRUE
[03:10:59.115]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:59.115]          // if-block "hasDormant"
[03:10:59.115]            // =>  FALSE
[03:10:59.115]          // skip if-block "hasDormant"
[03:10:59.115]        </control>
[03:10:59.115]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:59.115]          // if-block "!hasDormant"
[03:10:59.115]            // =>  TRUE
[03:10:59.115]          <block atomic="false" info="">
[03:10:59.115]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:59.115]  
[03:10:59.115]  !!! E320 : DAP access error
[03:10:59.115]  
[03:10:59.115]          </block>
[03:10:59.115]          // end if-block "!hasDormant"
[03:10:59.119]        </control>
[03:10:59.119]        // end if-block "isSWJ"
[03:10:59.119]      </control>
[03:10:59.119]      // end if-block "protType == 2"
[03:10:59.119]    </control>
[03:10:59.119]  </sequence>
[03:10:59.119]  
[03:10:59.370]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:59.370]  
[03:10:59.370]  <debugvars>
[03:10:59.370]    // Pre-defined
[03:10:59.370]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:59.370]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:59.370]    __dp=0x00000000
[03:10:59.370]    __ap=0x00000000
[03:10:59.370]    __traceout=0x00000000      (Trace Disabled)
[03:10:59.370]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:59.370]    __FlashAddr=0x00000000
[03:10:59.370]    __FlashLen=0x00000000
[03:10:59.370]    __FlashArg=0x00000000
[03:10:59.370]    __FlashOp=0x00000000
[03:10:59.370]    __Result=0x00000000
[03:10:59.370]  </debugvars>
[03:10:59.370]  
[03:10:59.370]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:59.370]    <block atomic="false" info="">
[03:10:59.370]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:59.370]        // -> [isSWJ <= 0x00000001]
[03:10:59.370]      __var hasDormant = __protocol & 0x00020000;
[03:10:59.374]        // -> [hasDormant <= 0x00000000]
[03:10:59.374]      __var protType   = __protocol & 0x0000FFFF;
[03:10:59.374]        // -> [protType <= 0x00000002]
[03:10:59.374]    </block>
[03:10:59.374]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:59.374]      // if-block "protType == 1"
[03:10:59.374]        // =>  FALSE
[03:10:59.374]      // skip if-block "protType == 1"
[03:10:59.374]    </control>
[03:10:59.374]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:59.374]      // if-block "protType == 2"
[03:10:59.374]        // =>  TRUE
[03:10:59.374]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:59.374]        // if-block "isSWJ"
[03:10:59.374]          // =>  TRUE
[03:10:59.374]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:59.374]          // if-block "hasDormant"
[03:10:59.374]            // =>  FALSE
[03:10:59.374]          // skip if-block "hasDormant"
[03:10:59.374]        </control>
[03:10:59.374]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:59.374]          // if-block "!hasDormant"
[03:10:59.374]            // =>  TRUE
[03:10:59.374]          <block atomic="false" info="">
[03:10:59.374]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:59.374]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:59.374]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:59.378]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:59.378]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:59.378]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:59.378]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:59.378]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:59.378]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:59.378]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:59.378]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:59.382]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:59.382]          </block>
[03:10:59.382]          // end if-block "!hasDormant"
[03:10:59.382]        </control>
[03:10:59.382]        // end if-block "isSWJ"
[03:10:59.382]      </control>
[03:10:59.382]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:59.382]        // if-block "!isSWJ"
[03:10:59.382]          // =>  FALSE
[03:10:59.382]        // skip if-block "!isSWJ"
[03:10:59.382]      </control>
[03:10:59.382]      <block atomic="false" info="">
[03:10:59.382]        ReadDP(0x0);
[03:10:59.382]  
[03:10:59.382]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:59.382]  
[03:10:59.382]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:59.382]      </block>
[03:10:59.382]      // end if-block "protType == 2"
[03:10:59.382]    </control>
[03:10:59.382]  </sequence>
[03:10:59.382]  
[03:10:59.636]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:59.636]  
[03:10:59.638]  <debugvars>
[03:10:59.638]    // Pre-defined
[03:10:59.638]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:59.638]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:59.638]    __dp=0x00000000
[03:10:59.638]    __ap=0x00000000
[03:10:59.638]    __traceout=0x00000000      (Trace Disabled)
[03:10:59.638]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:59.638]    __FlashAddr=0x00000000
[03:10:59.638]    __FlashLen=0x00000000
[03:10:59.638]    __FlashArg=0x00000000
[03:10:59.638]    __FlashOp=0x00000000
[03:10:59.640]    __Result=0x00000000
[03:10:59.640]  </debugvars>
[03:10:59.640]  
[03:10:59.640]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:59.640]    <block atomic="false" info="">
[03:10:59.640]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:59.640]        // -> [isSWJ <= 0x00000001]
[03:10:59.640]      __var hasDormant = __protocol & 0x00020000;
[03:10:59.640]        // -> [hasDormant <= 0x00000000]
[03:10:59.640]      __var protType   = __protocol & 0x0000FFFF;
[03:10:59.640]        // -> [protType <= 0x00000002]
[03:10:59.640]    </block>
[03:10:59.640]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:59.640]      // if-block "protType == 1"
[03:10:59.640]        // =>  FALSE
[03:10:59.640]      // skip if-block "protType == 1"
[03:10:59.640]    </control>
[03:10:59.640]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:59.640]      // if-block "protType == 2"
[03:10:59.640]        // =>  TRUE
[03:10:59.640]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:59.640]        // if-block "isSWJ"
[03:10:59.640]          // =>  TRUE
[03:10:59.640]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:59.640]          // if-block "hasDormant"
[03:10:59.640]            // =>  FALSE
[03:10:59.640]          // skip if-block "hasDormant"
[03:10:59.640]        </control>
[03:10:59.644]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:59.644]          // if-block "!hasDormant"
[03:10:59.644]            // =>  TRUE
[03:10:59.644]          <block atomic="false" info="">
[03:10:59.644]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:59.644]  
[03:10:59.644]  !!! E320 : DAP access error
[03:10:59.644]  
[03:10:59.644]          </block>
[03:10:59.644]          // end if-block "!hasDormant"
[03:10:59.644]        </control>
[03:10:59.644]        // end if-block "isSWJ"
[03:10:59.644]      </control>
[03:10:59.644]      // end if-block "protType == 2"
[03:10:59.644]    </control>
[03:10:59.644]  </sequence>
[03:10:59.644]  
[03:10:59.905]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:10:59.905]  
[03:10:59.906]  <debugvars>
[03:10:59.906]    // Pre-defined
[03:10:59.906]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:10:59.906]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:10:59.906]    __dp=0x00000000
[03:10:59.906]    __ap=0x00000000
[03:10:59.906]    __traceout=0x00000000      (Trace Disabled)
[03:10:59.906]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:10:59.906]    __FlashAddr=0x00000000
[03:10:59.906]    __FlashLen=0x00000000
[03:10:59.906]    __FlashArg=0x00000000
[03:10:59.906]    __FlashOp=0x00000000
[03:10:59.906]    __Result=0x00000000
[03:10:59.906]  </debugvars>
[03:10:59.906]  
[03:10:59.906]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:10:59.906]    <block atomic="false" info="">
[03:10:59.906]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:10:59.906]        // -> [isSWJ <= 0x00000001]
[03:10:59.909]      __var hasDormant = __protocol & 0x00020000;
[03:10:59.909]        // -> [hasDormant <= 0x00000000]
[03:10:59.909]      __var protType   = __protocol & 0x0000FFFF;
[03:10:59.909]        // -> [protType <= 0x00000002]
[03:10:59.909]    </block>
[03:10:59.909]    <control if="protType == 1" while="" timeout="0" info="">
[03:10:59.909]      // if-block "protType == 1"
[03:10:59.909]        // =>  FALSE
[03:10:59.909]      // skip if-block "protType == 1"
[03:10:59.909]    </control>
[03:10:59.909]    <control if="protType == 2" while="" timeout="0" info="">
[03:10:59.909]      // if-block "protType == 2"
[03:10:59.909]        // =>  TRUE
[03:10:59.909]      <control if="isSWJ" while="" timeout="0" info="">
[03:10:59.909]        // if-block "isSWJ"
[03:10:59.909]          // =>  TRUE
[03:10:59.909]        <control if="hasDormant" while="" timeout="0" info="">
[03:10:59.909]          // if-block "hasDormant"
[03:10:59.909]            // =>  FALSE
[03:10:59.909]          // skip if-block "hasDormant"
[03:10:59.909]        </control>
[03:10:59.909]        <control if="!hasDormant" while="" timeout="0" info="">
[03:10:59.909]          // if-block "!hasDormant"
[03:10:59.909]            // =>  TRUE
[03:10:59.909]          <block atomic="false" info="">
[03:10:59.909]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:10:59.909]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:59.909]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:10:59.913]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:10:59.913]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:10:59.913]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:59.913]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:10:59.918]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:10:59.918]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:10:59.918]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:10:59.918]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:10:59.922]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:10:59.922]          </block>
[03:10:59.922]          // end if-block "!hasDormant"
[03:10:59.922]        </control>
[03:10:59.922]        // end if-block "isSWJ"
[03:10:59.922]      </control>
[03:10:59.922]      <control if="!isSWJ" while="" timeout="0" info="">
[03:10:59.922]        // if-block "!isSWJ"
[03:10:59.922]          // =>  FALSE
[03:10:59.922]        // skip if-block "!isSWJ"
[03:10:59.922]      </control>
[03:10:59.922]      <block atomic="false" info="">
[03:10:59.922]        ReadDP(0x0);
[03:10:59.930]  
[03:10:59.930]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:10:59.930]  
[03:10:59.930]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:10:59.930]      </block>
[03:10:59.930]      // end if-block "protType == 2"
[03:10:59.930]    </control>
[03:10:59.930]  </sequence>
[03:10:59.930]  
[03:11:00.190]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:00.190]  
[03:11:00.192]  <debugvars>
[03:11:00.192]    // Pre-defined
[03:11:00.192]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:00.192]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:00.192]    __dp=0x00000000
[03:11:00.192]    __ap=0x00000000
[03:11:00.192]    __traceout=0x00000000      (Trace Disabled)
[03:11:00.192]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:00.192]    __FlashAddr=0x00000000
[03:11:00.192]    __FlashLen=0x00000000
[03:11:00.192]    __FlashArg=0x00000000
[03:11:00.192]    __FlashOp=0x00000000
[03:11:00.192]    __Result=0x00000000
[03:11:00.192]  </debugvars>
[03:11:00.192]  
[03:11:00.192]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:00.192]    <block atomic="false" info="">
[03:11:00.194]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:00.194]        // -> [isSWJ <= 0x00000001]
[03:11:00.194]      __var hasDormant = __protocol & 0x00020000;
[03:11:00.194]        // -> [hasDormant <= 0x00000000]
[03:11:00.194]      __var protType   = __protocol & 0x0000FFFF;
[03:11:00.194]        // -> [protType <= 0x00000002]
[03:11:00.194]    </block>
[03:11:00.194]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:00.194]      // if-block "protType == 1"
[03:11:00.194]        // =>  FALSE
[03:11:00.194]      // skip if-block "protType == 1"
[03:11:00.194]    </control>
[03:11:00.194]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:00.194]      // if-block "protType == 2"
[03:11:00.194]        // =>  TRUE
[03:11:00.194]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:00.194]        // if-block "isSWJ"
[03:11:00.194]          // =>  TRUE
[03:11:00.194]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:00.194]          // if-block "hasDormant"
[03:11:00.194]            // =>  FALSE
[03:11:00.194]          // skip if-block "hasDormant"
[03:11:00.194]        </control>
[03:11:00.194]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:00.194]          // if-block "!hasDormant"
[03:11:00.194]            // =>  TRUE
[03:11:00.194]          <block atomic="false" info="">
[03:11:00.194]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:00.194]  
[03:11:00.194]  !!! E320 : DAP access error
[03:11:00.194]  
[03:11:00.194]          </block>
[03:11:00.194]          // end if-block "!hasDormant"
[03:11:00.194]        </control>
[03:11:00.194]        // end if-block "isSWJ"
[03:11:00.198]      </control>
[03:11:00.198]      // end if-block "protType == 2"
[03:11:00.198]    </control>
[03:11:00.198]  </sequence>
[03:11:00.198]  
[03:11:00.457]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:00.457]  
[03:11:00.459]  <debugvars>
[03:11:00.459]    // Pre-defined
[03:11:00.459]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:00.459]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:00.459]    __dp=0x00000000
[03:11:00.459]    __ap=0x00000000
[03:11:00.459]    __traceout=0x00000000      (Trace Disabled)
[03:11:00.459]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:00.459]    __FlashAddr=0x00000000
[03:11:00.459]    __FlashLen=0x00000000
[03:11:00.459]    __FlashArg=0x00000000
[03:11:00.459]    __FlashOp=0x00000000
[03:11:00.459]    __Result=0x00000000
[03:11:00.459]  </debugvars>
[03:11:00.459]  
[03:11:00.459]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:00.459]    <block atomic="false" info="">
[03:11:00.459]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:00.459]        // -> [isSWJ <= 0x00000001]
[03:11:00.459]      __var hasDormant = __protocol & 0x00020000;
[03:11:00.459]        // -> [hasDormant <= 0x00000000]
[03:11:00.459]      __var protType   = __protocol & 0x0000FFFF;
[03:11:00.459]        // -> [protType <= 0x00000002]
[03:11:00.459]    </block>
[03:11:00.459]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:00.459]      // if-block "protType == 1"
[03:11:00.459]        // =>  FALSE
[03:11:00.459]      // skip if-block "protType == 1"
[03:11:00.459]    </control>
[03:11:00.462]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:00.462]      // if-block "protType == 2"
[03:11:00.462]        // =>  TRUE
[03:11:00.462]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:00.462]        // if-block "isSWJ"
[03:11:00.462]          // =>  TRUE
[03:11:00.462]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:00.462]          // if-block "hasDormant"
[03:11:00.462]            // =>  FALSE
[03:11:00.462]          // skip if-block "hasDormant"
[03:11:00.462]        </control>
[03:11:00.462]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:00.462]          // if-block "!hasDormant"
[03:11:00.462]            // =>  TRUE
[03:11:00.462]          <block atomic="false" info="">
[03:11:00.462]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:00.462]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:00.462]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:00.466]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:00.466]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:00.466]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:00.466]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:00.466]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:00.466]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:00.471]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:00.471]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:00.471]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:00.471]          </block>
[03:11:00.471]          // end if-block "!hasDormant"
[03:11:00.471]        </control>
[03:11:00.471]        // end if-block "isSWJ"
[03:11:00.471]      </control>
[03:11:00.471]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:00.474]        // if-block "!isSWJ"
[03:11:00.474]          // =>  FALSE
[03:11:00.474]        // skip if-block "!isSWJ"
[03:11:00.474]      </control>
[03:11:00.474]      <block atomic="false" info="">
[03:11:00.474]        ReadDP(0x0);
[03:11:00.474]  
[03:11:00.474]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:00.474]  
[03:11:00.474]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:00.474]      </block>
[03:11:00.474]      // end if-block "protType == 2"
[03:11:00.474]    </control>
[03:11:00.474]  </sequence>
[03:11:00.474]  
[03:11:00.730]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:00.730]  
[03:11:00.730]  <debugvars>
[03:11:00.730]    // Pre-defined
[03:11:00.730]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:00.731]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:00.731]    __dp=0x00000000
[03:11:00.731]    __ap=0x00000000
[03:11:00.731]    __traceout=0x00000000      (Trace Disabled)
[03:11:00.731]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:00.731]    __FlashAddr=0x00000000
[03:11:00.731]    __FlashLen=0x00000000
[03:11:00.731]    __FlashArg=0x00000000
[03:11:00.731]    __FlashOp=0x00000000
[03:11:00.731]    __Result=0x00000000
[03:11:00.731]  </debugvars>
[03:11:00.731]  
[03:11:00.731]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:00.731]    <block atomic="false" info="">
[03:11:00.731]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:00.731]        // -> [isSWJ <= 0x00000001]
[03:11:00.731]      __var hasDormant = __protocol & 0x00020000;
[03:11:00.731]        // -> [hasDormant <= 0x00000000]
[03:11:00.731]      __var protType   = __protocol & 0x0000FFFF;
[03:11:00.731]        // -> [protType <= 0x00000002]
[03:11:00.734]    </block>
[03:11:00.734]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:00.734]      // if-block "protType == 1"
[03:11:00.734]        // =>  FALSE
[03:11:00.734]      // skip if-block "protType == 1"
[03:11:00.734]    </control>
[03:11:00.735]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:00.735]      // if-block "protType == 2"
[03:11:00.735]        // =>  TRUE
[03:11:00.735]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:00.735]        // if-block "isSWJ"
[03:11:00.735]          // =>  TRUE
[03:11:00.735]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:00.736]          // if-block "hasDormant"
[03:11:00.736]            // =>  FALSE
[03:11:00.736]          // skip if-block "hasDormant"
[03:11:00.736]        </control>
[03:11:00.736]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:00.736]          // if-block "!hasDormant"
[03:11:00.736]            // =>  TRUE
[03:11:00.736]          <block atomic="false" info="">
[03:11:00.736]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:00.736]  
[03:11:00.736]  !!! E320 : DAP access error
[03:11:00.737]  
[03:11:00.737]          </block>
[03:11:00.737]          // end if-block "!hasDormant"
[03:11:00.737]        </control>
[03:11:00.737]        // end if-block "isSWJ"
[03:11:00.737]      </control>
[03:11:00.737]      // end if-block "protType == 2"
[03:11:00.737]    </control>
[03:11:00.737]  </sequence>
[03:11:00.737]  
[03:11:00.994]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:00.994]  
[03:11:00.995]  <debugvars>
[03:11:00.995]    // Pre-defined
[03:11:00.995]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:00.995]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:00.995]    __dp=0x00000000
[03:11:00.995]    __ap=0x00000000
[03:11:00.995]    __traceout=0x00000000      (Trace Disabled)
[03:11:00.995]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:00.995]    __FlashAddr=0x00000000
[03:11:00.995]    __FlashLen=0x00000000
[03:11:00.995]    __FlashArg=0x00000000
[03:11:00.995]    __FlashOp=0x00000000
[03:11:00.995]    __Result=0x00000000
[03:11:00.995]  </debugvars>
[03:11:00.995]  
[03:11:00.995]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:00.995]    <block atomic="false" info="">
[03:11:00.995]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:00.995]        // -> [isSWJ <= 0x00000001]
[03:11:00.995]      __var hasDormant = __protocol & 0x00020000;
[03:11:00.995]        // -> [hasDormant <= 0x00000000]
[03:11:00.995]      __var protType   = __protocol & 0x0000FFFF;
[03:11:00.995]        // -> [protType <= 0x00000002]
[03:11:00.995]    </block>
[03:11:00.995]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:00.995]      // if-block "protType == 1"
[03:11:00.995]        // =>  FALSE
[03:11:00.998]      // skip if-block "protType == 1"
[03:11:00.998]    </control>
[03:11:00.998]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:00.998]      // if-block "protType == 2"
[03:11:00.998]        // =>  TRUE
[03:11:00.998]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:00.998]        // if-block "isSWJ"
[03:11:00.998]          // =>  TRUE
[03:11:00.998]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:00.998]          // if-block "hasDormant"
[03:11:00.998]            // =>  FALSE
[03:11:00.998]          // skip if-block "hasDormant"
[03:11:00.998]        </control>
[03:11:00.998]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:00.998]          // if-block "!hasDormant"
[03:11:00.998]            // =>  TRUE
[03:11:00.998]          <block atomic="false" info="">
[03:11:00.998]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:01.000]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:01.000]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:01.001]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:01.001]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:01.002]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:01.002]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:01.002]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:01.002]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:01.008]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:01.008]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:01.008]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:01.008]          </block>
[03:11:01.008]          // end if-block "!hasDormant"
[03:11:01.008]        </control>
[03:11:01.008]        // end if-block "isSWJ"
[03:11:01.008]      </control>
[03:11:01.008]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:01.008]        // if-block "!isSWJ"
[03:11:01.008]          // =>  FALSE
[03:11:01.008]        // skip if-block "!isSWJ"
[03:11:01.008]      </control>
[03:11:01.008]      <block atomic="false" info="">
[03:11:01.008]        ReadDP(0x0);
[03:11:01.008]  
[03:11:01.008]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:01.008]  
[03:11:01.008]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:01.008]      </block>
[03:11:01.008]      // end if-block "protType == 2"
[03:11:01.008]    </control>
[03:11:01.008]  </sequence>
[03:11:01.008]  
[03:11:01.263]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:01.263]  
[03:11:01.264]  <debugvars>
[03:11:01.264]    // Pre-defined
[03:11:01.264]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:01.264]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:01.264]    __dp=0x00000000
[03:11:01.264]    __ap=0x00000000
[03:11:01.264]    __traceout=0x00000000      (Trace Disabled)
[03:11:01.264]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:01.264]    __FlashAddr=0x00000000
[03:11:01.264]    __FlashLen=0x00000000
[03:11:01.264]    __FlashArg=0x00000000
[03:11:01.264]    __FlashOp=0x00000000
[03:11:01.264]    __Result=0x00000000
[03:11:01.264]  </debugvars>
[03:11:01.264]  
[03:11:01.264]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:01.264]    <block atomic="false" info="">
[03:11:01.264]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:01.264]        // -> [isSWJ <= 0x00000001]
[03:11:01.264]      __var hasDormant = __protocol & 0x00020000;
[03:11:01.264]        // -> [hasDormant <= 0x00000000]
[03:11:01.264]      __var protType   = __protocol & 0x0000FFFF;
[03:11:01.264]        // -> [protType <= 0x00000002]
[03:11:01.264]    </block>
[03:11:01.264]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:01.264]      // if-block "protType == 1"
[03:11:01.264]        // =>  FALSE
[03:11:01.267]      // skip if-block "protType == 1"
[03:11:01.267]    </control>
[03:11:01.267]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:01.267]      // if-block "protType == 2"
[03:11:01.267]        // =>  TRUE
[03:11:01.267]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:01.267]        // if-block "isSWJ"
[03:11:01.267]          // =>  TRUE
[03:11:01.267]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:01.267]          // if-block "hasDormant"
[03:11:01.267]            // =>  FALSE
[03:11:01.267]          // skip if-block "hasDormant"
[03:11:01.267]        </control>
[03:11:01.267]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:01.267]          // if-block "!hasDormant"
[03:11:01.267]            // =>  TRUE
[03:11:01.267]          <block atomic="false" info="">
[03:11:01.267]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:01.267]  
[03:11:01.267]  !!! E320 : DAP access error
[03:11:01.267]  
[03:11:01.267]          </block>
[03:11:01.267]          // end if-block "!hasDormant"
[03:11:01.267]        </control>
[03:11:01.267]        // end if-block "isSWJ"
[03:11:01.267]      </control>
[03:11:01.267]      // end if-block "protType == 2"
[03:11:01.267]    </control>
[03:11:01.267]  </sequence>
[03:11:01.267]  
[03:11:01.529]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:01.529]  
[03:11:01.530]  <debugvars>
[03:11:01.530]    // Pre-defined
[03:11:01.530]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:01.530]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:01.530]    __dp=0x00000000
[03:11:01.530]    __ap=0x00000000
[03:11:01.530]    __traceout=0x00000000      (Trace Disabled)
[03:11:01.530]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:01.530]    __FlashAddr=0x00000000
[03:11:01.530]    __FlashLen=0x00000000
[03:11:01.530]    __FlashArg=0x00000000
[03:11:01.530]    __FlashOp=0x00000000
[03:11:01.530]    __Result=0x00000000
[03:11:01.530]  </debugvars>
[03:11:01.530]  
[03:11:01.530]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:01.530]    <block atomic="false" info="">
[03:11:01.530]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:01.530]        // -> [isSWJ <= 0x00000001]
[03:11:01.530]      __var hasDormant = __protocol & 0x00020000;
[03:11:01.532]        // -> [hasDormant <= 0x00000000]
[03:11:01.532]      __var protType   = __protocol & 0x0000FFFF;
[03:11:01.532]        // -> [protType <= 0x00000002]
[03:11:01.532]    </block>
[03:11:01.532]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:01.532]      // if-block "protType == 1"
[03:11:01.532]        // =>  FALSE
[03:11:01.532]      // skip if-block "protType == 1"
[03:11:01.532]    </control>
[03:11:01.533]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:01.533]      // if-block "protType == 2"
[03:11:01.533]        // =>  TRUE
[03:11:01.533]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:01.533]        // if-block "isSWJ"
[03:11:01.533]          // =>  TRUE
[03:11:01.533]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:01.533]          // if-block "hasDormant"
[03:11:01.533]            // =>  FALSE
[03:11:01.533]          // skip if-block "hasDormant"
[03:11:01.533]        </control>
[03:11:01.533]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:01.533]          // if-block "!hasDormant"
[03:11:01.533]            // =>  TRUE
[03:11:01.534]          <block atomic="false" info="">
[03:11:01.534]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:01.534]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:01.534]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:01.538]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:01.538]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:01.538]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:01.538]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:01.539]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:01.540]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:01.540]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:01.540]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:01.541]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:01.541]          </block>
[03:11:01.541]          // end if-block "!hasDormant"
[03:11:01.542]        </control>
[03:11:01.542]        // end if-block "isSWJ"
[03:11:01.542]      </control>
[03:11:01.542]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:01.542]        // if-block "!isSWJ"
[03:11:01.543]          // =>  FALSE
[03:11:01.543]        // skip if-block "!isSWJ"
[03:11:01.543]      </control>
[03:11:01.543]      <block atomic="false" info="">
[03:11:01.543]        ReadDP(0x0);
[03:11:01.543]  
[03:11:01.543]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:01.543]  
[03:11:01.543]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:01.543]      </block>
[03:11:01.543]      // end if-block "protType == 2"
[03:11:01.543]    </control>
[03:11:01.543]  </sequence>
[03:11:01.543]  
[03:11:01.798]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:01.798]  
[03:11:01.800]  <debugvars>
[03:11:01.800]    // Pre-defined
[03:11:01.800]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:01.800]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:01.800]    __dp=0x00000000
[03:11:01.800]    __ap=0x00000000
[03:11:01.800]    __traceout=0x00000000      (Trace Disabled)
[03:11:01.802]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:01.802]    __FlashAddr=0x00000000
[03:11:01.802]    __FlashLen=0x00000000
[03:11:01.802]    __FlashArg=0x00000000
[03:11:01.802]    __FlashOp=0x00000000
[03:11:01.802]    __Result=0x00000000
[03:11:01.802]  </debugvars>
[03:11:01.802]  
[03:11:01.802]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:01.802]    <block atomic="false" info="">
[03:11:01.802]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:01.803]        // -> [isSWJ <= 0x00000001]
[03:11:01.803]      __var hasDormant = __protocol & 0x00020000;
[03:11:01.803]        // -> [hasDormant <= 0x00000000]
[03:11:01.803]      __var protType   = __protocol & 0x0000FFFF;
[03:11:01.803]        // -> [protType <= 0x00000002]
[03:11:01.803]    </block>
[03:11:01.803]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:01.803]      // if-block "protType == 1"
[03:11:01.803]        // =>  FALSE
[03:11:01.803]      // skip if-block "protType == 1"
[03:11:01.804]    </control>
[03:11:01.804]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:01.804]      // if-block "protType == 2"
[03:11:01.804]        // =>  TRUE
[03:11:01.804]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:01.804]        // if-block "isSWJ"
[03:11:01.804]          // =>  TRUE
[03:11:01.804]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:01.804]          // if-block "hasDormant"
[03:11:01.804]            // =>  FALSE
[03:11:01.804]          // skip if-block "hasDormant"
[03:11:01.805]        </control>
[03:11:01.805]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:01.805]          // if-block "!hasDormant"
[03:11:01.805]            // =>  TRUE
[03:11:01.805]          <block atomic="false" info="">
[03:11:01.805]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:01.805]  
[03:11:01.805]  !!! E320 : DAP access error
[03:11:01.805]  
[03:11:01.806]          </block>
[03:11:01.806]          // end if-block "!hasDormant"
[03:11:01.806]        </control>
[03:11:01.806]        // end if-block "isSWJ"
[03:11:01.806]      </control>
[03:11:01.806]      // end if-block "protType == 2"
[03:11:01.806]    </control>
[03:11:01.806]  </sequence>
[03:11:01.806]  
[03:11:02.062]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:02.062]  
[03:11:02.064]  <debugvars>
[03:11:02.064]    // Pre-defined
[03:11:02.064]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:02.064]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:02.064]    __dp=0x00000000
[03:11:02.064]    __ap=0x00000000
[03:11:02.064]    __traceout=0x00000000      (Trace Disabled)
[03:11:02.064]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:02.064]    __FlashAddr=0x00000000
[03:11:02.064]    __FlashLen=0x00000000
[03:11:02.064]    __FlashArg=0x00000000
[03:11:02.064]    __FlashOp=0x00000000
[03:11:02.064]    __Result=0x00000000
[03:11:02.064]  </debugvars>
[03:11:02.064]  
[03:11:02.064]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:02.065]    <block atomic="false" info="">
[03:11:02.065]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:02.065]        // -> [isSWJ <= 0x00000001]
[03:11:02.065]      __var hasDormant = __protocol & 0x00020000;
[03:11:02.065]        // -> [hasDormant <= 0x00000000]
[03:11:02.065]      __var protType   = __protocol & 0x0000FFFF;
[03:11:02.065]        // -> [protType <= 0x00000002]
[03:11:02.066]    </block>
[03:11:02.066]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:02.066]      // if-block "protType == 1"
[03:11:02.066]        // =>  FALSE
[03:11:02.066]      // skip if-block "protType == 1"
[03:11:02.066]    </control>
[03:11:02.066]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:02.066]      // if-block "protType == 2"
[03:11:02.066]        // =>  TRUE
[03:11:02.066]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:02.066]        // if-block "isSWJ"
[03:11:02.066]          // =>  TRUE
[03:11:02.066]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:02.066]          // if-block "hasDormant"
[03:11:02.066]            // =>  FALSE
[03:11:02.066]          // skip if-block "hasDormant"
[03:11:02.066]        </control>
[03:11:02.066]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:02.066]          // if-block "!hasDormant"
[03:11:02.066]            // =>  TRUE
[03:11:02.066]          <block atomic="false" info="">
[03:11:02.066]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:02.066]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:02.066]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:02.070]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:02.070]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:02.070]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:02.070]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:02.083]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:02.083]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:02.083]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:02.083]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:02.095]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:02.095]          </block>
[03:11:02.095]          // end if-block "!hasDormant"
[03:11:02.095]        </control>
[03:11:02.095]        // end if-block "isSWJ"
[03:11:02.095]      </control>
[03:11:02.095]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:02.095]        // if-block "!isSWJ"
[03:11:02.095]          // =>  FALSE
[03:11:02.095]        // skip if-block "!isSWJ"
[03:11:02.095]      </control>
[03:11:02.095]      <block atomic="false" info="">
[03:11:02.095]        ReadDP(0x0);
[03:11:02.099]  
[03:11:02.099]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:02.099]  
[03:11:02.099]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:02.099]      </block>
[03:11:02.099]      // end if-block "protType == 2"
[03:11:02.099]    </control>
[03:11:02.099]  </sequence>
[03:11:02.099]  
[03:11:02.354]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:02.354]  
[03:11:02.355]  <debugvars>
[03:11:02.355]    // Pre-defined
[03:11:02.355]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:02.355]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:02.355]    __dp=0x00000000
[03:11:02.355]    __ap=0x00000000
[03:11:02.355]    __traceout=0x00000000      (Trace Disabled)
[03:11:02.355]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:02.355]    __FlashAddr=0x00000000
[03:11:02.355]    __FlashLen=0x00000000
[03:11:02.355]    __FlashArg=0x00000000
[03:11:02.355]    __FlashOp=0x00000000
[03:11:02.355]    __Result=0x00000000
[03:11:02.355]  </debugvars>
[03:11:02.355]  
[03:11:02.355]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:02.355]    <block atomic="false" info="">
[03:11:02.355]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:02.355]        // -> [isSWJ <= 0x00000001]
[03:11:02.355]      __var hasDormant = __protocol & 0x00020000;
[03:11:02.355]        // -> [hasDormant <= 0x00000000]
[03:11:02.355]      __var protType   = __protocol & 0x0000FFFF;
[03:11:02.355]        // -> [protType <= 0x00000002]
[03:11:02.355]    </block>
[03:11:02.358]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:02.358]      // if-block "protType == 1"
[03:11:02.358]        // =>  FALSE
[03:11:02.358]      // skip if-block "protType == 1"
[03:11:02.358]    </control>
[03:11:02.358]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:02.358]      // if-block "protType == 2"
[03:11:02.358]        // =>  TRUE
[03:11:02.358]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:02.358]        // if-block "isSWJ"
[03:11:02.358]          // =>  TRUE
[03:11:02.358]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:02.358]          // if-block "hasDormant"
[03:11:02.358]            // =>  FALSE
[03:11:02.358]          // skip if-block "hasDormant"
[03:11:02.358]        </control>
[03:11:02.358]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:02.358]          // if-block "!hasDormant"
[03:11:02.358]            // =>  TRUE
[03:11:02.358]          <block atomic="false" info="">
[03:11:02.358]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:02.358]  
[03:11:02.358]  !!! E320 : DAP access error
[03:11:02.358]  
[03:11:02.358]          </block>
[03:11:02.358]          // end if-block "!hasDormant"
[03:11:02.358]        </control>
[03:11:02.358]        // end if-block "isSWJ"
[03:11:02.362]      </control>
[03:11:02.362]      // end if-block "protType == 2"
[03:11:02.362]    </control>
[03:11:02.362]  </sequence>
[03:11:02.362]  
[03:11:02.617]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:02.617]  
[03:11:02.619]  <debugvars>
[03:11:02.619]    // Pre-defined
[03:11:02.619]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:02.619]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:02.619]    __dp=0x00000000
[03:11:02.619]    __ap=0x00000000
[03:11:02.619]    __traceout=0x00000000      (Trace Disabled)
[03:11:02.619]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:02.619]    __FlashAddr=0x00000000
[03:11:02.619]    __FlashLen=0x00000000
[03:11:02.619]    __FlashArg=0x00000000
[03:11:02.619]    __FlashOp=0x00000000
[03:11:02.619]    __Result=0x00000000
[03:11:02.619]  </debugvars>
[03:11:02.619]  
[03:11:02.619]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:02.619]    <block atomic="false" info="">
[03:11:02.619]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:02.621]        // -> [isSWJ <= 0x00000001]
[03:11:02.621]      __var hasDormant = __protocol & 0x00020000;
[03:11:02.621]        // -> [hasDormant <= 0x00000000]
[03:11:02.621]      __var protType   = __protocol & 0x0000FFFF;
[03:11:02.621]        // -> [protType <= 0x00000002]
[03:11:02.621]    </block>
[03:11:02.621]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:02.621]      // if-block "protType == 1"
[03:11:02.621]        // =>  FALSE
[03:11:02.621]      // skip if-block "protType == 1"
[03:11:02.621]    </control>
[03:11:02.621]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:02.621]      // if-block "protType == 2"
[03:11:02.621]        // =>  TRUE
[03:11:02.621]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:02.621]        // if-block "isSWJ"
[03:11:02.621]          // =>  TRUE
[03:11:02.621]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:02.621]          // if-block "hasDormant"
[03:11:02.623]            // =>  FALSE
[03:11:02.623]          // skip if-block "hasDormant"
[03:11:02.623]        </control>
[03:11:02.623]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:02.623]          // if-block "!hasDormant"
[03:11:02.623]            // =>  TRUE
[03:11:02.623]          <block atomic="false" info="">
[03:11:02.623]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:02.624]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:02.624]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:02.624]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:02.624]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:02.624]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:02.624]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:02.627]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:02.627]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:02.627]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:02.627]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:02.628]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:02.628]          </block>
[03:11:02.629]          // end if-block "!hasDormant"
[03:11:02.629]        </control>
[03:11:02.629]        // end if-block "isSWJ"
[03:11:02.629]      </control>
[03:11:02.629]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:02.629]        // if-block "!isSWJ"
[03:11:02.629]          // =>  FALSE
[03:11:02.629]        // skip if-block "!isSWJ"
[03:11:02.629]      </control>
[03:11:02.629]      <block atomic="false" info="">
[03:11:02.631]        ReadDP(0x0);
[03:11:02.631]  
[03:11:02.631]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:02.631]  
[03:11:02.631]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:02.631]      </block>
[03:11:02.631]      // end if-block "protType == 2"
[03:11:02.631]    </control>
[03:11:02.631]  </sequence>
[03:11:02.631]  
[03:11:02.882]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:02.882]  
[03:11:02.884]  <debugvars>
[03:11:02.884]    // Pre-defined
[03:11:02.884]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:02.884]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:02.884]    __dp=0x00000000
[03:11:02.884]    __ap=0x00000000
[03:11:02.884]    __traceout=0x00000000      (Trace Disabled)
[03:11:02.884]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:02.884]    __FlashAddr=0x00000000
[03:11:02.884]    __FlashLen=0x00000000
[03:11:02.884]    __FlashArg=0x00000000
[03:11:02.884]    __FlashOp=0x00000000
[03:11:02.884]    __Result=0x00000000
[03:11:02.885]  </debugvars>
[03:11:02.885]  
[03:11:02.885]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:02.885]    <block atomic="false" info="">
[03:11:02.885]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:02.885]        // -> [isSWJ <= 0x00000001]
[03:11:02.885]      __var hasDormant = __protocol & 0x00020000;
[03:11:02.885]        // -> [hasDormant <= 0x00000000]
[03:11:02.885]      __var protType   = __protocol & 0x0000FFFF;
[03:11:02.885]        // -> [protType <= 0x00000002]
[03:11:02.886]    </block>
[03:11:02.886]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:02.886]      // if-block "protType == 1"
[03:11:02.886]        // =>  FALSE
[03:11:02.886]      // skip if-block "protType == 1"
[03:11:02.886]    </control>
[03:11:02.886]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:02.886]      // if-block "protType == 2"
[03:11:02.886]        // =>  TRUE
[03:11:02.886]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:02.886]        // if-block "isSWJ"
[03:11:02.886]          // =>  TRUE
[03:11:02.888]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:02.888]          // if-block "hasDormant"
[03:11:02.888]            // =>  FALSE
[03:11:02.888]          // skip if-block "hasDormant"
[03:11:02.888]        </control>
[03:11:02.888]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:02.888]          // if-block "!hasDormant"
[03:11:02.888]            // =>  TRUE
[03:11:02.888]          <block atomic="false" info="">
[03:11:02.888]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:02.889]  
[03:11:02.889]  !!! E320 : DAP access error
[03:11:02.889]  
[03:11:02.889]          </block>
[03:11:02.889]          // end if-block "!hasDormant"
[03:11:02.889]        </control>
[03:11:02.889]        // end if-block "isSWJ"
[03:11:02.889]      </control>
[03:11:02.889]      // end if-block "protType == 2"
[03:11:02.889]    </control>
[03:11:02.889]  </sequence>
[03:11:02.889]  
[03:11:03.141]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:03.141]  
[03:11:03.142]  <debugvars>
[03:11:03.142]    // Pre-defined
[03:11:03.142]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:03.142]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:03.142]    __dp=0x00000000
[03:11:03.142]    __ap=0x00000000
[03:11:03.142]    __traceout=0x00000000      (Trace Disabled)
[03:11:03.142]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:03.142]    __FlashAddr=0x00000000
[03:11:03.142]    __FlashLen=0x00000000
[03:11:03.142]    __FlashArg=0x00000000
[03:11:03.142]    __FlashOp=0x00000000
[03:11:03.142]    __Result=0x00000000
[03:11:03.142]  </debugvars>
[03:11:03.142]  
[03:11:03.142]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:03.142]    <block atomic="false" info="">
[03:11:03.142]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:03.142]        // -> [isSWJ <= 0x00000001]
[03:11:03.142]      __var hasDormant = __protocol & 0x00020000;
[03:11:03.142]        // -> [hasDormant <= 0x00000000]
[03:11:03.142]      __var protType   = __protocol & 0x0000FFFF;
[03:11:03.142]        // -> [protType <= 0x00000002]
[03:11:03.142]    </block>
[03:11:03.142]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:03.142]      // if-block "protType == 1"
[03:11:03.145]        // =>  FALSE
[03:11:03.145]      // skip if-block "protType == 1"
[03:11:03.145]    </control>
[03:11:03.145]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:03.145]      // if-block "protType == 2"
[03:11:03.145]        // =>  TRUE
[03:11:03.145]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:03.145]        // if-block "isSWJ"
[03:11:03.145]          // =>  TRUE
[03:11:03.145]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:03.145]          // if-block "hasDormant"
[03:11:03.145]            // =>  FALSE
[03:11:03.145]          // skip if-block "hasDormant"
[03:11:03.145]        </control>
[03:11:03.145]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:03.145]          // if-block "!hasDormant"
[03:11:03.145]            // =>  TRUE
[03:11:03.145]          <block atomic="false" info="">
[03:11:03.145]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:03.145]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:03.145]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:03.149]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:03.149]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:03.153]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:03.153]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:03.153]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:03.153]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:03.153]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:03.153]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:03.161]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:03.161]          </block>
[03:11:03.161]          // end if-block "!hasDormant"
[03:11:03.161]        </control>
[03:11:03.161]        // end if-block "isSWJ"
[03:11:03.161]      </control>
[03:11:03.161]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:03.161]        // if-block "!isSWJ"
[03:11:03.161]          // =>  FALSE
[03:11:03.161]        // skip if-block "!isSWJ"
[03:11:03.161]      </control>
[03:11:03.161]      <block atomic="false" info="">
[03:11:03.161]        ReadDP(0x0);
[03:11:03.161]  
[03:11:03.161]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:03.161]  
[03:11:03.161]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:03.161]      </block>
[03:11:03.161]      // end if-block "protType == 2"
[03:11:03.161]    </control>
[03:11:03.161]  </sequence>
[03:11:03.161]  
[03:11:03.413]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:03.413]  
[03:11:03.415]  <debugvars>
[03:11:03.415]    // Pre-defined
[03:11:03.415]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:03.415]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:03.415]    __dp=0x00000000
[03:11:03.415]    __ap=0x00000000
[03:11:03.415]    __traceout=0x00000000      (Trace Disabled)
[03:11:03.415]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:03.415]    __FlashAddr=0x00000000
[03:11:03.415]    __FlashLen=0x00000000
[03:11:03.415]    __FlashArg=0x00000000
[03:11:03.415]    __FlashOp=0x00000000
[03:11:03.415]    __Result=0x00000000
[03:11:03.415]  </debugvars>
[03:11:03.415]  
[03:11:03.415]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:03.415]    <block atomic="false" info="">
[03:11:03.415]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:03.415]        // -> [isSWJ <= 0x00000001]
[03:11:03.417]      __var hasDormant = __protocol & 0x00020000;
[03:11:03.417]        // -> [hasDormant <= 0x00000000]
[03:11:03.417]      __var protType   = __protocol & 0x0000FFFF;
[03:11:03.417]        // -> [protType <= 0x00000002]
[03:11:03.417]    </block>
[03:11:03.417]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:03.418]      // if-block "protType == 1"
[03:11:03.418]        // =>  FALSE
[03:11:03.418]      // skip if-block "protType == 1"
[03:11:03.418]    </control>
[03:11:03.418]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:03.418]      // if-block "protType == 2"
[03:11:03.418]        // =>  TRUE
[03:11:03.419]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:03.419]        // if-block "isSWJ"
[03:11:03.419]          // =>  TRUE
[03:11:03.419]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:03.419]          // if-block "hasDormant"
[03:11:03.419]            // =>  FALSE
[03:11:03.419]          // skip if-block "hasDormant"
[03:11:03.419]        </control>
[03:11:03.419]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:03.419]          // if-block "!hasDormant"
[03:11:03.419]            // =>  TRUE
[03:11:03.419]          <block atomic="false" info="">
[03:11:03.420]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:03.420]  
[03:11:03.420]  !!! E320 : DAP access error
[03:11:03.420]  
[03:11:03.420]          </block>
[03:11:03.420]          // end if-block "!hasDormant"
[03:11:03.420]        </control>
[03:11:03.420]        // end if-block "isSWJ"
[03:11:03.420]      </control>
[03:11:03.420]      // end if-block "protType == 2"
[03:11:03.422]    </control>
[03:11:03.422]  </sequence>
[03:11:03.422]  
[03:11:03.673]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:03.673]  
[03:11:03.676]  <debugvars>
[03:11:03.676]    // Pre-defined
[03:11:03.676]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:03.676]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:03.676]    __dp=0x00000000
[03:11:03.676]    __ap=0x00000000
[03:11:03.676]    __traceout=0x00000000      (Trace Disabled)
[03:11:03.676]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:03.676]    __FlashAddr=0x00000000
[03:11:03.676]    __FlashLen=0x00000000
[03:11:03.676]    __FlashArg=0x00000000
[03:11:03.676]    __FlashOp=0x00000000
[03:11:03.676]    __Result=0x00000000
[03:11:03.676]  </debugvars>
[03:11:03.678]  
[03:11:03.678]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:03.678]    <block atomic="false" info="">
[03:11:03.678]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:03.678]        // -> [isSWJ <= 0x00000001]
[03:11:03.678]      __var hasDormant = __protocol & 0x00020000;
[03:11:03.678]        // -> [hasDormant <= 0x00000000]
[03:11:03.678]      __var protType   = __protocol & 0x0000FFFF;
[03:11:03.678]        // -> [protType <= 0x00000002]
[03:11:03.678]    </block>
[03:11:03.678]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:03.678]      // if-block "protType == 1"
[03:11:03.678]        // =>  FALSE
[03:11:03.678]      // skip if-block "protType == 1"
[03:11:03.678]    </control>
[03:11:03.678]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:03.678]      // if-block "protType == 2"
[03:11:03.678]        // =>  TRUE
[03:11:03.678]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:03.678]        // if-block "isSWJ"
[03:11:03.678]          // =>  TRUE
[03:11:03.678]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:03.678]          // if-block "hasDormant"
[03:11:03.678]            // =>  FALSE
[03:11:03.678]          // skip if-block "hasDormant"
[03:11:03.678]        </control>
[03:11:03.678]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:03.678]          // if-block "!hasDormant"
[03:11:03.678]            // =>  TRUE
[03:11:03.678]          <block atomic="false" info="">
[03:11:03.678]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:03.678]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:03.678]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:03.682]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:03.682]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:03.682]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:03.682]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:03.684]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:03.684]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:03.684]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:03.684]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:03.684]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:03.684]          </block>
[03:11:03.684]          // end if-block "!hasDormant"
[03:11:03.684]        </control>
[03:11:03.684]        // end if-block "isSWJ"
[03:11:03.686]      </control>
[03:11:03.686]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:03.686]        // if-block "!isSWJ"
[03:11:03.686]          // =>  FALSE
[03:11:03.686]        // skip if-block "!isSWJ"
[03:11:03.686]      </control>
[03:11:03.686]      <block atomic="false" info="">
[03:11:03.686]        ReadDP(0x0);
[03:11:03.686]  
[03:11:03.686]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:03.686]  
[03:11:03.686]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:03.686]      </block>
[03:11:03.686]      // end if-block "protType == 2"
[03:11:03.686]    </control>
[03:11:03.686]  </sequence>
[03:11:03.686]  
[03:11:03.938]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:03.938]  
[03:11:03.939]  <debugvars>
[03:11:03.939]    // Pre-defined
[03:11:03.939]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:03.939]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:03.939]    __dp=0x00000000
[03:11:03.939]    __ap=0x00000000
[03:11:03.939]    __traceout=0x00000000      (Trace Disabled)
[03:11:03.939]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:03.939]    __FlashAddr=0x00000000
[03:11:03.939]    __FlashLen=0x00000000
[03:11:03.939]    __FlashArg=0x00000000
[03:11:03.939]    __FlashOp=0x00000000
[03:11:03.939]    __Result=0x00000000
[03:11:03.939]  </debugvars>
[03:11:03.939]  
[03:11:03.939]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:03.939]    <block atomic="false" info="">
[03:11:03.939]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:03.939]        // -> [isSWJ <= 0x00000001]
[03:11:03.939]      __var hasDormant = __protocol & 0x00020000;
[03:11:03.942]        // -> [hasDormant <= 0x00000000]
[03:11:03.942]      __var protType   = __protocol & 0x0000FFFF;
[03:11:03.942]        // -> [protType <= 0x00000002]
[03:11:03.942]    </block>
[03:11:03.942]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:03.942]      // if-block "protType == 1"
[03:11:03.942]        // =>  FALSE
[03:11:03.942]      // skip if-block "protType == 1"
[03:11:03.942]    </control>
[03:11:03.942]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:03.942]      // if-block "protType == 2"
[03:11:03.942]        // =>  TRUE
[03:11:03.942]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:03.942]        // if-block "isSWJ"
[03:11:03.942]          // =>  TRUE
[03:11:03.942]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:03.942]          // if-block "hasDormant"
[03:11:03.942]            // =>  FALSE
[03:11:03.942]          // skip if-block "hasDormant"
[03:11:03.942]        </control>
[03:11:03.942]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:03.942]          // if-block "!hasDormant"
[03:11:03.942]            // =>  TRUE
[03:11:03.942]          <block atomic="false" info="">
[03:11:03.942]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:03.942]  
[03:11:03.942]  !!! E320 : DAP access error
[03:11:03.942]  
[03:11:03.942]          </block>
[03:11:03.942]          // end if-block "!hasDormant"
[03:11:03.942]        </control>
[03:11:03.942]        // end if-block "isSWJ"
[03:11:03.942]      </control>
[03:11:03.942]      // end if-block "protType == 2"
[03:11:03.946]    </control>
[03:11:03.946]  </sequence>
[03:11:03.946]  
[03:11:04.208]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:04.208]  
[03:11:04.210]  <debugvars>
[03:11:04.210]    // Pre-defined
[03:11:04.210]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:04.210]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:04.210]    __dp=0x00000000
[03:11:04.210]    __ap=0x00000000
[03:11:04.210]    __traceout=0x00000000      (Trace Disabled)
[03:11:04.210]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:04.210]    __FlashAddr=0x00000000
[03:11:04.210]    __FlashLen=0x00000000
[03:11:04.210]    __FlashArg=0x00000000
[03:11:04.210]    __FlashOp=0x00000000
[03:11:04.210]    __Result=0x00000000
[03:11:04.210]  </debugvars>
[03:11:04.210]  
[03:11:04.210]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:04.210]    <block atomic="false" info="">
[03:11:04.210]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:04.210]        // -> [isSWJ <= 0x00000001]
[03:11:04.212]      __var hasDormant = __protocol & 0x00020000;
[03:11:04.212]        // -> [hasDormant <= 0x00000000]
[03:11:04.212]      __var protType   = __protocol & 0x0000FFFF;
[03:11:04.212]        // -> [protType <= 0x00000002]
[03:11:04.212]    </block>
[03:11:04.212]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:04.212]      // if-block "protType == 1"
[03:11:04.212]        // =>  FALSE
[03:11:04.212]      // skip if-block "protType == 1"
[03:11:04.212]    </control>
[03:11:04.212]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:04.212]      // if-block "protType == 2"
[03:11:04.212]        // =>  TRUE
[03:11:04.212]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:04.212]        // if-block "isSWJ"
[03:11:04.212]          // =>  TRUE
[03:11:04.212]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:04.212]          // if-block "hasDormant"
[03:11:04.212]            // =>  FALSE
[03:11:04.212]          // skip if-block "hasDormant"
[03:11:04.212]        </control>
[03:11:04.212]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:04.215]          // if-block "!hasDormant"
[03:11:04.215]            // =>  TRUE
[03:11:04.215]          <block atomic="false" info="">
[03:11:04.215]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:04.215]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:04.215]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:04.217]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:04.217]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:04.217]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:04.217]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:04.219]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:04.219]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:04.219]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:04.219]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:04.221]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:04.221]          </block>
[03:11:04.221]          // end if-block "!hasDormant"
[03:11:04.221]        </control>
[03:11:04.222]        // end if-block "isSWJ"
[03:11:04.223]      </control>
[03:11:04.223]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:04.223]        // if-block "!isSWJ"
[03:11:04.223]          // =>  FALSE
[03:11:04.223]        // skip if-block "!isSWJ"
[03:11:04.223]      </control>
[03:11:04.223]      <block atomic="false" info="">
[03:11:04.223]        ReadDP(0x0);
[03:11:04.223]  
[03:11:04.223]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:04.223]  
[03:11:04.223]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:04.223]      </block>
[03:11:04.223]      // end if-block "protType == 2"
[03:11:04.223]    </control>
[03:11:04.224]  </sequence>
[03:11:04.224]  
[03:11:04.478]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:04.478]  
[03:11:04.480]  <debugvars>
[03:11:04.480]    // Pre-defined
[03:11:04.480]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:04.480]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:04.480]    __dp=0x00000000
[03:11:04.480]    __ap=0x00000000
[03:11:04.480]    __traceout=0x00000000      (Trace Disabled)
[03:11:04.481]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:04.481]    __FlashAddr=0x00000000
[03:11:04.481]    __FlashLen=0x00000000
[03:11:04.481]    __FlashArg=0x00000000
[03:11:04.481]    __FlashOp=0x00000000
[03:11:04.481]    __Result=0x00000000
[03:11:04.481]  </debugvars>
[03:11:04.481]  
[03:11:04.481]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:04.481]    <block atomic="false" info="">
[03:11:04.481]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:04.481]        // -> [isSWJ <= 0x00000001]
[03:11:04.481]      __var hasDormant = __protocol & 0x00020000;
[03:11:04.481]        // -> [hasDormant <= 0x00000000]
[03:11:04.483]      __var protType   = __protocol & 0x0000FFFF;
[03:11:04.483]        // -> [protType <= 0x00000002]
[03:11:04.483]    </block>
[03:11:04.483]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:04.483]      // if-block "protType == 1"
[03:11:04.483]        // =>  FALSE
[03:11:04.483]      // skip if-block "protType == 1"
[03:11:04.483]    </control>
[03:11:04.483]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:04.483]      // if-block "protType == 2"
[03:11:04.483]        // =>  TRUE
[03:11:04.483]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:04.483]        // if-block "isSWJ"
[03:11:04.485]          // =>  TRUE
[03:11:04.485]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:04.485]          // if-block "hasDormant"
[03:11:04.485]            // =>  FALSE
[03:11:04.485]          // skip if-block "hasDormant"
[03:11:04.485]        </control>
[03:11:04.485]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:04.485]          // if-block "!hasDormant"
[03:11:04.485]            // =>  TRUE
[03:11:04.485]          <block atomic="false" info="">
[03:11:04.485]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:04.486]  
[03:11:04.486]  !!! E320 : DAP access error
[03:11:04.486]  
[03:11:04.486]          </block>
[03:11:04.486]          // end if-block "!hasDormant"
[03:11:04.486]        </control>
[03:11:04.486]        // end if-block "isSWJ"
[03:11:04.486]      </control>
[03:11:04.486]      // end if-block "protType == 2"
[03:11:04.486]    </control>
[03:11:04.487]  </sequence>
[03:11:04.487]  
[03:11:04.748]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:04.748]  
[03:11:04.749]  <debugvars>
[03:11:04.749]    // Pre-defined
[03:11:04.749]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:04.749]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:04.749]    __dp=0x00000000
[03:11:04.749]    __ap=0x00000000
[03:11:04.749]    __traceout=0x00000000      (Trace Disabled)
[03:11:04.749]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:04.749]    __FlashAddr=0x00000000
[03:11:04.750]    __FlashLen=0x00000000
[03:11:04.750]    __FlashArg=0x00000000
[03:11:04.750]    __FlashOp=0x00000000
[03:11:04.750]    __Result=0x00000000
[03:11:04.750]  </debugvars>
[03:11:04.750]  
[03:11:04.750]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:04.750]    <block atomic="false" info="">
[03:11:04.750]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:04.750]        // -> [isSWJ <= 0x00000001]
[03:11:04.750]      __var hasDormant = __protocol & 0x00020000;
[03:11:04.750]        // -> [hasDormant <= 0x00000000]
[03:11:04.750]      __var protType   = __protocol & 0x0000FFFF;
[03:11:04.750]        // -> [protType <= 0x00000002]
[03:11:04.750]    </block>
[03:11:04.750]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:04.750]      // if-block "protType == 1"
[03:11:04.750]        // =>  FALSE
[03:11:04.750]      // skip if-block "protType == 1"
[03:11:04.752]    </control>
[03:11:04.752]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:04.752]      // if-block "protType == 2"
[03:11:04.752]        // =>  TRUE
[03:11:04.752]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:04.752]        // if-block "isSWJ"
[03:11:04.752]          // =>  TRUE
[03:11:04.752]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:04.752]          // if-block "hasDormant"
[03:11:04.752]            // =>  FALSE
[03:11:04.752]          // skip if-block "hasDormant"
[03:11:04.752]        </control>
[03:11:04.752]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:04.752]          // if-block "!hasDormant"
[03:11:04.752]            // =>  TRUE
[03:11:04.752]          <block atomic="false" info="">
[03:11:04.752]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:04.752]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:04.752]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:04.752]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:04.752]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:04.756]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:04.756]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:04.756]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:04.756]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:04.756]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:04.756]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:04.756]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:04.756]          </block>
[03:11:04.756]          // end if-block "!hasDormant"
[03:11:04.760]        </control>
[03:11:04.760]        // end if-block "isSWJ"
[03:11:04.760]      </control>
[03:11:04.760]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:04.760]        // if-block "!isSWJ"
[03:11:04.760]          // =>  FALSE
[03:11:04.760]        // skip if-block "!isSWJ"
[03:11:04.760]      </control>
[03:11:04.760]      <block atomic="false" info="">
[03:11:04.760]        ReadDP(0x0);
[03:11:04.760]  
[03:11:04.760]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:04.760]  
[03:11:04.760]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:04.760]      </block>
[03:11:04.760]      // end if-block "protType == 2"
[03:11:04.760]    </control>
[03:11:04.760]  </sequence>
[03:11:04.760]  
[03:11:05.022]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:05.022]  
[03:11:05.024]  <debugvars>
[03:11:05.024]    // Pre-defined
[03:11:05.024]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:05.024]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:05.024]    __dp=0x00000000
[03:11:05.024]    __ap=0x00000000
[03:11:05.024]    __traceout=0x00000000      (Trace Disabled)
[03:11:05.024]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:05.024]    __FlashAddr=0x00000000
[03:11:05.024]    __FlashLen=0x00000000
[03:11:05.024]    __FlashArg=0x00000000
[03:11:05.024]    __FlashOp=0x00000000
[03:11:05.024]    __Result=0x00000000
[03:11:05.024]  </debugvars>
[03:11:05.024]  
[03:11:05.026]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:05.026]    <block atomic="false" info="">
[03:11:05.026]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:05.026]        // -> [isSWJ <= 0x00000001]
[03:11:05.026]      __var hasDormant = __protocol & 0x00020000;
[03:11:05.026]        // -> [hasDormant <= 0x00000000]
[03:11:05.026]      __var protType   = __protocol & 0x0000FFFF;
[03:11:05.026]        // -> [protType <= 0x00000002]
[03:11:05.026]    </block>
[03:11:05.026]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:05.027]      // if-block "protType == 1"
[03:11:05.027]        // =>  FALSE
[03:11:05.027]      // skip if-block "protType == 1"
[03:11:05.027]    </control>
[03:11:05.027]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:05.027]      // if-block "protType == 2"
[03:11:05.027]        // =>  TRUE
[03:11:05.027]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:05.027]        // if-block "isSWJ"
[03:11:05.027]          // =>  TRUE
[03:11:05.027]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:05.027]          // if-block "hasDormant"
[03:11:05.027]            // =>  FALSE
[03:11:05.027]          // skip if-block "hasDormant"
[03:11:05.027]        </control>
[03:11:05.027]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:05.027]          // if-block "!hasDormant"
[03:11:05.027]            // =>  TRUE
[03:11:05.027]          <block atomic="false" info="">
[03:11:05.029]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:05.029]  
[03:11:05.029]  !!! E320 : DAP access error
[03:11:05.029]  
[03:11:05.029]          </block>
[03:11:05.029]          // end if-block "!hasDormant"
[03:11:05.029]        </control>
[03:11:05.029]        // end if-block "isSWJ"
[03:11:05.029]      </control>
[03:11:05.029]      // end if-block "protType == 2"
[03:11:05.029]    </control>
[03:11:05.029]  </sequence>
[03:11:05.029]  
[03:11:05.285]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:05.285]  
[03:11:05.287]  <debugvars>
[03:11:05.287]    // Pre-defined
[03:11:05.287]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:05.287]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:05.287]    __dp=0x00000000
[03:11:05.287]    __ap=0x00000000
[03:11:05.287]    __traceout=0x00000000      (Trace Disabled)
[03:11:05.287]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:05.287]    __FlashAddr=0x00000000
[03:11:05.287]    __FlashLen=0x00000000
[03:11:05.287]    __FlashArg=0x00000000
[03:11:05.287]    __FlashOp=0x00000000
[03:11:05.287]    __Result=0x00000000
[03:11:05.287]  </debugvars>
[03:11:05.287]  
[03:11:05.287]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:05.287]    <block atomic="false" info="">
[03:11:05.287]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:05.287]        // -> [isSWJ <= 0x00000001]
[03:11:05.289]      __var hasDormant = __protocol & 0x00020000;
[03:11:05.289]        // -> [hasDormant <= 0x00000000]
[03:11:05.289]      __var protType   = __protocol & 0x0000FFFF;
[03:11:05.289]        // -> [protType <= 0x00000002]
[03:11:05.289]    </block>
[03:11:05.289]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:05.289]      // if-block "protType == 1"
[03:11:05.289]        // =>  FALSE
[03:11:05.289]      // skip if-block "protType == 1"
[03:11:05.289]    </control>
[03:11:05.289]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:05.289]      // if-block "protType == 2"
[03:11:05.289]        // =>  TRUE
[03:11:05.289]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:05.289]        // if-block "isSWJ"
[03:11:05.289]          // =>  TRUE
[03:11:05.289]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:05.289]          // if-block "hasDormant"
[03:11:05.289]            // =>  FALSE
[03:11:05.289]          // skip if-block "hasDormant"
[03:11:05.289]        </control>
[03:11:05.289]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:05.289]          // if-block "!hasDormant"
[03:11:05.289]            // =>  TRUE
[03:11:05.289]          <block atomic="false" info="">
[03:11:05.289]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:05.289]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:05.289]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:05.293]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:05.293]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:05.293]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:05.293]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:05.297]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:05.297]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:05.297]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:05.297]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:05.297]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:05.297]          </block>
[03:11:05.297]          // end if-block "!hasDormant"
[03:11:05.297]        </control>
[03:11:05.297]        // end if-block "isSWJ"
[03:11:05.297]      </control>
[03:11:05.297]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:05.297]        // if-block "!isSWJ"
[03:11:05.297]          // =>  FALSE
[03:11:05.297]        // skip if-block "!isSWJ"
[03:11:05.297]      </control>
[03:11:05.297]      <block atomic="false" info="">
[03:11:05.297]        ReadDP(0x0);
[03:11:05.297]  
[03:11:05.297]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:05.297]  
[03:11:05.301]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:05.301]      </block>
[03:11:05.301]      // end if-block "protType == 2"
[03:11:05.301]    </control>
[03:11:05.301]  </sequence>
[03:11:05.301]  
[03:11:05.554]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:05.554]  
[03:11:05.556]  <debugvars>
[03:11:05.556]    // Pre-defined
[03:11:05.556]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:05.556]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:05.556]    __dp=0x00000000
[03:11:05.556]    __ap=0x00000000
[03:11:05.556]    __traceout=0x00000000      (Trace Disabled)
[03:11:05.556]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:05.556]    __FlashAddr=0x00000000
[03:11:05.556]    __FlashLen=0x00000000
[03:11:05.556]    __FlashArg=0x00000000
[03:11:05.556]    __FlashOp=0x00000000
[03:11:05.556]    __Result=0x00000000
[03:11:05.556]  </debugvars>
[03:11:05.556]  
[03:11:05.556]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:05.556]    <block atomic="false" info="">
[03:11:05.556]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:05.556]        // -> [isSWJ <= 0x00000001]
[03:11:05.556]      __var hasDormant = __protocol & 0x00020000;
[03:11:05.558]        // -> [hasDormant <= 0x00000000]
[03:11:05.558]      __var protType   = __protocol & 0x0000FFFF;
[03:11:05.558]        // -> [protType <= 0x00000002]
[03:11:05.558]    </block>
[03:11:05.558]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:05.558]      // if-block "protType == 1"
[03:11:05.558]        // =>  FALSE
[03:11:05.558]      // skip if-block "protType == 1"
[03:11:05.558]    </control>
[03:11:05.558]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:05.558]      // if-block "protType == 2"
[03:11:05.558]        // =>  TRUE
[03:11:05.558]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:05.558]        // if-block "isSWJ"
[03:11:05.558]          // =>  TRUE
[03:11:05.558]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:05.558]          // if-block "hasDormant"
[03:11:05.558]            // =>  FALSE
[03:11:05.558]          // skip if-block "hasDormant"
[03:11:05.558]        </control>
[03:11:05.558]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:05.558]          // if-block "!hasDormant"
[03:11:05.558]            // =>  TRUE
[03:11:05.558]          <block atomic="false" info="">
[03:11:05.558]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:05.558]  
[03:11:05.558]  !!! E320 : DAP access error
[03:11:05.558]  
[03:11:05.558]          </block>
[03:11:05.562]          // end if-block "!hasDormant"
[03:11:05.562]        </control>
[03:11:05.562]        // end if-block "isSWJ"
[03:11:05.562]      </control>
[03:11:05.562]      // end if-block "protType == 2"
[03:11:05.562]    </control>
[03:11:05.562]  </sequence>
[03:11:05.562]  
[03:11:05.824]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:05.824]  
[03:11:05.826]  <debugvars>
[03:11:05.826]    // Pre-defined
[03:11:05.826]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:05.826]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:05.826]    __dp=0x00000000
[03:11:05.826]    __ap=0x00000000
[03:11:05.826]    __traceout=0x00000000      (Trace Disabled)
[03:11:05.826]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:05.826]    __FlashAddr=0x00000000
[03:11:05.826]    __FlashLen=0x00000000
[03:11:05.826]    __FlashArg=0x00000000
[03:11:05.826]    __FlashOp=0x00000000
[03:11:05.826]    __Result=0x00000000
[03:11:05.826]  </debugvars>
[03:11:05.826]  
[03:11:05.826]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:05.826]    <block atomic="false" info="">
[03:11:05.826]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:05.826]        // -> [isSWJ <= 0x00000001]
[03:11:05.828]      __var hasDormant = __protocol & 0x00020000;
[03:11:05.828]        // -> [hasDormant <= 0x00000000]
[03:11:05.828]      __var protType   = __protocol & 0x0000FFFF;
[03:11:05.828]        // -> [protType <= 0x00000002]
[03:11:05.828]    </block>
[03:11:05.828]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:05.828]      // if-block "protType == 1"
[03:11:05.828]        // =>  FALSE
[03:11:05.828]      // skip if-block "protType == 1"
[03:11:05.828]    </control>
[03:11:05.828]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:05.828]      // if-block "protType == 2"
[03:11:05.828]        // =>  TRUE
[03:11:05.828]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:05.828]        // if-block "isSWJ"
[03:11:05.828]          // =>  TRUE
[03:11:05.828]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:05.828]          // if-block "hasDormant"
[03:11:05.828]            // =>  FALSE
[03:11:05.828]          // skip if-block "hasDormant"
[03:11:05.828]        </control>
[03:11:05.828]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:05.828]          // if-block "!hasDormant"
[03:11:05.828]            // =>  TRUE
[03:11:05.828]          <block atomic="false" info="">
[03:11:05.828]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:05.828]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:05.828]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:05.832]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:05.832]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:05.832]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:05.832]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:05.832]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:05.832]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:05.832]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:05.832]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:05.836]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:05.836]          </block>
[03:11:05.836]          // end if-block "!hasDormant"
[03:11:05.836]        </control>
[03:11:05.836]        // end if-block "isSWJ"
[03:11:05.836]      </control>
[03:11:05.836]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:05.838]        // if-block "!isSWJ"
[03:11:05.838]          // =>  FALSE
[03:11:05.838]        // skip if-block "!isSWJ"
[03:11:05.838]      </control>
[03:11:05.838]      <block atomic="false" info="">
[03:11:05.838]        ReadDP(0x0);
[03:11:05.838]  
[03:11:05.838]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:05.838]  
[03:11:05.838]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:05.838]      </block>
[03:11:05.838]      // end if-block "protType == 2"
[03:11:05.839]    </control>
[03:11:05.839]  </sequence>
[03:11:05.839]  
[03:11:06.091]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:06.091]  
[03:11:06.092]  <debugvars>
[03:11:06.092]    // Pre-defined
[03:11:06.092]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:06.092]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:06.092]    __dp=0x00000000
[03:11:06.092]    __ap=0x00000000
[03:11:06.092]    __traceout=0x00000000      (Trace Disabled)
[03:11:06.092]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:06.092]    __FlashAddr=0x00000000
[03:11:06.092]    __FlashLen=0x00000000
[03:11:06.092]    __FlashArg=0x00000000
[03:11:06.092]    __FlashOp=0x00000000
[03:11:06.092]    __Result=0x00000000
[03:11:06.092]  </debugvars>
[03:11:06.092]  
[03:11:06.092]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:06.094]    <block atomic="false" info="">
[03:11:06.094]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:06.094]        // -> [isSWJ <= 0x00000001]
[03:11:06.094]      __var hasDormant = __protocol & 0x00020000;
[03:11:06.094]        // -> [hasDormant <= 0x00000000]
[03:11:06.094]      __var protType   = __protocol & 0x0000FFFF;
[03:11:06.094]        // -> [protType <= 0x00000002]
[03:11:06.094]    </block>
[03:11:06.094]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:06.094]      // if-block "protType == 1"
[03:11:06.094]        // =>  FALSE
[03:11:06.094]      // skip if-block "protType == 1"
[03:11:06.094]    </control>
[03:11:06.095]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:06.095]      // if-block "protType == 2"
[03:11:06.095]        // =>  TRUE
[03:11:06.095]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:06.095]        // if-block "isSWJ"
[03:11:06.096]          // =>  TRUE
[03:11:06.096]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:06.096]          // if-block "hasDormant"
[03:11:06.096]            // =>  FALSE
[03:11:06.096]          // skip if-block "hasDormant"
[03:11:06.096]        </control>
[03:11:06.096]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:06.096]          // if-block "!hasDormant"
[03:11:06.096]            // =>  TRUE
[03:11:06.096]          <block atomic="false" info="">
[03:11:06.096]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:06.096]  
[03:11:06.096]  !!! E320 : DAP access error
[03:11:06.096]  
[03:11:06.096]          </block>
[03:11:06.096]          // end if-block "!hasDormant"
[03:11:06.096]        </control>
[03:11:06.096]        // end if-block "isSWJ"
[03:11:06.098]      </control>
[03:11:06.098]      // end if-block "protType == 2"
[03:11:06.098]    </control>
[03:11:06.098]  </sequence>
[03:11:06.098]  
[03:11:06.351]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:06.351]  
[03:11:06.351]  <debugvars>
[03:11:06.351]    // Pre-defined
[03:11:06.351]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:06.351]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:06.351]    __dp=0x00000000
[03:11:06.351]    __ap=0x00000000
[03:11:06.351]    __traceout=0x00000000      (Trace Disabled)
[03:11:06.351]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:06.351]    __FlashAddr=0x00000000
[03:11:06.351]    __FlashLen=0x00000000
[03:11:06.351]    __FlashArg=0x00000000
[03:11:06.351]    __FlashOp=0x00000000
[03:11:06.351]    __Result=0x00000000
[03:11:06.351]  </debugvars>
[03:11:06.351]  
[03:11:06.351]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:06.351]    <block atomic="false" info="">
[03:11:06.351]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:06.351]        // -> [isSWJ <= 0x00000001]
[03:11:06.355]      __var hasDormant = __protocol & 0x00020000;
[03:11:06.355]        // -> [hasDormant <= 0x00000000]
[03:11:06.355]      __var protType   = __protocol & 0x0000FFFF;
[03:11:06.355]        // -> [protType <= 0x00000002]
[03:11:06.355]    </block>
[03:11:06.355]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:06.355]      // if-block "protType == 1"
[03:11:06.355]        // =>  FALSE
[03:11:06.355]      // skip if-block "protType == 1"
[03:11:06.355]    </control>
[03:11:06.355]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:06.355]      // if-block "protType == 2"
[03:11:06.355]        // =>  TRUE
[03:11:06.355]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:06.355]        // if-block "isSWJ"
[03:11:06.355]          // =>  TRUE
[03:11:06.355]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:06.355]          // if-block "hasDormant"
[03:11:06.355]            // =>  FALSE
[03:11:06.355]          // skip if-block "hasDormant"
[03:11:06.355]        </control>
[03:11:06.355]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:06.355]          // if-block "!hasDormant"
[03:11:06.355]            // =>  TRUE
[03:11:06.355]          <block atomic="false" info="">
[03:11:06.355]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:06.355]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:06.355]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:06.359]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:06.359]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:06.359]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:06.359]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:06.359]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:06.359]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:06.367]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:06.371]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:06.371]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:06.371]          </block>
[03:11:06.371]          // end if-block "!hasDormant"
[03:11:06.371]        </control>
[03:11:06.371]        // end if-block "isSWJ"
[03:11:06.371]      </control>
[03:11:06.371]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:06.371]        // if-block "!isSWJ"
[03:11:06.371]          // =>  FALSE
[03:11:06.371]        // skip if-block "!isSWJ"
[03:11:06.371]      </control>
[03:11:06.371]      <block atomic="false" info="">
[03:11:06.371]        ReadDP(0x0);
[03:11:06.371]  
[03:11:06.371]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:06.371]  
[03:11:06.375]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:06.375]      </block>
[03:11:06.375]      // end if-block "protType == 2"
[03:11:06.375]    </control>
[03:11:06.375]  </sequence>
[03:11:06.375]  
[03:11:06.634]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:06.634]  
[03:11:06.635]  <debugvars>
[03:11:06.635]    // Pre-defined
[03:11:06.635]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:06.635]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:06.635]    __dp=0x00000000
[03:11:06.635]    __ap=0x00000000
[03:11:06.635]    __traceout=0x00000000      (Trace Disabled)
[03:11:06.635]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:06.635]    __FlashAddr=0x00000000
[03:11:06.635]    __FlashLen=0x00000000
[03:11:06.635]    __FlashArg=0x00000000
[03:11:06.635]    __FlashOp=0x00000000
[03:11:06.637]    __Result=0x00000000
[03:11:06.637]  </debugvars>
[03:11:06.637]  
[03:11:06.637]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:06.637]    <block atomic="false" info="">
[03:11:06.637]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:06.637]        // -> [isSWJ <= 0x00000001]
[03:11:06.637]      __var hasDormant = __protocol & 0x00020000;
[03:11:06.637]        // -> [hasDormant <= 0x00000000]
[03:11:06.637]      __var protType   = __protocol & 0x0000FFFF;
[03:11:06.637]        // -> [protType <= 0x00000002]
[03:11:06.637]    </block>
[03:11:06.637]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:06.637]      // if-block "protType == 1"
[03:11:06.638]        // =>  FALSE
[03:11:06.638]      // skip if-block "protType == 1"
[03:11:06.638]    </control>
[03:11:06.638]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:06.638]      // if-block "protType == 2"
[03:11:06.638]        // =>  TRUE
[03:11:06.638]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:06.638]        // if-block "isSWJ"
[03:11:06.638]          // =>  TRUE
[03:11:06.638]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:06.638]          // if-block "hasDormant"
[03:11:06.638]            // =>  FALSE
[03:11:06.638]          // skip if-block "hasDormant"
[03:11:06.638]        </control>
[03:11:06.638]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:06.638]          // if-block "!hasDormant"
[03:11:06.638]            // =>  TRUE
[03:11:06.638]          <block atomic="false" info="">
[03:11:06.640]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:06.640]  
[03:11:06.640]  !!! E320 : DAP access error
[03:11:06.640]  
[03:11:06.640]          </block>
[03:11:06.640]          // end if-block "!hasDormant"
[03:11:06.640]        </control>
[03:11:06.640]        // end if-block "isSWJ"
[03:11:06.640]      </control>
[03:11:06.640]      // end if-block "protType == 2"
[03:11:06.640]    </control>
[03:11:06.640]  </sequence>
[03:11:06.640]  
[03:11:06.900]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:06.900]  
[03:11:06.901]  <debugvars>
[03:11:06.901]    // Pre-defined
[03:11:06.901]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:06.901]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:06.901]    __dp=0x00000000
[03:11:06.901]    __ap=0x00000000
[03:11:06.901]    __traceout=0x00000000      (Trace Disabled)
[03:11:06.901]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:06.901]    __FlashAddr=0x00000000
[03:11:06.901]    __FlashLen=0x00000000
[03:11:06.901]    __FlashArg=0x00000000
[03:11:06.901]    __FlashOp=0x00000000
[03:11:06.901]    __Result=0x00000000
[03:11:06.901]  </debugvars>
[03:11:06.901]  
[03:11:06.901]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:06.901]    <block atomic="false" info="">
[03:11:06.901]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:06.901]        // -> [isSWJ <= 0x00000001]
[03:11:06.901]      __var hasDormant = __protocol & 0x00020000;
[03:11:06.901]        // -> [hasDormant <= 0x00000000]
[03:11:06.901]      __var protType   = __protocol & 0x0000FFFF;
[03:11:06.901]        // -> [protType <= 0x00000002]
[03:11:06.901]    </block>
[03:11:06.901]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:06.901]      // if-block "protType == 1"
[03:11:06.901]        // =>  FALSE
[03:11:06.901]      // skip if-block "protType == 1"
[03:11:06.901]    </control>
[03:11:06.901]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:06.905]      // if-block "protType == 2"
[03:11:06.905]        // =>  TRUE
[03:11:06.905]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:06.905]        // if-block "isSWJ"
[03:11:06.905]          // =>  TRUE
[03:11:06.905]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:06.905]          // if-block "hasDormant"
[03:11:06.905]            // =>  FALSE
[03:11:06.905]          // skip if-block "hasDormant"
[03:11:06.905]        </control>
[03:11:06.905]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:06.905]          // if-block "!hasDormant"
[03:11:06.905]            // =>  TRUE
[03:11:06.905]          <block atomic="false" info="">
[03:11:06.905]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:06.905]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:06.905]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:06.905]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:06.905]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:06.905]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:06.905]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:06.909]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:06.909]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:06.909]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:06.909]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:06.909]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:06.909]          </block>
[03:11:06.909]          // end if-block "!hasDormant"
[03:11:06.909]        </control>
[03:11:06.909]        // end if-block "isSWJ"
[03:11:06.909]      </control>
[03:11:06.909]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:06.909]        // if-block "!isSWJ"
[03:11:06.909]          // =>  FALSE
[03:11:06.913]        // skip if-block "!isSWJ"
[03:11:06.913]      </control>
[03:11:06.913]      <block atomic="false" info="">
[03:11:06.913]        ReadDP(0x0);
[03:11:06.913]  
[03:11:06.913]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:06.913]  
[03:11:06.913]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:06.913]      </block>
[03:11:06.913]      // end if-block "protType == 2"
[03:11:06.913]    </control>
[03:11:06.913]  </sequence>
[03:11:06.913]  
[03:11:07.165]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:07.165]  
[03:11:07.167]  <debugvars>
[03:11:07.167]    // Pre-defined
[03:11:07.167]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:07.167]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:07.167]    __dp=0x00000000
[03:11:07.167]    __ap=0x00000000
[03:11:07.167]    __traceout=0x00000000      (Trace Disabled)
[03:11:07.167]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:07.167]    __FlashAddr=0x00000000
[03:11:07.167]    __FlashLen=0x00000000
[03:11:07.167]    __FlashArg=0x00000000
[03:11:07.169]    __FlashOp=0x00000000
[03:11:07.169]    __Result=0x00000000
[03:11:07.169]  </debugvars>
[03:11:07.169]  
[03:11:07.169]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:07.169]    <block atomic="false" info="">
[03:11:07.169]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:07.169]        // -> [isSWJ <= 0x00000001]
[03:11:07.169]      __var hasDormant = __protocol & 0x00020000;
[03:11:07.169]        // -> [hasDormant <= 0x00000000]
[03:11:07.169]      __var protType   = __protocol & 0x0000FFFF;
[03:11:07.169]        // -> [protType <= 0x00000002]
[03:11:07.169]    </block>
[03:11:07.169]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:07.169]      // if-block "protType == 1"
[03:11:07.169]        // =>  FALSE
[03:11:07.169]      // skip if-block "protType == 1"
[03:11:07.169]    </control>
[03:11:07.169]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:07.169]      // if-block "protType == 2"
[03:11:07.169]        // =>  TRUE
[03:11:07.169]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:07.169]        // if-block "isSWJ"
[03:11:07.169]          // =>  TRUE
[03:11:07.169]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:07.169]          // if-block "hasDormant"
[03:11:07.169]            // =>  FALSE
[03:11:07.169]          // skip if-block "hasDormant"
[03:11:07.169]        </control>
[03:11:07.169]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:07.173]          // if-block "!hasDormant"
[03:11:07.173]            // =>  TRUE
[03:11:07.173]          <block atomic="false" info="">
[03:11:07.173]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:07.173]  
[03:11:07.173]  !!! E320 : DAP access error
[03:11:07.173]  
[03:11:07.173]          </block>
[03:11:07.173]          // end if-block "!hasDormant"
[03:11:07.173]        </control>
[03:11:07.173]        // end if-block "isSWJ"
[03:11:07.173]      </control>
[03:11:07.173]      // end if-block "protType == 2"
[03:11:07.173]    </control>
[03:11:07.173]  </sequence>
[03:11:07.173]  
[03:11:07.433]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:07.433]  
[03:11:07.433]  <debugvars>
[03:11:07.433]    // Pre-defined
[03:11:07.433]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:07.433]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:07.433]    __dp=0x00000000
[03:11:07.433]    __ap=0x00000000
[03:11:07.433]    __traceout=0x00000000      (Trace Disabled)
[03:11:07.433]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:07.433]    __FlashAddr=0x00000000
[03:11:07.433]    __FlashLen=0x00000000
[03:11:07.433]    __FlashArg=0x00000000
[03:11:07.433]    __FlashOp=0x00000000
[03:11:07.433]    __Result=0x00000000
[03:11:07.433]  </debugvars>
[03:11:07.433]  
[03:11:07.433]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:07.433]    <block atomic="false" info="">
[03:11:07.433]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:07.433]        // -> [isSWJ <= 0x00000001]
[03:11:07.433]      __var hasDormant = __protocol & 0x00020000;
[03:11:07.436]        // -> [hasDormant <= 0x00000000]
[03:11:07.436]      __var protType   = __protocol & 0x0000FFFF;
[03:11:07.436]        // -> [protType <= 0x00000002]
[03:11:07.436]    </block>
[03:11:07.436]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:07.436]      // if-block "protType == 1"
[03:11:07.436]        // =>  FALSE
[03:11:07.437]      // skip if-block "protType == 1"
[03:11:07.437]    </control>
[03:11:07.437]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:07.437]      // if-block "protType == 2"
[03:11:07.437]        // =>  TRUE
[03:11:07.437]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:07.437]        // if-block "isSWJ"
[03:11:07.437]          // =>  TRUE
[03:11:07.437]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:07.437]          // if-block "hasDormant"
[03:11:07.438]            // =>  FALSE
[03:11:07.438]          // skip if-block "hasDormant"
[03:11:07.438]        </control>
[03:11:07.438]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:07.438]          // if-block "!hasDormant"
[03:11:07.438]            // =>  TRUE
[03:11:07.438]          <block atomic="false" info="">
[03:11:07.438]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:07.439]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:07.439]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:07.444]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:07.445]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:07.445]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:07.445]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:07.446]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:07.446]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:07.446]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:07.446]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:07.452]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:07.452]          </block>
[03:11:07.452]          // end if-block "!hasDormant"
[03:11:07.452]        </control>
[03:11:07.452]        // end if-block "isSWJ"
[03:11:07.452]      </control>
[03:11:07.452]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:07.452]        // if-block "!isSWJ"
[03:11:07.452]          // =>  FALSE
[03:11:07.452]        // skip if-block "!isSWJ"
[03:11:07.452]      </control>
[03:11:07.453]      <block atomic="false" info="">
[03:11:07.453]        ReadDP(0x0);
[03:11:07.453]  
[03:11:07.453]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:07.453]  
[03:11:07.453]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:07.453]      </block>
[03:11:07.453]      // end if-block "protType == 2"
[03:11:07.453]    </control>
[03:11:07.453]  </sequence>
[03:11:07.453]  
[03:11:07.706]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:07.706]  
[03:11:07.706]  <debugvars>
[03:11:07.706]    // Pre-defined
[03:11:07.706]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:07.706]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:07.706]    __dp=0x00000000
[03:11:07.706]    __ap=0x00000000
[03:11:07.706]    __traceout=0x00000000      (Trace Disabled)
[03:11:07.706]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:07.706]    __FlashAddr=0x00000000
[03:11:07.706]    __FlashLen=0x00000000
[03:11:07.706]    __FlashArg=0x00000000
[03:11:07.709]    __FlashOp=0x00000000
[03:11:07.709]    __Result=0x00000000
[03:11:07.709]  </debugvars>
[03:11:07.709]  
[03:11:07.709]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:07.709]    <block atomic="false" info="">
[03:11:07.709]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:07.709]        // -> [isSWJ <= 0x00000001]
[03:11:07.710]      __var hasDormant = __protocol & 0x00020000;
[03:11:07.710]        // -> [hasDormant <= 0x00000000]
[03:11:07.710]      __var protType   = __protocol & 0x0000FFFF;
[03:11:07.710]        // -> [protType <= 0x00000002]
[03:11:07.710]    </block>
[03:11:07.710]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:07.710]      // if-block "protType == 1"
[03:11:07.710]        // =>  FALSE
[03:11:07.710]      // skip if-block "protType == 1"
[03:11:07.710]    </control>
[03:11:07.710]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:07.710]      // if-block "protType == 2"
[03:11:07.710]        // =>  TRUE
[03:11:07.710]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:07.710]        // if-block "isSWJ"
[03:11:07.710]          // =>  TRUE
[03:11:07.710]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:07.710]          // if-block "hasDormant"
[03:11:07.710]            // =>  FALSE
[03:11:07.713]          // skip if-block "hasDormant"
[03:11:07.713]        </control>
[03:11:07.713]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:07.713]          // if-block "!hasDormant"
[03:11:07.713]            // =>  TRUE
[03:11:07.713]          <block atomic="false" info="">
[03:11:07.713]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:07.713]  
[03:11:07.713]  !!! E320 : DAP access error
[03:11:07.713]  
[03:11:07.713]          </block>
[03:11:07.713]          // end if-block "!hasDormant"
[03:11:07.713]        </control>
[03:11:07.713]        // end if-block "isSWJ"
[03:11:07.713]      </control>
[03:11:07.714]      // end if-block "protType == 2"
[03:11:07.714]    </control>
[03:11:07.714]  </sequence>
[03:11:07.714]  
[03:11:07.965]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:07.965]  
[03:11:07.967]  <debugvars>
[03:11:07.967]    // Pre-defined
[03:11:07.967]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:07.967]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:07.967]    __dp=0x00000000
[03:11:07.967]    __ap=0x00000000
[03:11:07.967]    __traceout=0x00000000      (Trace Disabled)
[03:11:07.967]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:07.967]    __FlashAddr=0x00000000
[03:11:07.967]    __FlashLen=0x00000000
[03:11:07.967]    __FlashArg=0x00000000
[03:11:07.967]    __FlashOp=0x00000000
[03:11:07.967]    __Result=0x00000000
[03:11:07.967]  </debugvars>
[03:11:07.967]  
[03:11:07.967]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:07.967]    <block atomic="false" info="">
[03:11:07.967]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:07.967]        // -> [isSWJ <= 0x00000001]
[03:11:07.970]      __var hasDormant = __protocol & 0x00020000;
[03:11:07.970]        // -> [hasDormant <= 0x00000000]
[03:11:07.970]      __var protType   = __protocol & 0x0000FFFF;
[03:11:07.970]        // -> [protType <= 0x00000002]
[03:11:07.970]    </block>
[03:11:07.970]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:07.970]      // if-block "protType == 1"
[03:11:07.970]        // =>  FALSE
[03:11:07.970]      // skip if-block "protType == 1"
[03:11:07.970]    </control>
[03:11:07.970]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:07.970]      // if-block "protType == 2"
[03:11:07.970]        // =>  TRUE
[03:11:07.970]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:07.970]        // if-block "isSWJ"
[03:11:07.970]          // =>  TRUE
[03:11:07.970]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:07.970]          // if-block "hasDormant"
[03:11:07.970]            // =>  FALSE
[03:11:07.970]          // skip if-block "hasDormant"
[03:11:07.970]        </control>
[03:11:07.970]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:07.970]          // if-block "!hasDormant"
[03:11:07.970]            // =>  TRUE
[03:11:07.970]          <block atomic="false" info="">
[03:11:07.970]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:07.970]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:07.970]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:07.974]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:07.974]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:07.974]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:07.974]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:07.974]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:07.974]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:07.974]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:07.974]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:07.974]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:07.974]          </block>
[03:11:07.978]          // end if-block "!hasDormant"
[03:11:07.978]        </control>
[03:11:07.978]        // end if-block "isSWJ"
[03:11:07.978]      </control>
[03:11:07.978]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:07.978]        // if-block "!isSWJ"
[03:11:07.978]          // =>  FALSE
[03:11:07.978]        // skip if-block "!isSWJ"
[03:11:07.978]      </control>
[03:11:07.978]      <block atomic="false" info="">
[03:11:07.978]        ReadDP(0x0);
[03:11:07.978]  
[03:11:07.978]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:07.978]  
[03:11:07.978]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:07.978]      </block>
[03:11:07.978]      // end if-block "protType == 2"
[03:11:07.978]    </control>
[03:11:07.978]  </sequence>
[03:11:07.978]  
[03:11:08.236]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:08.236]  
[03:11:08.237]  <debugvars>
[03:11:08.237]    // Pre-defined
[03:11:08.237]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:08.237]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:08.237]    __dp=0x00000000
[03:11:08.237]    __ap=0x00000000
[03:11:08.237]    __traceout=0x00000000      (Trace Disabled)
[03:11:08.237]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:08.237]    __FlashAddr=0x00000000
[03:11:08.237]    __FlashLen=0x00000000
[03:11:08.237]    __FlashArg=0x00000000
[03:11:08.237]    __FlashOp=0x00000000
[03:11:08.237]    __Result=0x00000000
[03:11:08.237]  </debugvars>
[03:11:08.237]  
[03:11:08.237]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:08.239]    <block atomic="false" info="">
[03:11:08.239]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:08.240]        // -> [isSWJ <= 0x00000001]
[03:11:08.240]      __var hasDormant = __protocol & 0x00020000;
[03:11:08.240]        // -> [hasDormant <= 0x00000000]
[03:11:08.240]      __var protType   = __protocol & 0x0000FFFF;
[03:11:08.240]        // -> [protType <= 0x00000002]
[03:11:08.240]    </block>
[03:11:08.240]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:08.240]      // if-block "protType == 1"
[03:11:08.240]        // =>  FALSE
[03:11:08.240]      // skip if-block "protType == 1"
[03:11:08.240]    </control>
[03:11:08.240]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:08.240]      // if-block "protType == 2"
[03:11:08.240]        // =>  TRUE
[03:11:08.240]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:08.241]        // if-block "isSWJ"
[03:11:08.241]          // =>  TRUE
[03:11:08.241]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:08.241]          // if-block "hasDormant"
[03:11:08.241]            // =>  FALSE
[03:11:08.241]          // skip if-block "hasDormant"
[03:11:08.241]        </control>
[03:11:08.241]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:08.241]          // if-block "!hasDormant"
[03:11:08.241]            // =>  TRUE
[03:11:08.241]          <block atomic="false" info="">
[03:11:08.241]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:08.243]  
[03:11:08.243]  !!! E320 : DAP access error
[03:11:08.243]  
[03:11:08.243]          </block>
[03:11:08.243]          // end if-block "!hasDormant"
[03:11:08.243]        </control>
[03:11:08.243]        // end if-block "isSWJ"
[03:11:08.243]      </control>
[03:11:08.243]      // end if-block "protType == 2"
[03:11:08.243]    </control>
[03:11:08.243]  </sequence>
[03:11:08.243]  
[03:11:08.501]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:08.501]  
[03:11:08.503]  <debugvars>
[03:11:08.503]    // Pre-defined
[03:11:08.503]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:08.503]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:08.503]    __dp=0x00000000
[03:11:08.503]    __ap=0x00000000
[03:11:08.503]    __traceout=0x00000000      (Trace Disabled)
[03:11:08.503]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:08.503]    __FlashAddr=0x00000000
[03:11:08.503]    __FlashLen=0x00000000
[03:11:08.503]    __FlashArg=0x00000000
[03:11:08.503]    __FlashOp=0x00000000
[03:11:08.503]    __Result=0x00000000
[03:11:08.503]  </debugvars>
[03:11:08.503]  
[03:11:08.503]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:08.503]    <block atomic="false" info="">
[03:11:08.503]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:08.503]        // -> [isSWJ <= 0x00000001]
[03:11:08.503]      __var hasDormant = __protocol & 0x00020000;
[03:11:08.503]        // -> [hasDormant <= 0x00000000]
[03:11:08.506]      __var protType   = __protocol & 0x0000FFFF;
[03:11:08.506]        // -> [protType <= 0x00000002]
[03:11:08.506]    </block>
[03:11:08.506]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:08.506]      // if-block "protType == 1"
[03:11:08.506]        // =>  FALSE
[03:11:08.506]      // skip if-block "protType == 1"
[03:11:08.506]    </control>
[03:11:08.506]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:08.506]      // if-block "protType == 2"
[03:11:08.506]        // =>  TRUE
[03:11:08.506]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:08.506]        // if-block "isSWJ"
[03:11:08.506]          // =>  TRUE
[03:11:08.506]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:08.506]          // if-block "hasDormant"
[03:11:08.506]            // =>  FALSE
[03:11:08.506]          // skip if-block "hasDormant"
[03:11:08.506]        </control>
[03:11:08.506]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:08.506]          // if-block "!hasDormant"
[03:11:08.506]            // =>  TRUE
[03:11:08.506]          <block atomic="false" info="">
[03:11:08.506]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:08.506]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:08.506]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:08.506]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:08.510]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:08.510]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:08.510]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:08.510]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:08.510]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:08.510]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:08.510]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:08.510]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:08.510]          </block>
[03:11:08.510]          // end if-block "!hasDormant"
[03:11:08.510]        </control>
[03:11:08.510]        // end if-block "isSWJ"
[03:11:08.510]      </control>
[03:11:08.510]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:08.510]        // if-block "!isSWJ"
[03:11:08.514]          // =>  FALSE
[03:11:08.514]        // skip if-block "!isSWJ"
[03:11:08.514]      </control>
[03:11:08.514]      <block atomic="false" info="">
[03:11:08.514]        ReadDP(0x0);
[03:11:08.514]  
[03:11:08.514]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:08.514]  
[03:11:08.514]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:08.514]      </block>
[03:11:08.514]      // end if-block "protType == 2"
[03:11:08.514]    </control>
[03:11:08.514]  </sequence>
[03:11:08.514]  
[03:11:08.773]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:08.773]  
[03:11:08.775]  <debugvars>
[03:11:08.775]    // Pre-defined
[03:11:08.775]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:08.775]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:08.775]    __dp=0x00000000
[03:11:08.775]    __ap=0x00000000
[03:11:08.775]    __traceout=0x00000000      (Trace Disabled)
[03:11:08.775]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:08.775]    __FlashAddr=0x00000000
[03:11:08.775]    __FlashLen=0x00000000
[03:11:08.775]    __FlashArg=0x00000000
[03:11:08.775]    __FlashOp=0x00000000
[03:11:08.775]    __Result=0x00000000
[03:11:08.775]  </debugvars>
[03:11:08.775]  
[03:11:08.775]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:08.775]    <block atomic="false" info="">
[03:11:08.775]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:08.775]        // -> [isSWJ <= 0x00000001]
[03:11:08.775]      __var hasDormant = __protocol & 0x00020000;
[03:11:08.775]        // -> [hasDormant <= 0x00000000]
[03:11:08.775]      __var protType   = __protocol & 0x0000FFFF;
[03:11:08.775]        // -> [protType <= 0x00000002]
[03:11:08.775]    </block>
[03:11:08.778]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:08.778]      // if-block "protType == 1"
[03:11:08.778]        // =>  FALSE
[03:11:08.778]      // skip if-block "protType == 1"
[03:11:08.778]    </control>
[03:11:08.778]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:08.778]      // if-block "protType == 2"
[03:11:08.778]        // =>  TRUE
[03:11:08.778]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:08.778]        // if-block "isSWJ"
[03:11:08.778]          // =>  TRUE
[03:11:08.778]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:08.778]          // if-block "hasDormant"
[03:11:08.778]            // =>  FALSE
[03:11:08.778]          // skip if-block "hasDormant"
[03:11:08.778]        </control>
[03:11:08.778]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:08.778]          // if-block "!hasDormant"
[03:11:08.778]            // =>  TRUE
[03:11:08.778]          <block atomic="false" info="">
[03:11:08.778]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:08.778]  
[03:11:08.778]  !!! E320 : DAP access error
[03:11:08.778]  
[03:11:08.778]          </block>
[03:11:08.778]          // end if-block "!hasDormant"
[03:11:08.778]        </control>
[03:11:08.778]        // end if-block "isSWJ"
[03:11:08.778]      </control>
[03:11:08.778]      // end if-block "protType == 2"
[03:11:08.778]    </control>
[03:11:08.782]  </sequence>
[03:11:08.782]  
[03:11:09.041]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:09.041]  
[03:11:09.043]  <debugvars>
[03:11:09.043]    // Pre-defined
[03:11:09.043]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:09.043]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:09.043]    __dp=0x00000000
[03:11:09.043]    __ap=0x00000000
[03:11:09.043]    __traceout=0x00000000      (Trace Disabled)
[03:11:09.043]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:09.043]    __FlashAddr=0x00000000
[03:11:09.043]    __FlashLen=0x00000000
[03:11:09.043]    __FlashArg=0x00000000
[03:11:09.043]    __FlashOp=0x00000000
[03:11:09.043]    __Result=0x00000000
[03:11:09.043]  </debugvars>
[03:11:09.043]  
[03:11:09.045]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:09.045]    <block atomic="false" info="">
[03:11:09.045]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:09.045]        // -> [isSWJ <= 0x00000001]
[03:11:09.045]      __var hasDormant = __protocol & 0x00020000;
[03:11:09.045]        // -> [hasDormant <= 0x00000000]
[03:11:09.045]      __var protType   = __protocol & 0x0000FFFF;
[03:11:09.045]        // -> [protType <= 0x00000002]
[03:11:09.045]    </block>
[03:11:09.045]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:09.046]      // if-block "protType == 1"
[03:11:09.046]        // =>  FALSE
[03:11:09.046]      // skip if-block "protType == 1"
[03:11:09.046]    </control>
[03:11:09.046]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:09.046]      // if-block "protType == 2"
[03:11:09.046]        // =>  TRUE
[03:11:09.046]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:09.046]        // if-block "isSWJ"
[03:11:09.046]          // =>  TRUE
[03:11:09.046]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:09.046]          // if-block "hasDormant"
[03:11:09.046]            // =>  FALSE
[03:11:09.046]          // skip if-block "hasDormant"
[03:11:09.046]        </control>
[03:11:09.046]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:09.046]          // if-block "!hasDormant"
[03:11:09.046]            // =>  TRUE
[03:11:09.046]          <block atomic="false" info="">
[03:11:09.046]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:09.048]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:09.048]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:09.050]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:09.050]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:09.050]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:09.050]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:09.051]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:09.051]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:09.053]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:09.053]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:09.054]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:09.054]          </block>
[03:11:09.054]          // end if-block "!hasDormant"
[03:11:09.054]        </control>
[03:11:09.054]        // end if-block "isSWJ"
[03:11:09.054]      </control>
[03:11:09.054]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:09.054]        // if-block "!isSWJ"
[03:11:09.054]          // =>  FALSE
[03:11:09.054]        // skip if-block "!isSWJ"
[03:11:09.054]      </control>
[03:11:09.054]      <block atomic="false" info="">
[03:11:09.054]        ReadDP(0x0);
[03:11:09.054]  
[03:11:09.054]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:09.054]  
[03:11:09.054]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:09.054]      </block>
[03:11:09.054]      // end if-block "protType == 2"
[03:11:09.054]    </control>
[03:11:09.054]  </sequence>
[03:11:09.054]  
[03:11:09.312]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:09.312]  
[03:11:09.314]  <debugvars>
[03:11:09.314]    // Pre-defined
[03:11:09.314]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:09.314]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:09.314]    __dp=0x00000000
[03:11:09.314]    __ap=0x00000000
[03:11:09.314]    __traceout=0x00000000      (Trace Disabled)
[03:11:09.314]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:09.314]    __FlashAddr=0x00000000
[03:11:09.314]    __FlashLen=0x00000000
[03:11:09.314]    __FlashArg=0x00000000
[03:11:09.314]    __FlashOp=0x00000000
[03:11:09.314]    __Result=0x00000000
[03:11:09.314]  </debugvars>
[03:11:09.314]  
[03:11:09.314]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:09.314]    <block atomic="false" info="">
[03:11:09.314]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:09.314]        // -> [isSWJ <= 0x00000001]
[03:11:09.314]      __var hasDormant = __protocol & 0x00020000;
[03:11:09.314]        // -> [hasDormant <= 0x00000000]
[03:11:09.314]      __var protType   = __protocol & 0x0000FFFF;
[03:11:09.314]        // -> [protType <= 0x00000002]
[03:11:09.314]    </block>
[03:11:09.314]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:09.314]      // if-block "protType == 1"
[03:11:09.314]        // =>  FALSE
[03:11:09.314]      // skip if-block "protType == 1"
[03:11:09.317]    </control>
[03:11:09.317]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:09.317]      // if-block "protType == 2"
[03:11:09.317]        // =>  TRUE
[03:11:09.317]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:09.317]        // if-block "isSWJ"
[03:11:09.317]          // =>  TRUE
[03:11:09.317]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:09.317]          // if-block "hasDormant"
[03:11:09.317]            // =>  FALSE
[03:11:09.317]          // skip if-block "hasDormant"
[03:11:09.317]        </control>
[03:11:09.317]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:09.317]          // if-block "!hasDormant"
[03:11:09.317]            // =>  TRUE
[03:11:09.317]          <block atomic="false" info="">
[03:11:09.317]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:09.317]  
[03:11:09.317]  !!! E320 : DAP access error
[03:11:09.317]  
[03:11:09.317]          </block>
[03:11:09.317]          // end if-block "!hasDormant"
[03:11:09.317]        </control>
[03:11:09.317]        // end if-block "isSWJ"
[03:11:09.317]      </control>
[03:11:09.317]      // end if-block "protType == 2"
[03:11:09.317]    </control>
[03:11:09.317]  </sequence>
[03:11:09.317]  
[03:11:09.570]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:09.570]  
[03:11:09.571]  <debugvars>
[03:11:09.571]    // Pre-defined
[03:11:09.571]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:09.571]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:09.571]    __dp=0x00000000
[03:11:09.571]    __ap=0x00000000
[03:11:09.571]    __traceout=0x00000000      (Trace Disabled)
[03:11:09.571]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:09.571]    __FlashAddr=0x00000000
[03:11:09.571]    __FlashLen=0x00000000
[03:11:09.571]    __FlashArg=0x00000000
[03:11:09.571]    __FlashOp=0x00000000
[03:11:09.571]    __Result=0x00000000
[03:11:09.571]  </debugvars>
[03:11:09.571]  
[03:11:09.571]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:09.571]    <block atomic="false" info="">
[03:11:09.571]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:09.571]        // -> [isSWJ <= 0x00000001]
[03:11:09.571]      __var hasDormant = __protocol & 0x00020000;
[03:11:09.571]        // -> [hasDormant <= 0x00000000]
[03:11:09.571]      __var protType   = __protocol & 0x0000FFFF;
[03:11:09.571]        // -> [protType <= 0x00000002]
[03:11:09.571]    </block>
[03:11:09.571]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:09.574]      // if-block "protType == 1"
[03:11:09.574]        // =>  FALSE
[03:11:09.574]      // skip if-block "protType == 1"
[03:11:09.574]    </control>
[03:11:09.574]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:09.574]      // if-block "protType == 2"
[03:11:09.574]        // =>  TRUE
[03:11:09.574]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:09.574]        // if-block "isSWJ"
[03:11:09.575]          // =>  TRUE
[03:11:09.575]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:09.575]          // if-block "hasDormant"
[03:11:09.575]            // =>  FALSE
[03:11:09.575]          // skip if-block "hasDormant"
[03:11:09.575]        </control>
[03:11:09.575]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:09.575]          // if-block "!hasDormant"
[03:11:09.575]            // =>  TRUE
[03:11:09.575]          <block atomic="false" info="">
[03:11:09.575]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:09.577]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:09.577]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:09.579]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:09.579]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:09.579]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:09.579]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:09.581]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:09.581]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:09.583]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:09.583]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:09.583]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:09.583]          </block>
[03:11:09.583]          // end if-block "!hasDormant"
[03:11:09.583]        </control>
[03:11:09.583]        // end if-block "isSWJ"
[03:11:09.583]      </control>
[03:11:09.583]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:09.583]        // if-block "!isSWJ"
[03:11:09.583]          // =>  FALSE
[03:11:09.583]        // skip if-block "!isSWJ"
[03:11:09.583]      </control>
[03:11:09.583]      <block atomic="false" info="">
[03:11:09.583]        ReadDP(0x0);
[03:11:09.583]  
[03:11:09.583]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:09.583]  
[03:11:09.583]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:09.583]      </block>
[03:11:09.585]      // end if-block "protType == 2"
[03:11:09.585]    </control>
[03:11:09.585]  </sequence>
[03:11:09.585]  
[03:11:09.839]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:09.839]  
[03:11:09.842]  <debugvars>
[03:11:09.842]    // Pre-defined
[03:11:09.842]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:09.842]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:09.842]    __dp=0x00000000
[03:11:09.842]    __ap=0x00000000
[03:11:09.842]    __traceout=0x00000000      (Trace Disabled)
[03:11:09.842]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:09.842]    __FlashAddr=0x00000000
[03:11:09.842]    __FlashLen=0x00000000
[03:11:09.842]    __FlashArg=0x00000000
[03:11:09.842]    __FlashOp=0x00000000
[03:11:09.842]    __Result=0x00000000
[03:11:09.844]  </debugvars>
[03:11:09.844]  
[03:11:09.844]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:09.844]    <block atomic="false" info="">
[03:11:09.844]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:09.844]        // -> [isSWJ <= 0x00000001]
[03:11:09.844]      __var hasDormant = __protocol & 0x00020000;
[03:11:09.844]        // -> [hasDormant <= 0x00000000]
[03:11:09.844]      __var protType   = __protocol & 0x0000FFFF;
[03:11:09.844]        // -> [protType <= 0x00000002]
[03:11:09.844]    </block>
[03:11:09.844]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:09.844]      // if-block "protType == 1"
[03:11:09.844]        // =>  FALSE
[03:11:09.844]      // skip if-block "protType == 1"
[03:11:09.844]    </control>
[03:11:09.844]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:09.844]      // if-block "protType == 2"
[03:11:09.844]        // =>  TRUE
[03:11:09.844]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:09.844]        // if-block "isSWJ"
[03:11:09.844]          // =>  TRUE
[03:11:09.844]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:09.844]          // if-block "hasDormant"
[03:11:09.844]            // =>  FALSE
[03:11:09.844]          // skip if-block "hasDormant"
[03:11:09.844]        </control>
[03:11:09.844]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:09.844]          // if-block "!hasDormant"
[03:11:09.844]            // =>  TRUE
[03:11:09.844]          <block atomic="false" info="">
[03:11:09.844]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:09.844]  
[03:11:09.844]  !!! E320 : DAP access error
[03:11:09.844]  
[03:11:09.844]          </block>
[03:11:09.844]          // end if-block "!hasDormant"
[03:11:09.848]        </control>
[03:11:09.848]        // end if-block "isSWJ"
[03:11:09.848]      </control>
[03:11:09.848]      // end if-block "protType == 2"
[03:11:09.848]    </control>
[03:11:09.848]  </sequence>
[03:11:09.848]  
[03:11:10.104]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:10.104]  
[03:11:10.106]  <debugvars>
[03:11:10.106]    // Pre-defined
[03:11:10.106]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:10.106]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:10.106]    __dp=0x00000000
[03:11:10.106]    __ap=0x00000000
[03:11:10.106]    __traceout=0x00000000      (Trace Disabled)
[03:11:10.106]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:10.106]    __FlashAddr=0x00000000
[03:11:10.106]    __FlashLen=0x00000000
[03:11:10.106]    __FlashArg=0x00000000
[03:11:10.106]    __FlashOp=0x00000000
[03:11:10.106]    __Result=0x00000000
[03:11:10.106]  </debugvars>
[03:11:10.106]  
[03:11:10.106]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:10.106]    <block atomic="false" info="">
[03:11:10.106]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:10.106]        // -> [isSWJ <= 0x00000001]
[03:11:10.106]      __var hasDormant = __protocol & 0x00020000;
[03:11:10.106]        // -> [hasDormant <= 0x00000000]
[03:11:10.106]      __var protType   = __protocol & 0x0000FFFF;
[03:11:10.106]        // -> [protType <= 0x00000002]
[03:11:10.106]    </block>
[03:11:10.106]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:10.106]      // if-block "protType == 1"
[03:11:10.106]        // =>  FALSE
[03:11:10.106]      // skip if-block "protType == 1"
[03:11:10.106]    </control>
[03:11:10.109]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:10.109]      // if-block "protType == 2"
[03:11:10.109]        // =>  TRUE
[03:11:10.109]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:10.109]        // if-block "isSWJ"
[03:11:10.109]          // =>  TRUE
[03:11:10.109]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:10.109]          // if-block "hasDormant"
[03:11:10.109]            // =>  FALSE
[03:11:10.109]          // skip if-block "hasDormant"
[03:11:10.109]        </control>
[03:11:10.109]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:10.109]          // if-block "!hasDormant"
[03:11:10.109]            // =>  TRUE
[03:11:10.109]          <block atomic="false" info="">
[03:11:10.109]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:10.109]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:10.109]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:10.109]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:10.109]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:10.113]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:10.113]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:10.121]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:10.121]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:10.121]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:10.121]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:10.121]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:10.121]          </block>
[03:11:10.121]          // end if-block "!hasDormant"
[03:11:10.121]        </control>
[03:11:10.125]        // end if-block "isSWJ"
[03:11:10.125]      </control>
[03:11:10.125]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:10.125]        // if-block "!isSWJ"
[03:11:10.125]          // =>  FALSE
[03:11:10.125]        // skip if-block "!isSWJ"
[03:11:10.125]      </control>
[03:11:10.125]      <block atomic="false" info="">
[03:11:10.125]        ReadDP(0x0);
[03:11:10.125]  
[03:11:10.125]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:10.125]  
[03:11:10.125]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:10.125]      </block>
[03:11:10.125]      // end if-block "protType == 2"
[03:11:10.125]    </control>
[03:11:10.125]  </sequence>
[03:11:10.125]  
[03:11:10.381]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:10.381]  
[03:11:10.381]  <debugvars>
[03:11:10.381]    // Pre-defined
[03:11:10.381]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:10.381]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:10.381]    __dp=0x00000000
[03:11:10.381]    __ap=0x00000000
[03:11:10.381]    __traceout=0x00000000      (Trace Disabled)
[03:11:10.381]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:10.381]    __FlashAddr=0x00000000
[03:11:10.381]    __FlashLen=0x00000000
[03:11:10.381]    __FlashArg=0x00000000
[03:11:10.381]    __FlashOp=0x00000000
[03:11:10.381]    __Result=0x00000000
[03:11:10.381]  </debugvars>
[03:11:10.381]  
[03:11:10.381]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:10.381]    <block atomic="false" info="">
[03:11:10.381]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:10.385]        // -> [isSWJ <= 0x00000001]
[03:11:10.385]      __var hasDormant = __protocol & 0x00020000;
[03:11:10.385]        // -> [hasDormant <= 0x00000000]
[03:11:10.385]      __var protType   = __protocol & 0x0000FFFF;
[03:11:10.385]        // -> [protType <= 0x00000002]
[03:11:10.385]    </block>
[03:11:10.385]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:10.385]      // if-block "protType == 1"
[03:11:10.385]        // =>  FALSE
[03:11:10.385]      // skip if-block "protType == 1"
[03:11:10.385]    </control>
[03:11:10.385]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:10.385]      // if-block "protType == 2"
[03:11:10.385]        // =>  TRUE
[03:11:10.385]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:10.385]        // if-block "isSWJ"
[03:11:10.385]          // =>  TRUE
[03:11:10.385]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:10.385]          // if-block "hasDormant"
[03:11:10.385]            // =>  FALSE
[03:11:10.385]          // skip if-block "hasDormant"
[03:11:10.385]        </control>
[03:11:10.385]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:10.385]          // if-block "!hasDormant"
[03:11:10.385]            // =>  TRUE
[03:11:10.385]          <block atomic="false" info="">
[03:11:10.385]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:10.385]  
[03:11:10.385]  !!! E320 : DAP access error
[03:11:10.385]  
[03:11:10.385]          </block>
[03:11:10.385]          // end if-block "!hasDormant"
[03:11:10.385]        </control>
[03:11:10.385]        // end if-block "isSWJ"
[03:11:10.385]      </control>
[03:11:10.389]      // end if-block "protType == 2"
[03:11:10.389]    </control>
[03:11:10.389]  </sequence>
[03:11:10.389]  
[03:11:10.641]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:10.641]  
[03:11:10.642]  <debugvars>
[03:11:10.642]    // Pre-defined
[03:11:10.642]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:10.642]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:10.642]    __dp=0x00000000
[03:11:10.642]    __ap=0x00000000
[03:11:10.642]    __traceout=0x00000000      (Trace Disabled)
[03:11:10.642]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:10.642]    __FlashAddr=0x00000000
[03:11:10.642]    __FlashLen=0x00000000
[03:11:10.642]    __FlashArg=0x00000000
[03:11:10.642]    __FlashOp=0x00000000
[03:11:10.642]    __Result=0x00000000
[03:11:10.642]  </debugvars>
[03:11:10.642]  
[03:11:10.642]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:10.642]    <block atomic="false" info="">
[03:11:10.642]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:10.642]        // -> [isSWJ <= 0x00000001]
[03:11:10.642]      __var hasDormant = __protocol & 0x00020000;
[03:11:10.642]        // -> [hasDormant <= 0x00000000]
[03:11:10.642]      __var protType   = __protocol & 0x0000FFFF;
[03:11:10.642]        // -> [protType <= 0x00000002]
[03:11:10.642]    </block>
[03:11:10.642]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:10.642]      // if-block "protType == 1"
[03:11:10.642]        // =>  FALSE
[03:11:10.642]      // skip if-block "protType == 1"
[03:11:10.642]    </control>
[03:11:10.645]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:10.645]      // if-block "protType == 2"
[03:11:10.645]        // =>  TRUE
[03:11:10.645]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:10.645]        // if-block "isSWJ"
[03:11:10.645]          // =>  TRUE
[03:11:10.645]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:10.645]          // if-block "hasDormant"
[03:11:10.645]            // =>  FALSE
[03:11:10.645]          // skip if-block "hasDormant"
[03:11:10.645]        </control>
[03:11:10.645]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:10.645]          // if-block "!hasDormant"
[03:11:10.645]            // =>  TRUE
[03:11:10.645]          <block atomic="false" info="">
[03:11:10.645]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:10.645]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:10.645]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:10.645]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:10.645]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:10.649]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:10.649]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:10.649]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:10.649]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:10.649]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:10.649]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:10.649]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:10.649]          </block>
[03:11:10.649]          // end if-block "!hasDormant"
[03:11:10.649]        </control>
[03:11:10.653]        // end if-block "isSWJ"
[03:11:10.653]      </control>
[03:11:10.653]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:10.653]        // if-block "!isSWJ"
[03:11:10.653]          // =>  FALSE
[03:11:10.653]        // skip if-block "!isSWJ"
[03:11:10.653]      </control>
[03:11:10.653]      <block atomic="false" info="">
[03:11:10.653]        ReadDP(0x0);
[03:11:10.653]  
[03:11:10.653]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:10.653]  
[03:11:10.653]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:10.653]      </block>
[03:11:10.653]      // end if-block "protType == 2"
[03:11:10.653]    </control>
[03:11:10.653]  </sequence>
[03:11:10.653]  
[03:11:10.912]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:10.912]  
[03:11:10.915]  <debugvars>
[03:11:10.915]    // Pre-defined
[03:11:10.915]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:10.915]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:10.915]    __dp=0x00000000
[03:11:10.915]    __ap=0x00000000
[03:11:10.915]    __traceout=0x00000000      (Trace Disabled)
[03:11:10.915]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:10.915]    __FlashAddr=0x00000000
[03:11:10.915]    __FlashLen=0x00000000
[03:11:10.915]    __FlashArg=0x00000000
[03:11:10.915]    __FlashOp=0x00000000
[03:11:10.915]    __Result=0x00000000
[03:11:10.915]  </debugvars>
[03:11:10.915]  
[03:11:10.915]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:10.915]    <block atomic="false" info="">
[03:11:10.915]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:10.917]        // -> [isSWJ <= 0x00000001]
[03:11:10.917]      __var hasDormant = __protocol & 0x00020000;
[03:11:10.917]        // -> [hasDormant <= 0x00000000]
[03:11:10.917]      __var protType   = __protocol & 0x0000FFFF;
[03:11:10.917]        // -> [protType <= 0x00000002]
[03:11:10.917]    </block>
[03:11:10.917]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:10.917]      // if-block "protType == 1"
[03:11:10.917]        // =>  FALSE
[03:11:10.917]      // skip if-block "protType == 1"
[03:11:10.917]    </control>
[03:11:10.917]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:10.917]      // if-block "protType == 2"
[03:11:10.917]        // =>  TRUE
[03:11:10.917]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:10.917]        // if-block "isSWJ"
[03:11:10.917]          // =>  TRUE
[03:11:10.917]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:10.917]          // if-block "hasDormant"
[03:11:10.917]            // =>  FALSE
[03:11:10.917]          // skip if-block "hasDormant"
[03:11:10.917]        </control>
[03:11:10.917]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:10.917]          // if-block "!hasDormant"
[03:11:10.917]            // =>  TRUE
[03:11:10.917]          <block atomic="false" info="">
[03:11:10.917]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:10.917]  
[03:11:10.917]  !!! E320 : DAP access error
[03:11:10.917]  
[03:11:10.917]          </block>
[03:11:10.917]          // end if-block "!hasDormant"
[03:11:10.921]        </control>
[03:11:10.921]        // end if-block "isSWJ"
[03:11:10.921]      </control>
[03:11:10.921]      // end if-block "protType == 2"
[03:11:10.921]    </control>
[03:11:10.921]  </sequence>
[03:11:10.921]  
[03:11:11.174]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:11.174]  
[03:11:11.176]  <debugvars>
[03:11:11.176]    // Pre-defined
[03:11:11.176]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:11.176]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:11.176]    __dp=0x00000000
[03:11:11.176]    __ap=0x00000000
[03:11:11.176]    __traceout=0x00000000      (Trace Disabled)
[03:11:11.176]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:11.176]    __FlashAddr=0x00000000
[03:11:11.176]    __FlashLen=0x00000000
[03:11:11.176]    __FlashArg=0x00000000
[03:11:11.176]    __FlashOp=0x00000000
[03:11:11.176]    __Result=0x00000000
[03:11:11.176]  </debugvars>
[03:11:11.176]  
[03:11:11.176]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:11.176]    <block atomic="false" info="">
[03:11:11.176]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:11.176]        // -> [isSWJ <= 0x00000001]
[03:11:11.178]      __var hasDormant = __protocol & 0x00020000;
[03:11:11.178]        // -> [hasDormant <= 0x00000000]
[03:11:11.178]      __var protType   = __protocol & 0x0000FFFF;
[03:11:11.178]        // -> [protType <= 0x00000002]
[03:11:11.178]    </block>
[03:11:11.178]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:11.178]      // if-block "protType == 1"
[03:11:11.178]        // =>  FALSE
[03:11:11.178]      // skip if-block "protType == 1"
[03:11:11.178]    </control>
[03:11:11.178]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:11.178]      // if-block "protType == 2"
[03:11:11.178]        // =>  TRUE
[03:11:11.178]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:11.178]        // if-block "isSWJ"
[03:11:11.178]          // =>  TRUE
[03:11:11.178]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:11.181]          // if-block "hasDormant"
[03:11:11.181]            // =>  FALSE
[03:11:11.181]          // skip if-block "hasDormant"
[03:11:11.181]        </control>
[03:11:11.181]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:11.181]          // if-block "!hasDormant"
[03:11:11.181]            // =>  TRUE
[03:11:11.181]          <block atomic="false" info="">
[03:11:11.181]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:11.181]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:11.181]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:11.183]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:11.183]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:11.187]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:11.187]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:11.191]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:11.191]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:11.191]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:11.191]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:11.195]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:11.195]          </block>
[03:11:11.195]          // end if-block "!hasDormant"
[03:11:11.195]        </control>
[03:11:11.195]        // end if-block "isSWJ"
[03:11:11.195]      </control>
[03:11:11.195]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:11.195]        // if-block "!isSWJ"
[03:11:11.195]          // =>  FALSE
[03:11:11.195]        // skip if-block "!isSWJ"
[03:11:11.195]      </control>
[03:11:11.195]      <block atomic="false" info="">
[03:11:11.195]        ReadDP(0x0);
[03:11:11.195]  
[03:11:11.195]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:11.195]  
[03:11:11.199]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:11.199]      </block>
[03:11:11.199]      // end if-block "protType == 2"
[03:11:11.199]    </control>
[03:11:11.199]  </sequence>
[03:11:11.199]  
[03:11:11.459]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:11.459]  
[03:11:11.461]  <debugvars>
[03:11:11.461]    // Pre-defined
[03:11:11.461]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:11.461]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:11.461]    __dp=0x00000000
[03:11:11.461]    __ap=0x00000000
[03:11:11.461]    __traceout=0x00000000      (Trace Disabled)
[03:11:11.461]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:11.461]    __FlashAddr=0x00000000
[03:11:11.461]    __FlashLen=0x00000000
[03:11:11.461]    __FlashArg=0x00000000
[03:11:11.461]    __FlashOp=0x00000000
[03:11:11.461]    __Result=0x00000000
[03:11:11.461]  </debugvars>
[03:11:11.461]  
[03:11:11.463]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:11.463]    <block atomic="false" info="">
[03:11:11.463]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:11.463]        // -> [isSWJ <= 0x00000001]
[03:11:11.463]      __var hasDormant = __protocol & 0x00020000;
[03:11:11.463]        // -> [hasDormant <= 0x00000000]
[03:11:11.463]      __var protType   = __protocol & 0x0000FFFF;
[03:11:11.463]        // -> [protType <= 0x00000002]
[03:11:11.463]    </block>
[03:11:11.465]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:11.465]      // if-block "protType == 1"
[03:11:11.465]        // =>  FALSE
[03:11:11.465]      // skip if-block "protType == 1"
[03:11:11.465]    </control>
[03:11:11.465]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:11.465]      // if-block "protType == 2"
[03:11:11.465]        // =>  TRUE
[03:11:11.465]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:11.465]        // if-block "isSWJ"
[03:11:11.465]          // =>  TRUE
[03:11:11.465]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:11.465]          // if-block "hasDormant"
[03:11:11.465]            // =>  FALSE
[03:11:11.465]          // skip if-block "hasDormant"
[03:11:11.465]        </control>
[03:11:11.465]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:11.465]          // if-block "!hasDormant"
[03:11:11.465]            // =>  TRUE
[03:11:11.465]          <block atomic="false" info="">
[03:11:11.465]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:11.467]  
[03:11:11.467]  !!! E320 : DAP access error
[03:11:11.467]  
[03:11:11.467]          </block>
[03:11:11.467]          // end if-block "!hasDormant"
[03:11:11.467]        </control>
[03:11:11.467]        // end if-block "isSWJ"
[03:11:11.467]      </control>
[03:11:11.467]      // end if-block "protType == 2"
[03:11:11.467]    </control>
[03:11:11.467]  </sequence>
[03:11:11.467]  
[03:11:11.727]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:11.727]  
[03:11:11.727]  <debugvars>
[03:11:11.727]    // Pre-defined
[03:11:11.727]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:11.727]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:11.727]    __dp=0x00000000
[03:11:11.727]    __ap=0x00000000
[03:11:11.727]    __traceout=0x00000000      (Trace Disabled)
[03:11:11.727]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:11.727]    __FlashAddr=0x00000000
[03:11:11.727]    __FlashLen=0x00000000
[03:11:11.727]    __FlashArg=0x00000000
[03:11:11.727]    __FlashOp=0x00000000
[03:11:11.727]    __Result=0x00000000
[03:11:11.727]  </debugvars>
[03:11:11.727]  
[03:11:11.727]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:11.727]    <block atomic="false" info="">
[03:11:11.727]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:11.727]        // -> [isSWJ <= 0x00000001]
[03:11:11.727]      __var hasDormant = __protocol & 0x00020000;
[03:11:11.727]        // -> [hasDormant <= 0x00000000]
[03:11:11.727]      __var protType   = __protocol & 0x0000FFFF;
[03:11:11.727]        // -> [protType <= 0x00000002]
[03:11:11.727]    </block>
[03:11:11.727]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:11.727]      // if-block "protType == 1"
[03:11:11.727]        // =>  FALSE
[03:11:11.727]      // skip if-block "protType == 1"
[03:11:11.731]    </control>
[03:11:11.731]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:11.731]      // if-block "protType == 2"
[03:11:11.731]        // =>  TRUE
[03:11:11.731]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:11.731]        // if-block "isSWJ"
[03:11:11.731]          // =>  TRUE
[03:11:11.731]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:11.731]          // if-block "hasDormant"
[03:11:11.731]            // =>  FALSE
[03:11:11.731]          // skip if-block "hasDormant"
[03:11:11.731]        </control>
[03:11:11.731]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:11.731]          // if-block "!hasDormant"
[03:11:11.731]            // =>  TRUE
[03:11:11.731]          <block atomic="false" info="">
[03:11:11.731]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:11.731]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:11.731]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:11.731]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:11.731]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:11.731]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:11.731]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:11.735]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:11.735]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:11.735]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:11.735]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:11.735]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:11.735]          </block>
[03:11:11.735]          // end if-block "!hasDormant"
[03:11:11.735]        </control>
[03:11:11.735]        // end if-block "isSWJ"
[03:11:11.735]      </control>
[03:11:11.735]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:11.735]        // if-block "!isSWJ"
[03:11:11.735]          // =>  FALSE
[03:11:11.735]        // skip if-block "!isSWJ"
[03:11:11.735]      </control>
[03:11:11.735]      <block atomic="false" info="">
[03:11:11.739]        ReadDP(0x0);
[03:11:11.739]  
[03:11:11.739]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:11.739]  
[03:11:11.739]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:11.739]      </block>
[03:11:11.739]      // end if-block "protType == 2"
[03:11:11.739]    </control>
[03:11:11.739]  </sequence>
[03:11:11.739]  
[03:11:11.995]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:11.995]  
[03:11:11.997]  <debugvars>
[03:11:11.998]    // Pre-defined
[03:11:11.998]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:11.998]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:11.998]    __dp=0x00000000
[03:11:11.998]    __ap=0x00000000
[03:11:11.998]    __traceout=0x00000000      (Trace Disabled)
[03:11:11.998]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:11.998]    __FlashAddr=0x00000000
[03:11:11.998]    __FlashLen=0x00000000
[03:11:11.998]    __FlashArg=0x00000000
[03:11:11.998]    __FlashOp=0x00000000
[03:11:11.998]    __Result=0x00000000
[03:11:11.998]  </debugvars>
[03:11:11.998]  
[03:11:11.998]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:11.999]    <block atomic="false" info="">
[03:11:12.000]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:12.000]        // -> [isSWJ <= 0x00000001]
[03:11:12.000]      __var hasDormant = __protocol & 0x00020000;
[03:11:12.000]        // -> [hasDormant <= 0x00000000]
[03:11:12.000]      __var protType   = __protocol & 0x0000FFFF;
[03:11:12.000]        // -> [protType <= 0x00000002]
[03:11:12.000]    </block>
[03:11:12.000]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:12.000]      // if-block "protType == 1"
[03:11:12.000]        // =>  FALSE
[03:11:12.000]      // skip if-block "protType == 1"
[03:11:12.000]    </control>
[03:11:12.000]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:12.000]      // if-block "protType == 2"
[03:11:12.000]        // =>  TRUE
[03:11:12.000]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:12.000]        // if-block "isSWJ"
[03:11:12.000]          // =>  TRUE
[03:11:12.000]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:12.000]          // if-block "hasDormant"
[03:11:12.000]            // =>  FALSE
[03:11:12.000]          // skip if-block "hasDormant"
[03:11:12.000]        </control>
[03:11:12.000]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:12.000]          // if-block "!hasDormant"
[03:11:12.000]            // =>  TRUE
[03:11:12.000]          <block atomic="false" info="">
[03:11:12.000]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:12.000]  
[03:11:12.000]  !!! E320 : DAP access error
[03:11:12.000]  
[03:11:12.000]          </block>
[03:11:12.000]          // end if-block "!hasDormant"
[03:11:12.000]        </control>
[03:11:12.000]        // end if-block "isSWJ"
[03:11:12.000]      </control>
[03:11:12.004]      // end if-block "protType == 2"
[03:11:12.004]    </control>
[03:11:12.004]  </sequence>
[03:11:12.004]  
[03:11:12.260]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:12.260]  
[03:11:12.260]  <debugvars>
[03:11:12.260]    // Pre-defined
[03:11:12.260]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:12.260]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:12.260]    __dp=0x00000000
[03:11:12.260]    __ap=0x00000000
[03:11:12.260]    __traceout=0x00000000      (Trace Disabled)
[03:11:12.260]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:12.260]    __FlashAddr=0x00000000
[03:11:12.260]    __FlashLen=0x00000000
[03:11:12.260]    __FlashArg=0x00000000
[03:11:12.260]    __FlashOp=0x00000000
[03:11:12.260]    __Result=0x00000000
[03:11:12.260]  </debugvars>
[03:11:12.260]  
[03:11:12.260]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:12.260]    <block atomic="false" info="">
[03:11:12.260]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:12.260]        // -> [isSWJ <= 0x00000001]
[03:11:12.260]      __var hasDormant = __protocol & 0x00020000;
[03:11:12.260]        // -> [hasDormant <= 0x00000000]
[03:11:12.263]      __var protType   = __protocol & 0x0000FFFF;
[03:11:12.263]        // -> [protType <= 0x00000002]
[03:11:12.263]    </block>
[03:11:12.263]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:12.263]      // if-block "protType == 1"
[03:11:12.263]        // =>  FALSE
[03:11:12.263]      // skip if-block "protType == 1"
[03:11:12.263]    </control>
[03:11:12.263]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:12.263]      // if-block "protType == 2"
[03:11:12.263]        // =>  TRUE
[03:11:12.264]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:12.264]        // if-block "isSWJ"
[03:11:12.264]          // =>  TRUE
[03:11:12.264]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:12.264]          // if-block "hasDormant"
[03:11:12.264]            // =>  FALSE
[03:11:12.264]          // skip if-block "hasDormant"
[03:11:12.264]        </control>
[03:11:12.264]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:12.264]          // if-block "!hasDormant"
[03:11:12.264]            // =>  TRUE
[03:11:12.264]          <block atomic="false" info="">
[03:11:12.264]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:12.264]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:12.264]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:12.267]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:12.267]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:12.267]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:12.267]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:12.268]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:12.268]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:12.273]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:12.273]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:12.273]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:12.273]          </block>
[03:11:12.273]          // end if-block "!hasDormant"
[03:11:12.273]        </control>
[03:11:12.273]        // end if-block "isSWJ"
[03:11:12.273]      </control>
[03:11:12.273]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:12.276]        // if-block "!isSWJ"
[03:11:12.276]          // =>  FALSE
[03:11:12.276]        // skip if-block "!isSWJ"
[03:11:12.276]      </control>
[03:11:12.276]      <block atomic="false" info="">
[03:11:12.276]        ReadDP(0x0);
[03:11:12.276]  
[03:11:12.276]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:12.276]  
[03:11:12.276]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:12.277]      </block>
[03:11:12.277]      // end if-block "protType == 2"
[03:11:12.277]    </control>
[03:11:12.277]  </sequence>
[03:11:12.277]  
[03:11:12.531]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:12.531]  
[03:11:12.531]  <debugvars>
[03:11:12.531]    // Pre-defined
[03:11:12.531]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:12.531]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:12.531]    __dp=0x00000000
[03:11:12.531]    __ap=0x00000000
[03:11:12.531]    __traceout=0x00000000      (Trace Disabled)
[03:11:12.531]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:12.531]    __FlashAddr=0x00000000
[03:11:12.531]    __FlashLen=0x00000000
[03:11:12.531]    __FlashArg=0x00000000
[03:11:12.531]    __FlashOp=0x00000000
[03:11:12.531]    __Result=0x00000000
[03:11:12.531]  </debugvars>
[03:11:12.531]  
[03:11:12.531]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:12.531]    <block atomic="false" info="">
[03:11:12.531]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:12.531]        // -> [isSWJ <= 0x00000001]
[03:11:12.531]      __var hasDormant = __protocol & 0x00020000;
[03:11:12.531]        // -> [hasDormant <= 0x00000000]
[03:11:12.531]      __var protType   = __protocol & 0x0000FFFF;
[03:11:12.531]        // -> [protType <= 0x00000002]
[03:11:12.531]    </block>
[03:11:12.531]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:12.531]      // if-block "protType == 1"
[03:11:12.531]        // =>  FALSE
[03:11:12.531]      // skip if-block "protType == 1"
[03:11:12.535]    </control>
[03:11:12.535]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:12.535]      // if-block "protType == 2"
[03:11:12.535]        // =>  TRUE
[03:11:12.535]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:12.535]        // if-block "isSWJ"
[03:11:12.535]          // =>  TRUE
[03:11:12.535]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:12.535]          // if-block "hasDormant"
[03:11:12.535]            // =>  FALSE
[03:11:12.535]          // skip if-block "hasDormant"
[03:11:12.535]        </control>
[03:11:12.535]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:12.535]          // if-block "!hasDormant"
[03:11:12.535]            // =>  TRUE
[03:11:12.535]          <block atomic="false" info="">
[03:11:12.535]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:12.535]  
[03:11:12.535]  !!! E320 : DAP access error
[03:11:12.535]  
[03:11:12.535]          </block>
[03:11:12.535]          // end if-block "!hasDormant"
[03:11:12.535]        </control>
[03:11:12.535]        // end if-block "isSWJ"
[03:11:12.535]      </control>
[03:11:12.535]      // end if-block "protType == 2"
[03:11:12.535]    </control>
[03:11:12.535]  </sequence>
[03:11:12.535]  
[03:11:12.791]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:12.791]  
[03:11:12.793]  <debugvars>
[03:11:12.793]    // Pre-defined
[03:11:12.793]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:12.793]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:12.793]    __dp=0x00000000
[03:11:12.793]    __ap=0x00000000
[03:11:12.793]    __traceout=0x00000000      (Trace Disabled)
[03:11:12.793]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:12.793]    __FlashAddr=0x00000000
[03:11:12.793]    __FlashLen=0x00000000
[03:11:12.793]    __FlashArg=0x00000000
[03:11:12.793]    __FlashOp=0x00000000
[03:11:12.793]    __Result=0x00000000
[03:11:12.793]  </debugvars>
[03:11:12.793]  
[03:11:12.793]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:12.793]    <block atomic="false" info="">
[03:11:12.793]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:12.793]        // -> [isSWJ <= 0x00000001]
[03:11:12.795]      __var hasDormant = __protocol & 0x00020000;
[03:11:12.795]        // -> [hasDormant <= 0x00000000]
[03:11:12.795]      __var protType   = __protocol & 0x0000FFFF;
[03:11:12.795]        // -> [protType <= 0x00000002]
[03:11:12.795]    </block>
[03:11:12.795]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:12.795]      // if-block "protType == 1"
[03:11:12.795]        // =>  FALSE
[03:11:12.795]      // skip if-block "protType == 1"
[03:11:12.795]    </control>
[03:11:12.795]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:12.795]      // if-block "protType == 2"
[03:11:12.795]        // =>  TRUE
[03:11:12.795]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:12.795]        // if-block "isSWJ"
[03:11:12.795]          // =>  TRUE
[03:11:12.795]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:12.795]          // if-block "hasDormant"
[03:11:12.795]            // =>  FALSE
[03:11:12.795]          // skip if-block "hasDormant"
[03:11:12.795]        </control>
[03:11:12.795]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:12.795]          // if-block "!hasDormant"
[03:11:12.795]            // =>  TRUE
[03:11:12.795]          <block atomic="false" info="">
[03:11:12.795]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:12.795]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:12.795]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:12.799]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:12.799]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:12.799]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:12.799]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:12.804]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:12.804]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:12.804]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:12.804]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:12.806]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:12.806]          </block>
[03:11:12.806]          // end if-block "!hasDormant"
[03:11:12.806]        </control>
[03:11:12.808]        // end if-block "isSWJ"
[03:11:12.808]      </control>
[03:11:12.808]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:12.808]        // if-block "!isSWJ"
[03:11:12.808]          // =>  FALSE
[03:11:12.808]        // skip if-block "!isSWJ"
[03:11:12.808]      </control>
[03:11:12.808]      <block atomic="false" info="">
[03:11:12.808]        ReadDP(0x0);
[03:11:12.809]  
[03:11:12.809]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:12.809]  
[03:11:12.809]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:12.809]      </block>
[03:11:12.809]      // end if-block "protType == 2"
[03:11:12.809]    </control>
[03:11:12.809]  </sequence>
[03:11:12.809]  
[03:11:13.069]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:13.069]  
[03:11:13.069]  <debugvars>
[03:11:13.069]    // Pre-defined
[03:11:13.069]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:13.069]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:13.069]    __dp=0x00000000
[03:11:13.069]    __ap=0x00000000
[03:11:13.069]    __traceout=0x00000000      (Trace Disabled)
[03:11:13.069]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:13.069]    __FlashAddr=0x00000000
[03:11:13.069]    __FlashLen=0x00000000
[03:11:13.069]    __FlashArg=0x00000000
[03:11:13.069]    __FlashOp=0x00000000
[03:11:13.069]    __Result=0x00000000
[03:11:13.069]  </debugvars>
[03:11:13.069]  
[03:11:13.069]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:13.069]    <block atomic="false" info="">
[03:11:13.069]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:13.069]        // -> [isSWJ <= 0x00000001]
[03:11:13.069]      __var hasDormant = __protocol & 0x00020000;
[03:11:13.073]        // -> [hasDormant <= 0x00000000]
[03:11:13.073]      __var protType   = __protocol & 0x0000FFFF;
[03:11:13.073]        // -> [protType <= 0x00000002]
[03:11:13.073]    </block>
[03:11:13.073]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:13.073]      // if-block "protType == 1"
[03:11:13.073]        // =>  FALSE
[03:11:13.073]      // skip if-block "protType == 1"
[03:11:13.073]    </control>
[03:11:13.073]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:13.073]      // if-block "protType == 2"
[03:11:13.073]        // =>  TRUE
[03:11:13.073]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:13.073]        // if-block "isSWJ"
[03:11:13.073]          // =>  TRUE
[03:11:13.073]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:13.073]          // if-block "hasDormant"
[03:11:13.073]            // =>  FALSE
[03:11:13.073]          // skip if-block "hasDormant"
[03:11:13.073]        </control>
[03:11:13.073]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:13.073]          // if-block "!hasDormant"
[03:11:13.073]            // =>  TRUE
[03:11:13.073]          <block atomic="false" info="">
[03:11:13.073]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:13.073]  
[03:11:13.073]  !!! E320 : DAP access error
[03:11:13.073]  
[03:11:13.073]          </block>
[03:11:13.073]          // end if-block "!hasDormant"
[03:11:13.073]        </control>
[03:11:13.073]        // end if-block "isSWJ"
[03:11:13.073]      </control>
[03:11:13.073]      // end if-block "protType == 2"
[03:11:13.073]    </control>
[03:11:13.077]  </sequence>
[03:11:13.077]  
[03:11:13.336]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:13.336]  
[03:11:13.337]  <debugvars>
[03:11:13.337]    // Pre-defined
[03:11:13.337]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:13.337]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:13.337]    __dp=0x00000000
[03:11:13.337]    __ap=0x00000000
[03:11:13.337]    __traceout=0x00000000      (Trace Disabled)
[03:11:13.337]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:13.337]    __FlashAddr=0x00000000
[03:11:13.337]    __FlashLen=0x00000000
[03:11:13.337]    __FlashArg=0x00000000
[03:11:13.337]    __FlashOp=0x00000000
[03:11:13.337]    __Result=0x00000000
[03:11:13.337]  </debugvars>
[03:11:13.337]  
[03:11:13.337]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:13.337]    <block atomic="false" info="">
[03:11:13.337]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:13.337]        // -> [isSWJ <= 0x00000001]
[03:11:13.337]      __var hasDormant = __protocol & 0x00020000;
[03:11:13.337]        // -> [hasDormant <= 0x00000000]
[03:11:13.337]      __var protType   = __protocol & 0x0000FFFF;
[03:11:13.337]        // -> [protType <= 0x00000002]
[03:11:13.337]    </block>
[03:11:13.337]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:13.337]      // if-block "protType == 1"
[03:11:13.337]        // =>  FALSE
[03:11:13.337]      // skip if-block "protType == 1"
[03:11:13.340]    </control>
[03:11:13.340]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:13.340]      // if-block "protType == 2"
[03:11:13.340]        // =>  TRUE
[03:11:13.340]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:13.340]        // if-block "isSWJ"
[03:11:13.340]          // =>  TRUE
[03:11:13.340]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:13.340]          // if-block "hasDormant"
[03:11:13.340]            // =>  FALSE
[03:11:13.340]          // skip if-block "hasDormant"
[03:11:13.340]        </control>
[03:11:13.340]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:13.340]          // if-block "!hasDormant"
[03:11:13.340]            // =>  TRUE
[03:11:13.340]          <block atomic="false" info="">
[03:11:13.340]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:13.340]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:13.340]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:13.340]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:13.340]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:13.344]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:13.344]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:13.344]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:13.344]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:13.344]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:13.344]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:13.348]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:13.348]          </block>
[03:11:13.348]          // end if-block "!hasDormant"
[03:11:13.348]        </control>
[03:11:13.348]        // end if-block "isSWJ"
[03:11:13.348]      </control>
[03:11:13.348]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:13.348]        // if-block "!isSWJ"
[03:11:13.348]          // =>  FALSE
[03:11:13.348]        // skip if-block "!isSWJ"
[03:11:13.348]      </control>
[03:11:13.348]      <block atomic="false" info="">
[03:11:13.348]        ReadDP(0x0);
[03:11:13.350]  
[03:11:13.350]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:13.350]  
[03:11:13.350]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:13.350]      </block>
[03:11:13.350]      // end if-block "protType == 2"
[03:11:13.350]    </control>
[03:11:13.350]  </sequence>
[03:11:13.350]  
[03:11:13.602]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:13.602]  
[03:11:13.605]  <debugvars>
[03:11:13.605]    // Pre-defined
[03:11:13.605]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:13.605]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:13.605]    __dp=0x00000000
[03:11:13.605]    __ap=0x00000000
[03:11:13.605]    __traceout=0x00000000      (Trace Disabled)
[03:11:13.605]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:13.605]    __FlashAddr=0x00000000
[03:11:13.605]    __FlashLen=0x00000000
[03:11:13.605]    __FlashArg=0x00000000
[03:11:13.605]    __FlashOp=0x00000000
[03:11:13.605]    __Result=0x00000000
[03:11:13.605]  </debugvars>
[03:11:13.607]  
[03:11:13.607]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:13.607]    <block atomic="false" info="">
[03:11:13.607]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:13.607]        // -> [isSWJ <= 0x00000001]
[03:11:13.607]      __var hasDormant = __protocol & 0x00020000;
[03:11:13.607]        // -> [hasDormant <= 0x00000000]
[03:11:13.607]      __var protType   = __protocol & 0x0000FFFF;
[03:11:13.607]        // -> [protType <= 0x00000002]
[03:11:13.607]    </block>
[03:11:13.607]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:13.607]      // if-block "protType == 1"
[03:11:13.607]        // =>  FALSE
[03:11:13.607]      // skip if-block "protType == 1"
[03:11:13.607]    </control>
[03:11:13.607]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:13.607]      // if-block "protType == 2"
[03:11:13.607]        // =>  TRUE
[03:11:13.607]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:13.607]        // if-block "isSWJ"
[03:11:13.607]          // =>  TRUE
[03:11:13.607]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:13.607]          // if-block "hasDormant"
[03:11:13.607]            // =>  FALSE
[03:11:13.607]          // skip if-block "hasDormant"
[03:11:13.607]        </control>
[03:11:13.607]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:13.607]          // if-block "!hasDormant"
[03:11:13.607]            // =>  TRUE
[03:11:13.611]          <block atomic="false" info="">
[03:11:13.611]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:13.611]  
[03:11:13.611]  !!! E320 : DAP access error
[03:11:13.611]  
[03:11:13.611]          </block>
[03:11:13.611]          // end if-block "!hasDormant"
[03:11:13.611]        </control>
[03:11:13.611]        // end if-block "isSWJ"
[03:11:13.611]      </control>
[03:11:13.611]      // end if-block "protType == 2"
[03:11:13.611]    </control>
[03:11:13.611]  </sequence>
[03:11:13.611]  
[03:11:13.861]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:13.861]  
[03:11:13.863]  <debugvars>
[03:11:13.863]    // Pre-defined
[03:11:13.863]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:13.863]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:13.863]    __dp=0x00000000
[03:11:13.863]    __ap=0x00000000
[03:11:13.863]    __traceout=0x00000000      (Trace Disabled)
[03:11:13.863]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:13.865]    __FlashAddr=0x00000000
[03:11:13.865]    __FlashLen=0x00000000
[03:11:13.865]    __FlashArg=0x00000000
[03:11:13.865]    __FlashOp=0x00000000
[03:11:13.865]    __Result=0x00000000
[03:11:13.865]  </debugvars>
[03:11:13.865]  
[03:11:13.865]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:13.865]    <block atomic="false" info="">
[03:11:13.865]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:13.866]        // -> [isSWJ <= 0x00000001]
[03:11:13.866]      __var hasDormant = __protocol & 0x00020000;
[03:11:13.866]        // -> [hasDormant <= 0x00000000]
[03:11:13.866]      __var protType   = __protocol & 0x0000FFFF;
[03:11:13.866]        // -> [protType <= 0x00000002]
[03:11:13.866]    </block>
[03:11:13.866]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:13.866]      // if-block "protType == 1"
[03:11:13.866]        // =>  FALSE
[03:11:13.866]      // skip if-block "protType == 1"
[03:11:13.866]    </control>
[03:11:13.866]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:13.866]      // if-block "protType == 2"
[03:11:13.866]        // =>  TRUE
[03:11:13.866]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:13.866]        // if-block "isSWJ"
[03:11:13.866]          // =>  TRUE
[03:11:13.866]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:13.866]          // if-block "hasDormant"
[03:11:13.866]            // =>  FALSE
[03:11:13.866]          // skip if-block "hasDormant"
[03:11:13.866]        </control>
[03:11:13.866]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:13.866]          // if-block "!hasDormant"
[03:11:13.866]            // =>  TRUE
[03:11:13.866]          <block atomic="false" info="">
[03:11:13.868]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:13.868]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:13.868]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:13.870]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:13.870]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:13.870]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:13.870]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:13.870]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:13.870]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:13.870]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:13.870]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:13.870]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:13.870]          </block>
[03:11:13.870]          // end if-block "!hasDormant"
[03:11:13.870]        </control>
[03:11:13.874]        // end if-block "isSWJ"
[03:11:13.874]      </control>
[03:11:13.874]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:13.874]        // if-block "!isSWJ"
[03:11:13.874]          // =>  FALSE
[03:11:13.874]        // skip if-block "!isSWJ"
[03:11:13.874]      </control>
[03:11:13.874]      <block atomic="false" info="">
[03:11:13.874]        ReadDP(0x0);
[03:11:13.874]  
[03:11:13.874]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:13.874]  
[03:11:13.874]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:13.874]      </block>
[03:11:13.874]      // end if-block "protType == 2"
[03:11:13.874]    </control>
[03:11:13.874]  </sequence>
[03:11:13.874]  
[03:11:14.132]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:14.132]  
[03:11:14.134]  <debugvars>
[03:11:14.134]    // Pre-defined
[03:11:14.134]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:14.134]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:14.134]    __dp=0x00000000
[03:11:14.134]    __ap=0x00000000
[03:11:14.134]    __traceout=0x00000000      (Trace Disabled)
[03:11:14.134]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:14.134]    __FlashAddr=0x00000000
[03:11:14.134]    __FlashLen=0x00000000
[03:11:14.134]    __FlashArg=0x00000000
[03:11:14.134]    __FlashOp=0x00000000
[03:11:14.134]    __Result=0x00000000
[03:11:14.134]  </debugvars>
[03:11:14.134]  
[03:11:14.134]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:14.134]    <block atomic="false" info="">
[03:11:14.134]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:14.134]        // -> [isSWJ <= 0x00000001]
[03:11:14.136]      __var hasDormant = __protocol & 0x00020000;
[03:11:14.136]        // -> [hasDormant <= 0x00000000]
[03:11:14.136]      __var protType   = __protocol & 0x0000FFFF;
[03:11:14.136]        // -> [protType <= 0x00000002]
[03:11:14.136]    </block>
[03:11:14.136]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:14.136]      // if-block "protType == 1"
[03:11:14.136]        // =>  FALSE
[03:11:14.136]      // skip if-block "protType == 1"
[03:11:14.136]    </control>
[03:11:14.136]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:14.136]      // if-block "protType == 2"
[03:11:14.136]        // =>  TRUE
[03:11:14.136]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:14.136]        // if-block "isSWJ"
[03:11:14.136]          // =>  TRUE
[03:11:14.136]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:14.136]          // if-block "hasDormant"
[03:11:14.136]            // =>  FALSE
[03:11:14.136]          // skip if-block "hasDormant"
[03:11:14.136]        </control>
[03:11:14.136]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:14.136]          // if-block "!hasDormant"
[03:11:14.136]            // =>  TRUE
[03:11:14.136]          <block atomic="false" info="">
[03:11:14.136]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:14.136]  
[03:11:14.136]  !!! E320 : DAP access error
[03:11:14.136]  
[03:11:14.136]          </block>
[03:11:14.136]          // end if-block "!hasDormant"
[03:11:14.136]        </control>
[03:11:14.136]        // end if-block "isSWJ"
[03:11:14.136]      </control>
[03:11:14.136]      // end if-block "protType == 2"
[03:11:14.136]    </control>
[03:11:14.136]  </sequence>
[03:11:14.136]  
[03:11:14.390]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:14.390]  
[03:11:14.390]  <debugvars>
[03:11:14.390]    // Pre-defined
[03:11:14.390]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:14.390]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:14.390]    __dp=0x00000000
[03:11:14.390]    __ap=0x00000000
[03:11:14.390]    __traceout=0x00000000      (Trace Disabled)
[03:11:14.390]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:14.390]    __FlashAddr=0x00000000
[03:11:14.390]    __FlashLen=0x00000000
[03:11:14.390]    __FlashArg=0x00000000
[03:11:14.390]    __FlashOp=0x00000000
[03:11:14.390]    __Result=0x00000000
[03:11:14.390]  </debugvars>
[03:11:14.390]  
[03:11:14.390]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:14.390]    <block atomic="false" info="">
[03:11:14.390]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:14.390]        // -> [isSWJ <= 0x00000001]
[03:11:14.390]      __var hasDormant = __protocol & 0x00020000;
[03:11:14.390]        // -> [hasDormant <= 0x00000000]
[03:11:14.390]      __var protType   = __protocol & 0x0000FFFF;
[03:11:14.390]        // -> [protType <= 0x00000002]
[03:11:14.390]    </block>
[03:11:14.390]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:14.390]      // if-block "protType == 1"
[03:11:14.390]        // =>  FALSE
[03:11:14.390]      // skip if-block "protType == 1"
[03:11:14.394]    </control>
[03:11:14.394]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:14.394]      // if-block "protType == 2"
[03:11:14.394]        // =>  TRUE
[03:11:14.394]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:14.394]        // if-block "isSWJ"
[03:11:14.394]          // =>  TRUE
[03:11:14.394]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:14.394]          // if-block "hasDormant"
[03:11:14.394]            // =>  FALSE
[03:11:14.394]          // skip if-block "hasDormant"
[03:11:14.394]        </control>
[03:11:14.394]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:14.394]          // if-block "!hasDormant"
[03:11:14.394]            // =>  TRUE
[03:11:14.394]          <block atomic="false" info="">
[03:11:14.394]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:14.394]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:14.394]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:14.394]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:14.394]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:14.398]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:14.398]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:14.398]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:14.398]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:14.398]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:14.398]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:14.398]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:14.398]          </block>
[03:11:14.402]          // end if-block "!hasDormant"
[03:11:14.402]        </control>
[03:11:14.402]        // end if-block "isSWJ"
[03:11:14.402]      </control>
[03:11:14.402]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:14.402]        // if-block "!isSWJ"
[03:11:14.402]          // =>  FALSE
[03:11:14.402]        // skip if-block "!isSWJ"
[03:11:14.402]      </control>
[03:11:14.402]      <block atomic="false" info="">
[03:11:14.403]        ReadDP(0x0);
[03:11:14.403]  
[03:11:14.403]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:14.403]  
[03:11:14.403]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:14.403]      </block>
[03:11:14.403]      // end if-block "protType == 2"
[03:11:14.403]    </control>
[03:11:14.404]  </sequence>
[03:11:14.404]  
[03:11:14.662]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:14.662]  
[03:11:14.664]  <debugvars>
[03:11:14.664]    // Pre-defined
[03:11:14.664]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:14.664]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:14.664]    __dp=0x00000000
[03:11:14.664]    __ap=0x00000000
[03:11:14.664]    __traceout=0x00000000      (Trace Disabled)
[03:11:14.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:14.664]    __FlashAddr=0x00000000
[03:11:14.664]    __FlashLen=0x00000000
[03:11:14.664]    __FlashArg=0x00000000
[03:11:14.664]    __FlashOp=0x00000000
[03:11:14.664]    __Result=0x00000000
[03:11:14.664]  </debugvars>
[03:11:14.664]  
[03:11:14.664]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:14.664]    <block atomic="false" info="">
[03:11:14.666]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:14.666]        // -> [isSWJ <= 0x00000001]
[03:11:14.666]      __var hasDormant = __protocol & 0x00020000;
[03:11:14.666]        // -> [hasDormant <= 0x00000000]
[03:11:14.666]      __var protType   = __protocol & 0x0000FFFF;
[03:11:14.666]        // -> [protType <= 0x00000002]
[03:11:14.666]    </block>
[03:11:14.666]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:14.666]      // if-block "protType == 1"
[03:11:14.666]        // =>  FALSE
[03:11:14.666]      // skip if-block "protType == 1"
[03:11:14.668]    </control>
[03:11:14.668]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:14.668]      // if-block "protType == 2"
[03:11:14.668]        // =>  TRUE
[03:11:14.668]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:14.668]        // if-block "isSWJ"
[03:11:14.668]          // =>  TRUE
[03:11:14.668]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:14.668]          // if-block "hasDormant"
[03:11:14.669]            // =>  FALSE
[03:11:14.669]          // skip if-block "hasDormant"
[03:11:14.669]        </control>
[03:11:14.669]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:14.669]          // if-block "!hasDormant"
[03:11:14.669]            // =>  TRUE
[03:11:14.669]          <block atomic="false" info="">
[03:11:14.669]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:14.670]  
[03:11:14.670]  !!! E320 : DAP access error
[03:11:14.670]  
[03:11:14.670]          </block>
[03:11:14.670]          // end if-block "!hasDormant"
[03:11:14.670]        </control>
[03:11:14.670]        // end if-block "isSWJ"
[03:11:14.670]      </control>
[03:11:14.670]      // end if-block "protType == 2"
[03:11:14.670]    </control>
[03:11:14.670]  </sequence>
[03:11:14.671]  
[03:11:14.928]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:14.928]  
[03:11:14.929]  <debugvars>
[03:11:14.929]    // Pre-defined
[03:11:14.929]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:14.929]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:14.929]    __dp=0x00000000
[03:11:14.929]    __ap=0x00000000
[03:11:14.929]    __traceout=0x00000000      (Trace Disabled)
[03:11:14.929]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:14.929]    __FlashAddr=0x00000000
[03:11:14.930]    __FlashLen=0x00000000
[03:11:14.930]    __FlashArg=0x00000000
[03:11:14.930]    __FlashOp=0x00000000
[03:11:14.930]    __Result=0x00000000
[03:11:14.930]  </debugvars>
[03:11:14.931]  
[03:11:14.931]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:14.931]    <block atomic="false" info="">
[03:11:14.931]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:14.931]        // -> [isSWJ <= 0x00000001]
[03:11:14.931]      __var hasDormant = __protocol & 0x00020000;
[03:11:14.931]        // -> [hasDormant <= 0x00000000]
[03:11:14.931]      __var protType   = __protocol & 0x0000FFFF;
[03:11:14.931]        // -> [protType <= 0x00000002]
[03:11:14.931]    </block>
[03:11:14.931]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:14.931]      // if-block "protType == 1"
[03:11:14.931]        // =>  FALSE
[03:11:14.931]      // skip if-block "protType == 1"
[03:11:14.931]    </control>
[03:11:14.932]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:14.932]      // if-block "protType == 2"
[03:11:14.932]        // =>  TRUE
[03:11:14.932]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:14.932]        // if-block "isSWJ"
[03:11:14.932]          // =>  TRUE
[03:11:14.932]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:14.932]          // if-block "hasDormant"
[03:11:14.932]            // =>  FALSE
[03:11:14.932]          // skip if-block "hasDormant"
[03:11:14.932]        </control>
[03:11:14.932]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:14.932]          // if-block "!hasDormant"
[03:11:14.932]            // =>  TRUE
[03:11:14.932]          <block atomic="false" info="">
[03:11:14.932]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:14.932]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:14.932]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:14.932]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:14.932]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:14.936]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:14.936]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:14.936]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:14.936]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:14.936]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:14.936]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:14.936]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:14.936]          </block>
[03:11:14.936]          // end if-block "!hasDormant"
[03:11:14.936]        </control>
[03:11:14.936]        // end if-block "isSWJ"
[03:11:14.936]      </control>
[03:11:14.936]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:14.936]        // if-block "!isSWJ"
[03:11:14.936]          // =>  FALSE
[03:11:14.936]        // skip if-block "!isSWJ"
[03:11:14.940]      </control>
[03:11:14.940]      <block atomic="false" info="">
[03:11:14.940]        ReadDP(0x0);
[03:11:14.940]  
[03:11:14.940]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:14.940]  
[03:11:14.940]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:14.941]      </block>
[03:11:14.941]      // end if-block "protType == 2"
[03:11:14.941]    </control>
[03:11:14.941]  </sequence>
[03:11:14.941]  
[03:11:15.199]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:15.199]  
[03:11:15.200]  <debugvars>
[03:11:15.200]    // Pre-defined
[03:11:15.200]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:15.200]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:15.200]    __dp=0x00000000
[03:11:15.200]    __ap=0x00000000
[03:11:15.200]    __traceout=0x00000000      (Trace Disabled)
[03:11:15.200]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:15.200]    __FlashAddr=0x00000000
[03:11:15.200]    __FlashLen=0x00000000
[03:11:15.200]    __FlashArg=0x00000000
[03:11:15.200]    __FlashOp=0x00000000
[03:11:15.202]    __Result=0x00000000
[03:11:15.202]  </debugvars>
[03:11:15.202]  
[03:11:15.202]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:15.202]    <block atomic="false" info="">
[03:11:15.202]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:15.202]        // -> [isSWJ <= 0x00000001]
[03:11:15.202]      __var hasDormant = __protocol & 0x00020000;
[03:11:15.202]        // -> [hasDormant <= 0x00000000]
[03:11:15.202]      __var protType   = __protocol & 0x0000FFFF;
[03:11:15.202]        // -> [protType <= 0x00000002]
[03:11:15.202]    </block>
[03:11:15.202]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:15.203]      // if-block "protType == 1"
[03:11:15.203]        // =>  FALSE
[03:11:15.203]      // skip if-block "protType == 1"
[03:11:15.203]    </control>
[03:11:15.203]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:15.203]      // if-block "protType == 2"
[03:11:15.203]        // =>  TRUE
[03:11:15.203]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:15.203]        // if-block "isSWJ"
[03:11:15.203]          // =>  TRUE
[03:11:15.203]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:15.203]          // if-block "hasDormant"
[03:11:15.203]            // =>  FALSE
[03:11:15.203]          // skip if-block "hasDormant"
[03:11:15.205]        </control>
[03:11:15.205]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:15.205]          // if-block "!hasDormant"
[03:11:15.205]            // =>  TRUE
[03:11:15.205]          <block atomic="false" info="">
[03:11:15.205]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:15.205]  
[03:11:15.205]  !!! E320 : DAP access error
[03:11:15.205]  
[03:11:15.205]          </block>
[03:11:15.205]          // end if-block "!hasDormant"
[03:11:15.205]        </control>
[03:11:15.205]        // end if-block "isSWJ"
[03:11:15.205]      </control>
[03:11:15.205]      // end if-block "protType == 2"
[03:11:15.207]    </control>
[03:11:15.208]  </sequence>
[03:11:15.208]  
[03:11:15.469]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:15.469]  
[03:11:15.469]  <debugvars>
[03:11:15.469]    // Pre-defined
[03:11:15.469]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:15.469]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:15.469]    __dp=0x00000000
[03:11:15.469]    __ap=0x00000000
[03:11:15.469]    __traceout=0x00000000      (Trace Disabled)
[03:11:15.469]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:15.469]    __FlashAddr=0x00000000
[03:11:15.469]    __FlashLen=0x00000000
[03:11:15.469]    __FlashArg=0x00000000
[03:11:15.469]    __FlashOp=0x00000000
[03:11:15.469]    __Result=0x00000000
[03:11:15.469]  </debugvars>
[03:11:15.469]  
[03:11:15.469]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:15.472]    <block atomic="false" info="">
[03:11:15.472]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:15.472]        // -> [isSWJ <= 0x00000001]
[03:11:15.472]      __var hasDormant = __protocol & 0x00020000;
[03:11:15.472]        // -> [hasDormant <= 0x00000000]
[03:11:15.472]      __var protType   = __protocol & 0x0000FFFF;
[03:11:15.472]        // -> [protType <= 0x00000002]
[03:11:15.472]    </block>
[03:11:15.472]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:15.473]      // if-block "protType == 1"
[03:11:15.473]        // =>  FALSE
[03:11:15.473]      // skip if-block "protType == 1"
[03:11:15.473]    </control>
[03:11:15.473]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:15.474]      // if-block "protType == 2"
[03:11:15.474]        // =>  TRUE
[03:11:15.474]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:15.474]        // if-block "isSWJ"
[03:11:15.474]          // =>  TRUE
[03:11:15.474]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:15.474]          // if-block "hasDormant"
[03:11:15.474]            // =>  FALSE
[03:11:15.474]          // skip if-block "hasDormant"
[03:11:15.474]        </control>
[03:11:15.474]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:15.474]          // if-block "!hasDormant"
[03:11:15.474]            // =>  TRUE
[03:11:15.474]          <block atomic="false" info="">
[03:11:15.474]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:15.474]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:15.474]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:15.480]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:15.481]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:15.481]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:15.481]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:15.481]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:15.483]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:15.483]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:15.483]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:15.483]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:15.483]          </block>
[03:11:15.483]          // end if-block "!hasDormant"
[03:11:15.483]        </control>
[03:11:15.483]        // end if-block "isSWJ"
[03:11:15.485]      </control>
[03:11:15.485]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:15.485]        // if-block "!isSWJ"
[03:11:15.485]          // =>  FALSE
[03:11:15.485]        // skip if-block "!isSWJ"
[03:11:15.485]      </control>
[03:11:15.485]      <block atomic="false" info="">
[03:11:15.485]        ReadDP(0x0);
[03:11:15.486]  
[03:11:15.486]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:15.486]  
[03:11:15.486]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:15.486]      </block>
[03:11:15.486]      // end if-block "protType == 2"
[03:11:15.486]    </control>
[03:11:15.486]  </sequence>
[03:11:15.486]  
[03:11:15.737]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:15.737]  
[03:11:15.738]  <debugvars>
[03:11:15.738]    // Pre-defined
[03:11:15.738]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:15.738]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:15.738]    __dp=0x00000000
[03:11:15.738]    __ap=0x00000000
[03:11:15.738]    __traceout=0x00000000      (Trace Disabled)
[03:11:15.738]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:15.738]    __FlashAddr=0x00000000
[03:11:15.738]    __FlashLen=0x00000000
[03:11:15.738]    __FlashArg=0x00000000
[03:11:15.738]    __FlashOp=0x00000000
[03:11:15.738]    __Result=0x00000000
[03:11:15.738]  </debugvars>
[03:11:15.739]  
[03:11:15.739]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:15.739]    <block atomic="false" info="">
[03:11:15.739]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:15.739]        // -> [isSWJ <= 0x00000001]
[03:11:15.739]      __var hasDormant = __protocol & 0x00020000;
[03:11:15.739]        // -> [hasDormant <= 0x00000000]
[03:11:15.739]      __var protType   = __protocol & 0x0000FFFF;
[03:11:15.739]        // -> [protType <= 0x00000002]
[03:11:15.739]    </block>
[03:11:15.739]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:15.739]      // if-block "protType == 1"
[03:11:15.739]        // =>  FALSE
[03:11:15.739]      // skip if-block "protType == 1"
[03:11:15.739]    </control>
[03:11:15.741]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:15.741]      // if-block "protType == 2"
[03:11:15.741]        // =>  TRUE
[03:11:15.741]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:15.741]        // if-block "isSWJ"
[03:11:15.741]          // =>  TRUE
[03:11:15.741]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:15.741]          // if-block "hasDormant"
[03:11:15.741]            // =>  FALSE
[03:11:15.741]          // skip if-block "hasDormant"
[03:11:15.741]        </control>
[03:11:15.741]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:15.741]          // if-block "!hasDormant"
[03:11:15.741]            // =>  TRUE
[03:11:15.741]          <block atomic="false" info="">
[03:11:15.741]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:15.741]  
[03:11:15.741]  !!! E320 : DAP access error
[03:11:15.741]  
[03:11:15.741]          </block>
[03:11:15.741]          // end if-block "!hasDormant"
[03:11:15.741]        </control>
[03:11:15.741]        // end if-block "isSWJ"
[03:11:15.741]      </control>
[03:11:15.741]      // end if-block "protType == 2"
[03:11:15.741]    </control>
[03:11:15.741]  </sequence>
[03:11:15.741]  
[03:11:15.999]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:15.999]  
[03:11:16.000]  <debugvars>
[03:11:16.000]    // Pre-defined
[03:11:16.000]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:16.000]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:16.000]    __dp=0x00000000
[03:11:16.000]    __ap=0x00000000
[03:11:16.000]    __traceout=0x00000000      (Trace Disabled)
[03:11:16.000]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:16.000]    __FlashAddr=0x00000000
[03:11:16.000]    __FlashLen=0x00000000
[03:11:16.000]    __FlashArg=0x00000000
[03:11:16.000]    __FlashOp=0x00000000
[03:11:16.000]    __Result=0x00000000
[03:11:16.000]  </debugvars>
[03:11:16.000]  
[03:11:16.000]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:16.000]    <block atomic="false" info="">
[03:11:16.000]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:16.000]        // -> [isSWJ <= 0x00000001]
[03:11:16.000]      __var hasDormant = __protocol & 0x00020000;
[03:11:16.000]        // -> [hasDormant <= 0x00000000]
[03:11:16.000]      __var protType   = __protocol & 0x0000FFFF;
[03:11:16.000]        // -> [protType <= 0x00000002]
[03:11:16.000]    </block>
[03:11:16.000]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:16.000]      // if-block "protType == 1"
[03:11:16.000]        // =>  FALSE
[03:11:16.000]      // skip if-block "protType == 1"
[03:11:16.003]    </control>
[03:11:16.003]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:16.003]      // if-block "protType == 2"
[03:11:16.003]        // =>  TRUE
[03:11:16.003]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:16.003]        // if-block "isSWJ"
[03:11:16.003]          // =>  TRUE
[03:11:16.003]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:16.003]          // if-block "hasDormant"
[03:11:16.003]            // =>  FALSE
[03:11:16.003]          // skip if-block "hasDormant"
[03:11:16.003]        </control>
[03:11:16.003]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:16.003]          // if-block "!hasDormant"
[03:11:16.003]            // =>  TRUE
[03:11:16.003]          <block atomic="false" info="">
[03:11:16.003]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:16.003]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:16.003]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:16.007]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:16.007]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:16.007]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:16.007]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:16.012]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:16.012]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:16.012]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:16.013]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:16.013]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:16.013]          </block>
[03:11:16.013]          // end if-block "!hasDormant"
[03:11:16.013]        </control>
[03:11:16.013]        // end if-block "isSWJ"
[03:11:16.013]      </control>
[03:11:16.013]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:16.013]        // if-block "!isSWJ"
[03:11:16.013]          // =>  FALSE
[03:11:16.013]        // skip if-block "!isSWJ"
[03:11:16.013]      </control>
[03:11:16.013]      <block atomic="false" info="">
[03:11:16.013]        ReadDP(0x0);
[03:11:16.016]  
[03:11:16.016]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:16.016]  
[03:11:16.016]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:16.016]      </block>
[03:11:16.016]      // end if-block "protType == 2"
[03:11:16.016]    </control>
[03:11:16.016]  </sequence>
[03:11:16.016]  
[03:11:16.275]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:16.275]  
[03:11:16.278]  <debugvars>
[03:11:16.278]    // Pre-defined
[03:11:16.278]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:16.278]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:16.278]    __dp=0x00000000
[03:11:16.278]    __ap=0x00000000
[03:11:16.278]    __traceout=0x00000000      (Trace Disabled)
[03:11:16.278]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:16.278]    __FlashAddr=0x00000000
[03:11:16.278]    __FlashLen=0x00000000
[03:11:16.278]    __FlashArg=0x00000000
[03:11:16.278]    __FlashOp=0x00000000
[03:11:16.278]    __Result=0x00000000
[03:11:16.278]  </debugvars>
[03:11:16.279]  
[03:11:16.279]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:16.279]    <block atomic="false" info="">
[03:11:16.279]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:16.279]        // -> [isSWJ <= 0x00000001]
[03:11:16.279]      __var hasDormant = __protocol & 0x00020000;
[03:11:16.279]        // -> [hasDormant <= 0x00000000]
[03:11:16.279]      __var protType   = __protocol & 0x0000FFFF;
[03:11:16.279]        // -> [protType <= 0x00000002]
[03:11:16.279]    </block>
[03:11:16.279]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:16.279]      // if-block "protType == 1"
[03:11:16.279]        // =>  FALSE
[03:11:16.279]      // skip if-block "protType == 1"
[03:11:16.279]    </control>
[03:11:16.279]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:16.279]      // if-block "protType == 2"
[03:11:16.279]        // =>  TRUE
[03:11:16.279]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:16.279]        // if-block "isSWJ"
[03:11:16.279]          // =>  TRUE
[03:11:16.279]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:16.279]          // if-block "hasDormant"
[03:11:16.279]            // =>  FALSE
[03:11:16.279]          // skip if-block "hasDormant"
[03:11:16.279]        </control>
[03:11:16.279]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:16.279]          // if-block "!hasDormant"
[03:11:16.279]            // =>  TRUE
[03:11:16.279]          <block atomic="false" info="">
[03:11:16.283]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:16.283]  
[03:11:16.283]  !!! E320 : DAP access error
[03:11:16.283]  
[03:11:16.283]          </block>
[03:11:16.283]          // end if-block "!hasDormant"
[03:11:16.283]        </control>
[03:11:16.283]        // end if-block "isSWJ"
[03:11:16.283]      </control>
[03:11:16.283]      // end if-block "protType == 2"
[03:11:16.283]    </control>
[03:11:16.283]  </sequence>
[03:11:16.283]  
[03:11:16.534]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:16.534]  
[03:11:16.535]  <debugvars>
[03:11:16.535]    // Pre-defined
[03:11:16.535]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:16.535]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:16.535]    __dp=0x00000000
[03:11:16.535]    __ap=0x00000000
[03:11:16.535]    __traceout=0x00000000      (Trace Disabled)
[03:11:16.535]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:16.535]    __FlashAddr=0x00000000
[03:11:16.535]    __FlashLen=0x00000000
[03:11:16.535]    __FlashArg=0x00000000
[03:11:16.535]    __FlashOp=0x00000000
[03:11:16.535]    __Result=0x00000000
[03:11:16.535]  </debugvars>
[03:11:16.535]  
[03:11:16.535]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:16.535]    <block atomic="false" info="">
[03:11:16.535]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:16.535]        // -> [isSWJ <= 0x00000001]
[03:11:16.535]      __var hasDormant = __protocol & 0x00020000;
[03:11:16.535]        // -> [hasDormant <= 0x00000000]
[03:11:16.538]      __var protType   = __protocol & 0x0000FFFF;
[03:11:16.538]        // -> [protType <= 0x00000002]
[03:11:16.538]    </block>
[03:11:16.538]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:16.538]      // if-block "protType == 1"
[03:11:16.538]        // =>  FALSE
[03:11:16.538]      // skip if-block "protType == 1"
[03:11:16.538]    </control>
[03:11:16.538]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:16.538]      // if-block "protType == 2"
[03:11:16.538]        // =>  TRUE
[03:11:16.538]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:16.538]        // if-block "isSWJ"
[03:11:16.538]          // =>  TRUE
[03:11:16.538]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:16.538]          // if-block "hasDormant"
[03:11:16.538]            // =>  FALSE
[03:11:16.538]          // skip if-block "hasDormant"
[03:11:16.538]        </control>
[03:11:16.538]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:16.538]          // if-block "!hasDormant"
[03:11:16.538]            // =>  TRUE
[03:11:16.538]          <block atomic="false" info="">
[03:11:16.538]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:16.538]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:16.538]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:16.538]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:16.542]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:16.542]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:16.542]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:16.542]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:16.542]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:16.546]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:16.546]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:16.546]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:16.546]          </block>
[03:11:16.546]          // end if-block "!hasDormant"
[03:11:16.546]        </control>
[03:11:16.546]        // end if-block "isSWJ"
[03:11:16.546]      </control>
[03:11:16.546]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:16.546]        // if-block "!isSWJ"
[03:11:16.546]          // =>  FALSE
[03:11:16.546]        // skip if-block "!isSWJ"
[03:11:16.546]      </control>
[03:11:16.546]      <block atomic="false" info="">
[03:11:16.546]        ReadDP(0x0);
[03:11:16.546]  
[03:11:16.546]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:16.546]  
[03:11:16.546]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:16.546]      </block>
[03:11:16.546]      // end if-block "protType == 2"
[03:11:16.546]    </control>
[03:11:16.550]  </sequence>
[03:11:16.550]  
[03:11:16.812]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:16.812]  
[03:11:16.814]  <debugvars>
[03:11:16.814]    // Pre-defined
[03:11:16.814]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:16.814]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:16.814]    __dp=0x00000000
[03:11:16.814]    __ap=0x00000000
[03:11:16.814]    __traceout=0x00000000      (Trace Disabled)
[03:11:16.814]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:16.814]    __FlashAddr=0x00000000
[03:11:16.814]    __FlashLen=0x00000000
[03:11:16.814]    __FlashArg=0x00000000
[03:11:16.814]    __FlashOp=0x00000000
[03:11:16.814]    __Result=0x00000000
[03:11:16.814]  </debugvars>
[03:11:16.814]  
[03:11:16.814]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:16.814]    <block atomic="false" info="">
[03:11:16.814]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:16.814]        // -> [isSWJ <= 0x00000001]
[03:11:16.814]      __var hasDormant = __protocol & 0x00020000;
[03:11:16.816]        // -> [hasDormant <= 0x00000000]
[03:11:16.816]      __var protType   = __protocol & 0x0000FFFF;
[03:11:16.816]        // -> [protType <= 0x00000002]
[03:11:16.816]    </block>
[03:11:16.816]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:16.816]      // if-block "protType == 1"
[03:11:16.816]        // =>  FALSE
[03:11:16.816]      // skip if-block "protType == 1"
[03:11:16.816]    </control>
[03:11:16.816]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:16.816]      // if-block "protType == 2"
[03:11:16.816]        // =>  TRUE
[03:11:16.816]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:16.816]        // if-block "isSWJ"
[03:11:16.816]          // =>  TRUE
[03:11:16.816]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:16.818]          // if-block "hasDormant"
[03:11:16.818]            // =>  FALSE
[03:11:16.818]          // skip if-block "hasDormant"
[03:11:16.818]        </control>
[03:11:16.818]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:16.818]          // if-block "!hasDormant"
[03:11:16.818]            // =>  TRUE
[03:11:16.818]          <block atomic="false" info="">
[03:11:16.818]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:16.819]  
[03:11:16.819]  !!! E320 : DAP access error
[03:11:16.819]  
[03:11:16.819]          </block>
[03:11:16.819]          // end if-block "!hasDormant"
[03:11:16.819]        </control>
[03:11:16.819]        // end if-block "isSWJ"
[03:11:16.819]      </control>
[03:11:16.819]      // end if-block "protType == 2"
[03:11:16.819]    </control>
[03:11:16.819]  </sequence>
[03:11:16.819]  
[03:11:17.073]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:17.073]  
[03:11:17.074]  <debugvars>
[03:11:17.074]    // Pre-defined
[03:11:17.074]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:17.074]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:17.074]    __dp=0x00000000
[03:11:17.074]    __ap=0x00000000
[03:11:17.074]    __traceout=0x00000000      (Trace Disabled)
[03:11:17.074]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:17.074]    __FlashAddr=0x00000000
[03:11:17.074]    __FlashLen=0x00000000
[03:11:17.074]    __FlashArg=0x00000000
[03:11:17.074]    __FlashOp=0x00000000
[03:11:17.074]    __Result=0x00000000
[03:11:17.074]  </debugvars>
[03:11:17.074]  
[03:11:17.074]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:17.074]    <block atomic="false" info="">
[03:11:17.074]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:17.074]        // -> [isSWJ <= 0x00000001]
[03:11:17.074]      __var hasDormant = __protocol & 0x00020000;
[03:11:17.074]        // -> [hasDormant <= 0x00000000]
[03:11:17.074]      __var protType   = __protocol & 0x0000FFFF;
[03:11:17.074]        // -> [protType <= 0x00000002]
[03:11:17.074]    </block>
[03:11:17.074]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:17.077]      // if-block "protType == 1"
[03:11:17.077]        // =>  FALSE
[03:11:17.077]      // skip if-block "protType == 1"
[03:11:17.077]    </control>
[03:11:17.077]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:17.077]      // if-block "protType == 2"
[03:11:17.077]        // =>  TRUE
[03:11:17.077]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:17.078]        // if-block "isSWJ"
[03:11:17.078]          // =>  TRUE
[03:11:17.078]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:17.078]          // if-block "hasDormant"
[03:11:17.078]            // =>  FALSE
[03:11:17.078]          // skip if-block "hasDormant"
[03:11:17.078]        </control>
[03:11:17.078]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:17.078]          // if-block "!hasDormant"
[03:11:17.078]            // =>  TRUE
[03:11:17.078]          <block atomic="false" info="">
[03:11:17.078]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:17.079]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:17.079]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:17.079]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:17.081]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:17.081]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:17.081]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:17.081]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:17.081]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:17.081]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:17.081]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:17.081]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:17.085]          </block>
[03:11:17.085]          // end if-block "!hasDormant"
[03:11:17.085]        </control>
[03:11:17.085]        // end if-block "isSWJ"
[03:11:17.085]      </control>
[03:11:17.085]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:17.085]        // if-block "!isSWJ"
[03:11:17.085]          // =>  FALSE
[03:11:17.085]        // skip if-block "!isSWJ"
[03:11:17.085]      </control>
[03:11:17.085]      <block atomic="false" info="">
[03:11:17.085]        ReadDP(0x0);
[03:11:17.085]  
[03:11:17.085]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:17.085]  
[03:11:17.085]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:17.085]      </block>
[03:11:17.085]      // end if-block "protType == 2"
[03:11:17.088]    </control>
[03:11:17.088]  </sequence>
[03:11:17.088]  
[03:11:17.338]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:17.338]  
[03:11:17.341]  <debugvars>
[03:11:17.341]    // Pre-defined
[03:11:17.341]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:17.341]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:17.341]    __dp=0x00000000
[03:11:17.341]    __ap=0x00000000
[03:11:17.341]    __traceout=0x00000000      (Trace Disabled)
[03:11:17.341]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:17.341]    __FlashAddr=0x00000000
[03:11:17.341]    __FlashLen=0x00000000
[03:11:17.343]    __FlashArg=0x00000000
[03:11:17.343]    __FlashOp=0x00000000
[03:11:17.343]    __Result=0x00000000
[03:11:17.343]  </debugvars>
[03:11:17.343]  
[03:11:17.343]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:17.343]    <block atomic="false" info="">
[03:11:17.343]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:17.343]        // -> [isSWJ <= 0x00000001]
[03:11:17.343]      __var hasDormant = __protocol & 0x00020000;
[03:11:17.343]        // -> [hasDormant <= 0x00000000]
[03:11:17.343]      __var protType   = __protocol & 0x0000FFFF;
[03:11:17.343]        // -> [protType <= 0x00000002]
[03:11:17.343]    </block>
[03:11:17.343]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:17.343]      // if-block "protType == 1"
[03:11:17.343]        // =>  FALSE
[03:11:17.343]      // skip if-block "protType == 1"
[03:11:17.343]    </control>
[03:11:17.343]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:17.343]      // if-block "protType == 2"
[03:11:17.343]        // =>  TRUE
[03:11:17.343]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:17.343]        // if-block "isSWJ"
[03:11:17.343]          // =>  TRUE
[03:11:17.343]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:17.343]          // if-block "hasDormant"
[03:11:17.343]            // =>  FALSE
[03:11:17.343]          // skip if-block "hasDormant"
[03:11:17.347]        </control>
[03:11:17.347]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:17.347]          // if-block "!hasDormant"
[03:11:17.347]            // =>  TRUE
[03:11:17.347]          <block atomic="false" info="">
[03:11:17.347]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:17.347]  
[03:11:17.347]  !!! E320 : DAP access error
[03:11:17.347]  
[03:11:17.347]          </block>
[03:11:17.347]          // end if-block "!hasDormant"
[03:11:17.347]        </control>
[03:11:17.347]        // end if-block "isSWJ"
[03:11:17.347]      </control>
[03:11:17.347]      // end if-block "protType == 2"
[03:11:17.347]    </control>
[03:11:17.347]  </sequence>
[03:11:17.347]  
[03:11:17.598]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:17.598]  
[03:11:17.600]  <debugvars>
[03:11:17.600]    // Pre-defined
[03:11:17.600]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:17.600]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:17.600]    __dp=0x00000000
[03:11:17.600]    __ap=0x00000000
[03:11:17.600]    __traceout=0x00000000      (Trace Disabled)
[03:11:17.600]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:17.600]    __FlashAddr=0x00000000
[03:11:17.600]    __FlashLen=0x00000000
[03:11:17.600]    __FlashArg=0x00000000
[03:11:17.602]    __FlashOp=0x00000000
[03:11:17.602]    __Result=0x00000000
[03:11:17.602]  </debugvars>
[03:11:17.602]  
[03:11:17.602]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:17.602]    <block atomic="false" info="">
[03:11:17.602]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:17.602]        // -> [isSWJ <= 0x00000001]
[03:11:17.602]      __var hasDormant = __protocol & 0x00020000;
[03:11:17.602]        // -> [hasDormant <= 0x00000000]
[03:11:17.602]      __var protType   = __protocol & 0x0000FFFF;
[03:11:17.602]        // -> [protType <= 0x00000002]
[03:11:17.602]    </block>
[03:11:17.602]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:17.602]      // if-block "protType == 1"
[03:11:17.602]        // =>  FALSE
[03:11:17.602]      // skip if-block "protType == 1"
[03:11:17.602]    </control>
[03:11:17.602]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:17.602]      // if-block "protType == 2"
[03:11:17.602]        // =>  TRUE
[03:11:17.602]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:17.602]        // if-block "isSWJ"
[03:11:17.602]          // =>  TRUE
[03:11:17.602]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:17.602]          // if-block "hasDormant"
[03:11:17.602]            // =>  FALSE
[03:11:17.602]          // skip if-block "hasDormant"
[03:11:17.602]        </control>
[03:11:17.602]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:17.602]          // if-block "!hasDormant"
[03:11:17.602]            // =>  TRUE
[03:11:17.602]          <block atomic="false" info="">
[03:11:17.602]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:17.602]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:17.606]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:17.606]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:17.606]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:17.606]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:17.606]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:17.606]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:17.606]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:17.606]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:17.606]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:17.610]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:17.610]          </block>
[03:11:17.610]          // end if-block "!hasDormant"
[03:11:17.610]        </control>
[03:11:17.610]        // end if-block "isSWJ"
[03:11:17.610]      </control>
[03:11:17.610]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:17.610]        // if-block "!isSWJ"
[03:11:17.610]          // =>  FALSE
[03:11:17.610]        // skip if-block "!isSWJ"
[03:11:17.610]      </control>
[03:11:17.610]      <block atomic="false" info="">
[03:11:17.610]        ReadDP(0x0);
[03:11:17.622]  
[03:11:17.622]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:17.622]  
[03:11:17.622]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:17.622]      </block>
[03:11:17.622]      // end if-block "protType == 2"
[03:11:17.622]    </control>
[03:11:17.622]  </sequence>
[03:11:17.622]  
[03:11:17.880]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:17.880]  
[03:11:17.881]  <debugvars>
[03:11:17.881]    // Pre-defined
[03:11:17.881]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:17.881]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:17.881]    __dp=0x00000000
[03:11:17.881]    __ap=0x00000000
[03:11:17.881]    __traceout=0x00000000      (Trace Disabled)
[03:11:17.881]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:17.881]    __FlashAddr=0x00000000
[03:11:17.881]    __FlashLen=0x00000000
[03:11:17.882]    __FlashArg=0x00000000
[03:11:17.882]    __FlashOp=0x00000000
[03:11:17.882]    __Result=0x00000000
[03:11:17.882]  </debugvars>
[03:11:17.882]  
[03:11:17.883]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:17.883]    <block atomic="false" info="">
[03:11:17.883]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:17.883]        // -> [isSWJ <= 0x00000001]
[03:11:17.883]      __var hasDormant = __protocol & 0x00020000;
[03:11:17.883]        // -> [hasDormant <= 0x00000000]
[03:11:17.883]      __var protType   = __protocol & 0x0000FFFF;
[03:11:17.883]        // -> [protType <= 0x00000002]
[03:11:17.883]    </block>
[03:11:17.883]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:17.883]      // if-block "protType == 1"
[03:11:17.884]        // =>  FALSE
[03:11:17.884]      // skip if-block "protType == 1"
[03:11:17.884]    </control>
[03:11:17.884]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:17.884]      // if-block "protType == 2"
[03:11:17.884]        // =>  TRUE
[03:11:17.884]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:17.884]        // if-block "isSWJ"
[03:11:17.884]          // =>  TRUE
[03:11:17.884]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:17.884]          // if-block "hasDormant"
[03:11:17.884]            // =>  FALSE
[03:11:17.884]          // skip if-block "hasDormant"
[03:11:17.884]        </control>
[03:11:17.884]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:17.884]          // if-block "!hasDormant"
[03:11:17.884]            // =>  TRUE
[03:11:17.884]          <block atomic="false" info="">
[03:11:17.884]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:17.884]  
[03:11:17.884]  !!! E320 : DAP access error
[03:11:17.884]  
[03:11:17.884]          </block>
[03:11:17.884]          // end if-block "!hasDormant"
[03:11:17.884]        </control>
[03:11:17.884]        // end if-block "isSWJ"
[03:11:17.884]      </control>
[03:11:17.884]      // end if-block "protType == 2"
[03:11:17.884]    </control>
[03:11:17.884]  </sequence>
[03:11:17.884]  
[03:11:18.134]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:18.134]  
[03:11:18.137]  <debugvars>
[03:11:18.137]    // Pre-defined
[03:11:18.137]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:18.137]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:18.137]    __dp=0x00000000
[03:11:18.137]    __ap=0x00000000
[03:11:18.137]    __traceout=0x00000000      (Trace Disabled)
[03:11:18.137]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:18.137]    __FlashAddr=0x00000000
[03:11:18.137]    __FlashLen=0x00000000
[03:11:18.138]    __FlashArg=0x00000000
[03:11:18.138]    __FlashOp=0x00000000
[03:11:18.138]    __Result=0x00000000
[03:11:18.138]  </debugvars>
[03:11:18.138]  
[03:11:18.138]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:18.138]    <block atomic="false" info="">
[03:11:18.138]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:18.139]        // -> [isSWJ <= 0x00000001]
[03:11:18.139]      __var hasDormant = __protocol & 0x00020000;
[03:11:18.139]        // -> [hasDormant <= 0x00000000]
[03:11:18.139]      __var protType   = __protocol & 0x0000FFFF;
[03:11:18.139]        // -> [protType <= 0x00000002]
[03:11:18.139]    </block>
[03:11:18.139]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:18.139]      // if-block "protType == 1"
[03:11:18.139]        // =>  FALSE
[03:11:18.139]      // skip if-block "protType == 1"
[03:11:18.139]    </control>
[03:11:18.139]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:18.139]      // if-block "protType == 2"
[03:11:18.139]        // =>  TRUE
[03:11:18.139]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:18.139]        // if-block "isSWJ"
[03:11:18.139]          // =>  TRUE
[03:11:18.139]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:18.139]          // if-block "hasDormant"
[03:11:18.139]            // =>  FALSE
[03:11:18.139]          // skip if-block "hasDormant"
[03:11:18.139]        </control>
[03:11:18.139]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:18.139]          // if-block "!hasDormant"
[03:11:18.139]            // =>  TRUE
[03:11:18.139]          <block atomic="false" info="">
[03:11:18.142]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:18.142]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:18.142]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:18.146]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:18.147]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:18.147]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:18.147]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:18.147]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:18.147]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:18.147]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:18.147]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:18.147]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:18.147]          </block>
[03:11:18.151]          // end if-block "!hasDormant"
[03:11:18.151]        </control>
[03:11:18.151]        // end if-block "isSWJ"
[03:11:18.151]      </control>
[03:11:18.151]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:18.151]        // if-block "!isSWJ"
[03:11:18.151]          // =>  FALSE
[03:11:18.151]        // skip if-block "!isSWJ"
[03:11:18.151]      </control>
[03:11:18.151]      <block atomic="false" info="">
[03:11:18.151]        ReadDP(0x0);
[03:11:18.151]  
[03:11:18.151]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:18.151]  
[03:11:18.151]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:18.151]      </block>
[03:11:18.151]      // end if-block "protType == 2"
[03:11:18.151]    </control>
[03:11:18.151]  </sequence>
[03:11:18.151]  
[03:11:18.404]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:18.404]  
[03:11:18.406]  <debugvars>
[03:11:18.406]    // Pre-defined
[03:11:18.406]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:18.406]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:18.406]    __dp=0x00000000
[03:11:18.406]    __ap=0x00000000
[03:11:18.406]    __traceout=0x00000000      (Trace Disabled)
[03:11:18.406]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:18.406]    __FlashAddr=0x00000000
[03:11:18.406]    __FlashLen=0x00000000
[03:11:18.406]    __FlashArg=0x00000000
[03:11:18.406]    __FlashOp=0x00000000
[03:11:18.406]    __Result=0x00000000
[03:11:18.406]  </debugvars>
[03:11:18.406]  
[03:11:18.406]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:18.406]    <block atomic="false" info="">
[03:11:18.406]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:18.406]        // -> [isSWJ <= 0x00000001]
[03:11:18.406]      __var hasDormant = __protocol & 0x00020000;
[03:11:18.406]        // -> [hasDormant <= 0x00000000]
[03:11:18.406]      __var protType   = __protocol & 0x0000FFFF;
[03:11:18.406]        // -> [protType <= 0x00000002]
[03:11:18.406]    </block>
[03:11:18.409]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:18.409]      // if-block "protType == 1"
[03:11:18.409]        // =>  FALSE
[03:11:18.409]      // skip if-block "protType == 1"
[03:11:18.409]    </control>
[03:11:18.409]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:18.409]      // if-block "protType == 2"
[03:11:18.409]        // =>  TRUE
[03:11:18.409]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:18.409]        // if-block "isSWJ"
[03:11:18.409]          // =>  TRUE
[03:11:18.409]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:18.409]          // if-block "hasDormant"
[03:11:18.409]            // =>  FALSE
[03:11:18.409]          // skip if-block "hasDormant"
[03:11:18.409]        </control>
[03:11:18.409]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:18.409]          // if-block "!hasDormant"
[03:11:18.409]            // =>  TRUE
[03:11:18.409]          <block atomic="false" info="">
[03:11:18.409]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:18.409]  
[03:11:18.409]  !!! E320 : DAP access error
[03:11:18.409]  
[03:11:18.409]          </block>
[03:11:18.409]          // end if-block "!hasDormant"
[03:11:18.409]        </control>
[03:11:18.409]        // end if-block "isSWJ"
[03:11:18.409]      </control>
[03:11:18.409]      // end if-block "protType == 2"
[03:11:18.409]    </control>
[03:11:18.409]  </sequence>
[03:11:18.409]  
[03:11:18.660]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:18.660]  
[03:11:18.662]  <debugvars>
[03:11:18.662]    // Pre-defined
[03:11:18.662]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:18.662]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:18.662]    __dp=0x00000000
[03:11:18.662]    __ap=0x00000000
[03:11:18.662]    __traceout=0x00000000      (Trace Disabled)
[03:11:18.662]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:18.662]    __FlashAddr=0x00000000
[03:11:18.662]    __FlashLen=0x00000000
[03:11:18.662]    __FlashArg=0x00000000
[03:11:18.662]    __FlashOp=0x00000000
[03:11:18.662]    __Result=0x00000000
[03:11:18.662]  </debugvars>
[03:11:18.662]  
[03:11:18.664]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:18.664]    <block atomic="false" info="">
[03:11:18.664]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:18.664]        // -> [isSWJ <= 0x00000001]
[03:11:18.664]      __var hasDormant = __protocol & 0x00020000;
[03:11:18.664]        // -> [hasDormant <= 0x00000000]
[03:11:18.664]      __var protType   = __protocol & 0x0000FFFF;
[03:11:18.664]        // -> [protType <= 0x00000002]
[03:11:18.664]    </block>
[03:11:18.664]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:18.664]      // if-block "protType == 1"
[03:11:18.664]        // =>  FALSE
[03:11:18.664]      // skip if-block "protType == 1"
[03:11:18.664]    </control>
[03:11:18.664]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:18.664]      // if-block "protType == 2"
[03:11:18.664]        // =>  TRUE
[03:11:18.664]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:18.664]        // if-block "isSWJ"
[03:11:18.664]          // =>  TRUE
[03:11:18.664]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:18.664]          // if-block "hasDormant"
[03:11:18.664]            // =>  FALSE
[03:11:18.664]          // skip if-block "hasDormant"
[03:11:18.664]        </control>
[03:11:18.664]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:18.664]          // if-block "!hasDormant"
[03:11:18.664]            // =>  TRUE
[03:11:18.664]          <block atomic="false" info="">
[03:11:18.664]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:18.664]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:18.664]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:18.672]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:18.672]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:18.676]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:18.676]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:18.676]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:18.676]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:18.676]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:18.676]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:18.680]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:18.680]          </block>
[03:11:18.680]          // end if-block "!hasDormant"
[03:11:18.680]        </control>
[03:11:18.680]        // end if-block "isSWJ"
[03:11:18.680]      </control>
[03:11:18.680]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:18.680]        // if-block "!isSWJ"
[03:11:18.680]          // =>  FALSE
[03:11:18.680]        // skip if-block "!isSWJ"
[03:11:18.680]      </control>
[03:11:18.680]      <block atomic="false" info="">
[03:11:18.680]        ReadDP(0x0);
[03:11:18.680]  
[03:11:18.680]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:18.680]  
[03:11:18.680]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:18.680]      </block>
[03:11:18.680]      // end if-block "protType == 2"
[03:11:18.680]    </control>
[03:11:18.680]  </sequence>
[03:11:18.680]  
[03:11:18.941]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:18.941]  
[03:11:18.943]  <debugvars>
[03:11:18.943]    // Pre-defined
[03:11:18.943]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:18.943]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:18.943]    __dp=0x00000000
[03:11:18.943]    __ap=0x00000000
[03:11:18.943]    __traceout=0x00000000      (Trace Disabled)
[03:11:18.943]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:18.943]    __FlashAddr=0x00000000
[03:11:18.943]    __FlashLen=0x00000000
[03:11:18.943]    __FlashArg=0x00000000
[03:11:18.943]    __FlashOp=0x00000000
[03:11:18.943]    __Result=0x00000000
[03:11:18.943]  </debugvars>
[03:11:18.943]  
[03:11:18.943]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:18.943]    <block atomic="false" info="">
[03:11:18.943]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:18.945]        // -> [isSWJ <= 0x00000001]
[03:11:18.945]      __var hasDormant = __protocol & 0x00020000;
[03:11:18.945]        // -> [hasDormant <= 0x00000000]
[03:11:18.945]      __var protType   = __protocol & 0x0000FFFF;
[03:11:18.945]        // -> [protType <= 0x00000002]
[03:11:18.945]    </block>
[03:11:18.945]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:18.945]      // if-block "protType == 1"
[03:11:18.945]        // =>  FALSE
[03:11:18.945]      // skip if-block "protType == 1"
[03:11:18.945]    </control>
[03:11:18.945]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:18.945]      // if-block "protType == 2"
[03:11:18.945]        // =>  TRUE
[03:11:18.945]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:18.945]        // if-block "isSWJ"
[03:11:18.945]          // =>  TRUE
[03:11:18.945]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:18.945]          // if-block "hasDormant"
[03:11:18.945]            // =>  FALSE
[03:11:18.945]          // skip if-block "hasDormant"
[03:11:18.945]        </control>
[03:11:18.945]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:18.945]          // if-block "!hasDormant"
[03:11:18.945]            // =>  TRUE
[03:11:18.945]          <block atomic="false" info="">
[03:11:18.945]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:18.945]  
[03:11:18.945]  !!! E320 : DAP access error
[03:11:18.945]  
[03:11:18.945]          </block>
[03:11:18.945]          // end if-block "!hasDormant"
[03:11:18.945]        </control>
[03:11:18.949]        // end if-block "isSWJ"
[03:11:18.949]      </control>
[03:11:18.949]      // end if-block "protType == 2"
[03:11:18.949]    </control>
[03:11:18.949]  </sequence>
[03:11:18.949]  
[03:11:19.208]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:19.208]  
[03:11:19.210]  <debugvars>
[03:11:19.210]    // Pre-defined
[03:11:19.210]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:19.210]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:19.210]    __dp=0x00000000
[03:11:19.210]    __ap=0x00000000
[03:11:19.210]    __traceout=0x00000000      (Trace Disabled)
[03:11:19.210]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:19.210]    __FlashAddr=0x00000000
[03:11:19.210]    __FlashLen=0x00000000
[03:11:19.210]    __FlashArg=0x00000000
[03:11:19.210]    __FlashOp=0x00000000
[03:11:19.210]    __Result=0x00000000
[03:11:19.210]  </debugvars>
[03:11:19.210]  
[03:11:19.210]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:19.210]    <block atomic="false" info="">
[03:11:19.210]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:19.210]        // -> [isSWJ <= 0x00000001]
[03:11:19.213]      __var hasDormant = __protocol & 0x00020000;
[03:11:19.213]        // -> [hasDormant <= 0x00000000]
[03:11:19.213]      __var protType   = __protocol & 0x0000FFFF;
[03:11:19.213]        // -> [protType <= 0x00000002]
[03:11:19.213]    </block>
[03:11:19.213]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:19.213]      // if-block "protType == 1"
[03:11:19.213]        // =>  FALSE
[03:11:19.213]      // skip if-block "protType == 1"
[03:11:19.213]    </control>
[03:11:19.213]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:19.213]      // if-block "protType == 2"
[03:11:19.213]        // =>  TRUE
[03:11:19.213]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:19.213]        // if-block "isSWJ"
[03:11:19.213]          // =>  TRUE
[03:11:19.213]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:19.213]          // if-block "hasDormant"
[03:11:19.213]            // =>  FALSE
[03:11:19.213]          // skip if-block "hasDormant"
[03:11:19.213]        </control>
[03:11:19.213]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:19.213]          // if-block "!hasDormant"
[03:11:19.213]            // =>  TRUE
[03:11:19.213]          <block atomic="false" info="">
[03:11:19.213]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:19.213]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:19.213]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:19.217]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:19.217]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:19.217]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:19.217]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:19.221]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:19.221]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:19.222]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:19.222]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:19.222]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:19.222]          </block>
[03:11:19.222]          // end if-block "!hasDormant"
[03:11:19.222]        </control>
[03:11:19.222]        // end if-block "isSWJ"
[03:11:19.225]      </control>
[03:11:19.225]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:19.225]        // if-block "!isSWJ"
[03:11:19.225]          // =>  FALSE
[03:11:19.225]        // skip if-block "!isSWJ"
[03:11:19.225]      </control>
[03:11:19.225]      <block atomic="false" info="">
[03:11:19.225]        ReadDP(0x0);
[03:11:19.225]  
[03:11:19.225]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:19.225]  
[03:11:19.225]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:19.225]      </block>
[03:11:19.225]      // end if-block "protType == 2"
[03:11:19.225]    </control>
[03:11:19.225]  </sequence>
[03:11:19.225]  
[03:11:19.479]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:19.479]  
[03:11:19.480]  <debugvars>
[03:11:19.480]    // Pre-defined
[03:11:19.480]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:19.480]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:19.480]    __dp=0x00000000
[03:11:19.480]    __ap=0x00000000
[03:11:19.480]    __traceout=0x00000000      (Trace Disabled)
[03:11:19.480]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:19.480]    __FlashAddr=0x00000000
[03:11:19.480]    __FlashLen=0x00000000
[03:11:19.480]    __FlashArg=0x00000000
[03:11:19.480]    __FlashOp=0x00000000
[03:11:19.480]    __Result=0x00000000
[03:11:19.480]  </debugvars>
[03:11:19.480]  
[03:11:19.480]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:19.480]    <block atomic="false" info="">
[03:11:19.482]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:19.482]        // -> [isSWJ <= 0x00000001]
[03:11:19.482]      __var hasDormant = __protocol & 0x00020000;
[03:11:19.482]        // -> [hasDormant <= 0x00000000]
[03:11:19.482]      __var protType   = __protocol & 0x0000FFFF;
[03:11:19.482]        // -> [protType <= 0x00000002]
[03:11:19.482]    </block>
[03:11:19.482]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:19.482]      // if-block "protType == 1"
[03:11:19.482]        // =>  FALSE
[03:11:19.483]      // skip if-block "protType == 1"
[03:11:19.483]    </control>
[03:11:19.483]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:19.483]      // if-block "protType == 2"
[03:11:19.483]        // =>  TRUE
[03:11:19.483]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:19.484]        // if-block "isSWJ"
[03:11:19.484]          // =>  TRUE
[03:11:19.484]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:19.484]          // if-block "hasDormant"
[03:11:19.484]            // =>  FALSE
[03:11:19.484]          // skip if-block "hasDormant"
[03:11:19.484]        </control>
[03:11:19.484]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:19.484]          // if-block "!hasDormant"
[03:11:19.485]            // =>  TRUE
[03:11:19.485]          <block atomic="false" info="">
[03:11:19.485]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:19.485]  
[03:11:19.485]  !!! E320 : DAP access error
[03:11:19.485]  
[03:11:19.485]          </block>
[03:11:19.485]          // end if-block "!hasDormant"
[03:11:19.485]        </control>
[03:11:19.485]        // end if-block "isSWJ"
[03:11:19.485]      </control>
[03:11:19.487]      // end if-block "protType == 2"
[03:11:19.487]    </control>
[03:11:19.487]  </sequence>
[03:11:19.487]  
[03:11:19.747]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:19.747]  
[03:11:19.749]  <debugvars>
[03:11:19.749]    // Pre-defined
[03:11:19.749]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:19.749]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:19.749]    __dp=0x00000000
[03:11:19.749]    __ap=0x00000000
[03:11:19.749]    __traceout=0x00000000      (Trace Disabled)
[03:11:19.749]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:19.749]    __FlashAddr=0x00000000
[03:11:19.749]    __FlashLen=0x00000000
[03:11:19.749]    __FlashArg=0x00000000
[03:11:19.749]    __FlashOp=0x00000000
[03:11:19.751]    __Result=0x00000000
[03:11:19.751]  </debugvars>
[03:11:19.751]  
[03:11:19.751]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:19.751]    <block atomic="false" info="">
[03:11:19.751]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:19.751]        // -> [isSWJ <= 0x00000001]
[03:11:19.751]      __var hasDormant = __protocol & 0x00020000;
[03:11:19.751]        // -> [hasDormant <= 0x00000000]
[03:11:19.751]      __var protType   = __protocol & 0x0000FFFF;
[03:11:19.751]        // -> [protType <= 0x00000002]
[03:11:19.751]    </block>
[03:11:19.751]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:19.751]      // if-block "protType == 1"
[03:11:19.751]        // =>  FALSE
[03:11:19.751]      // skip if-block "protType == 1"
[03:11:19.751]    </control>
[03:11:19.751]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:19.751]      // if-block "protType == 2"
[03:11:19.751]        // =>  TRUE
[03:11:19.751]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:19.751]        // if-block "isSWJ"
[03:11:19.751]          // =>  TRUE
[03:11:19.751]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:19.751]          // if-block "hasDormant"
[03:11:19.751]            // =>  FALSE
[03:11:19.751]          // skip if-block "hasDormant"
[03:11:19.751]        </control>
[03:11:19.751]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:19.751]          // if-block "!hasDormant"
[03:11:19.751]            // =>  TRUE
[03:11:19.755]          <block atomic="false" info="">
[03:11:19.755]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:19.755]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:19.755]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:19.759]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:19.759]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:19.759]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:19.759]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:19.763]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:19.763]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:19.763]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:19.763]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:19.763]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:19.763]          </block>
[03:11:19.763]          // end if-block "!hasDormant"
[03:11:19.763]        </control>
[03:11:19.763]        // end if-block "isSWJ"
[03:11:19.763]      </control>
[03:11:19.763]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:19.763]        // if-block "!isSWJ"
[03:11:19.763]          // =>  FALSE
[03:11:19.763]        // skip if-block "!isSWJ"
[03:11:19.763]      </control>
[03:11:19.763]      <block atomic="false" info="">
[03:11:19.763]        ReadDP(0x0);
[03:11:19.763]  
[03:11:19.763]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:19.763]  
[03:11:19.763]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:19.763]      </block>
[03:11:19.763]      // end if-block "protType == 2"
[03:11:19.763]    </control>
[03:11:19.767]  </sequence>
[03:11:19.767]  
[03:11:20.024]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:20.024]  
[03:11:20.026]  <debugvars>
[03:11:20.026]    // Pre-defined
[03:11:20.026]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:20.026]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:20.026]    __dp=0x00000000
[03:11:20.026]    __ap=0x00000000
[03:11:20.026]    __traceout=0x00000000      (Trace Disabled)
[03:11:20.026]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:20.026]    __FlashAddr=0x00000000
[03:11:20.027]    __FlashLen=0x00000000
[03:11:20.027]    __FlashArg=0x00000000
[03:11:20.027]    __FlashOp=0x00000000
[03:11:20.027]    __Result=0x00000000
[03:11:20.027]  </debugvars>
[03:11:20.027]  
[03:11:20.027]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:20.027]    <block atomic="false" info="">
[03:11:20.027]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:20.027]        // -> [isSWJ <= 0x00000001]
[03:11:20.027]      __var hasDormant = __protocol & 0x00020000;
[03:11:20.027]        // -> [hasDormant <= 0x00000000]
[03:11:20.027]      __var protType   = __protocol & 0x0000FFFF;
[03:11:20.027]        // -> [protType <= 0x00000002]
[03:11:20.027]    </block>
[03:11:20.027]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:20.027]      // if-block "protType == 1"
[03:11:20.027]        // =>  FALSE
[03:11:20.027]      // skip if-block "protType == 1"
[03:11:20.027]    </control>
[03:11:20.029]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:20.029]      // if-block "protType == 2"
[03:11:20.029]        // =>  TRUE
[03:11:20.029]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:20.029]        // if-block "isSWJ"
[03:11:20.029]          // =>  TRUE
[03:11:20.029]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:20.029]          // if-block "hasDormant"
[03:11:20.029]            // =>  FALSE
[03:11:20.029]          // skip if-block "hasDormant"
[03:11:20.029]        </control>
[03:11:20.029]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:20.029]          // if-block "!hasDormant"
[03:11:20.029]            // =>  TRUE
[03:11:20.029]          <block atomic="false" info="">
[03:11:20.029]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:20.029]  
[03:11:20.029]  !!! E320 : DAP access error
[03:11:20.029]  
[03:11:20.029]          </block>
[03:11:20.029]          // end if-block "!hasDormant"
[03:11:20.029]        </control>
[03:11:20.029]        // end if-block "isSWJ"
[03:11:20.029]      </control>
[03:11:20.029]      // end if-block "protType == 2"
[03:11:20.029]    </control>
[03:11:20.029]  </sequence>
[03:11:20.029]  
[03:11:20.280]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:20.280]  
[03:11:20.282]  <debugvars>
[03:11:20.282]    // Pre-defined
[03:11:20.282]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:20.282]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:20.282]    __dp=0x00000000
[03:11:20.282]    __ap=0x00000000
[03:11:20.282]    __traceout=0x00000000      (Trace Disabled)
[03:11:20.282]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:20.282]    __FlashAddr=0x00000000
[03:11:20.282]    __FlashLen=0x00000000
[03:11:20.282]    __FlashArg=0x00000000
[03:11:20.282]    __FlashOp=0x00000000
[03:11:20.282]    __Result=0x00000000
[03:11:20.282]  </debugvars>
[03:11:20.282]  
[03:11:20.282]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:20.282]    <block atomic="false" info="">
[03:11:20.282]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:20.282]        // -> [isSWJ <= 0x00000001]
[03:11:20.282]      __var hasDormant = __protocol & 0x00020000;
[03:11:20.285]        // -> [hasDormant <= 0x00000000]
[03:11:20.285]      __var protType   = __protocol & 0x0000FFFF;
[03:11:20.285]        // -> [protType <= 0x00000002]
[03:11:20.285]    </block>
[03:11:20.285]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:20.285]      // if-block "protType == 1"
[03:11:20.285]        // =>  FALSE
[03:11:20.285]      // skip if-block "protType == 1"
[03:11:20.285]    </control>
[03:11:20.285]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:20.285]      // if-block "protType == 2"
[03:11:20.285]        // =>  TRUE
[03:11:20.285]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:20.285]        // if-block "isSWJ"
[03:11:20.285]          // =>  TRUE
[03:11:20.285]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:20.285]          // if-block "hasDormant"
[03:11:20.285]            // =>  FALSE
[03:11:20.285]          // skip if-block "hasDormant"
[03:11:20.285]        </control>
[03:11:20.285]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:20.285]          // if-block "!hasDormant"
[03:11:20.285]            // =>  TRUE
[03:11:20.285]          <block atomic="false" info="">
[03:11:20.285]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:20.285]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:20.285]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:20.289]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:20.289]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:20.289]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:20.289]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:20.289]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:20.289]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:20.289]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:20.289]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:20.289]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:20.289]          </block>
[03:11:20.293]          // end if-block "!hasDormant"
[03:11:20.293]        </control>
[03:11:20.293]        // end if-block "isSWJ"
[03:11:20.293]      </control>
[03:11:20.293]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:20.293]        // if-block "!isSWJ"
[03:11:20.293]          // =>  FALSE
[03:11:20.293]        // skip if-block "!isSWJ"
[03:11:20.293]      </control>
[03:11:20.293]      <block atomic="false" info="">
[03:11:20.293]        ReadDP(0x0);
[03:11:20.293]  
[03:11:20.293]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:20.293]  
[03:11:20.293]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:20.293]      </block>
[03:11:20.293]      // end if-block "protType == 2"
[03:11:20.293]    </control>
[03:11:20.293]  </sequence>
[03:11:20.293]  
[03:11:20.554]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:20.554]  
[03:11:20.556]  <debugvars>
[03:11:20.556]    // Pre-defined
[03:11:20.556]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:20.556]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:20.556]    __dp=0x00000000
[03:11:20.556]    __ap=0x00000000
[03:11:20.556]    __traceout=0x00000000      (Trace Disabled)
[03:11:20.556]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:20.556]    __FlashAddr=0x00000000
[03:11:20.556]    __FlashLen=0x00000000
[03:11:20.556]    __FlashArg=0x00000000
[03:11:20.556]    __FlashOp=0x00000000
[03:11:20.556]    __Result=0x00000000
[03:11:20.556]  </debugvars>
[03:11:20.556]  
[03:11:20.556]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:20.556]    <block atomic="false" info="">
[03:11:20.556]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:20.556]        // -> [isSWJ <= 0x00000001]
[03:11:20.556]      __var hasDormant = __protocol & 0x00020000;
[03:11:20.556]        // -> [hasDormant <= 0x00000000]
[03:11:20.556]      __var protType   = __protocol & 0x0000FFFF;
[03:11:20.556]        // -> [protType <= 0x00000002]
[03:11:20.556]    </block>
[03:11:20.556]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:20.556]      // if-block "protType == 1"
[03:11:20.556]        // =>  FALSE
[03:11:20.556]      // skip if-block "protType == 1"
[03:11:20.556]    </control>
[03:11:20.559]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:20.559]      // if-block "protType == 2"
[03:11:20.559]        // =>  TRUE
[03:11:20.559]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:20.559]        // if-block "isSWJ"
[03:11:20.559]          // =>  TRUE
[03:11:20.559]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:20.559]          // if-block "hasDormant"
[03:11:20.559]            // =>  FALSE
[03:11:20.559]          // skip if-block "hasDormant"
[03:11:20.559]        </control>
[03:11:20.559]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:20.559]          // if-block "!hasDormant"
[03:11:20.559]            // =>  TRUE
[03:11:20.559]          <block atomic="false" info="">
[03:11:20.559]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:20.559]  
[03:11:20.559]  !!! E320 : DAP access error
[03:11:20.559]  
[03:11:20.559]          </block>
[03:11:20.559]          // end if-block "!hasDormant"
[03:11:20.559]        </control>
[03:11:20.559]        // end if-block "isSWJ"
[03:11:20.559]      </control>
[03:11:20.559]      // end if-block "protType == 2"
[03:11:20.559]    </control>
[03:11:20.559]  </sequence>
[03:11:20.559]  
[03:11:20.817]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:20.817]  
[03:11:20.819]  <debugvars>
[03:11:20.819]    // Pre-defined
[03:11:20.819]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:20.819]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:20.819]    __dp=0x00000000
[03:11:20.819]    __ap=0x00000000
[03:11:20.819]    __traceout=0x00000000      (Trace Disabled)
[03:11:20.819]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:20.820]    __FlashAddr=0x00000000
[03:11:20.820]    __FlashLen=0x00000000
[03:11:20.820]    __FlashArg=0x00000000
[03:11:20.820]    __FlashOp=0x00000000
[03:11:20.821]    __Result=0x00000000
[03:11:20.821]  </debugvars>
[03:11:20.821]  
[03:11:20.821]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:20.821]    <block atomic="false" info="">
[03:11:20.821]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:20.821]        // -> [isSWJ <= 0x00000001]
[03:11:20.821]      __var hasDormant = __protocol & 0x00020000;
[03:11:20.821]        // -> [hasDormant <= 0x00000000]
[03:11:20.821]      __var protType   = __protocol & 0x0000FFFF;
[03:11:20.821]        // -> [protType <= 0x00000002]
[03:11:20.821]    </block>
[03:11:20.821]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:20.822]      // if-block "protType == 1"
[03:11:20.822]        // =>  FALSE
[03:11:20.822]      // skip if-block "protType == 1"
[03:11:20.822]    </control>
[03:11:20.822]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:20.822]      // if-block "protType == 2"
[03:11:20.822]        // =>  TRUE
[03:11:20.822]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:20.822]        // if-block "isSWJ"
[03:11:20.822]          // =>  TRUE
[03:11:20.822]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:20.822]          // if-block "hasDormant"
[03:11:20.824]            // =>  FALSE
[03:11:20.824]          // skip if-block "hasDormant"
[03:11:20.824]        </control>
[03:11:20.824]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:20.824]          // if-block "!hasDormant"
[03:11:20.824]            // =>  TRUE
[03:11:20.824]          <block atomic="false" info="">
[03:11:20.824]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:20.825]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:20.825]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:20.826]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:20.826]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:20.826]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:20.826]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:20.829]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:20.829]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:20.829]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:20.829]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:20.829]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:20.829]          </block>
[03:11:20.829]          // end if-block "!hasDormant"
[03:11:20.829]        </control>
[03:11:20.829]        // end if-block "isSWJ"
[03:11:20.829]      </control>
[03:11:20.829]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:20.829]        // if-block "!isSWJ"
[03:11:20.833]          // =>  FALSE
[03:11:20.833]        // skip if-block "!isSWJ"
[03:11:20.833]      </control>
[03:11:20.833]      <block atomic="false" info="">
[03:11:20.833]        ReadDP(0x0);
[03:11:20.833]  
[03:11:20.833]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:20.833]  
[03:11:20.834]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:20.834]      </block>
[03:11:20.834]      // end if-block "protType == 2"
[03:11:20.834]    </control>
[03:11:20.834]  </sequence>
[03:11:20.834]  
[03:11:21.087]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:21.087]  
[03:11:21.090]  <debugvars>
[03:11:21.090]    // Pre-defined
[03:11:21.090]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:21.090]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:21.090]    __dp=0x00000000
[03:11:21.090]    __ap=0x00000000
[03:11:21.090]    __traceout=0x00000000      (Trace Disabled)
[03:11:21.090]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:21.090]    __FlashAddr=0x00000000
[03:11:21.090]    __FlashLen=0x00000000
[03:11:21.092]    __FlashArg=0x00000000
[03:11:21.092]    __FlashOp=0x00000000
[03:11:21.092]    __Result=0x00000000
[03:11:21.092]  </debugvars>
[03:11:21.092]  
[03:11:21.092]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:21.092]    <block atomic="false" info="">
[03:11:21.092]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:21.092]        // -> [isSWJ <= 0x00000001]
[03:11:21.092]      __var hasDormant = __protocol & 0x00020000;
[03:11:21.092]        // -> [hasDormant <= 0x00000000]
[03:11:21.092]      __var protType   = __protocol & 0x0000FFFF;
[03:11:21.092]        // -> [protType <= 0x00000002]
[03:11:21.092]    </block>
[03:11:21.092]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:21.092]      // if-block "protType == 1"
[03:11:21.092]        // =>  FALSE
[03:11:21.092]      // skip if-block "protType == 1"
[03:11:21.092]    </control>
[03:11:21.094]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:21.094]      // if-block "protType == 2"
[03:11:21.094]        // =>  TRUE
[03:11:21.094]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:21.094]        // if-block "isSWJ"
[03:11:21.094]          // =>  TRUE
[03:11:21.094]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:21.094]          // if-block "hasDormant"
[03:11:21.094]            // =>  FALSE
[03:11:21.094]          // skip if-block "hasDormant"
[03:11:21.094]        </control>
[03:11:21.094]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:21.094]          // if-block "!hasDormant"
[03:11:21.094]            // =>  TRUE
[03:11:21.094]          <block atomic="false" info="">
[03:11:21.094]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:21.094]  
[03:11:21.094]  !!! E320 : DAP access error
[03:11:21.094]  
[03:11:21.094]          </block>
[03:11:21.094]          // end if-block "!hasDormant"
[03:11:21.094]        </control>
[03:11:21.094]        // end if-block "isSWJ"
[03:11:21.094]      </control>
[03:11:21.096]      // end if-block "protType == 2"
[03:11:21.096]    </control>
[03:11:21.096]  </sequence>
[03:11:21.096]  
[03:11:21.357]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:21.357]  
[03:11:21.357]  <debugvars>
[03:11:21.357]    // Pre-defined
[03:11:21.357]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:21.357]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:21.357]    __dp=0x00000000
[03:11:21.357]    __ap=0x00000000
[03:11:21.357]    __traceout=0x00000000      (Trace Disabled)
[03:11:21.357]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:21.357]    __FlashAddr=0x00000000
[03:11:21.357]    __FlashLen=0x00000000
[03:11:21.357]    __FlashArg=0x00000000
[03:11:21.357]    __FlashOp=0x00000000
[03:11:21.357]    __Result=0x00000000
[03:11:21.357]  </debugvars>
[03:11:21.357]  
[03:11:21.357]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:21.357]    <block atomic="false" info="">
[03:11:21.357]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:21.360]        // -> [isSWJ <= 0x00000001]
[03:11:21.360]      __var hasDormant = __protocol & 0x00020000;
[03:11:21.360]        // -> [hasDormant <= 0x00000000]
[03:11:21.360]      __var protType   = __protocol & 0x0000FFFF;
[03:11:21.360]        // -> [protType <= 0x00000002]
[03:11:21.360]    </block>
[03:11:21.360]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:21.360]      // if-block "protType == 1"
[03:11:21.360]        // =>  FALSE
[03:11:21.360]      // skip if-block "protType == 1"
[03:11:21.360]    </control>
[03:11:21.360]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:21.360]      // if-block "protType == 2"
[03:11:21.361]        // =>  TRUE
[03:11:21.361]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:21.361]        // if-block "isSWJ"
[03:11:21.361]          // =>  TRUE
[03:11:21.361]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:21.361]          // if-block "hasDormant"
[03:11:21.361]            // =>  FALSE
[03:11:21.361]          // skip if-block "hasDormant"
[03:11:21.361]        </control>
[03:11:21.361]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:21.363]          // if-block "!hasDormant"
[03:11:21.363]            // =>  TRUE
[03:11:21.363]          <block atomic="false" info="">
[03:11:21.363]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:21.363]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:21.363]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:21.368]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:21.368]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:21.371]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:21.371]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:21.378]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:21.378]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:21.378]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:21.378]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:21.382]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:21.382]          </block>
[03:11:21.382]          // end if-block "!hasDormant"
[03:11:21.382]        </control>
[03:11:21.382]        // end if-block "isSWJ"
[03:11:21.382]      </control>
[03:11:21.382]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:21.382]        // if-block "!isSWJ"
[03:11:21.382]          // =>  FALSE
[03:11:21.382]        // skip if-block "!isSWJ"
[03:11:21.382]      </control>
[03:11:21.382]      <block atomic="false" info="">
[03:11:21.384]        ReadDP(0x0);
[03:11:21.384]  
[03:11:21.384]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:21.384]  
[03:11:21.384]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:21.384]      </block>
[03:11:21.384]      // end if-block "protType == 2"
[03:11:21.384]    </control>
[03:11:21.384]  </sequence>
[03:11:21.384]  
[03:11:21.647]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:21.647]  
[03:11:21.648]  <debugvars>
[03:11:21.648]    // Pre-defined
[03:11:21.648]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:21.648]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:21.648]    __dp=0x00000000
[03:11:21.648]    __ap=0x00000000
[03:11:21.648]    __traceout=0x00000000      (Trace Disabled)
[03:11:21.648]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:21.648]    __FlashAddr=0x00000000
[03:11:21.648]    __FlashLen=0x00000000
[03:11:21.648]    __FlashArg=0x00000000
[03:11:21.648]    __FlashOp=0x00000000
[03:11:21.648]    __Result=0x00000000
[03:11:21.650]  </debugvars>
[03:11:21.650]  
[03:11:21.650]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:21.650]    <block atomic="false" info="">
[03:11:21.650]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:21.650]        // -> [isSWJ <= 0x00000001]
[03:11:21.650]      __var hasDormant = __protocol & 0x00020000;
[03:11:21.650]        // -> [hasDormant <= 0x00000000]
[03:11:21.650]      __var protType   = __protocol & 0x0000FFFF;
[03:11:21.650]        // -> [protType <= 0x00000002]
[03:11:21.651]    </block>
[03:11:21.651]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:21.651]      // if-block "protType == 1"
[03:11:21.651]        // =>  FALSE
[03:11:21.651]      // skip if-block "protType == 1"
[03:11:21.651]    </control>
[03:11:21.651]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:21.651]      // if-block "protType == 2"
[03:11:21.652]        // =>  TRUE
[03:11:21.652]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:21.652]        // if-block "isSWJ"
[03:11:21.652]          // =>  TRUE
[03:11:21.652]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:21.652]          // if-block "hasDormant"
[03:11:21.652]            // =>  FALSE
[03:11:21.653]          // skip if-block "hasDormant"
[03:11:21.653]        </control>
[03:11:21.653]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:21.653]          // if-block "!hasDormant"
[03:11:21.653]            // =>  TRUE
[03:11:21.653]          <block atomic="false" info="">
[03:11:21.653]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:21.653]  
[03:11:21.653]  !!! E320 : DAP access error
[03:11:21.653]  
[03:11:21.653]          </block>
[03:11:21.655]          // end if-block "!hasDormant"
[03:11:21.655]        </control>
[03:11:21.655]        // end if-block "isSWJ"
[03:11:21.655]      </control>
[03:11:21.655]      // end if-block "protType == 2"
[03:11:21.655]    </control>
[03:11:21.655]  </sequence>
[03:11:21.655]  
[03:11:21.907]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:21.907]  
[03:11:21.907]  <debugvars>
[03:11:21.907]    // Pre-defined
[03:11:21.907]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:21.907]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:21.907]    __dp=0x00000000
[03:11:21.907]    __ap=0x00000000
[03:11:21.907]    __traceout=0x00000000      (Trace Disabled)
[03:11:21.907]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:21.907]    __FlashAddr=0x00000000
[03:11:21.907]    __FlashLen=0x00000000
[03:11:21.907]    __FlashArg=0x00000000
[03:11:21.907]    __FlashOp=0x00000000
[03:11:21.907]    __Result=0x00000000
[03:11:21.907]  </debugvars>
[03:11:21.907]  
[03:11:21.907]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:21.907]    <block atomic="false" info="">
[03:11:21.907]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:21.907]        // -> [isSWJ <= 0x00000001]
[03:11:21.907]      __var hasDormant = __protocol & 0x00020000;
[03:11:21.907]        // -> [hasDormant <= 0x00000000]
[03:11:21.907]      __var protType   = __protocol & 0x0000FFFF;
[03:11:21.907]        // -> [protType <= 0x00000002]
[03:11:21.907]    </block>
[03:11:21.907]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:21.907]      // if-block "protType == 1"
[03:11:21.907]        // =>  FALSE
[03:11:21.907]      // skip if-block "protType == 1"
[03:11:21.907]    </control>
[03:11:21.907]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:21.911]      // if-block "protType == 2"
[03:11:21.911]        // =>  TRUE
[03:11:21.911]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:21.911]        // if-block "isSWJ"
[03:11:21.911]          // =>  TRUE
[03:11:21.911]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:21.911]          // if-block "hasDormant"
[03:11:21.911]            // =>  FALSE
[03:11:21.911]          // skip if-block "hasDormant"
[03:11:21.911]        </control>
[03:11:21.911]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:21.911]          // if-block "!hasDormant"
[03:11:21.911]            // =>  TRUE
[03:11:21.911]          <block atomic="false" info="">
[03:11:21.911]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:21.911]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:21.911]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:21.911]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:21.911]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:21.911]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:21.911]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:21.915]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:21.915]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:21.915]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:21.915]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:21.915]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:21.915]          </block>
[03:11:21.915]          // end if-block "!hasDormant"
[03:11:21.915]        </control>
[03:11:21.915]        // end if-block "isSWJ"
[03:11:21.915]      </control>
[03:11:21.915]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:21.915]        // if-block "!isSWJ"
[03:11:21.915]          // =>  FALSE
[03:11:21.915]        // skip if-block "!isSWJ"
[03:11:21.919]      </control>
[03:11:21.919]      <block atomic="false" info="">
[03:11:21.919]        ReadDP(0x0);
[03:11:21.919]  
[03:11:21.919]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:21.919]  
[03:11:21.919]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:21.919]      </block>
[03:11:21.919]      // end if-block "protType == 2"
[03:11:21.919]    </control>
[03:11:21.919]  </sequence>
[03:11:21.919]  
[03:11:22.172]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:22.172]  
[03:11:22.173]  <debugvars>
[03:11:22.173]    // Pre-defined
[03:11:22.173]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:22.173]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:22.173]    __dp=0x00000000
[03:11:22.173]    __ap=0x00000000
[03:11:22.173]    __traceout=0x00000000      (Trace Disabled)
[03:11:22.173]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:22.173]    __FlashAddr=0x00000000
[03:11:22.173]    __FlashLen=0x00000000
[03:11:22.173]    __FlashArg=0x00000000
[03:11:22.173]    __FlashOp=0x00000000
[03:11:22.173]    __Result=0x00000000
[03:11:22.173]  </debugvars>
[03:11:22.173]  
[03:11:22.173]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:22.173]    <block atomic="false" info="">
[03:11:22.173]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:22.173]        // -> [isSWJ <= 0x00000001]
[03:11:22.173]      __var hasDormant = __protocol & 0x00020000;
[03:11:22.177]        // -> [hasDormant <= 0x00000000]
[03:11:22.177]      __var protType   = __protocol & 0x0000FFFF;
[03:11:22.177]        // -> [protType <= 0x00000002]
[03:11:22.177]    </block>
[03:11:22.177]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:22.177]      // if-block "protType == 1"
[03:11:22.177]        // =>  FALSE
[03:11:22.177]      // skip if-block "protType == 1"
[03:11:22.177]    </control>
[03:11:22.177]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:22.177]      // if-block "protType == 2"
[03:11:22.177]        // =>  TRUE
[03:11:22.177]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:22.177]        // if-block "isSWJ"
[03:11:22.177]          // =>  TRUE
[03:11:22.177]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:22.177]          // if-block "hasDormant"
[03:11:22.177]            // =>  FALSE
[03:11:22.177]          // skip if-block "hasDormant"
[03:11:22.177]        </control>
[03:11:22.177]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:22.177]          // if-block "!hasDormant"
[03:11:22.177]            // =>  TRUE
[03:11:22.177]          <block atomic="false" info="">
[03:11:22.177]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:22.177]  
[03:11:22.177]  !!! E320 : DAP access error
[03:11:22.177]  
[03:11:22.177]          </block>
[03:11:22.177]          // end if-block "!hasDormant"
[03:11:22.177]        </control>
[03:11:22.177]        // end if-block "isSWJ"
[03:11:22.177]      </control>
[03:11:22.177]      // end if-block "protType == 2"
[03:11:22.177]    </control>
[03:11:22.181]  </sequence>
[03:11:22.181]  
[03:11:22.440]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:22.440]  
[03:11:22.441]  <debugvars>
[03:11:22.441]    // Pre-defined
[03:11:22.441]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:22.441]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:22.441]    __dp=0x00000000
[03:11:22.441]    __ap=0x00000000
[03:11:22.441]    __traceout=0x00000000      (Trace Disabled)
[03:11:22.441]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:22.441]    __FlashAddr=0x00000000
[03:11:22.441]    __FlashLen=0x00000000
[03:11:22.441]    __FlashArg=0x00000000
[03:11:22.441]    __FlashOp=0x00000000
[03:11:22.441]    __Result=0x00000000
[03:11:22.441]  </debugvars>
[03:11:22.441]  
[03:11:22.441]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:22.441]    <block atomic="false" info="">
[03:11:22.441]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:22.441]        // -> [isSWJ <= 0x00000001]
[03:11:22.443]      __var hasDormant = __protocol & 0x00020000;
[03:11:22.443]        // -> [hasDormant <= 0x00000000]
[03:11:22.443]      __var protType   = __protocol & 0x0000FFFF;
[03:11:22.443]        // -> [protType <= 0x00000002]
[03:11:22.443]    </block>
[03:11:22.444]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:22.444]      // if-block "protType == 1"
[03:11:22.444]        // =>  FALSE
[03:11:22.444]      // skip if-block "protType == 1"
[03:11:22.444]    </control>
[03:11:22.444]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:22.444]      // if-block "protType == 2"
[03:11:22.444]        // =>  TRUE
[03:11:22.444]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:22.444]        // if-block "isSWJ"
[03:11:22.444]          // =>  TRUE
[03:11:22.444]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:22.444]          // if-block "hasDormant"
[03:11:22.444]            // =>  FALSE
[03:11:22.444]          // skip if-block "hasDormant"
[03:11:22.444]        </control>
[03:11:22.444]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:22.444]          // if-block "!hasDormant"
[03:11:22.444]            // =>  TRUE
[03:11:22.444]          <block atomic="false" info="">
[03:11:22.444]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:22.444]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:22.444]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:22.447]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:22.447]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:22.447]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:22.447]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:22.447]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:22.447]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:22.447]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:22.447]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:22.447]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:22.447]          </block>
[03:11:22.447]          // end if-block "!hasDormant"
[03:11:22.447]        </control>
[03:11:22.447]        // end if-block "isSWJ"
[03:11:22.451]      </control>
[03:11:22.451]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:22.451]        // if-block "!isSWJ"
[03:11:22.451]          // =>  FALSE
[03:11:22.451]        // skip if-block "!isSWJ"
[03:11:22.451]      </control>
[03:11:22.451]      <block atomic="false" info="">
[03:11:22.451]        ReadDP(0x0);
[03:11:22.451]  
[03:11:22.451]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:22.451]  
[03:11:22.451]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:22.451]      </block>
[03:11:22.451]      // end if-block "protType == 2"
[03:11:22.451]    </control>
[03:11:22.451]  </sequence>
[03:11:22.451]  
[03:11:22.703]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:22.703]  
[03:11:22.703]  <debugvars>
[03:11:22.703]    // Pre-defined
[03:11:22.703]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:22.703]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:22.703]    __dp=0x00000000
[03:11:22.703]    __ap=0x00000000
[03:11:22.703]    __traceout=0x00000000      (Trace Disabled)
[03:11:22.703]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:22.703]    __FlashAddr=0x00000000
[03:11:22.703]    __FlashLen=0x00000000
[03:11:22.703]    __FlashArg=0x00000000
[03:11:22.703]    __FlashOp=0x00000000
[03:11:22.703]    __Result=0x00000000
[03:11:22.703]  </debugvars>
[03:11:22.703]  
[03:11:22.703]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:22.703]    <block atomic="false" info="">
[03:11:22.703]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:22.703]        // -> [isSWJ <= 0x00000001]
[03:11:22.703]      __var hasDormant = __protocol & 0x00020000;
[03:11:22.703]        // -> [hasDormant <= 0x00000000]
[03:11:22.703]      __var protType   = __protocol & 0x0000FFFF;
[03:11:22.703]        // -> [protType <= 0x00000002]
[03:11:22.703]    </block>
[03:11:22.703]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:22.703]      // if-block "protType == 1"
[03:11:22.703]        // =>  FALSE
[03:11:22.703]      // skip if-block "protType == 1"
[03:11:22.707]    </control>
[03:11:22.707]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:22.707]      // if-block "protType == 2"
[03:11:22.707]        // =>  TRUE
[03:11:22.707]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:22.707]        // if-block "isSWJ"
[03:11:22.707]          // =>  TRUE
[03:11:22.707]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:22.707]          // if-block "hasDormant"
[03:11:22.707]            // =>  FALSE
[03:11:22.707]          // skip if-block "hasDormant"
[03:11:22.707]        </control>
[03:11:22.707]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:22.707]          // if-block "!hasDormant"
[03:11:22.707]            // =>  TRUE
[03:11:22.707]          <block atomic="false" info="">
[03:11:22.707]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:22.707]  
[03:11:22.707]  !!! E320 : DAP access error
[03:11:22.707]  
[03:11:22.707]          </block>
[03:11:22.707]          // end if-block "!hasDormant"
[03:11:22.707]        </control>
[03:11:22.707]        // end if-block "isSWJ"
[03:11:22.707]      </control>
[03:11:22.707]      // end if-block "protType == 2"
[03:11:22.707]    </control>
[03:11:22.707]  </sequence>
[03:11:22.707]  
[03:11:22.958]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:22.958]  
[03:11:22.960]  <debugvars>
[03:11:22.960]    // Pre-defined
[03:11:22.960]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:22.960]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:22.960]    __dp=0x00000000
[03:11:22.960]    __ap=0x00000000
[03:11:22.960]    __traceout=0x00000000      (Trace Disabled)
[03:11:22.960]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:22.960]    __FlashAddr=0x00000000
[03:11:22.960]    __FlashLen=0x00000000
[03:11:22.960]    __FlashArg=0x00000000
[03:11:22.960]    __FlashOp=0x00000000
[03:11:22.960]    __Result=0x00000000
[03:11:22.960]  </debugvars>
[03:11:22.960]  
[03:11:22.960]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:22.962]    <block atomic="false" info="">
[03:11:22.962]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:22.962]        // -> [isSWJ <= 0x00000001]
[03:11:22.962]      __var hasDormant = __protocol & 0x00020000;
[03:11:22.962]        // -> [hasDormant <= 0x00000000]
[03:11:22.962]      __var protType   = __protocol & 0x0000FFFF;
[03:11:22.962]        // -> [protType <= 0x00000002]
[03:11:22.962]    </block>
[03:11:22.962]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:22.962]      // if-block "protType == 1"
[03:11:22.962]        // =>  FALSE
[03:11:22.962]      // skip if-block "protType == 1"
[03:11:22.962]    </control>
[03:11:22.962]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:22.962]      // if-block "protType == 2"
[03:11:22.962]        // =>  TRUE
[03:11:22.962]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:22.962]        // if-block "isSWJ"
[03:11:22.962]          // =>  TRUE
[03:11:22.962]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:22.962]          // if-block "hasDormant"
[03:11:22.962]            // =>  FALSE
[03:11:22.962]          // skip if-block "hasDormant"
[03:11:22.962]        </control>
[03:11:22.962]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:22.962]          // if-block "!hasDormant"
[03:11:22.962]            // =>  TRUE
[03:11:22.962]          <block atomic="false" info="">
[03:11:22.962]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:22.962]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:22.962]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:22.966]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:22.966]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:22.972]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:22.972]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:22.972]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:22.972]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:22.974]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:22.974]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:22.974]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:22.974]          </block>
[03:11:22.974]          // end if-block "!hasDormant"
[03:11:22.974]        </control>
[03:11:22.974]        // end if-block "isSWJ"
[03:11:22.974]      </control>
[03:11:22.974]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:22.974]        // if-block "!isSWJ"
[03:11:22.974]          // =>  FALSE
[03:11:22.974]        // skip if-block "!isSWJ"
[03:11:22.974]      </control>
[03:11:22.974]      <block atomic="false" info="">
[03:11:22.974]        ReadDP(0x0);
[03:11:22.974]  
[03:11:22.974]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:22.974]  
[03:11:22.974]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:22.974]      </block>
[03:11:22.974]      // end if-block "protType == 2"
[03:11:22.974]    </control>
[03:11:22.974]  </sequence>
[03:11:22.974]  
[03:11:23.229]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:23.229]  
[03:11:23.230]  <debugvars>
[03:11:23.230]    // Pre-defined
[03:11:23.230]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:23.230]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:23.230]    __dp=0x00000000
[03:11:23.230]    __ap=0x00000000
[03:11:23.230]    __traceout=0x00000000      (Trace Disabled)
[03:11:23.230]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:23.230]    __FlashAddr=0x00000000
[03:11:23.230]    __FlashLen=0x00000000
[03:11:23.230]    __FlashArg=0x00000000
[03:11:23.231]    __FlashOp=0x00000000
[03:11:23.231]    __Result=0x00000000
[03:11:23.231]  </debugvars>
[03:11:23.231]  
[03:11:23.231]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:23.231]    <block atomic="false" info="">
[03:11:23.231]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:23.231]        // -> [isSWJ <= 0x00000001]
[03:11:23.231]      __var hasDormant = __protocol & 0x00020000;
[03:11:23.231]        // -> [hasDormant <= 0x00000000]
[03:11:23.231]      __var protType   = __protocol & 0x0000FFFF;
[03:11:23.231]        // -> [protType <= 0x00000002]
[03:11:23.233]    </block>
[03:11:23.233]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:23.233]      // if-block "protType == 1"
[03:11:23.233]        // =>  FALSE
[03:11:23.233]      // skip if-block "protType == 1"
[03:11:23.233]    </control>
[03:11:23.234]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:23.234]      // if-block "protType == 2"
[03:11:23.234]        // =>  TRUE
[03:11:23.234]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:23.234]        // if-block "isSWJ"
[03:11:23.234]          // =>  TRUE
[03:11:23.234]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:23.234]          // if-block "hasDormant"
[03:11:23.234]            // =>  FALSE
[03:11:23.234]          // skip if-block "hasDormant"
[03:11:23.234]        </control>
[03:11:23.234]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:23.234]          // if-block "!hasDormant"
[03:11:23.234]            // =>  TRUE
[03:11:23.234]          <block atomic="false" info="">
[03:11:23.234]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:23.234]  
[03:11:23.234]  !!! E320 : DAP access error
[03:11:23.234]  
[03:11:23.234]          </block>
[03:11:23.234]          // end if-block "!hasDormant"
[03:11:23.234]        </control>
[03:11:23.234]        // end if-block "isSWJ"
[03:11:23.234]      </control>
[03:11:23.234]      // end if-block "protType == 2"
[03:11:23.234]    </control>
[03:11:23.234]  </sequence>
[03:11:23.234]  
[03:11:23.485]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:23.485]  
[03:11:23.486]  <debugvars>
[03:11:23.486]    // Pre-defined
[03:11:23.486]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:23.486]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:23.486]    __dp=0x00000000
[03:11:23.486]    __ap=0x00000000
[03:11:23.486]    __traceout=0x00000000      (Trace Disabled)
[03:11:23.486]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:23.486]    __FlashAddr=0x00000000
[03:11:23.486]    __FlashLen=0x00000000
[03:11:23.486]    __FlashArg=0x00000000
[03:11:23.486]    __FlashOp=0x00000000
[03:11:23.486]    __Result=0x00000000
[03:11:23.486]  </debugvars>
[03:11:23.486]  
[03:11:23.486]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:23.486]    <block atomic="false" info="">
[03:11:23.486]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:23.486]        // -> [isSWJ <= 0x00000001]
[03:11:23.486]      __var hasDormant = __protocol & 0x00020000;
[03:11:23.486]        // -> [hasDormant <= 0x00000000]
[03:11:23.486]      __var protType   = __protocol & 0x0000FFFF;
[03:11:23.486]        // -> [protType <= 0x00000002]
[03:11:23.486]    </block>
[03:11:23.486]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:23.486]      // if-block "protType == 1"
[03:11:23.486]        // =>  FALSE
[03:11:23.486]      // skip if-block "protType == 1"
[03:11:23.486]    </control>
[03:11:23.486]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:23.489]      // if-block "protType == 2"
[03:11:23.489]        // =>  TRUE
[03:11:23.489]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:23.489]        // if-block "isSWJ"
[03:11:23.489]          // =>  TRUE
[03:11:23.490]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:23.490]          // if-block "hasDormant"
[03:11:23.490]            // =>  FALSE
[03:11:23.490]          // skip if-block "hasDormant"
[03:11:23.490]        </control>
[03:11:23.490]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:23.490]          // if-block "!hasDormant"
[03:11:23.490]            // =>  TRUE
[03:11:23.490]          <block atomic="false" info="">
[03:11:23.490]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:23.490]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:23.490]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:23.493]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:23.493]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:23.493]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:23.493]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:23.495]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:23.495]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:23.495]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:23.495]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:23.496]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:23.496]          </block>
[03:11:23.496]          // end if-block "!hasDormant"
[03:11:23.496]        </control>
[03:11:23.496]        // end if-block "isSWJ"
[03:11:23.496]      </control>
[03:11:23.496]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:23.497]        // if-block "!isSWJ"
[03:11:23.497]          // =>  FALSE
[03:11:23.497]        // skip if-block "!isSWJ"
[03:11:23.497]      </control>
[03:11:23.497]      <block atomic="false" info="">
[03:11:23.497]        ReadDP(0x0);
[03:11:23.497]  
[03:11:23.497]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:23.497]  
[03:11:23.497]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:23.497]      </block>
[03:11:23.497]      // end if-block "protType == 2"
[03:11:23.497]    </control>
[03:11:23.500]  </sequence>
[03:11:23.500]  
[03:11:23.755]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:23.755]  
[03:11:23.756]  <debugvars>
[03:11:23.756]    // Pre-defined
[03:11:23.756]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:23.756]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:23.756]    __dp=0x00000000
[03:11:23.756]    __ap=0x00000000
[03:11:23.756]    __traceout=0x00000000      (Trace Disabled)
[03:11:23.756]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:23.756]    __FlashAddr=0x00000000
[03:11:23.756]    __FlashLen=0x00000000
[03:11:23.756]    __FlashArg=0x00000000
[03:11:23.756]    __FlashOp=0x00000000
[03:11:23.756]    __Result=0x00000000
[03:11:23.756]  </debugvars>
[03:11:23.756]  
[03:11:23.756]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:23.756]    <block atomic="false" info="">
[03:11:23.756]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:23.756]        // -> [isSWJ <= 0x00000001]
[03:11:23.756]      __var hasDormant = __protocol & 0x00020000;
[03:11:23.756]        // -> [hasDormant <= 0x00000000]
[03:11:23.756]      __var protType   = __protocol & 0x0000FFFF;
[03:11:23.756]        // -> [protType <= 0x00000002]
[03:11:23.759]    </block>
[03:11:23.759]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:23.759]      // if-block "protType == 1"
[03:11:23.759]        // =>  FALSE
[03:11:23.759]      // skip if-block "protType == 1"
[03:11:23.759]    </control>
[03:11:23.759]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:23.759]      // if-block "protType == 2"
[03:11:23.759]        // =>  TRUE
[03:11:23.759]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:23.759]        // if-block "isSWJ"
[03:11:23.759]          // =>  TRUE
[03:11:23.759]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:23.759]          // if-block "hasDormant"
[03:11:23.759]            // =>  FALSE
[03:11:23.759]          // skip if-block "hasDormant"
[03:11:23.759]        </control>
[03:11:23.759]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:23.759]          // if-block "!hasDormant"
[03:11:23.759]            // =>  TRUE
[03:11:23.759]          <block atomic="false" info="">
[03:11:23.759]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:23.759]  
[03:11:23.759]  !!! E320 : DAP access error
[03:11:23.759]  
[03:11:23.759]          </block>
[03:11:23.759]          // end if-block "!hasDormant"
[03:11:23.759]        </control>
[03:11:23.759]        // end if-block "isSWJ"
[03:11:23.759]      </control>
[03:11:23.759]      // end if-block "protType == 2"
[03:11:23.759]    </control>
[03:11:23.759]  </sequence>
[03:11:23.763]  
[03:11:24.020]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:24.020]  
[03:11:24.020]  <debugvars>
[03:11:24.020]    // Pre-defined
[03:11:24.021]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:24.021]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:24.021]    __dp=0x00000000
[03:11:24.021]    __ap=0x00000000
[03:11:24.021]    __traceout=0x00000000      (Trace Disabled)
[03:11:24.021]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:24.021]    __FlashAddr=0x00000000
[03:11:24.021]    __FlashLen=0x00000000
[03:11:24.021]    __FlashArg=0x00000000
[03:11:24.022]    __FlashOp=0x00000000
[03:11:24.022]    __Result=0x00000000
[03:11:24.022]  </debugvars>
[03:11:24.022]  
[03:11:24.022]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:24.022]    <block atomic="false" info="">
[03:11:24.022]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:24.022]        // -> [isSWJ <= 0x00000001]
[03:11:24.022]      __var hasDormant = __protocol & 0x00020000;
[03:11:24.022]        // -> [hasDormant <= 0x00000000]
[03:11:24.022]      __var protType   = __protocol & 0x0000FFFF;
[03:11:24.022]        // -> [protType <= 0x00000002]
[03:11:24.024]    </block>
[03:11:24.024]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:24.024]      // if-block "protType == 1"
[03:11:24.024]        // =>  FALSE
[03:11:24.024]      // skip if-block "protType == 1"
[03:11:24.024]    </control>
[03:11:24.024]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:24.024]      // if-block "protType == 2"
[03:11:24.025]        // =>  TRUE
[03:11:24.025]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:24.025]        // if-block "isSWJ"
[03:11:24.025]          // =>  TRUE
[03:11:24.025]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:24.025]          // if-block "hasDormant"
[03:11:24.026]            // =>  FALSE
[03:11:24.026]          // skip if-block "hasDormant"
[03:11:24.026]        </control>
[03:11:24.026]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:24.026]          // if-block "!hasDormant"
[03:11:24.026]            // =>  TRUE
[03:11:24.026]          <block atomic="false" info="">
[03:11:24.026]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:24.026]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:24.027]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:24.028]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:24.028]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:24.028]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:24.028]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:24.029]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:24.029]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:24.029]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:24.029]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:24.032]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:24.032]          </block>
[03:11:24.032]          // end if-block "!hasDormant"
[03:11:24.032]        </control>
[03:11:24.032]        // end if-block "isSWJ"
[03:11:24.032]      </control>
[03:11:24.032]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:24.032]        // if-block "!isSWJ"
[03:11:24.032]          // =>  FALSE
[03:11:24.032]        // skip if-block "!isSWJ"
[03:11:24.032]      </control>
[03:11:24.034]      <block atomic="false" info="">
[03:11:24.034]        ReadDP(0x0);
[03:11:24.034]  
[03:11:24.034]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:24.034]  
[03:11:24.034]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:24.034]      </block>
[03:11:24.034]      // end if-block "protType == 2"
[03:11:24.034]    </control>
[03:11:24.035]  </sequence>
[03:11:24.035]  
[03:11:24.291]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:24.291]  
[03:11:24.292]  <debugvars>
[03:11:24.292]    // Pre-defined
[03:11:24.292]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:24.292]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:24.292]    __dp=0x00000000
[03:11:24.292]    __ap=0x00000000
[03:11:24.292]    __traceout=0x00000000      (Trace Disabled)
[03:11:24.292]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:24.293]    __FlashAddr=0x00000000
[03:11:24.293]    __FlashLen=0x00000000
[03:11:24.293]    __FlashArg=0x00000000
[03:11:24.293]    __FlashOp=0x00000000
[03:11:24.293]    __Result=0x00000000
[03:11:24.293]  </debugvars>
[03:11:24.293]  
[03:11:24.293]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:24.293]    <block atomic="false" info="">
[03:11:24.293]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:24.293]        // -> [isSWJ <= 0x00000001]
[03:11:24.293]      __var hasDormant = __protocol & 0x00020000;
[03:11:24.293]        // -> [hasDormant <= 0x00000000]
[03:11:24.293]      __var protType   = __protocol & 0x0000FFFF;
[03:11:24.293]        // -> [protType <= 0x00000002]
[03:11:24.293]    </block>
[03:11:24.293]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:24.293]      // if-block "protType == 1"
[03:11:24.293]        // =>  FALSE
[03:11:24.293]      // skip if-block "protType == 1"
[03:11:24.295]    </control>
[03:11:24.295]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:24.295]      // if-block "protType == 2"
[03:11:24.295]        // =>  TRUE
[03:11:24.295]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:24.295]        // if-block "isSWJ"
[03:11:24.295]          // =>  TRUE
[03:11:24.295]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:24.295]          // if-block "hasDormant"
[03:11:24.295]            // =>  FALSE
[03:11:24.297]          // skip if-block "hasDormant"
[03:11:24.297]        </control>
[03:11:24.297]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:24.297]          // if-block "!hasDormant"
[03:11:24.297]            // =>  TRUE
[03:11:24.297]          <block atomic="false" info="">
[03:11:24.297]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:24.297]  
[03:11:24.297]  !!! E320 : DAP access error
[03:11:24.297]  
[03:11:24.297]          </block>
[03:11:24.297]          // end if-block "!hasDormant"
[03:11:24.297]        </control>
[03:11:24.297]        // end if-block "isSWJ"
[03:11:24.297]      </control>
[03:11:24.299]      // end if-block "protType == 2"
[03:11:24.299]    </control>
[03:11:24.299]  </sequence>
[03:11:24.299]  
[03:11:24.549]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:24.549]  
[03:11:24.552]  <debugvars>
[03:11:24.552]    // Pre-defined
[03:11:24.552]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:24.552]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:24.552]    __dp=0x00000000
[03:11:24.552]    __ap=0x00000000
[03:11:24.552]    __traceout=0x00000000      (Trace Disabled)
[03:11:24.552]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:24.552]    __FlashAddr=0x00000000
[03:11:24.552]    __FlashLen=0x00000000
[03:11:24.552]    __FlashArg=0x00000000
[03:11:24.553]    __FlashOp=0x00000000
[03:11:24.553]    __Result=0x00000000
[03:11:24.553]  </debugvars>
[03:11:24.553]  
[03:11:24.553]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:24.553]    <block atomic="false" info="">
[03:11:24.553]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:24.553]        // -> [isSWJ <= 0x00000001]
[03:11:24.553]      __var hasDormant = __protocol & 0x00020000;
[03:11:24.553]        // -> [hasDormant <= 0x00000000]
[03:11:24.553]      __var protType   = __protocol & 0x0000FFFF;
[03:11:24.553]        // -> [protType <= 0x00000002]
[03:11:24.553]    </block>
[03:11:24.553]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:24.553]      // if-block "protType == 1"
[03:11:24.553]        // =>  FALSE
[03:11:24.553]      // skip if-block "protType == 1"
[03:11:24.553]    </control>
[03:11:24.553]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:24.553]      // if-block "protType == 2"
[03:11:24.553]        // =>  TRUE
[03:11:24.553]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:24.553]        // if-block "isSWJ"
[03:11:24.553]          // =>  TRUE
[03:11:24.553]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:24.553]          // if-block "hasDormant"
[03:11:24.553]            // =>  FALSE
[03:11:24.553]          // skip if-block "hasDormant"
[03:11:24.553]        </control>
[03:11:24.553]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:24.553]          // if-block "!hasDormant"
[03:11:24.553]            // =>  TRUE
[03:11:24.553]          <block atomic="false" info="">
[03:11:24.553]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:24.557]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:24.557]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:24.557]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:24.557]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:24.557]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:24.557]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:24.557]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:24.557]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:24.561]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:24.561]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:24.561]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:24.561]          </block>
[03:11:24.561]          // end if-block "!hasDormant"
[03:11:24.561]        </control>
[03:11:24.561]        // end if-block "isSWJ"
[03:11:24.561]      </control>
[03:11:24.561]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:24.561]        // if-block "!isSWJ"
[03:11:24.561]          // =>  FALSE
[03:11:24.561]        // skip if-block "!isSWJ"
[03:11:24.561]      </control>
[03:11:24.561]      <block atomic="false" info="">
[03:11:24.561]        ReadDP(0x0);
[03:11:24.561]  
[03:11:24.561]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:24.561]  
[03:11:24.561]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:24.561]      </block>
[03:11:24.561]      // end if-block "protType == 2"
[03:11:24.561]    </control>
[03:11:24.561]  </sequence>
[03:11:24.561]  
[03:11:24.820]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:24.820]  
[03:11:24.822]  <debugvars>
[03:11:24.822]    // Pre-defined
[03:11:24.822]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:24.822]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:24.822]    __dp=0x00000000
[03:11:24.822]    __ap=0x00000000
[03:11:24.822]    __traceout=0x00000000      (Trace Disabled)
[03:11:24.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:24.822]    __FlashAddr=0x00000000
[03:11:24.822]    __FlashLen=0x00000000
[03:11:24.822]    __FlashArg=0x00000000
[03:11:24.822]    __FlashOp=0x00000000
[03:11:24.822]    __Result=0x00000000
[03:11:24.822]  </debugvars>
[03:11:24.822]  
[03:11:24.822]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:24.822]    <block atomic="false" info="">
[03:11:24.822]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:24.822]        // -> [isSWJ <= 0x00000001]
[03:11:24.822]      __var hasDormant = __protocol & 0x00020000;
[03:11:24.822]        // -> [hasDormant <= 0x00000000]
[03:11:24.822]      __var protType   = __protocol & 0x0000FFFF;
[03:11:24.822]        // -> [protType <= 0x00000002]
[03:11:24.822]    </block>
[03:11:24.822]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:24.825]      // if-block "protType == 1"
[03:11:24.825]        // =>  FALSE
[03:11:24.825]      // skip if-block "protType == 1"
[03:11:24.825]    </control>
[03:11:24.825]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:24.825]      // if-block "protType == 2"
[03:11:24.825]        // =>  TRUE
[03:11:24.825]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:24.825]        // if-block "isSWJ"
[03:11:24.825]          // =>  TRUE
[03:11:24.825]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:24.825]          // if-block "hasDormant"
[03:11:24.825]            // =>  FALSE
[03:11:24.825]          // skip if-block "hasDormant"
[03:11:24.825]        </control>
[03:11:24.825]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:24.825]          // if-block "!hasDormant"
[03:11:24.825]            // =>  TRUE
[03:11:24.827]          <block atomic="false" info="">
[03:11:24.827]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:24.827]  
[03:11:24.827]  !!! E320 : DAP access error
[03:11:24.827]  
[03:11:24.827]          </block>
[03:11:24.827]          // end if-block "!hasDormant"
[03:11:24.827]        </control>
[03:11:24.827]        // end if-block "isSWJ"
[03:11:24.827]      </control>
[03:11:24.827]      // end if-block "protType == 2"
[03:11:24.827]    </control>
[03:11:24.827]  </sequence>
[03:11:24.827]  
[03:11:25.079]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:25.079]  
[03:11:25.080]  <debugvars>
[03:11:25.080]    // Pre-defined
[03:11:25.080]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:25.080]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:25.080]    __dp=0x00000000
[03:11:25.080]    __ap=0x00000000
[03:11:25.080]    __traceout=0x00000000      (Trace Disabled)
[03:11:25.080]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:25.080]    __FlashAddr=0x00000000
[03:11:25.080]    __FlashLen=0x00000000
[03:11:25.080]    __FlashArg=0x00000000
[03:11:25.080]    __FlashOp=0x00000000
[03:11:25.080]    __Result=0x00000000
[03:11:25.080]  </debugvars>
[03:11:25.080]  
[03:11:25.080]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:25.080]    <block atomic="false" info="">
[03:11:25.080]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:25.080]        // -> [isSWJ <= 0x00000001]
[03:11:25.080]      __var hasDormant = __protocol & 0x00020000;
[03:11:25.083]        // -> [hasDormant <= 0x00000000]
[03:11:25.083]      __var protType   = __protocol & 0x0000FFFF;
[03:11:25.083]        // -> [protType <= 0x00000002]
[03:11:25.083]    </block>
[03:11:25.083]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:25.083]      // if-block "protType == 1"
[03:11:25.083]        // =>  FALSE
[03:11:25.083]      // skip if-block "protType == 1"
[03:11:25.083]    </control>
[03:11:25.083]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:25.083]      // if-block "protType == 2"
[03:11:25.083]        // =>  TRUE
[03:11:25.083]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:25.083]        // if-block "isSWJ"
[03:11:25.083]          // =>  TRUE
[03:11:25.083]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:25.083]          // if-block "hasDormant"
[03:11:25.083]            // =>  FALSE
[03:11:25.083]          // skip if-block "hasDormant"
[03:11:25.083]        </control>
[03:11:25.083]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:25.083]          // if-block "!hasDormant"
[03:11:25.083]            // =>  TRUE
[03:11:25.083]          <block atomic="false" info="">
[03:11:25.083]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:25.083]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:25.083]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:25.087]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:25.087]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:25.087]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:25.087]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:25.087]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:25.087]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:25.087]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:25.087]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:25.087]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:25.091]          </block>
[03:11:25.091]          // end if-block "!hasDormant"
[03:11:25.091]        </control>
[03:11:25.091]        // end if-block "isSWJ"
[03:11:25.091]      </control>
[03:11:25.091]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:25.092]        // if-block "!isSWJ"
[03:11:25.092]          // =>  FALSE
[03:11:25.092]        // skip if-block "!isSWJ"
[03:11:25.092]      </control>
[03:11:25.092]      <block atomic="false" info="">
[03:11:25.092]        ReadDP(0x0);
[03:11:25.092]  
[03:11:25.092]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:25.092]  
[03:11:25.092]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:25.092]      </block>
[03:11:25.092]      // end if-block "protType == 2"
[03:11:25.092]    </control>
[03:11:25.092]  </sequence>
[03:11:25.092]  
[03:11:25.347]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:25.347]  
[03:11:25.347]  <debugvars>
[03:11:25.347]    // Pre-defined
[03:11:25.347]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:25.347]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:25.347]    __dp=0x00000000
[03:11:25.347]    __ap=0x00000000
[03:11:25.347]    __traceout=0x00000000      (Trace Disabled)
[03:11:25.347]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:25.347]    __FlashAddr=0x00000000
[03:11:25.347]    __FlashLen=0x00000000
[03:11:25.347]    __FlashArg=0x00000000
[03:11:25.347]    __FlashOp=0x00000000
[03:11:25.347]    __Result=0x00000000
[03:11:25.347]  </debugvars>
[03:11:25.347]  
[03:11:25.347]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:25.347]    <block atomic="false" info="">
[03:11:25.347]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:25.347]        // -> [isSWJ <= 0x00000001]
[03:11:25.347]      __var hasDormant = __protocol & 0x00020000;
[03:11:25.347]        // -> [hasDormant <= 0x00000000]
[03:11:25.347]      __var protType   = __protocol & 0x0000FFFF;
[03:11:25.351]        // -> [protType <= 0x00000002]
[03:11:25.351]    </block>
[03:11:25.351]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:25.351]      // if-block "protType == 1"
[03:11:25.351]        // =>  FALSE
[03:11:25.351]      // skip if-block "protType == 1"
[03:11:25.351]    </control>
[03:11:25.351]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:25.351]      // if-block "protType == 2"
[03:11:25.351]        // =>  TRUE
[03:11:25.351]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:25.351]        // if-block "isSWJ"
[03:11:25.351]          // =>  TRUE
[03:11:25.351]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:25.351]          // if-block "hasDormant"
[03:11:25.351]            // =>  FALSE
[03:11:25.351]          // skip if-block "hasDormant"
[03:11:25.351]        </control>
[03:11:25.351]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:25.351]          // if-block "!hasDormant"
[03:11:25.351]            // =>  TRUE
[03:11:25.351]          <block atomic="false" info="">
[03:11:25.351]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:25.351]  
[03:11:25.351]  !!! E320 : DAP access error
[03:11:25.351]  
[03:11:25.351]          </block>
[03:11:25.351]          // end if-block "!hasDormant"
[03:11:25.351]        </control>
[03:11:25.351]        // end if-block "isSWJ"
[03:11:25.351]      </control>
[03:11:25.351]      // end if-block "protType == 2"
[03:11:25.355]    </control>
[03:11:25.355]  </sequence>
[03:11:25.355]  
[03:11:25.615]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:25.615]  
[03:11:25.618]  <debugvars>
[03:11:25.618]    // Pre-defined
[03:11:25.618]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:25.618]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:25.618]    __dp=0x00000000
[03:11:25.618]    __ap=0x00000000
[03:11:25.618]    __traceout=0x00000000      (Trace Disabled)
[03:11:25.618]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:25.618]    __FlashAddr=0x00000000
[03:11:25.618]    __FlashLen=0x00000000
[03:11:25.618]    __FlashArg=0x00000000
[03:11:25.618]    __FlashOp=0x00000000
[03:11:25.618]    __Result=0x00000000
[03:11:25.618]  </debugvars>
[03:11:25.618]  
[03:11:25.620]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:25.620]    <block atomic="false" info="">
[03:11:25.620]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:25.620]        // -> [isSWJ <= 0x00000001]
[03:11:25.620]      __var hasDormant = __protocol & 0x00020000;
[03:11:25.620]        // -> [hasDormant <= 0x00000000]
[03:11:25.620]      __var protType   = __protocol & 0x0000FFFF;
[03:11:25.620]        // -> [protType <= 0x00000002]
[03:11:25.620]    </block>
[03:11:25.620]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:25.620]      // if-block "protType == 1"
[03:11:25.620]        // =>  FALSE
[03:11:25.620]      // skip if-block "protType == 1"
[03:11:25.620]    </control>
[03:11:25.620]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:25.620]      // if-block "protType == 2"
[03:11:25.620]        // =>  TRUE
[03:11:25.620]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:25.620]        // if-block "isSWJ"
[03:11:25.620]          // =>  TRUE
[03:11:25.620]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:25.620]          // if-block "hasDormant"
[03:11:25.620]            // =>  FALSE
[03:11:25.620]          // skip if-block "hasDormant"
[03:11:25.620]        </control>
[03:11:25.620]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:25.620]          // if-block "!hasDormant"
[03:11:25.620]            // =>  TRUE
[03:11:25.620]          <block atomic="false" info="">
[03:11:25.620]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:25.624]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:25.624]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:25.624]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:25.624]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:25.624]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:25.624]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:25.624]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:25.624]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:25.624]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:25.624]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:25.628]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:25.628]          </block>
[03:11:25.628]          // end if-block "!hasDormant"
[03:11:25.628]        </control>
[03:11:25.628]        // end if-block "isSWJ"
[03:11:25.628]      </control>
[03:11:25.628]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:25.628]        // if-block "!isSWJ"
[03:11:25.628]          // =>  FALSE
[03:11:25.628]        // skip if-block "!isSWJ"
[03:11:25.628]      </control>
[03:11:25.628]      <block atomic="false" info="">
[03:11:25.628]        ReadDP(0x0);
[03:11:25.628]  
[03:11:25.628]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:25.628]  
[03:11:25.628]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:25.628]      </block>
[03:11:25.628]      // end if-block "protType == 2"
[03:11:25.628]    </control>
[03:11:25.628]  </sequence>
[03:11:25.628]  
[03:11:25.880]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:25.880]  
[03:11:25.882]  <debugvars>
[03:11:25.882]    // Pre-defined
[03:11:25.882]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:25.882]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:25.882]    __dp=0x00000000
[03:11:25.882]    __ap=0x00000000
[03:11:25.882]    __traceout=0x00000000      (Trace Disabled)
[03:11:25.882]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:25.882]    __FlashAddr=0x00000000
[03:11:25.882]    __FlashLen=0x00000000
[03:11:25.882]    __FlashArg=0x00000000
[03:11:25.882]    __FlashOp=0x00000000
[03:11:25.882]    __Result=0x00000000
[03:11:25.882]  </debugvars>
[03:11:25.882]  
[03:11:25.884]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:25.884]    <block atomic="false" info="">
[03:11:25.884]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:25.884]        // -> [isSWJ <= 0x00000001]
[03:11:25.884]      __var hasDormant = __protocol & 0x00020000;
[03:11:25.884]        // -> [hasDormant <= 0x00000000]
[03:11:25.884]      __var protType   = __protocol & 0x0000FFFF;
[03:11:25.884]        // -> [protType <= 0x00000002]
[03:11:25.884]    </block>
[03:11:25.884]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:25.884]      // if-block "protType == 1"
[03:11:25.884]        // =>  FALSE
[03:11:25.884]      // skip if-block "protType == 1"
[03:11:25.884]    </control>
[03:11:25.884]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:25.884]      // if-block "protType == 2"
[03:11:25.884]        // =>  TRUE
[03:11:25.884]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:25.884]        // if-block "isSWJ"
[03:11:25.884]          // =>  TRUE
[03:11:25.884]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:25.884]          // if-block "hasDormant"
[03:11:25.884]            // =>  FALSE
[03:11:25.884]          // skip if-block "hasDormant"
[03:11:25.884]        </control>
[03:11:25.884]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:25.884]          // if-block "!hasDormant"
[03:11:25.884]            // =>  TRUE
[03:11:25.884]          <block atomic="false" info="">
[03:11:25.884]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:25.884]  
[03:11:25.884]  !!! E320 : DAP access error
[03:11:25.884]  
[03:11:25.884]          </block>
[03:11:25.884]          // end if-block "!hasDormant"
[03:11:25.888]        </control>
[03:11:25.888]        // end if-block "isSWJ"
[03:11:25.888]      </control>
[03:11:25.888]      // end if-block "protType == 2"
[03:11:25.888]    </control>
[03:11:25.888]  </sequence>
[03:11:25.888]  
[03:11:26.142]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:26.142]  
[03:11:26.145]  <debugvars>
[03:11:26.145]    // Pre-defined
[03:11:26.145]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:26.145]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:26.145]    __dp=0x00000000
[03:11:26.145]    __ap=0x00000000
[03:11:26.145]    __traceout=0x00000000      (Trace Disabled)
[03:11:26.145]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:26.145]    __FlashAddr=0x00000000
[03:11:26.145]    __FlashLen=0x00000000
[03:11:26.145]    __FlashArg=0x00000000
[03:11:26.145]    __FlashOp=0x00000000
[03:11:26.145]    __Result=0x00000000
[03:11:26.145]  </debugvars>
[03:11:26.145]  
[03:11:26.145]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:26.145]    <block atomic="false" info="">
[03:11:26.145]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:26.145]        // -> [isSWJ <= 0x00000001]
[03:11:26.145]      __var hasDormant = __protocol & 0x00020000;
[03:11:26.147]        // -> [hasDormant <= 0x00000000]
[03:11:26.147]      __var protType   = __protocol & 0x0000FFFF;
[03:11:26.147]        // -> [protType <= 0x00000002]
[03:11:26.147]    </block>
[03:11:26.147]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:26.147]      // if-block "protType == 1"
[03:11:26.147]        // =>  FALSE
[03:11:26.147]      // skip if-block "protType == 1"
[03:11:26.147]    </control>
[03:11:26.147]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:26.147]      // if-block "protType == 2"
[03:11:26.147]        // =>  TRUE
[03:11:26.147]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:26.147]        // if-block "isSWJ"
[03:11:26.147]          // =>  TRUE
[03:11:26.147]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:26.147]          // if-block "hasDormant"
[03:11:26.147]            // =>  FALSE
[03:11:26.147]          // skip if-block "hasDormant"
[03:11:26.147]        </control>
[03:11:26.147]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:26.147]          // if-block "!hasDormant"
[03:11:26.147]            // =>  TRUE
[03:11:26.147]          <block atomic="false" info="">
[03:11:26.147]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:26.147]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:26.147]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:26.151]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:26.151]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:26.151]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:26.151]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:26.151]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:26.151]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:26.151]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:26.151]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:26.155]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:26.155]          </block>
[03:11:26.155]          // end if-block "!hasDormant"
[03:11:26.155]        </control>
[03:11:26.155]        // end if-block "isSWJ"
[03:11:26.155]      </control>
[03:11:26.155]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:26.155]        // if-block "!isSWJ"
[03:11:26.155]          // =>  FALSE
[03:11:26.155]        // skip if-block "!isSWJ"
[03:11:26.155]      </control>
[03:11:26.155]      <block atomic="false" info="">
[03:11:26.155]        ReadDP(0x0);
[03:11:26.155]  
[03:11:26.155]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:26.155]  
[03:11:26.155]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:26.155]      </block>
[03:11:26.155]      // end if-block "protType == 2"
[03:11:26.155]    </control>
[03:11:26.155]  </sequence>
[03:11:26.155]  
[03:11:26.412]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:26.412]  
[03:11:26.415]  <debugvars>
[03:11:26.415]    // Pre-defined
[03:11:26.415]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:26.415]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:26.415]    __dp=0x00000000
[03:11:26.415]    __ap=0x00000000
[03:11:26.415]    __traceout=0x00000000      (Trace Disabled)
[03:11:26.415]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:26.415]    __FlashAddr=0x00000000
[03:11:26.415]    __FlashLen=0x00000000
[03:11:26.415]    __FlashArg=0x00000000
[03:11:26.415]    __FlashOp=0x00000000
[03:11:26.415]    __Result=0x00000000
[03:11:26.415]  </debugvars>
[03:11:26.415]  
[03:11:26.416]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:26.416]    <block atomic="false" info="">
[03:11:26.416]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:26.416]        // -> [isSWJ <= 0x00000001]
[03:11:26.416]      __var hasDormant = __protocol & 0x00020000;
[03:11:26.416]        // -> [hasDormant <= 0x00000000]
[03:11:26.416]      __var protType   = __protocol & 0x0000FFFF;
[03:11:26.416]        // -> [protType <= 0x00000002]
[03:11:26.416]    </block>
[03:11:26.416]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:26.416]      // if-block "protType == 1"
[03:11:26.416]        // =>  FALSE
[03:11:26.416]      // skip if-block "protType == 1"
[03:11:26.416]    </control>
[03:11:26.416]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:26.416]      // if-block "protType == 2"
[03:11:26.416]        // =>  TRUE
[03:11:26.416]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:26.416]        // if-block "isSWJ"
[03:11:26.416]          // =>  TRUE
[03:11:26.416]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:26.416]          // if-block "hasDormant"
[03:11:26.416]            // =>  FALSE
[03:11:26.416]          // skip if-block "hasDormant"
[03:11:26.416]        </control>
[03:11:26.416]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:26.416]          // if-block "!hasDormant"
[03:11:26.416]            // =>  TRUE
[03:11:26.416]          <block atomic="false" info="">
[03:11:26.416]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:26.420]  
[03:11:26.420]  !!! E320 : DAP access error
[03:11:26.420]  
[03:11:26.420]          </block>
[03:11:26.420]          // end if-block "!hasDormant"
[03:11:26.420]        </control>
[03:11:26.420]        // end if-block "isSWJ"
[03:11:26.420]      </control>
[03:11:26.420]      // end if-block "protType == 2"
[03:11:26.420]    </control>
[03:11:26.420]  </sequence>
[03:11:26.420]  
[03:11:26.681]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:26.681]  
[03:11:26.681]  <debugvars>
[03:11:26.681]    // Pre-defined
[03:11:26.681]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:26.681]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:26.681]    __dp=0x00000000
[03:11:26.681]    __ap=0x00000000
[03:11:26.681]    __traceout=0x00000000      (Trace Disabled)
[03:11:26.681]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:26.681]    __FlashAddr=0x00000000
[03:11:26.681]    __FlashLen=0x00000000
[03:11:26.681]    __FlashArg=0x00000000
[03:11:26.681]    __FlashOp=0x00000000
[03:11:26.681]    __Result=0x00000000
[03:11:26.681]  </debugvars>
[03:11:26.681]  
[03:11:26.681]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:26.681]    <block atomic="false" info="">
[03:11:26.681]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:26.681]        // -> [isSWJ <= 0x00000001]
[03:11:26.681]      __var hasDormant = __protocol & 0x00020000;
[03:11:26.681]        // -> [hasDormant <= 0x00000000]
[03:11:26.681]      __var protType   = __protocol & 0x0000FFFF;
[03:11:26.681]        // -> [protType <= 0x00000002]
[03:11:26.681]    </block>
[03:11:26.681]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:26.681]      // if-block "protType == 1"
[03:11:26.681]        // =>  FALSE
[03:11:26.681]      // skip if-block "protType == 1"
[03:11:26.681]    </control>
[03:11:26.685]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:26.685]      // if-block "protType == 2"
[03:11:26.685]        // =>  TRUE
[03:11:26.685]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:26.685]        // if-block "isSWJ"
[03:11:26.685]          // =>  TRUE
[03:11:26.685]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:26.685]          // if-block "hasDormant"
[03:11:26.685]            // =>  FALSE
[03:11:26.685]          // skip if-block "hasDormant"
[03:11:26.685]        </control>
[03:11:26.685]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:26.685]          // if-block "!hasDormant"
[03:11:26.685]            // =>  TRUE
[03:11:26.685]          <block atomic="false" info="">
[03:11:26.685]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:26.685]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:26.685]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:26.687]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:26.688]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:26.688]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:26.688]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:26.695]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:26.695]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:26.697]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:26.697]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:26.698]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:26.698]          </block>
[03:11:26.698]          // end if-block "!hasDormant"
[03:11:26.698]        </control>
[03:11:26.698]        // end if-block "isSWJ"
[03:11:26.698]      </control>
[03:11:26.698]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:26.698]        // if-block "!isSWJ"
[03:11:26.698]          // =>  FALSE
[03:11:26.698]        // skip if-block "!isSWJ"
[03:11:26.698]      </control>
[03:11:26.700]      <block atomic="false" info="">
[03:11:26.700]        ReadDP(0x0);
[03:11:26.700]  
[03:11:26.700]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:26.700]  
[03:11:26.700]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:26.700]      </block>
[03:11:26.700]      // end if-block "protType == 2"
[03:11:26.700]    </control>
[03:11:26.700]  </sequence>
[03:11:26.700]  
[03:11:26.951]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:26.951]  
[03:11:26.953]  <debugvars>
[03:11:26.953]    // Pre-defined
[03:11:26.953]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:26.953]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:26.953]    __dp=0x00000000
[03:11:26.953]    __ap=0x00000000
[03:11:26.953]    __traceout=0x00000000      (Trace Disabled)
[03:11:26.953]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:26.953]    __FlashAddr=0x00000000
[03:11:26.953]    __FlashLen=0x00000000
[03:11:26.953]    __FlashArg=0x00000000
[03:11:26.953]    __FlashOp=0x00000000
[03:11:26.953]    __Result=0x00000000
[03:11:26.953]  </debugvars>
[03:11:26.953]  
[03:11:26.953]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:26.953]    <block atomic="false" info="">
[03:11:26.953]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:26.953]        // -> [isSWJ <= 0x00000001]
[03:11:26.953]      __var hasDormant = __protocol & 0x00020000;
[03:11:26.953]        // -> [hasDormant <= 0x00000000]
[03:11:26.953]      __var protType   = __protocol & 0x0000FFFF;
[03:11:26.953]        // -> [protType <= 0x00000002]
[03:11:26.953]    </block>
[03:11:26.953]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:26.953]      // if-block "protType == 1"
[03:11:26.956]        // =>  FALSE
[03:11:26.956]      // skip if-block "protType == 1"
[03:11:26.956]    </control>
[03:11:26.956]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:26.956]      // if-block "protType == 2"
[03:11:26.956]        // =>  TRUE
[03:11:26.956]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:26.956]        // if-block "isSWJ"
[03:11:26.956]          // =>  TRUE
[03:11:26.956]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:26.956]          // if-block "hasDormant"
[03:11:26.956]            // =>  FALSE
[03:11:26.956]          // skip if-block "hasDormant"
[03:11:26.956]        </control>
[03:11:26.956]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:26.956]          // if-block "!hasDormant"
[03:11:26.956]            // =>  TRUE
[03:11:26.956]          <block atomic="false" info="">
[03:11:26.956]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:26.956]  
[03:11:26.956]  !!! E320 : DAP access error
[03:11:26.956]  
[03:11:26.956]          </block>
[03:11:26.956]          // end if-block "!hasDormant"
[03:11:26.956]        </control>
[03:11:26.956]        // end if-block "isSWJ"
[03:11:26.956]      </control>
[03:11:26.956]      // end if-block "protType == 2"
[03:11:26.956]    </control>
[03:11:26.956]  </sequence>
[03:11:26.956]  
[03:11:27.207]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:27.207]  
[03:11:27.209]  <debugvars>
[03:11:27.209]    // Pre-defined
[03:11:27.209]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:27.209]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:27.209]    __dp=0x00000000
[03:11:27.209]    __ap=0x00000000
[03:11:27.209]    __traceout=0x00000000      (Trace Disabled)
[03:11:27.209]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:27.209]    __FlashAddr=0x00000000
[03:11:27.209]    __FlashLen=0x00000000
[03:11:27.209]    __FlashArg=0x00000000
[03:11:27.209]    __FlashOp=0x00000000
[03:11:27.209]    __Result=0x00000000
[03:11:27.209]  </debugvars>
[03:11:27.209]  
[03:11:27.211]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:27.211]    <block atomic="false" info="">
[03:11:27.211]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:27.211]        // -> [isSWJ <= 0x00000001]
[03:11:27.211]      __var hasDormant = __protocol & 0x00020000;
[03:11:27.211]        // -> [hasDormant <= 0x00000000]
[03:11:27.211]      __var protType   = __protocol & 0x0000FFFF;
[03:11:27.211]        // -> [protType <= 0x00000002]
[03:11:27.211]    </block>
[03:11:27.211]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:27.211]      // if-block "protType == 1"
[03:11:27.211]        // =>  FALSE
[03:11:27.212]      // skip if-block "protType == 1"
[03:11:27.212]    </control>
[03:11:27.212]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:27.212]      // if-block "protType == 2"
[03:11:27.212]        // =>  TRUE
[03:11:27.212]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:27.212]        // if-block "isSWJ"
[03:11:27.212]          // =>  TRUE
[03:11:27.212]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:27.212]          // if-block "hasDormant"
[03:11:27.212]            // =>  FALSE
[03:11:27.212]          // skip if-block "hasDormant"
[03:11:27.214]        </control>
[03:11:27.214]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:27.214]          // if-block "!hasDormant"
[03:11:27.214]            // =>  TRUE
[03:11:27.214]          <block atomic="false" info="">
[03:11:27.214]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:27.214]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:27.215]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:27.216]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:27.216]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:27.216]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:27.219]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:27.220]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:27.220]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:27.220]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:27.220]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:27.221]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:27.221]          </block>
[03:11:27.221]          // end if-block "!hasDormant"
[03:11:27.221]        </control>
[03:11:27.221]        // end if-block "isSWJ"
[03:11:27.222]      </control>
[03:11:27.222]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:27.222]        // if-block "!isSWJ"
[03:11:27.222]          // =>  FALSE
[03:11:27.222]        // skip if-block "!isSWJ"
[03:11:27.222]      </control>
[03:11:27.222]      <block atomic="false" info="">
[03:11:27.222]        ReadDP(0x0);
[03:11:27.224]  
[03:11:27.224]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:27.224]  
[03:11:27.224]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:27.224]      </block>
[03:11:27.224]      // end if-block "protType == 2"
[03:11:27.224]    </control>
[03:11:27.224]  </sequence>
[03:11:27.224]  
[03:11:27.486]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:27.486]  
[03:11:27.486]  <debugvars>
[03:11:27.488]    // Pre-defined
[03:11:27.488]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:27.488]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:27.488]    __dp=0x00000000
[03:11:27.488]    __ap=0x00000000
[03:11:27.488]    __traceout=0x00000000      (Trace Disabled)
[03:11:27.488]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:27.488]    __FlashAddr=0x00000000
[03:11:27.488]    __FlashLen=0x00000000
[03:11:27.488]    __FlashArg=0x00000000
[03:11:27.488]    __FlashOp=0x00000000
[03:11:27.488]    __Result=0x00000000
[03:11:27.488]  </debugvars>
[03:11:27.488]  
[03:11:27.488]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:27.488]    <block atomic="false" info="">
[03:11:27.490]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:27.490]        // -> [isSWJ <= 0x00000001]
[03:11:27.490]      __var hasDormant = __protocol & 0x00020000;
[03:11:27.490]        // -> [hasDormant <= 0x00000000]
[03:11:27.490]      __var protType   = __protocol & 0x0000FFFF;
[03:11:27.490]        // -> [protType <= 0x00000002]
[03:11:27.490]    </block>
[03:11:27.490]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:27.490]      // if-block "protType == 1"
[03:11:27.490]        // =>  FALSE
[03:11:27.492]      // skip if-block "protType == 1"
[03:11:27.492]    </control>
[03:11:27.492]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:27.492]      // if-block "protType == 2"
[03:11:27.492]        // =>  TRUE
[03:11:27.492]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:27.492]        // if-block "isSWJ"
[03:11:27.492]          // =>  TRUE
[03:11:27.492]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:27.492]          // if-block "hasDormant"
[03:11:27.492]            // =>  FALSE
[03:11:27.492]          // skip if-block "hasDormant"
[03:11:27.492]        </control>
[03:11:27.492]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:27.493]          // if-block "!hasDormant"
[03:11:27.493]            // =>  TRUE
[03:11:27.493]          <block atomic="false" info="">
[03:11:27.493]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:27.493]  
[03:11:27.493]  !!! E320 : DAP access error
[03:11:27.493]  
[03:11:27.493]          </block>
[03:11:27.493]          // end if-block "!hasDormant"
[03:11:27.493]        </control>
[03:11:27.493]        // end if-block "isSWJ"
[03:11:27.495]      </control>
[03:11:27.495]      // end if-block "protType == 2"
[03:11:27.495]    </control>
[03:11:27.495]  </sequence>
[03:11:27.495]  
[03:11:27.755]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:27.755]  
[03:11:27.757]  <debugvars>
[03:11:27.757]    // Pre-defined
[03:11:27.757]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:27.757]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:27.757]    __dp=0x00000000
[03:11:27.757]    __ap=0x00000000
[03:11:27.757]    __traceout=0x00000000      (Trace Disabled)
[03:11:27.757]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:27.757]    __FlashAddr=0x00000000
[03:11:27.757]    __FlashLen=0x00000000
[03:11:27.757]    __FlashArg=0x00000000
[03:11:27.757]    __FlashOp=0x00000000
[03:11:27.757]    __Result=0x00000000
[03:11:27.757]  </debugvars>
[03:11:27.757]  
[03:11:27.757]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:27.757]    <block atomic="false" info="">
[03:11:27.757]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:27.759]        // -> [isSWJ <= 0x00000001]
[03:11:27.759]      __var hasDormant = __protocol & 0x00020000;
[03:11:27.759]        // -> [hasDormant <= 0x00000000]
[03:11:27.759]      __var protType   = __protocol & 0x0000FFFF;
[03:11:27.759]        // -> [protType <= 0x00000002]
[03:11:27.759]    </block>
[03:11:27.759]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:27.759]      // if-block "protType == 1"
[03:11:27.759]        // =>  FALSE
[03:11:27.759]      // skip if-block "protType == 1"
[03:11:27.759]    </control>
[03:11:27.759]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:27.759]      // if-block "protType == 2"
[03:11:27.759]        // =>  TRUE
[03:11:27.759]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:27.759]        // if-block "isSWJ"
[03:11:27.759]          // =>  TRUE
[03:11:27.759]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:27.759]          // if-block "hasDormant"
[03:11:27.759]            // =>  FALSE
[03:11:27.759]          // skip if-block "hasDormant"
[03:11:27.759]        </control>
[03:11:27.759]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:27.759]          // if-block "!hasDormant"
[03:11:27.759]            // =>  TRUE
[03:11:27.759]          <block atomic="false" info="">
[03:11:27.759]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:27.759]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:27.759]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:27.763]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:27.763]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:27.763]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:27.763]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:27.763]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:27.763]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:27.767]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:27.767]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:27.768]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:27.768]          </block>
[03:11:27.768]          // end if-block "!hasDormant"
[03:11:27.768]        </control>
[03:11:27.768]        // end if-block "isSWJ"
[03:11:27.768]      </control>
[03:11:27.768]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:27.768]        // if-block "!isSWJ"
[03:11:27.768]          // =>  FALSE
[03:11:27.768]        // skip if-block "!isSWJ"
[03:11:27.771]      </control>
[03:11:27.771]      <block atomic="false" info="">
[03:11:27.771]        ReadDP(0x0);
[03:11:27.771]  
[03:11:27.771]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:27.771]  
[03:11:27.771]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:27.771]      </block>
[03:11:27.771]      // end if-block "protType == 2"
[03:11:27.775]    </control>
[03:11:27.775]  </sequence>
[03:11:27.775]  
[03:11:28.036]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:28.036]  
[03:11:28.036]  <debugvars>
[03:11:28.036]    // Pre-defined
[03:11:28.036]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:28.036]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:28.036]    __dp=0x00000000
[03:11:28.036]    __ap=0x00000000
[03:11:28.036]    __traceout=0x00000000      (Trace Disabled)
[03:11:28.036]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:28.036]    __FlashAddr=0x00000000
[03:11:28.036]    __FlashLen=0x00000000
[03:11:28.036]    __FlashArg=0x00000000
[03:11:28.036]    __FlashOp=0x00000000
[03:11:28.036]    __Result=0x00000000
[03:11:28.036]  </debugvars>
[03:11:28.036]  
[03:11:28.036]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:28.036]    <block atomic="false" info="">
[03:11:28.036]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:28.036]        // -> [isSWJ <= 0x00000001]
[03:11:28.036]      __var hasDormant = __protocol & 0x00020000;
[03:11:28.036]        // -> [hasDormant <= 0x00000000]
[03:11:28.036]      __var protType   = __protocol & 0x0000FFFF;
[03:11:28.036]        // -> [protType <= 0x00000002]
[03:11:28.036]    </block>
[03:11:28.036]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:28.036]      // if-block "protType == 1"
[03:11:28.036]        // =>  FALSE
[03:11:28.036]      // skip if-block "protType == 1"
[03:11:28.036]    </control>
[03:11:28.036]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:28.036]      // if-block "protType == 2"
[03:11:28.036]        // =>  TRUE
[03:11:28.040]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:28.040]        // if-block "isSWJ"
[03:11:28.040]          // =>  TRUE
[03:11:28.040]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:28.040]          // if-block "hasDormant"
[03:11:28.040]            // =>  FALSE
[03:11:28.040]          // skip if-block "hasDormant"
[03:11:28.040]        </control>
[03:11:28.040]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:28.040]          // if-block "!hasDormant"
[03:11:28.040]            // =>  TRUE
[03:11:28.040]          <block atomic="false" info="">
[03:11:28.040]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:28.040]  
[03:11:28.040]  !!! E320 : DAP access error
[03:11:28.040]  
[03:11:28.040]          </block>
[03:11:28.040]          // end if-block "!hasDormant"
[03:11:28.040]        </control>
[03:11:28.040]        // end if-block "isSWJ"
[03:11:28.040]      </control>
[03:11:28.040]      // end if-block "protType == 2"
[03:11:28.040]    </control>
[03:11:28.040]  </sequence>
[03:11:28.040]  
[03:11:28.295]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:28.295]  
[03:11:28.297]  <debugvars>
[03:11:28.297]    // Pre-defined
[03:11:28.297]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:28.297]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:28.297]    __dp=0x00000000
[03:11:28.297]    __ap=0x00000000
[03:11:28.297]    __traceout=0x00000000      (Trace Disabled)
[03:11:28.297]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:28.297]    __FlashAddr=0x00000000
[03:11:28.297]    __FlashLen=0x00000000
[03:11:28.297]    __FlashArg=0x00000000
[03:11:28.297]    __FlashOp=0x00000000
[03:11:28.297]    __Result=0x00000000
[03:11:28.297]  </debugvars>
[03:11:28.297]  
[03:11:28.297]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:28.297]    <block atomic="false" info="">
[03:11:28.297]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:28.297]        // -> [isSWJ <= 0x00000001]
[03:11:28.297]      __var hasDormant = __protocol & 0x00020000;
[03:11:28.297]        // -> [hasDormant <= 0x00000000]
[03:11:28.297]      __var protType   = __protocol & 0x0000FFFF;
[03:11:28.299]        // -> [protType <= 0x00000002]
[03:11:28.299]    </block>
[03:11:28.299]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:28.299]      // if-block "protType == 1"
[03:11:28.299]        // =>  FALSE
[03:11:28.299]      // skip if-block "protType == 1"
[03:11:28.299]    </control>
[03:11:28.299]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:28.299]      // if-block "protType == 2"
[03:11:28.299]        // =>  TRUE
[03:11:28.299]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:28.299]        // if-block "isSWJ"
[03:11:28.299]          // =>  TRUE
[03:11:28.299]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:28.299]          // if-block "hasDormant"
[03:11:28.299]            // =>  FALSE
[03:11:28.299]          // skip if-block "hasDormant"
[03:11:28.299]        </control>
[03:11:28.299]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:28.299]          // if-block "!hasDormant"
[03:11:28.299]            // =>  TRUE
[03:11:28.299]          <block atomic="false" info="">
[03:11:28.299]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:28.299]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:28.299]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:28.299]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:28.303]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:28.303]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:28.303]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:28.303]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:28.303]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:28.303]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:28.303]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:28.303]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:28.303]          </block>
[03:11:28.303]          // end if-block "!hasDormant"
[03:11:28.303]        </control>
[03:11:28.303]        // end if-block "isSWJ"
[03:11:28.303]      </control>
[03:11:28.303]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:28.303]        // if-block "!isSWJ"
[03:11:28.303]          // =>  FALSE
[03:11:28.307]        // skip if-block "!isSWJ"
[03:11:28.307]      </control>
[03:11:28.307]      <block atomic="false" info="">
[03:11:28.307]        ReadDP(0x0);
[03:11:28.307]  
[03:11:28.307]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:28.307]  
[03:11:28.307]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:28.307]      </block>
[03:11:28.307]      // end if-block "protType == 2"
[03:11:28.307]    </control>
[03:11:28.307]  </sequence>
[03:11:28.307]  
[03:11:28.562]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:28.562]  
[03:11:28.564]  <debugvars>
[03:11:28.564]    // Pre-defined
[03:11:28.564]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:28.564]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:28.564]    __dp=0x00000000
[03:11:28.564]    __ap=0x00000000
[03:11:28.564]    __traceout=0x00000000      (Trace Disabled)
[03:11:28.564]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:28.564]    __FlashAddr=0x00000000
[03:11:28.564]    __FlashLen=0x00000000
[03:11:28.564]    __FlashArg=0x00000000
[03:11:28.564]    __FlashOp=0x00000000
[03:11:28.564]    __Result=0x00000000
[03:11:28.564]  </debugvars>
[03:11:28.564]  
[03:11:28.564]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:28.564]    <block atomic="false" info="">
[03:11:28.564]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:28.564]        // -> [isSWJ <= 0x00000001]
[03:11:28.564]      __var hasDormant = __protocol & 0x00020000;
[03:11:28.564]        // -> [hasDormant <= 0x00000000]
[03:11:28.564]      __var protType   = __protocol & 0x0000FFFF;
[03:11:28.564]        // -> [protType <= 0x00000002]
[03:11:28.564]    </block>
[03:11:28.564]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:28.564]      // if-block "protType == 1"
[03:11:28.564]        // =>  FALSE
[03:11:28.564]      // skip if-block "protType == 1"
[03:11:28.564]    </control>
[03:11:28.567]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:28.567]      // if-block "protType == 2"
[03:11:28.567]        // =>  TRUE
[03:11:28.567]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:28.567]        // if-block "isSWJ"
[03:11:28.567]          // =>  TRUE
[03:11:28.567]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:28.567]          // if-block "hasDormant"
[03:11:28.567]            // =>  FALSE
[03:11:28.567]          // skip if-block "hasDormant"
[03:11:28.567]        </control>
[03:11:28.567]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:28.567]          // if-block "!hasDormant"
[03:11:28.567]            // =>  TRUE
[03:11:28.567]          <block atomic="false" info="">
[03:11:28.567]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:28.567]  
[03:11:28.567]  !!! E320 : DAP access error
[03:11:28.567]  
[03:11:28.567]          </block>
[03:11:28.567]          // end if-block "!hasDormant"
[03:11:28.567]        </control>
[03:11:28.567]        // end if-block "isSWJ"
[03:11:28.567]      </control>
[03:11:28.567]      // end if-block "protType == 2"
[03:11:28.567]    </control>
[03:11:28.567]  </sequence>
[03:11:28.567]  
[03:11:28.824]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:28.824]  
[03:11:28.825]  <debugvars>
[03:11:28.825]    // Pre-defined
[03:11:28.825]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:28.825]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:28.825]    __dp=0x00000000
[03:11:28.825]    __ap=0x00000000
[03:11:28.825]    __traceout=0x00000000      (Trace Disabled)
[03:11:28.825]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:28.825]    __FlashAddr=0x00000000
[03:11:28.826]    __FlashLen=0x00000000
[03:11:28.826]    __FlashArg=0x00000000
[03:11:28.826]    __FlashOp=0x00000000
[03:11:28.826]    __Result=0x00000000
[03:11:28.826]  </debugvars>
[03:11:28.826]  
[03:11:28.826]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:28.826]    <block atomic="false" info="">
[03:11:28.826]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:28.826]        // -> [isSWJ <= 0x00000001]
[03:11:28.826]      __var hasDormant = __protocol & 0x00020000;
[03:11:28.826]        // -> [hasDormant <= 0x00000000]
[03:11:28.826]      __var protType   = __protocol & 0x0000FFFF;
[03:11:28.826]        // -> [protType <= 0x00000002]
[03:11:28.826]    </block>
[03:11:28.828]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:28.828]      // if-block "protType == 1"
[03:11:28.828]        // =>  FALSE
[03:11:28.828]      // skip if-block "protType == 1"
[03:11:28.828]    </control>
[03:11:28.828]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:28.828]      // if-block "protType == 2"
[03:11:28.828]        // =>  TRUE
[03:11:28.828]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:28.828]        // if-block "isSWJ"
[03:11:28.829]          // =>  TRUE
[03:11:28.829]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:28.829]          // if-block "hasDormant"
[03:11:28.829]            // =>  FALSE
[03:11:28.829]          // skip if-block "hasDormant"
[03:11:28.829]        </control>
[03:11:28.829]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:28.829]          // if-block "!hasDormant"
[03:11:28.829]            // =>  TRUE
[03:11:28.829]          <block atomic="false" info="">
[03:11:28.829]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:28.830]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:28.830]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:28.832]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:28.832]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:28.832]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:28.832]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:28.832]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:28.832]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:28.837]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:28.837]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:28.838]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:28.838]          </block>
[03:11:28.838]          // end if-block "!hasDormant"
[03:11:28.838]        </control>
[03:11:28.838]        // end if-block "isSWJ"
[03:11:28.838]      </control>
[03:11:28.838]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:28.838]        // if-block "!isSWJ"
[03:11:28.838]          // =>  FALSE
[03:11:28.838]        // skip if-block "!isSWJ"
[03:11:28.838]      </control>
[03:11:28.840]      <block atomic="false" info="">
[03:11:28.840]        ReadDP(0x0);
[03:11:28.840]  
[03:11:28.840]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:28.840]  
[03:11:28.840]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:28.840]      </block>
[03:11:28.840]      // end if-block "protType == 2"
[03:11:28.840]    </control>
[03:11:28.840]  </sequence>
[03:11:28.840]  
[03:11:29.100]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:29.100]  
[03:11:29.103]  <debugvars>
[03:11:29.103]    // Pre-defined
[03:11:29.103]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:29.103]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:29.103]    __dp=0x00000000
[03:11:29.103]    __ap=0x00000000
[03:11:29.103]    __traceout=0x00000000      (Trace Disabled)
[03:11:29.103]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:29.103]    __FlashAddr=0x00000000
[03:11:29.103]    __FlashLen=0x00000000
[03:11:29.103]    __FlashArg=0x00000000
[03:11:29.103]    __FlashOp=0x00000000
[03:11:29.103]    __Result=0x00000000
[03:11:29.103]  </debugvars>
[03:11:29.103]  
[03:11:29.103]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:29.103]    <block atomic="false" info="">
[03:11:29.104]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:29.104]        // -> [isSWJ <= 0x00000001]
[03:11:29.104]      __var hasDormant = __protocol & 0x00020000;
[03:11:29.104]        // -> [hasDormant <= 0x00000000]
[03:11:29.104]      __var protType   = __protocol & 0x0000FFFF;
[03:11:29.104]        // -> [protType <= 0x00000002]
[03:11:29.104]    </block>
[03:11:29.104]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:29.104]      // if-block "protType == 1"
[03:11:29.104]        // =>  FALSE
[03:11:29.104]      // skip if-block "protType == 1"
[03:11:29.104]    </control>
[03:11:29.104]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:29.104]      // if-block "protType == 2"
[03:11:29.106]        // =>  TRUE
[03:11:29.106]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:29.106]        // if-block "isSWJ"
[03:11:29.106]          // =>  TRUE
[03:11:29.106]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:29.106]          // if-block "hasDormant"
[03:11:29.106]            // =>  FALSE
[03:11:29.106]          // skip if-block "hasDormant"
[03:11:29.106]        </control>
[03:11:29.106]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:29.106]          // if-block "!hasDormant"
[03:11:29.106]            // =>  TRUE
[03:11:29.107]          <block atomic="false" info="">
[03:11:29.107]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:29.107]  
[03:11:29.107]  !!! E320 : DAP access error
[03:11:29.107]  
[03:11:29.107]          </block>
[03:11:29.107]          // end if-block "!hasDormant"
[03:11:29.107]        </control>
[03:11:29.107]        // end if-block "isSWJ"
[03:11:29.107]      </control>
[03:11:29.107]      // end if-block "protType == 2"
[03:11:29.107]    </control>
[03:11:29.108]  </sequence>
[03:11:29.108]  
[03:11:29.359]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:29.359]  
[03:11:29.359]  <debugvars>
[03:11:29.359]    // Pre-defined
[03:11:29.359]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:29.359]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:29.359]    __dp=0x00000000
[03:11:29.359]    __ap=0x00000000
[03:11:29.359]    __traceout=0x00000000      (Trace Disabled)
[03:11:29.359]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:29.359]    __FlashAddr=0x00000000
[03:11:29.359]    __FlashLen=0x00000000
[03:11:29.359]    __FlashArg=0x00000000
[03:11:29.359]    __FlashOp=0x00000000
[03:11:29.359]    __Result=0x00000000
[03:11:29.359]  </debugvars>
[03:11:29.359]  
[03:11:29.359]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:29.359]    <block atomic="false" info="">
[03:11:29.359]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:29.359]        // -> [isSWJ <= 0x00000001]
[03:11:29.361]      __var hasDormant = __protocol & 0x00020000;
[03:11:29.361]        // -> [hasDormant <= 0x00000000]
[03:11:29.361]      __var protType   = __protocol & 0x0000FFFF;
[03:11:29.361]        // -> [protType <= 0x00000002]
[03:11:29.361]    </block>
[03:11:29.361]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:29.361]      // if-block "protType == 1"
[03:11:29.361]        // =>  FALSE
[03:11:29.361]      // skip if-block "protType == 1"
[03:11:29.361]    </control>
[03:11:29.361]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:29.361]      // if-block "protType == 2"
[03:11:29.362]        // =>  TRUE
[03:11:29.362]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:29.362]        // if-block "isSWJ"
[03:11:29.362]          // =>  TRUE
[03:11:29.362]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:29.362]          // if-block "hasDormant"
[03:11:29.362]            // =>  FALSE
[03:11:29.362]          // skip if-block "hasDormant"
[03:11:29.362]        </control>
[03:11:29.362]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:29.362]          // if-block "!hasDormant"
[03:11:29.362]            // =>  TRUE
[03:11:29.362]          <block atomic="false" info="">
[03:11:29.362]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:29.362]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:29.362]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:29.362]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:29.362]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:29.362]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:29.362]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:29.366]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:29.366]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:29.366]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:29.366]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:29.366]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:29.366]          </block>
[03:11:29.366]          // end if-block "!hasDormant"
[03:11:29.366]        </control>
[03:11:29.366]        // end if-block "isSWJ"
[03:11:29.366]      </control>
[03:11:29.366]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:29.366]        // if-block "!isSWJ"
[03:11:29.366]          // =>  FALSE
[03:11:29.366]        // skip if-block "!isSWJ"
[03:11:29.366]      </control>
[03:11:29.371]      <block atomic="false" info="">
[03:11:29.371]        ReadDP(0x0);
[03:11:29.371]  
[03:11:29.371]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:29.371]  
[03:11:29.371]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:29.371]      </block>
[03:11:29.371]      // end if-block "protType == 2"
[03:11:29.371]    </control>
[03:11:29.371]  </sequence>
[03:11:29.371]  
[03:11:29.630]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:29.630]  
[03:11:29.633]  <debugvars>
[03:11:29.633]    // Pre-defined
[03:11:29.633]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:29.633]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:29.633]    __dp=0x00000000
[03:11:29.633]    __ap=0x00000000
[03:11:29.633]    __traceout=0x00000000      (Trace Disabled)
[03:11:29.633]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:29.633]    __FlashAddr=0x00000000
[03:11:29.635]    __FlashLen=0x00000000
[03:11:29.635]    __FlashArg=0x00000000
[03:11:29.635]    __FlashOp=0x00000000
[03:11:29.635]    __Result=0x00000000
[03:11:29.635]  </debugvars>
[03:11:29.635]  
[03:11:29.635]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:29.635]    <block atomic="false" info="">
[03:11:29.635]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:29.635]        // -> [isSWJ <= 0x00000001]
[03:11:29.635]      __var hasDormant = __protocol & 0x00020000;
[03:11:29.635]        // -> [hasDormant <= 0x00000000]
[03:11:29.635]      __var protType   = __protocol & 0x0000FFFF;
[03:11:29.635]        // -> [protType <= 0x00000002]
[03:11:29.635]    </block>
[03:11:29.635]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:29.635]      // if-block "protType == 1"
[03:11:29.636]        // =>  FALSE
[03:11:29.636]      // skip if-block "protType == 1"
[03:11:29.636]    </control>
[03:11:29.636]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:29.636]      // if-block "protType == 2"
[03:11:29.637]        // =>  TRUE
[03:11:29.637]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:29.637]        // if-block "isSWJ"
[03:11:29.637]          // =>  TRUE
[03:11:29.637]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:29.637]          // if-block "hasDormant"
[03:11:29.637]            // =>  FALSE
[03:11:29.637]          // skip if-block "hasDormant"
[03:11:29.637]        </control>
[03:11:29.637]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:29.637]          // if-block "!hasDormant"
[03:11:29.637]            // =>  TRUE
[03:11:29.637]          <block atomic="false" info="">
[03:11:29.637]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:29.639]  
[03:11:29.639]  !!! E320 : DAP access error
[03:11:29.639]  
[03:11:29.639]          </block>
[03:11:29.639]          // end if-block "!hasDormant"
[03:11:29.639]        </control>
[03:11:29.639]        // end if-block "isSWJ"
[03:11:29.639]      </control>
[03:11:29.639]      // end if-block "protType == 2"
[03:11:29.639]    </control>
[03:11:29.639]  </sequence>
[03:11:29.639]  
[03:11:29.890]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:29.890]  
[03:11:29.891]  <debugvars>
[03:11:29.891]    // Pre-defined
[03:11:29.891]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:29.891]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:29.891]    __dp=0x00000000
[03:11:29.891]    __ap=0x00000000
[03:11:29.891]    __traceout=0x00000000      (Trace Disabled)
[03:11:29.891]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:29.891]    __FlashAddr=0x00000000
[03:11:29.891]    __FlashLen=0x00000000
[03:11:29.891]    __FlashArg=0x00000000
[03:11:29.891]    __FlashOp=0x00000000
[03:11:29.891]    __Result=0x00000000
[03:11:29.891]  </debugvars>
[03:11:29.891]  
[03:11:29.891]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:29.891]    <block atomic="false" info="">
[03:11:29.891]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:29.891]        // -> [isSWJ <= 0x00000001]
[03:11:29.894]      __var hasDormant = __protocol & 0x00020000;
[03:11:29.894]        // -> [hasDormant <= 0x00000000]
[03:11:29.894]      __var protType   = __protocol & 0x0000FFFF;
[03:11:29.894]        // -> [protType <= 0x00000002]
[03:11:29.894]    </block>
[03:11:29.894]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:29.894]      // if-block "protType == 1"
[03:11:29.894]        // =>  FALSE
[03:11:29.894]      // skip if-block "protType == 1"
[03:11:29.894]    </control>
[03:11:29.894]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:29.894]      // if-block "protType == 2"
[03:11:29.894]        // =>  TRUE
[03:11:29.894]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:29.894]        // if-block "isSWJ"
[03:11:29.895]          // =>  TRUE
[03:11:29.895]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:29.895]          // if-block "hasDormant"
[03:11:29.895]            // =>  FALSE
[03:11:29.896]          // skip if-block "hasDormant"
[03:11:29.896]        </control>
[03:11:29.896]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:29.896]          // if-block "!hasDormant"
[03:11:29.896]            // =>  TRUE
[03:11:29.896]          <block atomic="false" info="">
[03:11:29.896]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:29.896]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:29.896]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:29.898]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:29.898]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:29.902]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:29.902]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:29.902]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:29.902]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:29.902]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:29.902]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:29.902]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:29.902]          </block>
[03:11:29.906]          // end if-block "!hasDormant"
[03:11:29.906]        </control>
[03:11:29.906]        // end if-block "isSWJ"
[03:11:29.906]      </control>
[03:11:29.906]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:29.906]        // if-block "!isSWJ"
[03:11:29.906]          // =>  FALSE
[03:11:29.906]        // skip if-block "!isSWJ"
[03:11:29.906]      </control>
[03:11:29.906]      <block atomic="false" info="">
[03:11:29.906]        ReadDP(0x0);
[03:11:29.906]  
[03:11:29.906]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:29.906]  
[03:11:29.906]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:29.906]      </block>
[03:11:29.906]      // end if-block "protType == 2"
[03:11:29.906]    </control>
[03:11:29.906]  </sequence>
[03:11:29.906]  
[03:11:30.163]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:30.163]  
[03:11:30.166]  <debugvars>
[03:11:30.166]    // Pre-defined
[03:11:30.166]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:30.166]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:30.166]    __dp=0x00000000
[03:11:30.166]    __ap=0x00000000
[03:11:30.166]    __traceout=0x00000000      (Trace Disabled)
[03:11:30.166]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:30.166]    __FlashAddr=0x00000000
[03:11:30.166]    __FlashLen=0x00000000
[03:11:30.166]    __FlashArg=0x00000000
[03:11:30.167]    __FlashOp=0x00000000
[03:11:30.167]    __Result=0x00000000
[03:11:30.167]  </debugvars>
[03:11:30.167]  
[03:11:30.167]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:30.167]    <block atomic="false" info="">
[03:11:30.167]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:30.167]        // -> [isSWJ <= 0x00000001]
[03:11:30.167]      __var hasDormant = __protocol & 0x00020000;
[03:11:30.167]        // -> [hasDormant <= 0x00000000]
[03:11:30.167]      __var protType   = __protocol & 0x0000FFFF;
[03:11:30.167]        // -> [protType <= 0x00000002]
[03:11:30.169]    </block>
[03:11:30.169]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:30.169]      // if-block "protType == 1"
[03:11:30.169]        // =>  FALSE
[03:11:30.169]      // skip if-block "protType == 1"
[03:11:30.169]    </control>
[03:11:30.169]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:30.169]      // if-block "protType == 2"
[03:11:30.169]        // =>  TRUE
[03:11:30.169]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:30.169]        // if-block "isSWJ"
[03:11:30.169]          // =>  TRUE
[03:11:30.169]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:30.169]          // if-block "hasDormant"
[03:11:30.169]            // =>  FALSE
[03:11:30.169]          // skip if-block "hasDormant"
[03:11:30.169]        </control>
[03:11:30.169]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:30.169]          // if-block "!hasDormant"
[03:11:30.169]            // =>  TRUE
[03:11:30.169]          <block atomic="false" info="">
[03:11:30.169]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:30.171]  
[03:11:30.171]  !!! E320 : DAP access error
[03:11:30.171]  
[03:11:30.171]          </block>
[03:11:30.171]          // end if-block "!hasDormant"
[03:11:30.171]        </control>
[03:11:30.171]        // end if-block "isSWJ"
[03:11:30.171]      </control>
[03:11:30.171]      // end if-block "protType == 2"
[03:11:30.171]    </control>
[03:11:30.171]  </sequence>
[03:11:30.171]  
[03:11:30.427]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:30.427]  
[03:11:30.428]  <debugvars>
[03:11:30.428]    // Pre-defined
[03:11:30.428]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:30.428]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:30.428]    __dp=0x00000000
[03:11:30.428]    __ap=0x00000000
[03:11:30.428]    __traceout=0x00000000      (Trace Disabled)
[03:11:30.428]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:30.428]    __FlashAddr=0x00000000
[03:11:30.428]    __FlashLen=0x00000000
[03:11:30.428]    __FlashArg=0x00000000
[03:11:30.428]    __FlashOp=0x00000000
[03:11:30.428]    __Result=0x00000000
[03:11:30.428]  </debugvars>
[03:11:30.428]  
[03:11:30.428]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:30.428]    <block atomic="false" info="">
[03:11:30.428]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:30.428]        // -> [isSWJ <= 0x00000001]
[03:11:30.428]      __var hasDormant = __protocol & 0x00020000;
[03:11:30.428]        // -> [hasDormant <= 0x00000000]
[03:11:30.428]      __var protType   = __protocol & 0x0000FFFF;
[03:11:30.428]        // -> [protType <= 0x00000002]
[03:11:30.428]    </block>
[03:11:30.428]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:30.431]      // if-block "protType == 1"
[03:11:30.431]        // =>  FALSE
[03:11:30.431]      // skip if-block "protType == 1"
[03:11:30.431]    </control>
[03:11:30.431]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:30.431]      // if-block "protType == 2"
[03:11:30.431]        // =>  TRUE
[03:11:30.431]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:30.432]        // if-block "isSWJ"
[03:11:30.432]          // =>  TRUE
[03:11:30.432]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:30.432]          // if-block "hasDormant"
[03:11:30.432]            // =>  FALSE
[03:11:30.432]          // skip if-block "hasDormant"
[03:11:30.432]        </control>
[03:11:30.432]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:30.432]          // if-block "!hasDormant"
[03:11:30.432]            // =>  TRUE
[03:11:30.432]          <block atomic="false" info="">
[03:11:30.432]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:30.432]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:30.432]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:30.435]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:30.435]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:30.435]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:30.435]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:30.437]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:30.437]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:30.437]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:30.437]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:30.439]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:30.439]          </block>
[03:11:30.439]          // end if-block "!hasDormant"
[03:11:30.440]        </control>
[03:11:30.440]        // end if-block "isSWJ"
[03:11:30.440]      </control>
[03:11:30.440]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:30.440]        // if-block "!isSWJ"
[03:11:30.440]          // =>  FALSE
[03:11:30.440]        // skip if-block "!isSWJ"
[03:11:30.440]      </control>
[03:11:30.440]      <block atomic="false" info="">
[03:11:30.440]        ReadDP(0x0);
[03:11:30.440]  
[03:11:30.440]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:30.440]  
[03:11:30.440]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:30.440]      </block>
[03:11:30.440]      // end if-block "protType == 2"
[03:11:30.440]    </control>
[03:11:30.440]  </sequence>
[03:11:30.440]  
[03:11:30.692]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:30.692]  
[03:11:30.695]  <debugvars>
[03:11:30.695]    // Pre-defined
[03:11:30.695]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:30.695]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:30.695]    __dp=0x00000000
[03:11:30.695]    __ap=0x00000000
[03:11:30.695]    __traceout=0x00000000      (Trace Disabled)
[03:11:30.695]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:30.695]    __FlashAddr=0x00000000
[03:11:30.695]    __FlashLen=0x00000000
[03:11:30.695]    __FlashArg=0x00000000
[03:11:30.695]    __FlashOp=0x00000000
[03:11:30.695]    __Result=0x00000000
[03:11:30.695]  </debugvars>
[03:11:30.696]  
[03:11:30.696]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:30.696]    <block atomic="false" info="">
[03:11:30.696]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:30.696]        // -> [isSWJ <= 0x00000001]
[03:11:30.696]      __var hasDormant = __protocol & 0x00020000;
[03:11:30.696]        // -> [hasDormant <= 0x00000000]
[03:11:30.696]      __var protType   = __protocol & 0x0000FFFF;
[03:11:30.696]        // -> [protType <= 0x00000002]
[03:11:30.696]    </block>
[03:11:30.696]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:30.696]      // if-block "protType == 1"
[03:11:30.696]        // =>  FALSE
[03:11:30.696]      // skip if-block "protType == 1"
[03:11:30.696]    </control>
[03:11:30.696]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:30.699]      // if-block "protType == 2"
[03:11:30.699]        // =>  TRUE
[03:11:30.699]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:30.699]        // if-block "isSWJ"
[03:11:30.699]          // =>  TRUE
[03:11:30.699]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:30.699]          // if-block "hasDormant"
[03:11:30.699]            // =>  FALSE
[03:11:30.699]          // skip if-block "hasDormant"
[03:11:30.699]        </control>
[03:11:30.699]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:30.699]          // if-block "!hasDormant"
[03:11:30.699]            // =>  TRUE
[03:11:30.700]          <block atomic="false" info="">
[03:11:30.700]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:30.700]  
[03:11:30.700]  !!! E320 : DAP access error
[03:11:30.700]  
[03:11:30.700]          </block>
[03:11:30.700]          // end if-block "!hasDormant"
[03:11:30.700]        </control>
[03:11:30.700]        // end if-block "isSWJ"
[03:11:30.700]      </control>
[03:11:30.700]      // end if-block "protType == 2"
[03:11:30.700]    </control>
[03:11:30.700]  </sequence>
[03:11:30.700]  
[03:11:30.960]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:30.960]  
[03:11:30.962]  <debugvars>
[03:11:30.962]    // Pre-defined
[03:11:30.962]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:30.962]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:30.962]    __dp=0x00000000
[03:11:30.962]    __ap=0x00000000
[03:11:30.962]    __traceout=0x00000000      (Trace Disabled)
[03:11:30.962]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:30.962]    __FlashAddr=0x00000000
[03:11:30.962]    __FlashLen=0x00000000
[03:11:30.962]    __FlashArg=0x00000000
[03:11:30.962]    __FlashOp=0x00000000
[03:11:30.962]    __Result=0x00000000
[03:11:30.962]  </debugvars>
[03:11:30.962]  
[03:11:30.962]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:30.962]    <block atomic="false" info="">
[03:11:30.962]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:30.962]        // -> [isSWJ <= 0x00000001]
[03:11:30.962]      __var hasDormant = __protocol & 0x00020000;
[03:11:30.962]        // -> [hasDormant <= 0x00000000]
[03:11:30.962]      __var protType   = __protocol & 0x0000FFFF;
[03:11:30.962]        // -> [protType <= 0x00000002]
[03:11:30.962]    </block>
[03:11:30.965]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:30.965]      // if-block "protType == 1"
[03:11:30.965]        // =>  FALSE
[03:11:30.965]      // skip if-block "protType == 1"
[03:11:30.965]    </control>
[03:11:30.965]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:30.965]      // if-block "protType == 2"
[03:11:30.965]        // =>  TRUE
[03:11:30.965]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:30.965]        // if-block "isSWJ"
[03:11:30.965]          // =>  TRUE
[03:11:30.965]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:30.965]          // if-block "hasDormant"
[03:11:30.965]            // =>  FALSE
[03:11:30.965]          // skip if-block "hasDormant"
[03:11:30.965]        </control>
[03:11:30.965]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:30.965]          // if-block "!hasDormant"
[03:11:30.965]            // =>  TRUE
[03:11:30.965]          <block atomic="false" info="">
[03:11:30.965]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:30.965]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:30.965]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:30.969]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:30.969]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:30.969]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:30.969]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:30.969]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:30.969]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:30.969]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:30.969]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:30.969]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:30.969]          </block>
[03:11:30.969]          // end if-block "!hasDormant"
[03:11:30.969]        </control>
[03:11:30.969]        // end if-block "isSWJ"
[03:11:30.969]      </control>
[03:11:30.973]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:30.973]        // if-block "!isSWJ"
[03:11:30.973]          // =>  FALSE
[03:11:30.973]        // skip if-block "!isSWJ"
[03:11:30.973]      </control>
[03:11:30.973]      <block atomic="false" info="">
[03:11:30.973]        ReadDP(0x0);
[03:11:30.973]  
[03:11:30.973]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:30.973]  
[03:11:30.973]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:30.973]      </block>
[03:11:30.973]      // end if-block "protType == 2"
[03:11:30.973]    </control>
[03:11:30.973]  </sequence>
[03:11:30.973]  
[03:11:31.229]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:31.229]  
[03:11:31.231]  <debugvars>
[03:11:31.231]    // Pre-defined
[03:11:31.231]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:31.231]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:31.231]    __dp=0x00000000
[03:11:31.231]    __ap=0x00000000
[03:11:31.231]    __traceout=0x00000000      (Trace Disabled)
[03:11:31.231]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:31.231]    __FlashAddr=0x00000000
[03:11:31.231]    __FlashLen=0x00000000
[03:11:31.231]    __FlashArg=0x00000000
[03:11:31.233]    __FlashOp=0x00000000
[03:11:31.233]    __Result=0x00000000
[03:11:31.233]  </debugvars>
[03:11:31.233]  
[03:11:31.233]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:31.233]    <block atomic="false" info="">
[03:11:31.233]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:31.233]        // -> [isSWJ <= 0x00000001]
[03:11:31.233]      __var hasDormant = __protocol & 0x00020000;
[03:11:31.233]        // -> [hasDormant <= 0x00000000]
[03:11:31.233]      __var protType   = __protocol & 0x0000FFFF;
[03:11:31.233]        // -> [protType <= 0x00000002]
[03:11:31.233]    </block>
[03:11:31.233]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:31.233]      // if-block "protType == 1"
[03:11:31.233]        // =>  FALSE
[03:11:31.233]      // skip if-block "protType == 1"
[03:11:31.233]    </control>
[03:11:31.233]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:31.233]      // if-block "protType == 2"
[03:11:31.233]        // =>  TRUE
[03:11:31.233]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:31.233]        // if-block "isSWJ"
[03:11:31.233]          // =>  TRUE
[03:11:31.233]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:31.233]          // if-block "hasDormant"
[03:11:31.233]            // =>  FALSE
[03:11:31.233]          // skip if-block "hasDormant"
[03:11:31.233]        </control>
[03:11:31.233]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:31.233]          // if-block "!hasDormant"
[03:11:31.233]            // =>  TRUE
[03:11:31.233]          <block atomic="false" info="">
[03:11:31.233]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:31.233]  
[03:11:31.233]  !!! E320 : DAP access error
[03:11:31.233]  
[03:11:31.237]          </block>
[03:11:31.237]          // end if-block "!hasDormant"
[03:11:31.237]        </control>
[03:11:31.237]        // end if-block "isSWJ"
[03:11:31.237]      </control>
[03:11:31.237]      // end if-block "protType == 2"
[03:11:31.237]    </control>
[03:11:31.237]  </sequence>
[03:11:31.237]  
[03:11:31.493]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:31.493]  
[03:11:31.495]  <debugvars>
[03:11:31.495]    // Pre-defined
[03:11:31.495]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:31.495]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:31.495]    __dp=0x00000000
[03:11:31.495]    __ap=0x00000000
[03:11:31.495]    __traceout=0x00000000      (Trace Disabled)
[03:11:31.495]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:31.495]    __FlashAddr=0x00000000
[03:11:31.495]    __FlashLen=0x00000000
[03:11:31.495]    __FlashArg=0x00000000
[03:11:31.497]    __FlashOp=0x00000000
[03:11:31.497]    __Result=0x00000000
[03:11:31.497]  </debugvars>
[03:11:31.497]  
[03:11:31.497]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:31.497]    <block atomic="false" info="">
[03:11:31.497]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:31.497]        // -> [isSWJ <= 0x00000001]
[03:11:31.497]      __var hasDormant = __protocol & 0x00020000;
[03:11:31.497]        // -> [hasDormant <= 0x00000000]
[03:11:31.497]      __var protType   = __protocol & 0x0000FFFF;
[03:11:31.497]        // -> [protType <= 0x00000002]
[03:11:31.497]    </block>
[03:11:31.497]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:31.497]      // if-block "protType == 1"
[03:11:31.497]        // =>  FALSE
[03:11:31.497]      // skip if-block "protType == 1"
[03:11:31.497]    </control>
[03:11:31.497]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:31.497]      // if-block "protType == 2"
[03:11:31.497]        // =>  TRUE
[03:11:31.497]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:31.497]        // if-block "isSWJ"
[03:11:31.497]          // =>  TRUE
[03:11:31.497]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:31.497]          // if-block "hasDormant"
[03:11:31.497]            // =>  FALSE
[03:11:31.497]          // skip if-block "hasDormant"
[03:11:31.497]        </control>
[03:11:31.497]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:31.497]          // if-block "!hasDormant"
[03:11:31.497]            // =>  TRUE
[03:11:31.497]          <block atomic="false" info="">
[03:11:31.497]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:31.501]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:31.501]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:31.501]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:31.501]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:31.501]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:31.501]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:31.501]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:31.501]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:31.501]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:31.505]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:31.505]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:31.505]          </block>
[03:11:31.505]          // end if-block "!hasDormant"
[03:11:31.505]        </control>
[03:11:31.505]        // end if-block "isSWJ"
[03:11:31.505]      </control>
[03:11:31.505]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:31.505]        // if-block "!isSWJ"
[03:11:31.505]          // =>  FALSE
[03:11:31.505]        // skip if-block "!isSWJ"
[03:11:31.505]      </control>
[03:11:31.505]      <block atomic="false" info="">
[03:11:31.505]        ReadDP(0x0);
[03:11:31.509]  
[03:11:31.509]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:31.509]  
[03:11:31.509]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:31.509]      </block>
[03:11:31.509]      // end if-block "protType == 2"
[03:11:31.509]    </control>
[03:11:31.509]  </sequence>
[03:11:31.509]  
[03:11:31.765]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:31.765]  
[03:11:31.765]  <debugvars>
[03:11:31.765]    // Pre-defined
[03:11:31.765]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:31.765]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:31.765]    __dp=0x00000000
[03:11:31.765]    __ap=0x00000000
[03:11:31.765]    __traceout=0x00000000      (Trace Disabled)
[03:11:31.765]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:31.765]    __FlashAddr=0x00000000
[03:11:31.765]    __FlashLen=0x00000000
[03:11:31.765]    __FlashArg=0x00000000
[03:11:31.765]    __FlashOp=0x00000000
[03:11:31.765]    __Result=0x00000000
[03:11:31.765]  </debugvars>
[03:11:31.765]  
[03:11:31.765]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:31.765]    <block atomic="false" info="">
[03:11:31.765]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:31.765]        // -> [isSWJ <= 0x00000001]
[03:11:31.765]      __var hasDormant = __protocol & 0x00020000;
[03:11:31.765]        // -> [hasDormant <= 0x00000000]
[03:11:31.765]      __var protType   = __protocol & 0x0000FFFF;
[03:11:31.765]        // -> [protType <= 0x00000002]
[03:11:31.765]    </block>
[03:11:31.765]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:31.765]      // if-block "protType == 1"
[03:11:31.765]        // =>  FALSE
[03:11:31.765]      // skip if-block "protType == 1"
[03:11:31.769]    </control>
[03:11:31.769]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:31.769]      // if-block "protType == 2"
[03:11:31.769]        // =>  TRUE
[03:11:31.769]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:31.769]        // if-block "isSWJ"
[03:11:31.769]          // =>  TRUE
[03:11:31.769]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:31.769]          // if-block "hasDormant"
[03:11:31.769]            // =>  FALSE
[03:11:31.769]          // skip if-block "hasDormant"
[03:11:31.769]        </control>
[03:11:31.769]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:31.769]          // if-block "!hasDormant"
[03:11:31.769]            // =>  TRUE
[03:11:31.769]          <block atomic="false" info="">
[03:11:31.769]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:31.769]  
[03:11:31.769]  !!! E320 : DAP access error
[03:11:31.769]  
[03:11:31.769]          </block>
[03:11:31.769]          // end if-block "!hasDormant"
[03:11:31.769]        </control>
[03:11:31.769]        // end if-block "isSWJ"
[03:11:31.769]      </control>
[03:11:31.769]      // end if-block "protType == 2"
[03:11:31.769]    </control>
[03:11:31.769]  </sequence>
[03:11:31.769]  
[03:11:32.028]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:32.028]  
[03:11:32.029]  <debugvars>
[03:11:32.029]    // Pre-defined
[03:11:32.029]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:32.029]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:32.029]    __dp=0x00000000
[03:11:32.029]    __ap=0x00000000
[03:11:32.029]    __traceout=0x00000000      (Trace Disabled)
[03:11:32.029]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:32.029]    __FlashAddr=0x00000000
[03:11:32.029]    __FlashLen=0x00000000
[03:11:32.029]    __FlashArg=0x00000000
[03:11:32.030]    __FlashOp=0x00000000
[03:11:32.030]    __Result=0x00000000
[03:11:32.030]  </debugvars>
[03:11:32.030]  
[03:11:32.030]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:32.030]    <block atomic="false" info="">
[03:11:32.030]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:32.031]        // -> [isSWJ <= 0x00000001]
[03:11:32.031]      __var hasDormant = __protocol & 0x00020000;
[03:11:32.031]        // -> [hasDormant <= 0x00000000]
[03:11:32.031]      __var protType   = __protocol & 0x0000FFFF;
[03:11:32.031]        // -> [protType <= 0x00000002]
[03:11:32.031]    </block>
[03:11:32.032]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:32.032]      // if-block "protType == 1"
[03:11:32.032]        // =>  FALSE
[03:11:32.032]      // skip if-block "protType == 1"
[03:11:32.032]    </control>
[03:11:32.032]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:32.032]      // if-block "protType == 2"
[03:11:32.032]        // =>  TRUE
[03:11:32.032]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:32.032]        // if-block "isSWJ"
[03:11:32.032]          // =>  TRUE
[03:11:32.032]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:32.032]          // if-block "hasDormant"
[03:11:32.032]            // =>  FALSE
[03:11:32.032]          // skip if-block "hasDormant"
[03:11:32.033]        </control>
[03:11:32.033]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:32.033]          // if-block "!hasDormant"
[03:11:32.033]            // =>  TRUE
[03:11:32.033]          <block atomic="false" info="">
[03:11:32.033]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:32.033]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:32.033]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:32.035]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:32.035]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:32.035]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:32.035]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:32.038]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:32.038]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:32.040]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:32.040]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:32.040]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:32.041]          </block>
[03:11:32.041]          // end if-block "!hasDormant"
[03:11:32.041]        </control>
[03:11:32.041]        // end if-block "isSWJ"
[03:11:32.041]      </control>
[03:11:32.041]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:32.041]        // if-block "!isSWJ"
[03:11:32.041]          // =>  FALSE
[03:11:32.041]        // skip if-block "!isSWJ"
[03:11:32.041]      </control>
[03:11:32.041]      <block atomic="false" info="">
[03:11:32.042]        ReadDP(0x0);
[03:11:32.042]  
[03:11:32.042]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:32.042]  
[03:11:32.042]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:32.042]      </block>
[03:11:32.042]      // end if-block "protType == 2"
[03:11:32.042]    </control>
[03:11:32.042]  </sequence>
[03:11:32.042]  
[03:11:32.302]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:32.302]  
[03:11:32.304]  <debugvars>
[03:11:32.304]    // Pre-defined
[03:11:32.304]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:32.304]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:32.304]    __dp=0x00000000
[03:11:32.304]    __ap=0x00000000
[03:11:32.304]    __traceout=0x00000000      (Trace Disabled)
[03:11:32.304]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:32.304]    __FlashAddr=0x00000000
[03:11:32.304]    __FlashLen=0x00000000
[03:11:32.304]    __FlashArg=0x00000000
[03:11:32.304]    __FlashOp=0x00000000
[03:11:32.305]    __Result=0x00000000
[03:11:32.305]  </debugvars>
[03:11:32.305]  
[03:11:32.305]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:32.305]    <block atomic="false" info="">
[03:11:32.305]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:32.305]        // -> [isSWJ <= 0x00000001]
[03:11:32.305]      __var hasDormant = __protocol & 0x00020000;
[03:11:32.305]        // -> [hasDormant <= 0x00000000]
[03:11:32.306]      __var protType   = __protocol & 0x0000FFFF;
[03:11:32.306]        // -> [protType <= 0x00000002]
[03:11:32.306]    </block>
[03:11:32.306]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:32.306]      // if-block "protType == 1"
[03:11:32.306]        // =>  FALSE
[03:11:32.307]      // skip if-block "protType == 1"
[03:11:32.307]    </control>
[03:11:32.307]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:32.307]      // if-block "protType == 2"
[03:11:32.307]        // =>  TRUE
[03:11:32.307]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:32.307]        // if-block "isSWJ"
[03:11:32.307]          // =>  TRUE
[03:11:32.307]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:32.307]          // if-block "hasDormant"
[03:11:32.307]            // =>  FALSE
[03:11:32.308]          // skip if-block "hasDormant"
[03:11:32.308]        </control>
[03:11:32.308]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:32.308]          // if-block "!hasDormant"
[03:11:32.308]            // =>  TRUE
[03:11:32.308]          <block atomic="false" info="">
[03:11:32.308]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:32.308]  
[03:11:32.308]  !!! E320 : DAP access error
[03:11:32.308]  
[03:11:32.308]          </block>
[03:11:32.308]          // end if-block "!hasDormant"
[03:11:32.308]        </control>
[03:11:32.308]        // end if-block "isSWJ"
[03:11:32.310]      </control>
[03:11:32.310]      // end if-block "protType == 2"
[03:11:32.310]    </control>
[03:11:32.310]  </sequence>
[03:11:32.310]  
[03:11:32.573]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:32.573]  
[03:11:32.573]  <debugvars>
[03:11:32.573]    // Pre-defined
[03:11:32.573]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:32.573]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:32.573]    __dp=0x00000000
[03:11:32.573]    __ap=0x00000000
[03:11:32.573]    __traceout=0x00000000      (Trace Disabled)
[03:11:32.573]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:32.573]    __FlashAddr=0x00000000
[03:11:32.573]    __FlashLen=0x00000000
[03:11:32.573]    __FlashArg=0x00000000
[03:11:32.573]    __FlashOp=0x00000000
[03:11:32.573]    __Result=0x00000000
[03:11:32.573]  </debugvars>
[03:11:32.573]  
[03:11:32.573]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:32.573]    <block atomic="false" info="">
[03:11:32.573]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:32.573]        // -> [isSWJ <= 0x00000001]
[03:11:32.573]      __var hasDormant = __protocol & 0x00020000;
[03:11:32.573]        // -> [hasDormant <= 0x00000000]
[03:11:32.573]      __var protType   = __protocol & 0x0000FFFF;
[03:11:32.573]        // -> [protType <= 0x00000002]
[03:11:32.576]    </block>
[03:11:32.576]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:32.576]      // if-block "protType == 1"
[03:11:32.576]        // =>  FALSE
[03:11:32.576]      // skip if-block "protType == 1"
[03:11:32.576]    </control>
[03:11:32.576]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:32.576]      // if-block "protType == 2"
[03:11:32.576]        // =>  TRUE
[03:11:32.576]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:32.576]        // if-block "isSWJ"
[03:11:32.576]          // =>  TRUE
[03:11:32.576]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:32.576]          // if-block "hasDormant"
[03:11:32.576]            // =>  FALSE
[03:11:32.576]          // skip if-block "hasDormant"
[03:11:32.576]        </control>
[03:11:32.576]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:32.576]          // if-block "!hasDormant"
[03:11:32.576]            // =>  TRUE
[03:11:32.576]          <block atomic="false" info="">
[03:11:32.576]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:32.576]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:32.576]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:32.580]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:32.580]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:32.580]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:32.580]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:32.580]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:32.580]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:32.584]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:32.584]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:32.587]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:32.587]          </block>
[03:11:32.587]          // end if-block "!hasDormant"
[03:11:32.587]        </control>
[03:11:32.587]        // end if-block "isSWJ"
[03:11:32.587]      </control>
[03:11:32.587]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:32.587]        // if-block "!isSWJ"
[03:11:32.589]          // =>  FALSE
[03:11:32.589]        // skip if-block "!isSWJ"
[03:11:32.589]      </control>
[03:11:32.589]      <block atomic="false" info="">
[03:11:32.589]        ReadDP(0x0);
[03:11:32.589]  
[03:11:32.589]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:32.589]  
[03:11:32.589]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:32.589]      </block>
[03:11:32.590]      // end if-block "protType == 2"
[03:11:32.590]    </control>
[03:11:32.590]  </sequence>
[03:11:32.590]  
[03:11:32.849]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:32.849]  
[03:11:32.850]  <debugvars>
[03:11:32.850]    // Pre-defined
[03:11:32.850]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:32.851]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:32.851]    __dp=0x00000000
[03:11:32.851]    __ap=0x00000000
[03:11:32.851]    __traceout=0x00000000      (Trace Disabled)
[03:11:32.851]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:32.851]    __FlashAddr=0x00000000
[03:11:32.851]    __FlashLen=0x00000000
[03:11:32.851]    __FlashArg=0x00000000
[03:11:32.851]    __FlashOp=0x00000000
[03:11:32.851]    __Result=0x00000000
[03:11:32.851]  </debugvars>
[03:11:32.851]  
[03:11:32.851]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:32.851]    <block atomic="false" info="">
[03:11:32.851]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:32.851]        // -> [isSWJ <= 0x00000001]
[03:11:32.851]      __var hasDormant = __protocol & 0x00020000;
[03:11:32.851]        // -> [hasDormant <= 0x00000000]
[03:11:32.851]      __var protType   = __protocol & 0x0000FFFF;
[03:11:32.851]        // -> [protType <= 0x00000002]
[03:11:32.851]    </block>
[03:11:32.851]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:32.851]      // if-block "protType == 1"
[03:11:32.853]        // =>  FALSE
[03:11:32.853]      // skip if-block "protType == 1"
[03:11:32.853]    </control>
[03:11:32.853]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:32.853]      // if-block "protType == 2"
[03:11:32.853]        // =>  TRUE
[03:11:32.853]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:32.853]        // if-block "isSWJ"
[03:11:32.853]          // =>  TRUE
[03:11:32.853]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:32.853]          // if-block "hasDormant"
[03:11:32.853]            // =>  FALSE
[03:11:32.853]          // skip if-block "hasDormant"
[03:11:32.853]        </control>
[03:11:32.853]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:32.853]          // if-block "!hasDormant"
[03:11:32.853]            // =>  TRUE
[03:11:32.853]          <block atomic="false" info="">
[03:11:32.853]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:32.853]  
[03:11:32.853]  !!! E320 : DAP access error
[03:11:32.853]  
[03:11:32.853]          </block>
[03:11:32.853]          // end if-block "!hasDormant"
[03:11:32.853]        </control>
[03:11:32.853]        // end if-block "isSWJ"
[03:11:32.853]      </control>
[03:11:32.853]      // end if-block "protType == 2"
[03:11:32.853]    </control>
[03:11:32.853]  </sequence>
[03:11:32.853]  
[03:11:33.113]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:33.113]  
[03:11:33.114]  <debugvars>
[03:11:33.114]    // Pre-defined
[03:11:33.114]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:33.114]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:33.114]    __dp=0x00000000
[03:11:33.114]    __ap=0x00000000
[03:11:33.114]    __traceout=0x00000000      (Trace Disabled)
[03:11:33.114]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:33.114]    __FlashAddr=0x00000000
[03:11:33.114]    __FlashLen=0x00000000
[03:11:33.114]    __FlashArg=0x00000000
[03:11:33.116]    __FlashOp=0x00000000
[03:11:33.116]    __Result=0x00000000
[03:11:33.116]  </debugvars>
[03:11:33.116]  
[03:11:33.116]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:33.116]    <block atomic="false" info="">
[03:11:33.116]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:33.116]        // -> [isSWJ <= 0x00000001]
[03:11:33.116]      __var hasDormant = __protocol & 0x00020000;
[03:11:33.116]        // -> [hasDormant <= 0x00000000]
[03:11:33.117]      __var protType   = __protocol & 0x0000FFFF;
[03:11:33.117]        // -> [protType <= 0x00000002]
[03:11:33.117]    </block>
[03:11:33.117]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:33.117]      // if-block "protType == 1"
[03:11:33.117]        // =>  FALSE
[03:11:33.117]      // skip if-block "protType == 1"
[03:11:33.117]    </control>
[03:11:33.117]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:33.117]      // if-block "protType == 2"
[03:11:33.117]        // =>  TRUE
[03:11:33.117]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:33.117]        // if-block "isSWJ"
[03:11:33.117]          // =>  TRUE
[03:11:33.117]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:33.117]          // if-block "hasDormant"
[03:11:33.117]            // =>  FALSE
[03:11:33.117]          // skip if-block "hasDormant"
[03:11:33.117]        </control>
[03:11:33.117]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:33.117]          // if-block "!hasDormant"
[03:11:33.117]            // =>  TRUE
[03:11:33.117]          <block atomic="false" info="">
[03:11:33.117]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:33.120]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:33.120]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:33.123]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:33.123]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:33.123]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:33.123]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:33.123]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:33.123]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:33.123]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:33.123]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:33.126]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:33.126]          </block>
[03:11:33.126]          // end if-block "!hasDormant"
[03:11:33.126]        </control>
[03:11:33.127]        // end if-block "isSWJ"
[03:11:33.127]      </control>
[03:11:33.127]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:33.127]        // if-block "!isSWJ"
[03:11:33.127]          // =>  FALSE
[03:11:33.127]        // skip if-block "!isSWJ"
[03:11:33.127]      </control>
[03:11:33.127]      <block atomic="false" info="">
[03:11:33.127]        ReadDP(0x0);
[03:11:33.127]  
[03:11:33.127]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:33.127]  
[03:11:33.127]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:33.127]      </block>
[03:11:33.127]      // end if-block "protType == 2"
[03:11:33.127]    </control>
[03:11:33.127]  </sequence>
[03:11:33.127]  
[03:11:33.378]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:33.378]  
[03:11:33.381]  <debugvars>
[03:11:33.381]    // Pre-defined
[03:11:33.381]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:33.381]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:33.381]    __dp=0x00000000
[03:11:33.381]    __ap=0x00000000
[03:11:33.381]    __traceout=0x00000000      (Trace Disabled)
[03:11:33.381]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:33.381]    __FlashAddr=0x00000000
[03:11:33.381]    __FlashLen=0x00000000
[03:11:33.381]    __FlashArg=0x00000000
[03:11:33.381]    __FlashOp=0x00000000
[03:11:33.381]    __Result=0x00000000
[03:11:33.381]  </debugvars>
[03:11:33.381]  
[03:11:33.381]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:33.381]    <block atomic="false" info="">
[03:11:33.381]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:33.383]        // -> [isSWJ <= 0x00000001]
[03:11:33.383]      __var hasDormant = __protocol & 0x00020000;
[03:11:33.383]        // -> [hasDormant <= 0x00000000]
[03:11:33.383]      __var protType   = __protocol & 0x0000FFFF;
[03:11:33.383]        // -> [protType <= 0x00000002]
[03:11:33.383]    </block>
[03:11:33.383]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:33.383]      // if-block "protType == 1"
[03:11:33.383]        // =>  FALSE
[03:11:33.383]      // skip if-block "protType == 1"
[03:11:33.383]    </control>
[03:11:33.383]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:33.383]      // if-block "protType == 2"
[03:11:33.383]        // =>  TRUE
[03:11:33.383]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:33.383]        // if-block "isSWJ"
[03:11:33.383]          // =>  TRUE
[03:11:33.383]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:33.383]          // if-block "hasDormant"
[03:11:33.383]            // =>  FALSE
[03:11:33.383]          // skip if-block "hasDormant"
[03:11:33.383]        </control>
[03:11:33.383]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:33.383]          // if-block "!hasDormant"
[03:11:33.383]            // =>  TRUE
[03:11:33.383]          <block atomic="false" info="">
[03:11:33.383]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:33.383]  
[03:11:33.383]  !!! E320 : DAP access error
[03:11:33.383]  
[03:11:33.383]          </block>
[03:11:33.383]          // end if-block "!hasDormant"
[03:11:33.383]        </control>
[03:11:33.383]        // end if-block "isSWJ"
[03:11:33.383]      </control>
[03:11:33.383]      // end if-block "protType == 2"
[03:11:33.387]    </control>
[03:11:33.387]  </sequence>
[03:11:33.387]  
[03:11:33.644]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:33.644]  
[03:11:33.644]  <debugvars>
[03:11:33.644]    // Pre-defined
[03:11:33.644]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:33.644]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:33.644]    __dp=0x00000000
[03:11:33.644]    __ap=0x00000000
[03:11:33.644]    __traceout=0x00000000      (Trace Disabled)
[03:11:33.644]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:33.644]    __FlashAddr=0x00000000
[03:11:33.644]    __FlashLen=0x00000000
[03:11:33.644]    __FlashArg=0x00000000
[03:11:33.644]    __FlashOp=0x00000000
[03:11:33.644]    __Result=0x00000000
[03:11:33.644]  </debugvars>
[03:11:33.644]  
[03:11:33.644]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:33.644]    <block atomic="false" info="">
[03:11:33.644]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:33.644]        // -> [isSWJ <= 0x00000001]
[03:11:33.644]      __var hasDormant = __protocol & 0x00020000;
[03:11:33.644]        // -> [hasDormant <= 0x00000000]
[03:11:33.644]      __var protType   = __protocol & 0x0000FFFF;
[03:11:33.644]        // -> [protType <= 0x00000002]
[03:11:33.644]    </block>
[03:11:33.644]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:33.644]      // if-block "protType == 1"
[03:11:33.644]        // =>  FALSE
[03:11:33.644]      // skip if-block "protType == 1"
[03:11:33.644]    </control>
[03:11:33.644]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:33.648]      // if-block "protType == 2"
[03:11:33.648]        // =>  TRUE
[03:11:33.648]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:33.648]        // if-block "isSWJ"
[03:11:33.648]          // =>  TRUE
[03:11:33.648]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:33.648]          // if-block "hasDormant"
[03:11:33.648]            // =>  FALSE
[03:11:33.648]          // skip if-block "hasDormant"
[03:11:33.648]        </control>
[03:11:33.648]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:33.648]          // if-block "!hasDormant"
[03:11:33.648]            // =>  TRUE
[03:11:33.648]          <block atomic="false" info="">
[03:11:33.648]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:33.648]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:33.648]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:33.648]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:33.648]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:33.652]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:33.652]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:33.652]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:33.652]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:33.652]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:33.652]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:33.660]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:33.660]          </block>
[03:11:33.660]          // end if-block "!hasDormant"
[03:11:33.660]        </control>
[03:11:33.660]        // end if-block "isSWJ"
[03:11:33.660]      </control>
[03:11:33.660]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:33.660]        // if-block "!isSWJ"
[03:11:33.660]          // =>  FALSE
[03:11:33.660]        // skip if-block "!isSWJ"
[03:11:33.660]      </control>
[03:11:33.660]      <block atomic="false" info="">
[03:11:33.660]        ReadDP(0x0);
[03:11:33.660]  
[03:11:33.660]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:33.660]  
[03:11:33.660]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:33.660]      </block>
[03:11:33.660]      // end if-block "protType == 2"
[03:11:33.660]    </control>
[03:11:33.660]  </sequence>
[03:11:33.660]  
[03:11:33.920]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:33.920]  
[03:11:33.920]  <debugvars>
[03:11:33.920]    // Pre-defined
[03:11:33.920]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:33.920]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:33.920]    __dp=0x00000000
[03:11:33.920]    __ap=0x00000000
[03:11:33.920]    __traceout=0x00000000      (Trace Disabled)
[03:11:33.920]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:33.920]    __FlashAddr=0x00000000
[03:11:33.920]    __FlashLen=0x00000000
[03:11:33.920]    __FlashArg=0x00000000
[03:11:33.920]    __FlashOp=0x00000000
[03:11:33.920]    __Result=0x00000000
[03:11:33.920]  </debugvars>
[03:11:33.920]  
[03:11:33.920]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:33.920]    <block atomic="false" info="">
[03:11:33.920]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:33.920]        // -> [isSWJ <= 0x00000001]
[03:11:33.920]      __var hasDormant = __protocol & 0x00020000;
[03:11:33.920]        // -> [hasDormant <= 0x00000000]
[03:11:33.920]      __var protType   = __protocol & 0x0000FFFF;
[03:11:33.920]        // -> [protType <= 0x00000002]
[03:11:33.920]    </block>
[03:11:33.920]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:33.920]      // if-block "protType == 1"
[03:11:33.920]        // =>  FALSE
[03:11:33.920]      // skip if-block "protType == 1"
[03:11:33.920]    </control>
[03:11:33.920]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:33.920]      // if-block "protType == 2"
[03:11:33.920]        // =>  TRUE
[03:11:33.920]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:33.920]        // if-block "isSWJ"
[03:11:33.920]          // =>  TRUE
[03:11:33.924]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:33.924]          // if-block "hasDormant"
[03:11:33.924]            // =>  FALSE
[03:11:33.924]          // skip if-block "hasDormant"
[03:11:33.924]        </control>
[03:11:33.924]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:33.924]          // if-block "!hasDormant"
[03:11:33.924]            // =>  TRUE
[03:11:33.924]          <block atomic="false" info="">
[03:11:33.924]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:33.924]  
[03:11:33.924]  !!! E320 : DAP access error
[03:11:33.924]  
[03:11:33.924]          </block>
[03:11:33.924]          // end if-block "!hasDormant"
[03:11:33.924]        </control>
[03:11:33.924]        // end if-block "isSWJ"
[03:11:33.924]      </control>
[03:11:33.924]      // end if-block "protType == 2"
[03:11:33.924]    </control>
[03:11:33.924]  </sequence>
[03:11:33.924]  
[03:11:34.184]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:34.184]  
[03:11:34.186]  <debugvars>
[03:11:34.186]    // Pre-defined
[03:11:34.186]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:34.186]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:34.186]    __dp=0x00000000
[03:11:34.186]    __ap=0x00000000
[03:11:34.186]    __traceout=0x00000000      (Trace Disabled)
[03:11:34.186]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:34.186]    __FlashAddr=0x00000000
[03:11:34.186]    __FlashLen=0x00000000
[03:11:34.186]    __FlashArg=0x00000000
[03:11:34.186]    __FlashOp=0x00000000
[03:11:34.186]    __Result=0x00000000
[03:11:34.186]  </debugvars>
[03:11:34.186]  
[03:11:34.186]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:34.186]    <block atomic="false" info="">
[03:11:34.186]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:34.186]        // -> [isSWJ <= 0x00000001]
[03:11:34.186]      __var hasDormant = __protocol & 0x00020000;
[03:11:34.186]        // -> [hasDormant <= 0x00000000]
[03:11:34.186]      __var protType   = __protocol & 0x0000FFFF;
[03:11:34.186]        // -> [protType <= 0x00000002]
[03:11:34.186]    </block>
[03:11:34.188]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:34.188]      // if-block "protType == 1"
[03:11:34.188]        // =>  FALSE
[03:11:34.188]      // skip if-block "protType == 1"
[03:11:34.188]    </control>
[03:11:34.188]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:34.188]      // if-block "protType == 2"
[03:11:34.188]        // =>  TRUE
[03:11:34.188]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:34.188]        // if-block "isSWJ"
[03:11:34.188]          // =>  TRUE
[03:11:34.188]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:34.188]          // if-block "hasDormant"
[03:11:34.188]            // =>  FALSE
[03:11:34.188]          // skip if-block "hasDormant"
[03:11:34.188]        </control>
[03:11:34.188]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:34.188]          // if-block "!hasDormant"
[03:11:34.188]            // =>  TRUE
[03:11:34.188]          <block atomic="false" info="">
[03:11:34.188]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:34.188]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:34.188]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:34.188]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:34.188]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:34.192]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:34.192]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:34.192]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:34.192]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:34.192]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:34.192]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:34.192]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:34.192]          </block>
[03:11:34.192]          // end if-block "!hasDormant"
[03:11:34.192]        </control>
[03:11:34.192]        // end if-block "isSWJ"
[03:11:34.192]      </control>
[03:11:34.196]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:34.196]        // if-block "!isSWJ"
[03:11:34.196]          // =>  FALSE
[03:11:34.196]        // skip if-block "!isSWJ"
[03:11:34.196]      </control>
[03:11:34.196]      <block atomic="false" info="">
[03:11:34.196]        ReadDP(0x0);
[03:11:34.196]  
[03:11:34.196]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:34.196]  
[03:11:34.196]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:34.196]      </block>
[03:11:34.196]      // end if-block "protType == 2"
[03:11:34.196]    </control>
[03:11:34.196]  </sequence>
[03:11:34.196]  
[03:11:34.449]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:34.449]  
[03:11:34.450]  <debugvars>
[03:11:34.450]    // Pre-defined
[03:11:34.450]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:34.450]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:34.450]    __dp=0x00000000
[03:11:34.450]    __ap=0x00000000
[03:11:34.450]    __traceout=0x00000000      (Trace Disabled)
[03:11:34.450]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:34.450]    __FlashAddr=0x00000000
[03:11:34.450]    __FlashLen=0x00000000
[03:11:34.450]    __FlashArg=0x00000000
[03:11:34.450]    __FlashOp=0x00000000
[03:11:34.450]    __Result=0x00000000
[03:11:34.450]  </debugvars>
[03:11:34.450]  
[03:11:34.450]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:34.450]    <block atomic="false" info="">
[03:11:34.450]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:34.450]        // -> [isSWJ <= 0x00000001]
[03:11:34.450]      __var hasDormant = __protocol & 0x00020000;
[03:11:34.453]        // -> [hasDormant <= 0x00000000]
[03:11:34.453]      __var protType   = __protocol & 0x0000FFFF;
[03:11:34.453]        // -> [protType <= 0x00000002]
[03:11:34.453]    </block>
[03:11:34.453]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:34.453]      // if-block "protType == 1"
[03:11:34.453]        // =>  FALSE
[03:11:34.453]      // skip if-block "protType == 1"
[03:11:34.453]    </control>
[03:11:34.453]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:34.453]      // if-block "protType == 2"
[03:11:34.453]        // =>  TRUE
[03:11:34.453]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:34.453]        // if-block "isSWJ"
[03:11:34.453]          // =>  TRUE
[03:11:34.453]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:34.453]          // if-block "hasDormant"
[03:11:34.453]            // =>  FALSE
[03:11:34.453]          // skip if-block "hasDormant"
[03:11:34.453]        </control>
[03:11:34.453]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:34.453]          // if-block "!hasDormant"
[03:11:34.453]            // =>  TRUE
[03:11:34.453]          <block atomic="false" info="">
[03:11:34.453]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:34.453]  
[03:11:34.453]  !!! E320 : DAP access error
[03:11:34.453]  
[03:11:34.453]          </block>
[03:11:34.453]          // end if-block "!hasDormant"
[03:11:34.453]        </control>
[03:11:34.453]        // end if-block "isSWJ"
[03:11:34.453]      </control>
[03:11:34.453]      // end if-block "protType == 2"
[03:11:34.453]    </control>
[03:11:34.453]  </sequence>
[03:11:34.453]  
[03:11:34.713]  **********  Sequence "DebugPortSetup"  (Context="Recovery", Pname="", info="")
[03:11:34.713]  
[03:11:34.715]  <debugvars>
[03:11:34.715]    // Pre-defined
[03:11:34.715]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[03:11:34.715]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[03:11:34.715]    __dp=0x00000000
[03:11:34.715]    __ap=0x00000000
[03:11:34.715]    __traceout=0x00000000      (Trace Disabled)
[03:11:34.715]    __errorcontrol=0x00000000  (Skip Errors="False")
[03:11:34.715]    __FlashAddr=0x00000000
[03:11:34.715]    __FlashLen=0x00000000
[03:11:34.715]    __FlashArg=0x00000000
[03:11:34.715]    __FlashOp=0x00000000
[03:11:34.715]    __Result=0x00000000
[03:11:34.715]  </debugvars>
[03:11:34.715]  
[03:11:34.715]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[03:11:34.715]    <block atomic="false" info="">
[03:11:34.715]      __var isSWJ      = ((__protocol & 0x00010000) != 0);
[03:11:34.717]        // -> [isSWJ <= 0x00000001]
[03:11:34.717]      __var hasDormant = __protocol & 0x00020000;
[03:11:34.717]        // -> [hasDormant <= 0x00000000]
[03:11:34.717]      __var protType   = __protocol & 0x0000FFFF;
[03:11:34.717]        // -> [protType <= 0x00000002]
[03:11:34.717]    </block>
[03:11:34.717]    <control if="protType == 1" while="" timeout="0" info="">
[03:11:34.717]      // if-block "protType == 1"
[03:11:34.717]        // =>  FALSE
[03:11:34.717]      // skip if-block "protType == 1"
[03:11:34.717]    </control>
[03:11:34.717]    <control if="protType == 2" while="" timeout="0" info="">
[03:11:34.717]      // if-block "protType == 2"
[03:11:34.717]        // =>  TRUE
[03:11:34.717]      <control if="isSWJ" while="" timeout="0" info="">
[03:11:34.717]        // if-block "isSWJ"
[03:11:34.717]          // =>  TRUE
[03:11:34.717]        <control if="hasDormant" while="" timeout="0" info="">
[03:11:34.717]          // if-block "hasDormant"
[03:11:34.717]            // =>  FALSE
[03:11:34.717]          // skip if-block "hasDormant"
[03:11:34.717]        </control>
[03:11:34.717]        <control if="!hasDormant" while="" timeout="0" info="">
[03:11:34.717]          // if-block "!hasDormant"
[03:11:34.717]            // =>  TRUE
[03:11:34.717]          <block atomic="false" info="">
[03:11:34.717]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //lets put the JTAG line in a reset state
[03:11:34.717]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:34.717]            DAP_SWJ_Sequence(16,0xE73C); //SWD to JTAG, this is to ensure the state machine is initialized
[03:11:34.721]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E73C)]
[03:11:34.721]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF); //Put it back in reset
[03:11:34.721]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:34.721]            DAP_SWJ_Sequence(16, 0xE79E); //JTAG to SWD switch
[03:11:34.721]              // -> [DAP_SWJ_Sequence(16, 0x000000000000E79E)]
[03:11:34.721]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  //Ensure the switch is successful 
[03:11:34.721]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[03:11:34.721]            DAP_SWJ_Sequence(7,  0x00); //Give the line some time to initialize
[03:11:34.721]              // -> [DAP_SWJ_Sequence(7, 0x0000000000000000)]
[03:11:34.721]          </block>
[03:11:34.721]          // end if-block "!hasDormant"
[03:11:34.721]        </control>
[03:11:34.721]        // end if-block "isSWJ"
[03:11:34.721]      </control>
[03:11:34.725]      <control if="!isSWJ" while="" timeout="0" info="">
[03:11:34.725]        // if-block "!isSWJ"
[03:11:34.725]          // =>  FALSE
[03:11:34.725]        // skip if-block "!isSWJ"
[03:11:34.725]      </control>
[03:11:34.725]      <block atomic="false" info="">
[03:11:34.725]        ReadDP(0x0);
[03:11:34.725]  
[03:11:34.725]  !!! E310 : Debug access failed - cannot read DP register 0x00
[03:11:34.725]  
[03:11:34.725]          // -> [ReadDP(0x00000000) => 0x6BA02477]   (__dp=0x00000000)
[03:11:34.725]      </block>
[03:11:34.725]      // end if-block "protType == 2"
[03:11:34.725]    </control>
[03:11:34.725]  </sequence>
[03:11:34.725]  
